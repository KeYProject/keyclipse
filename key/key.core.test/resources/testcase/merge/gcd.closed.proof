\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Nov 14 10:07:05 CET 2018
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=50000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Wed Nov 14 10:07:05 CET 2018
contract=Gcd[Gcd\\:\\:gcd(int,int)].JML normal_behavior operation contract.0
name=Gcd[Gcd\\:\\:gcd(int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "dscheurer" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "2" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "3" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "4" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "5" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "6" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "7" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "8" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "9" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "10" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "11" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "12" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "13" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "14" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "15" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "16" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "17" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))
(keyLog "18" (keyUser "pschmitt" ) (keyVersion "2e2e28cd40d1d192dd7c393ee380a4f52b961525"))

(autoModeTime "2472985")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "a,b,result,exc,heapAtPre,o,f"))
(rule "translateJavaMod" (formula "1") (term "0,0,0,1,0,0,1,1"))
(rule "translateJavaMod" (formula "1") (term "0,1,0,1,0,0,1,1"))
(rule "translateJavaMod" (formula "1") (term "0,1,0,0,0,1,1,0,0,1,1"))
(rule "translateJavaMod" (formula "1") (term "0,1,0,0,1,1,0,0,1,1"))
(rule "translateJavaMod" (formula "1") (term "0,1,0,1,1,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "inEqSimp_gtToGeq" (formula "3") (term "0,0,0,0,1,1,0,0,1"))
(rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0,0,1,1,0,0,1"))
(rule "add_zero_right" (formula "3") (term "0,0,0,0,0,0,1,1,0,0,1"))
(rule "assignment" (formula "3") (term "1"))
(builtin "One Step Simplification" (formula "3"))
(rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0,0,1,1,0,0,1"))
(rule "mul_literals" (formula "3") (term "1,0,0,0,0,1,1,0,0,1"))
(rule "nnf_imp2or" (formula "3") (term "0,1,1,0,0,1"))
(rule "nnf_notAnd" (formula "3") (term "0,0,1,1,0,0,1"))
(rule "nnf_notAnd" (formula "3") (term "0,0,0,1,1,0,0,1"))
(rule "inEqSimp_notGeq" (formula "3") (term "0,0,0,0,1,1,0,0,1"))
(rule "mul_literals" (formula "3") (term "1,0,0,0,0,0,0,1,1,0,0,1"))
(rule "add_literals" (formula "3") (term "0,0,0,0,0,0,1,1,0,0,1"))
(rule "add_zero_left" (formula "3") (term "0,0,0,0,0,1,1,0,0,1"))
(rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_gcd,savedHeapBefore_gcd"))
(builtin "One Step Simplification" (formula "3"))
(rule "ifUnfold" (formula "3") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "3") (term "1"))
(builtin "One Step Simplification" (formula "3"))
(rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,1,0"))
(rule "times_zero_1" (formula "3") (term "1,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "3") (term "0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,1,0"))
(rule "mul_literals" (formula "3") (term "1,0,0,1,0"))
(rule "ifSplit" (formula "3"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "4"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "unaryMinusInt" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "translateJavaUnaryMinusInt" (formula "4") (term "0,1,0"))
   (rule "polySimp_elimNeg" (formula "4") (term "0,1,0"))
   (builtin "MergeRule" (formula "4") (mergeProc "MergeByIfThenElseAntecedent") (nrMergePartners "1") (mergeId "41"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "andLeft" (formula "3"))
   (rule "eqSymm" (formula "4") (term "1"))
   (rule "eqSymm" (formula "3") (term "1"))
   (rule "polySimp_homoEq" (formula "4") (term "1"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
   (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
   (rule "polySimp_sepPosMonomial" (formula "4") (term "1"))
   (rule "ifUnfold" (formula "5") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_1"))
   (rule "less_than_comparison_simple" (formula "5") (term "1"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,1,0"))
   (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,1,0"))
   (rule "add_zero_right" (formula "5") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,1,0"))
   (rule "mul_literals" (formula "5") (term "1,0,0,1,0"))
   (rule "ifSplit" (formula "5"))
   (branch "if x_1 true"
      (builtin "One Step Simplification" (formula "6"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "unaryMinusInt" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "translateJavaUnaryMinusInt" (formula "6") (term "0,1,0"))
      (rule "polySimp_elimNeg" (formula "6") (term "0,1,0"))
      (builtin "MergeRule" (formula "6") (mergeProc "MergeByIfThenElseAntecedent") (nrMergePartners "1") (mergeId "75"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "eqSymm" (formula "6") (term "1"))
      (rule "eqSymm" (formula "5") (term "1"))
      (rule "polySimp_homoEq" (formula "6") (term "1"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
      (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
      (rule "variableDeclarationMult" (formula "7") (term "1"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "big"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "small"))
      (rule "blockEmpty" (formula "7") (term "1"))
      (rule "polySimp_sepPosMonomial" (formula "6") (term "1"))
      (rule "ifElseUnfold" (formula "7") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_2"))
      (rule "greater_than_comparison_simple" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "inEqSimp_gtToGeq" (formula "7") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "7") (term "0,0,0,1,0"))
      (rule "ifElseSplit" (formula "7"))
      (branch "if x_2 true"
         (builtin "One Step Simplification" (formula "8"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "assignment" (formula "8") (term "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "assignment" (formula "8") (term "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "blockEmpty" (formula "8") (term "1"))
         (rule "returnUnfold" (formula "8") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "8") (term "1"))
         (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_6"))
         (builtin "Use Operation Contract" (formula "8") (newnames "heapBefore_gcdHelp_0,result_1,exc_1,heapAfter_gcdHelp_0,anon_heap_gcdHelp_0") (contract "Gcd[Gcd::gcdHelp(int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (gcdHelp)"
            (builtin "One Step Simplification" (formula "9"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,0,0,1,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,0,1,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,0,0,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,1,1,0,1,1"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "11"))
            (rule "inEqSimp_gtToGeq" (formula "11") (term "0,0,0,0,1,1"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0,1,1"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,1,1"))
            (rule "assignment" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "jmod_axiom" (formula "11") (term "0,0,0,1"))
            (rule "polySimp_mulComm1" (formula "11") (term "1,0,0,0,1"))
            (rule "jmod_axiom" (formula "11") (term "0,1,0,0,1,1"))
            (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,0,1,1"))
            (rule "jmod_axiom" (formula "11") (term "0,1,0,1"))
            (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,1"))
            (rule "jmod_axiom" (formula "11") (term "0,1,0,1,1"))
            (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,1,1"))
            (rule "jmod_axiom" (formula "11") (term "0,1,0,0,0,1,1"))
            (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,0,0,1,1"))
            (rule "polySimp_sepNegMonomial" (formula "11") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1"))
            (rule "polySimp_elimOne" (formula "11") (term "0,0,0,1"))
            (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,1,1"))
            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,1,1"))
            (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1"))
            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1"))
            (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1"))
            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,1"))
            (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,1,1"))
            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0,1,1"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0,0,1,1"))
            (rule "nnf_imp2or" (formula "11") (term "0,1,1"))
            (rule "nnf_notAnd" (formula "11") (term "0,0,1,1"))
            (rule "nnf_notAnd" (formula "11") (term "0,0,0,1,1"))
            (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0,1,1"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0,1,1"))
            (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1,1"))
            (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,1,1"))
            (rule "methodCallReturn" (formula "12") (term "1"))
            (rule "assignment" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "methodCallEmpty" (formula "12") (term "1"))
            (rule "tryEmpty" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "emptyModality" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "impRight" (formula "12"))
            (rule "jmod_axiom" (formula "13") (term "0,1,0,1"))
            (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1"))
            (rule "jmod_axiom" (formula "13") (term "0,0,0"))
            (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,0"))
            (rule "jmod_axiom" (formula "13") (term "0,1,0"))
            (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0"))
            (rule "jmod_axiom" (formula "13") (term "0,0,1,0,0,0,1"))
            (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,1,0,0,0,1"))
            (rule "jmod_axiom" (formula "13") (term "0,0,1,0,0,1"))
            (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,1,0,0,1"))
            (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1"))
            (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1"))
            (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
            (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
            (rule "polySimp_sepNegMonomial" (formula "13") (term "0,1,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0,1,0,0,0,1"))
            (rule "polySimp_sepNegMonomial" (formula "13") (term "0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0,1,0,0,1"))
            (rule "jdiv_axiom" (formula "12") (term "0,0,0,0,1"))
            (rule "eqSymm" (formula "12"))
            (rule "jdiv_axiom" (formula "13") (term "0,0,1,0,1"))
            (rule "eqSymm" (formula "13"))
            (rule "cut_direct" (formula "5") (term "0"))
            (branch "CUT: a <= -1 TRUE"
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
               (rule "inEqSimp_homoInEq0" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,0"))
               (rule "applyEq" (formula "15") (term "0,0,0,0,1,0,0,0,1") (ifseqformula "6"))
               (rule "applyEq" (formula "15") (term "0,0,0,0,0") (ifseqformula "6"))
               (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "6"))
               (rule "applyEq" (formula "15") (term "1,0,1,0,0,0,1") (ifseqformula "6"))
               (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "6"))
               (rule "polySimp_invertEq" (formula "1") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
               (rule "times_zero_2" (formula "1") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
               (rule "mul_literals" (formula "5") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "5"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
               (rule "leq_literals" (formula "14") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "5"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
               (rule "leq_literals" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "inEqSimp_subsumption1" (formula "11") (term "0,0") (ifseqformula "4"))
               (rule "leq_literals" (formula "11") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "eqSymm" (formula "11"))
               (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "11"))
               (rule "cut_direct" (formula "6") (term "0"))
               (branch "CUT: b <= -1 TRUE"
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                  (rule "inEqSimp_homoInEq0" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0"))
                  (rule "applyEq" (formula "16") (term "0,0,0,0,1,0,0,1") (ifseqformula "7"))
                  (rule "applyEq" (formula "16") (term "0,0,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "16") (term "1,0,1,0,0,1") (ifseqformula "7"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "12") (term "0,0") (ifseqformula "6"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "eqSymm" (formula "12"))
                  (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "12"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                  (rule "mul_literals" (formula "6") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "6"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "jdiv_axiom" (formula "16") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                  (rule "times_zero_2" (formula "1") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "6"))
                  (rule "qeq_literals" (formula "1") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "1"))
                  (rule "polySimp_mulComm1" (formula "17") (term "0,0,0"))
                  (rule "polySimp_homoEq" (formula "17") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                  (rule "applyEq" (formula "17") (term "1,0,0,0") (ifseqformula "14"))
                  (rule "polySimp_pullOutFactor2" (formula "17") (term "0,0,0"))
                  (rule "add_literals" (formula "17") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "17") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "div_axiom" (formula "12") (term "1") (inst "quotient=quotient_40"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,2,1,1"))
                  (rule "commute_and" (formula "12") (term "0,1"))
                  (rule "div_axiom" (formula "14") (term "1") (inst "quotient=quotient_41"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0,2,1,1"))
                  (rule "commute_and" (formula "14") (term "0,1"))
                  (rule "jdiv_axiom" (formula "19") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                  (rule "times_zero_2" (formula "1") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "1") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "1"))
                  (rule "polySimp_mulComm1" (formula "20") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "20") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,0,0"))
                  (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "18"))
                  (rule "polySimp_pullOutFactor2" (formula "20") (term "0,0"))
                  (rule "add_literals" (formula "20") (term "1,0,0"))
                  (rule "times_zero_1" (formula "20") (term "0,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "allRight" (formula "20") (inst "sk=x_9"))
                  (rule "orRight" (formula "20"))
                  (rule "orRight" (formula "20"))
                  (rule "orRight" (formula "20"))
                  (rule "notRight" (formula "22"))
                  (rule "notRight" (formula "22"))
                  (rule "inEqSimp_leqRight" (formula "22"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "polySimp_critPair" (formula "21") (ifseqformula "20"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                  (rule "polySimp_mulComm1" (formula "21") (term "1,1,0"))
                  (rule "polySimp_mulComm1" (formula "21") (term "0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                  (rule "polySimp_mulComm1" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "21") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                  (rule "add_literals" (formula "21") (term "1,1,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0"))
                  (rule "add_zero_right" (formula "21") (term "0"))
                  (rule "polySimp_addComm0" (formula "21") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                  (rule "ifthenelse_split_for" (formula "18") (term "1,1"))
                  (branch "result_1 >= 0 TRUE"
                     (rule "replace_known_left" (formula "16") (term "0,1,1") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "cnf_rightDist" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "commute_or" (formula "20"))
                     (rule "cnf_rightDist" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "commute_or" (formula "17"))
                     (rule "cnf_rightDist" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "commute_or" (formula "21"))
                     (rule "cnf_rightDist" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "commute_or" (formula "17"))
                     (rule "jdiv_axiom" (formula "29") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "1"))
                     (rule "jdiv_axiom" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "4"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                     (rule "times_zero_2" (formula "4") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "13"))
                     (rule "qeq_literals" (formula "4") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "eqSymm" (formula "4"))
                     (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "4"))
                     (rule "polySimp_mulComm1" (formula "5") (term "0"))
                     (rule "polySimp_homoEq" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1"))
                     (rule "jdiv_axiom" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "3"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                     (rule "times_zero_2" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "13"))
                     (rule "qeq_literals" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "eqSymm" (formula "3"))
                     (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "3"))
                     (rule "polySimp_mulComm1" (formula "4") (term "0"))
                     (rule "polySimp_homoEq" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1"))
                     (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_45"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "0"))
                     (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                     (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "35"))
                     (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                     (rule "add_literals" (formula "35") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0"))
                     (rule "qeq_literals" (formula "35") (term "0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "false_right" (formula "35"))
                     (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "div_axiom" (formula "8") (term "0,1") (inst "quotient=quotient_46"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,2,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "8") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0,0"))
                     (rule "leq_literals" (formula "8") (term "0,0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0"))
                     (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "10") (term "0,0,1"))
                     (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq0" (formula "9"))
                     (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "1,0"))
                     (rule "times_zero_1" (formula "9") (term "0"))
                     (rule "qeq_literals" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "applyEq" (formula "9") (term "0,2") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq1" (formula "9") (term "2"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,2"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "9") (term "0,0,2"))
                     (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "8"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "2"))
                     (rule "mul_literals" (formula "9") (term "1,2"))
                     (rule "inEqSimp_subsumption1" (formula "9") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "9") (term "0,0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                     (rule "leq_literals" (formula "9") (term "0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "div_axiom" (formula "6") (term "0,1") (inst "quotient=quotient_47"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,1,1,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "6") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0,0"))
                     (rule "leq_literals" (formula "6") (term "0,0"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "andLeft" (formula "6"))
                     (rule "andLeft" (formula "6"))
                     (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "6"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0"))
                     (rule "applyEqRigid" (formula "8") (term "0,1") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "8") (term "0,0,1"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq0" (formula "7"))
                     (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "1,0"))
                     (rule "times_zero_1" (formula "7") (term "0"))
                     (rule "qeq_literals" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "applyEqRigid" (formula "7") (term "0,2") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq1" (formula "7") (term "2"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,2"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "7") (term "0,0,2"))
                     (rule "applyEqRigid" (formula "8") (term "0,1") (ifseqformula "6"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "2"))
                     (rule "mul_literals" (formula "7") (term "1,2"))
                     (rule "inEqSimp_subsumption1" (formula "7") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "7") (term "0,0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "polySimp_critPair" (formula "35") (ifseqformula "34"))
                     (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "35") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "35") (term "0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "35") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                     (rule "polySimp_mulComm1" (formula "35") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                     (rule "add_literals" (formula "35") (term "1,1,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0"))
                     (rule "add_zero_right" (formula "35") (term "0"))
                     (rule "polySimp_addComm0" (formula "35") (term "0"))
                     (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "33"))
                     (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                     (rule "add_literals" (formula "35") (term "1,0"))
                     (rule "times_zero_1" (formula "35") (term "0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "cut_direct" (formula "24") (term "0"))
                     (branch "CUT: result_1 = 0 TRUE"
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "true_left" (formula "30"))
                        (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "24"))
                        (rule "eqSymm" (formula "27"))
                        (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "24"))
                        (rule "polySimp_mulComm0" (formula "28") (term "0"))
                        (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "24"))
                        (rule "eqSymm" (formula "12"))
                        (rule "polySimp_homoEq" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,0"))
                        (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "24"))
                        (rule "add_zero_right" (formula "2") (term "1"))
                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "24"))
                        (rule "qeq_literals" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "24"))
                        (rule "times_zero_1" (formula "29") (term "0"))
                        (rule "eqSymm" (formula "29"))
                        (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "24"))
                        (rule "jdiv_axiom_inline" (formula "5") (term "0"))
                        (rule "qeq_literals" (formula "5") (term "0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "24"))
                        (rule "eqSymm" (formula "13"))
                        (rule "polySimp_homoEq" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,0"))
                        (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "24"))
                        (rule "eqSymm" (formula "28"))
                        (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "24"))
                        (rule "jdiv_axiom_inline" (formula "30") (term "0,0,1,0"))
                        (rule "qeq_literals" (formula "30") (term "0,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "24"))
                        (rule "eqSymm" (formula "25"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "24"))
                        (rule "cut_direct" (formula "5") (term "0,0,0") (userinteraction))
                        (branch "CUT: x_9 = 0 TRUE"
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "5") (userinteraction))
                           (rule "qeq_literals" (formula "3") (userinteraction))
                           (rule "closeFalse" (formula "3") (userinteraction))
                        )
                        (branch "CUT: x_9 = 0 FALSE"
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "eqSymm" (formula "5") (userinteraction))
                           (rule "hide_left" (formula "1") (userinteraction))
                           (rule "times_minus_one_1" (formula "3") (term "1,1") (userinteraction))
                           (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "4") (userinteraction))
                           (rule "times_zero_1" (formula "1") (term "0") (userinteraction))
                           (rule "leq_literals" (formula "1") (userinteraction))
                           (rule "closeFalse" (formula "1") (userinteraction))
                        )
                     )
                     (branch "CUT: result_1 = 0 FALSE"
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "30"))
                        (rule "polySimp_mulComm0" (formula "35") (term "0"))
                        (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "25"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0"))
                        (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "30"))
                        (rule "eqSymm" (formula "34"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1"))
                        (rule "applyEq" (formula "31") (term "0") (ifseqformula "35"))
                        (rule "inEqSimp_homoInEq1" (formula "31"))
                        (rule "polySimp_addComm1" (formula "31") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                        (rule "add_literals" (formula "31") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0"))
                        (rule "applyEq" (formula "29") (term "0") (ifseqformula "35"))
                        (rule "inEqSimp_homoInEq0" (formula "29"))
                        (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                        (rule "add_literals" (formula "29") (term "1,0"))
                        (rule "times_zero_1" (formula "29") (term "0"))
                        (rule "qeq_literals" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "applyEq" (formula "27") (term "1") (ifseqformula "25"))
                        (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "29"))
                        (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "25"))
                        (rule "applyEq" (formula "31") (term "1") (ifseqformula "29"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "32"))
                        (rule "inEqSimp_homoInEq0" (formula "24"))
                        (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                        (rule "add_literals" (formula "24") (term "1,0"))
                        (rule "times_zero_1" (formula "24") (term "0"))
                        (rule "qeq_literals" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq1" (formula "25"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0"))
                        (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "24"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                        (rule "polySimp_elimOne" (formula "28") (term "0"))
                        (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "28"))
                        (rule "times_zero_1" (formula "34") (term "1,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0"))
                        (rule "leq_literals" (formula "34") (term "0"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "false_right" (formula "34"))
                        (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "28"))
                        (rule "leq_literals" (formula "26") (term "0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "allLeft" (formula "32") (inst "t=result_1"))
                        (rule "applyEq" (formula "32") (term "0,0,0,1,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                        (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "applyEq" (formula "32") (term "0,0,0,1,0") (ifseqformula "25"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                        (rule "replace_known_left" (formula "32") (term "0,1,0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "27"))
                        (rule "qeq_literals" (formula "32") (term "0,0"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "allLeft" (formula "33") (inst "t=x_9"))
                        (rule "applyEq" (formula "33") (term "0,0,1") (ifseqformula "5"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0,1"))
                        (rule "inEqSimp_contradEq3" (formula "33") (term "1") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                        (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "33") (term "0,0,1"))
                        (rule "qeq_literals" (formula "33") (term "0,1"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "inEqSimp_contradInEq1" (formula "33") (term "0,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "33") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=quotient_46"))
                        (rule "polySimp_mulComm1" (formula "9") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "9") (term "2,0"))
                        (rule "applyEq" (formula "9") (term "0,1,0,1,2,0") (ifseqformula "11"))
                        (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1,2,0"))
                        (rule "add_literals" (formula "9") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "9") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "9") (term "0,0") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "9") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "polySimp_homoEq" (formula "9"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "1,0,0"))
                        (rule "times_zero_1" (formula "9") (term "0,0"))
                        (rule "add_zero_left" (formula "9") (term "0"))
                        (rule "polySimp_invertEq" (formula "9"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                        (rule "times_zero_2" (formula "9") (term "1"))
                        (rule "polySimp_elimOne" (formula "9") (term "0"))
                        (rule "cut_direct" (formula "9") (term "0,0,0") (userinteraction))
                        (branch "CUT: x_9 = 0 TRUE"
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "9") (userinteraction))
                           (rule "qeq_literals" (formula "3") (userinteraction))
                           (rule "closeFalse" (formula "3") (userinteraction))
                        )
                        (branch "CUT: x_9 = 0 FALSE"
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9") (userinteraction))
                           (rule "times_minus_one_1" (formula "7") (term "1") (userinteraction))
                           (rule "times_minus_one_1" (formula "7") (term "0,0") (userinteraction))
                           (rule "times_minus_one_1" (formula "11") (term "1") (userinteraction))
                           (rule "times_minus_one_1" (formula "12") (term "1") (userinteraction))
                           (rule "times_minus_one_1" (formula "11") (term "0,0") (userinteraction))
                           (rule "times_minus_one_1" (formula "12") (term "0,0") (userinteraction))
                           (rule "eqSymm" (formula "25") (userinteraction))
                           (rule "eqSymm" (formula "23") (userinteraction))
                           (rule "times_minus_one_1" (formula "9") (term "1") (userinteraction))
                           (rule "times_minus_one_1" (formula "9") (term "0,0") (userinteraction))
                           (rule "times_minus_one_1" (formula "4") (term "1,1") (userinteraction))
                           (rule "orLeft" (formula "32") (userinteraction))
                           (branch "!jdiv(_a_0, x_9) * x_9 = _a_0"
                              (rule "notLeft" (formula "32") (userinteraction))
                              (rule "jdiv_axiom_inline" (formula "33") (term "0,0") (userinteraction))
                              (rule "cut_direct" (formula "33") (term "0,0,0") (userinteraction))
                              (branch "CUT: _a_0 >= 0 TRUE"
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "applyEqRigid" (formula "34") (term "0,0") (ifseqformula "7") (userinteraction))
                                 (rule "mul_comm" (formula "34") (term "0") (userinteraction))
                                 (rule "close" (formula "34") (ifseqformula "9") (userinteraction))
                              )
                              (branch "CUT: _a_0 >= 0 FALSE"
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "eqSymm" (formula "25"))
                                 (rule "polySimp_elimNeg" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimNeg" (formula "7") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "11") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "7") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "11") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "9") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "9") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "12") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "12") (term "1"))
                                 (rule "polySimp_mulComm1" (formula "34") (term "0"))
                                 (rule "polySimp_homoEq" (formula "34"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,0"))
                                 (rule "inEqSimp_geqRight" (formula "33"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "34"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "4"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0"))
                                 (rule "leq_literals" (formula "35") (term "0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "false_right" (formula "35"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "18"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "!jdiv(_b_0, x_9) * x_9 = _b_0"
                              (rule "notLeft" (formula "32") (userinteraction))
                              (rule "jdiv_axiom_inline" (formula "33") (term "0,0") (userinteraction))
                              (rule "cut_direct" (formula "33") (term "0,0,0") (userinteraction))
                              (branch "CUT: _b_0 >= 0 TRUE"
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "multiply_eq" (formula "10") (inst "multFac=Z(neglit(1(#)))") (userinteraction))
                                 (rule "times_minus_one_1" (formula "10") (term "0") (userinteraction))
                                 (rule "times_minus_one_1" (formula "10") (term "1") (userinteraction))
                                 (rule "sub_sub_elim" (formula "10") (term "1") (userinteraction))
                                 (rule "jdiv_axiom_inline" (formula "10") (term "0,0") (userinteraction))
                                 (rule "cut_direct" (formula "10") (term "0,0,0") (userinteraction))
                                 (branch "CUT: -_b_0 >= 0 TRUE"
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "eqSymm" (formula "28"))
                                    (rule "eqSymm" (formula "26"))
                                    (rule "polySimp_elimNeg" (formula "15") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "14") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "14") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "10") (term "0"))
                                    (rule "polySimp_elimNeg" (formula "15") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "5") (term "1,1"))
                                    (rule "polySimp_elimNeg" (formula "8") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "12") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "12") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "8") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_elimNeg" (formula "11") (term "0"))
                                    (rule "polySimp_homoEq" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "11"))
                                    (rule "inEqSimp_invertInEq1" (formula "10"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                    (rule "times_zero_2" (formula "10") (term "1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "0"))
                                    (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "4"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0"))
                                    (rule "leq_literals" (formula "37") (term "0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "false_right" (formula "37"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "21"))
                                    (rule "leq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "9"))
                                    (rule "qeq_literals" (formula "20") (term "0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "closeFalse" (formula "20"))
                                 )
                                 (branch "CUT: -_b_0 >= 0 FALSE"
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "times_minus_one_1" (formula "10") (term "0,0,0,0") (userinteraction))
                                    (rule "times_minus_one_1" (formula "10") (term "0,0") (userinteraction))
                                    (rule "sub_sub_elim" (formula "10") (term "0,0,0,0") (userinteraction))
                                    (rule "sub_sub_elim" (formula "10") (term "0") (userinteraction))
                                    (rule "applyEqRigid" (formula "36") (term "0,0") (ifseqformula "10") (userinteraction))
                                    (rule "mul_comm" (formula "36") (term "0") (userinteraction))
                                    (rule "close" (formula "36") (ifseqformula "12") (userinteraction))
                                 )
                              )
                              (branch "CUT: _b_0 >= 0 FALSE"
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "eqSymm" (formula "25"))
                                 (rule "polySimp_elimNeg" (formula "4") (term "1,1"))
                                 (rule "polySimp_elimNeg" (formula "7") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "11") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "7") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "11") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "9") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "9") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "12") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "12") (term "1"))
                                 (rule "polySimp_mulComm1" (formula "34") (term "0"))
                                 (rule "polySimp_homoEq" (formula "34"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,0"))
                                 (rule "inEqSimp_geqRight" (formula "33"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "34"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "4"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0"))
                                 (rule "leq_literals" (formula "35") (term "0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "false_right" (formula "35"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                     )
                  )
                  (branch "result_1 >= 0 FALSE"
                     (rule "replace_known_right" (formula "16") (term "0,1,1") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "inEqSimp_geqRight" (formula "24"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "19") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0"))
                     (rule "qeq_literals" (formula "19") (term "0,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "20"))
                     (rule "eqSymm" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1"))
                     (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "20"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0"))
                     (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "20"))
                     (rule "applyEq" (formula "21") (term "0") (ifseqformula "25"))
                     (rule "inEqSimp_homoInEq1" (formula "21"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "25"))
                     (rule "inEqSimp_homoInEq0" (formula "19"))
                     (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                     (rule "add_literals" (formula "19") (term "1,0"))
                     (rule "times_zero_1" (formula "19") (term "0"))
                     (rule "qeq_literals" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "applyEq" (formula "21") (term "1") (ifseqformula "19"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                     (rule "mul_literals" (formula "20") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "17") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0,0"))
                     (rule "qeq_literals" (formula "17") (term "0,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "andLeft" (formula "17"))
                     (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "18"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0"))
                     (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "18"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "23"))
                     (rule "inEqSimp_homoInEq0" (formula "17"))
                     (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "1,0"))
                     (rule "times_zero_1" (formula "17") (term "0"))
                     (rule "qeq_literals" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "22"))
                     (rule "inEqSimp_homoInEq1" (formula "18"))
                     (rule "polySimp_addComm1" (formula "18") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                     (rule "add_literals" (formula "18") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0"))
                     (rule "applyEq" (formula "6") (term "0,1") (ifseqformula "17"))
                     (rule "applyEq" (formula "19") (term "1") (ifseqformula "17"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1"))
                     (rule "jdiv_axiom" (formula "25") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "26") (term "0"))
                     (rule "polySimp_homoEq" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "26"))
                     (rule "jdiv_axiom" (formula "5") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "5"))
                     (rule "polySimp_elimOne" (formula "5") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "5") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                     (rule "times_zero_2" (formula "5") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "14"))
                     (rule "qeq_literals" (formula "5") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "eqSymm" (formula "5"))
                     (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "5"))
                     (rule "polySimp_mulComm1" (formula "6") (term "0"))
                     (rule "polySimp_homoEq" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                     (rule "polySimp_elimOne" (formula "6") (term "1"))
                     (rule "jdiv_axiom" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "4"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                     (rule "times_zero_2" (formula "4") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "14"))
                     (rule "qeq_literals" (formula "4") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "eqSymm" (formula "4"))
                     (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                     (rule "polySimp_mulComm1" (formula "5") (term "0"))
                     (rule "polySimp_homoEq" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1"))
                     (rule "div_axiom" (formula "1") (term "0,1") (inst "quotient=quotient_42"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                     (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "1"))
                     (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "2"))
                     (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "6"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "div_axiom" (formula "9") (term "0,1") (inst "quotient=quotient_43"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0,0"))
                     (rule "leq_literals" (formula "9") (term "0,0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "9"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0"))
                     (rule "applyEqRigid" (formula "11") (term "0,1") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "11") (term "0,0,1"))
                     (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq0" (formula "10"))
                     (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "1,0"))
                     (rule "times_zero_1" (formula "10") (term "0"))
                     (rule "qeq_literals" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "applyEq" (formula "10") (term "0,2") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "10") (term "2"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,2"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "10") (term "0,0,2"))
                     (rule "applyEqRigid" (formula "11") (term "0,1") (ifseqformula "9"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "2"))
                     (rule "mul_literals" (formula "10") (term "1,2"))
                     (rule "inEqSimp_subsumption1" (formula "10") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "10") (term "0,0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                     (rule "leq_literals" (formula "10") (term "0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "div_axiom" (formula "7") (term "0,1") (inst "quotient=quotient_44"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1"))
                     (rule "inEqSimp_contradEq7" (formula "7") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0,0"))
                     (rule "leq_literals" (formula "7") (term "0,0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "7"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq0" (formula "8"))
                     (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "1,0"))
                     (rule "times_zero_1" (formula "8") (term "0"))
                     (rule "qeq_literals" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "applyEq" (formula "8") (term "0,2") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq1" (formula "8") (term "2"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,2"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "8") (term "0,0,2"))
                     (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "8") (term "0,0,1"))
                     (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "7"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "2"))
                     (rule "mul_literals" (formula "8") (term "1,2"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "0,1"))
                     (rule "inEqSimp_subsumption1" (formula "8") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "8") (term "0,0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                     (rule "leq_literals" (formula "8") (term "0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "polyDiv_pullOut" (formula "27") (term "0") (inst "polyDivCoeff=quotient_41"))
                     (rule "polySimp_mulComm1" (formula "27") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "27") (term "2,0"))
                     (rule "applyEq" (formula "27") (term "0,1,0,1,2,0") (ifseqformula "31"))
                     (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,2,0"))
                     (rule "add_literals" (formula "27") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "27") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq3" (formula "27") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "27") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "polySimp_homoEq" (formula "27"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "27") (term "0,0"))
                     (rule "add_literals" (formula "27") (term "1,0,0"))
                     (rule "times_zero_1" (formula "27") (term "0,0"))
                     (rule "add_zero_left" (formula "27") (term "0"))
                     (rule "polySimp_invertEq" (formula "27"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                     (rule "times_zero_2" (formula "27") (term "1"))
                     (rule "polySimp_elimOne" (formula "27") (term "0"))
                     (rule "cut_direct" (formula "27") (term "0,0,0") (userinteraction))
                     (branch "CUT: result_1 = 0 TRUE"
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "27") (userinteraction))
                        (rule "leq_literals" (formula "6") (userinteraction))
                        (rule "closeFalse" (formula "6") (userinteraction))
                     )
                     (branch "CUT: result_1 = 0 FALSE"
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27") (userinteraction))
                        (rule "switch_params" (formula "15") (term "1") (userinteraction))
                        (rule "times_minus_one_1" (formula "1") (term "0,0") (userinteraction))
                        (rule "times_minus_one_1" (formula "2") (term "1,1") (userinteraction))
                        (rule "switch_params" (formula "2") (term "1") (userinteraction))
                        (rule "times_minus_one_1" (formula "4") (term "1,0,1") (userinteraction))
                        (rule "times_minus_one_1" (formula "4") (term "1,1") (userinteraction))
                        (rule "times_minus_one_1" (formula "5") (term "1") (userinteraction))
                        (rule "times_minus_one_1" (formula "8") (term "0,0") (userinteraction))
                        (rule "times_minus_one_1" (formula "8") (term "1") (userinteraction))
                        (rule "times_minus_one_1" (formula "11") (term "1") (userinteraction))
                        (rule "times_minus_one_1" (formula "13") (term "1") (userinteraction))
                        (rule "times_minus_one_1" (formula "14") (term "1") (userinteraction))
                        (rule "hide_right" (formula "32") (userinteraction))
                        (rule "times_minus_one_1" (formula "13") (term "0,0") (userinteraction))
                        (rule "times_minus_one_1" (formula "14") (term "0,0") (userinteraction))
                        (rule "times_minus_one_1" (formula "18") (term "1") (userinteraction))
                        (rule "times_minus_one_1" (formula "21") (term "1") (userinteraction))
                        (rule "instAll" (formula "11") (term "1,0") (ifseqformula "31") (userinteraction))
                        (rule "cut_direct" (formula "11") (term "0,0,0") (userinteraction))
                        (branch "CUT: x_9 <= 0 TRUE"
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                           (rule "polySimp_elimNeg" (formula "8") (term "0,0"))
                           (rule "polySimp_elimNeg" (formula "2") (term "0,1"))
                           (rule "polySimp_elimNeg" (formula "14") (term "0,0"))
                           (rule "polySimp_elimNeg" (formula "8") (term "1"))
                           (rule "polySimp_elimNeg" (formula "22") (term "1"))
                           (rule "polySimp_elimNeg" (formula "14") (term "1"))
                           (rule "polySimp_elimNeg" (formula "5") (term "1"))
                           (rule "polySimp_elimNeg" (formula "19") (term "1"))
                           (rule "polySimp_elimNeg" (formula "4") (term "1,0,1"))
                           (rule "polySimp_elimNeg" (formula "15") (term "0,0"))
                           (rule "polySimp_elimNeg" (formula "15") (term "1"))
                           (rule "polySimp_elimNeg" (formula "12") (term "1"))
                           (rule "polySimp_elimNeg" (formula "4") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "16") (term "1"))
                           (rule "polySimp_addComm0" (formula "2") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "11") (term "0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "closeFalse" (formula "11"))
                        )
                        (branch "CUT: x_9 <= 0 FALSE"
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "orLeft" (formula "11") (userinteraction))
                           (branch " !jdiv(_a_0, x_9) * x_9 = _a_0 | !jdiv(_b_0, x_9) * x_9 = _b_0"
                              (rule "orLeft" (formula "11") (userinteraction))
                              (branch "!jdiv(_a_0, x_9) * x_9 = _a_0"
                                 (rule "notLeft" (formula "11") (userinteraction))
                                 (rule "jdiv_axiom_inline" (formula "32") (term "0,0") (userinteraction))
                                 (rule "cut_direct" (formula "32") (term "0,0,0") (userinteraction))
                                 (branch "CUT: _a_0 >= 0 TRUE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "applyEqRigid" (formula "33") (term "0,0") (ifseqformula "8") (userinteraction))
                                    (rule "mul_comm" (formula "33") (term "0") (userinteraction))
                                    (rule "close" (formula "33") (ifseqformula "10") (userinteraction))
                                 )
                                 (branch "CUT: _a_0 >= 0 FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "polySimp_elimNeg" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimNeg" (formula "4") (term "1,0,1"))
                                    (rule "polySimp_elimNeg" (formula "4") (term "1,1"))
                                    (rule "polySimp_elimNeg" (formula "13") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "8") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "13") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "14") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "18") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "8") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "21") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "14") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "11") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "5") (term "1"))
                                    (rule "polySimp_mulComm1" (formula "33") (term "0"))
                                    (rule "polySimp_homoEq" (formula "33"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1"))
                                    (rule "inEqSimp_leqRight" (formula "34"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_geqRight" (formula "33"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "34"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "closeFalse" (formula "21"))
                                 )
                              )
                              (branch "!jdiv(_b_0, x_9) * x_9 = _b_0"
                                 (rule "notLeft" (formula "11") (userinteraction))
                                 (rule "jdiv_axiom_inline" (formula "32") (term "0,0") (userinteraction))
                                 (rule "cut_direct" (formula "32") (term "0,0,0") (userinteraction))
                                 (branch "CUT: _b_0 >= 0 TRUE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "applyEqRigid" (formula "33") (term "0,0") (ifseqformula "11") (userinteraction))
                                    (rule "mul_comm" (formula "33") (term "0") (userinteraction))
                                    (rule "close" (formula "33") (ifseqformula "13") (userinteraction))
                                 )
                                 (branch "CUT: _b_0 >= 0 FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "polySimp_elimNeg" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimNeg" (formula "4") (term "1,0,1"))
                                    (rule "polySimp_elimNeg" (formula "4") (term "1,1"))
                                    (rule "polySimp_elimNeg" (formula "13") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "8") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "13") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "14") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "18") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "8") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "21") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "14") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "11") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "5") (term "1"))
                                    (rule "polySimp_mulComm1" (formula "33") (term "0"))
                                    (rule "polySimp_homoEq" (formula "33"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1"))
                                    (rule "inEqSimp_leqRight" (formula "34"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_geqRight" (formula "33"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "34"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "22") (term "0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "closeFalse" (formula "22"))
                                 )
                              )
                           )
                           (branch "jdiv(result_1, x_9) * x_9 = result_1"
                              (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                              (rule "polySimp_elimNeg" (formula "2") (term "0,1"))
                              (rule "polySimp_elimNeg" (formula "22") (term "1"))
                              (rule "polySimp_elimNeg" (formula "19") (term "1"))
                              (rule "polySimp_elimNeg" (formula "8") (term "0,0"))
                              (rule "polySimp_elimNeg" (formula "8") (term "1"))
                              (rule "polySimp_elimNeg" (formula "14") (term "0,0"))
                              (rule "polySimp_elimNeg" (formula "14") (term "1"))
                              (rule "polySimp_elimNeg" (formula "15") (term "0,0"))
                              (rule "polySimp_elimNeg" (formula "15") (term "1"))
                              (rule "polySimp_elimNeg" (formula "5") (term "1"))
                              (rule "polySimp_elimNeg" (formula "4") (term "1,0,1"))
                              (rule "polySimp_elimNeg" (formula "12") (term "1"))
                              (rule "polySimp_elimNeg" (formula "4") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "16") (term "1"))
                              (rule "polySimp_addComm0" (formula "2") (term "1"))
                              (rule "inEqSimp_leqRight" (formula "33"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "6"))
                              (rule "polySimp_mulComm1" (formula "12") (term "0"))
                              (rule "polySimp_homoEq" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "12"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_zero_right" (formula "3") (term "0"))
                              (rule "qeq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                     )
                  )
               )
               (branch "CUT: b <= -1 FALSE"
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "inEqSimp_leqRight" (formula "15"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "applyEq" (formula "16") (term "0,0,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "16") (term "0,0,0,0,1,0,0,1") (ifseqformula "7"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                  (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "eqSymm" (formula "12"))
                  (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "7"))
                  (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "16") (term "1,0,1,0,0,1") (ifseqformula "7"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "div_axiom" (formula "11") (term "1") (inst "quotient=quotient_32"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1"))
                  (rule "commute_and" (formula "11") (term "0,1"))
                  (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_33"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,2,1,1"))
                  (rule "commute_and" (formula "13") (term "0,1"))
                  (rule "jdiv_axiom" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                  (rule "times_zero_2" (formula "1") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "6"))
                  (rule "qeq_literals" (formula "1") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "1"))
                  (rule "polySimp_mulComm1" (formula "19") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "19") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,0,0"))
                  (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "16"))
                  (rule "polySimp_pullOutFactor2" (formula "19") (term "0,0"))
                  (rule "add_literals" (formula "19") (term "1,0,0"))
                  (rule "times_zero_1" (formula "19") (term "0,0"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "allRight" (formula "19") (inst "sk=x_8"))
                  (rule "orRight" (formula "19"))
                  (rule "orRight" (formula "19"))
                  (rule "notRight" (formula "20"))
                  (rule "orRight" (formula "20"))
                  (rule "notRight" (formula "21"))
                  (rule "inEqSimp_leqRight" (formula "21"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "polySimp_critPair" (formula "20") (ifseqformula "19"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                  (rule "polySimp_mulComm1" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "20") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                  (rule "polySimp_mulComm1" (formula "20") (term "1,1,0"))
                  (rule "polySimp_mulComm1" (formula "20") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                  (rule "add_literals" (formula "20") (term "1,1,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0"))
                  (rule "add_zero_right" (formula "20") (term "0"))
                  (rule "polySimp_addComm0" (formula "20") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "20"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                  (rule "polySimp_elimOne" (formula "20") (term "0"))
                  (rule "ifthenelse_split_for" (formula "17") (term "1,1"))
                  (branch "result_1 >= 0 TRUE"
                     (rule "replace_known_left" (formula "15") (term "0,1,1") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "cnf_rightDist" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "commute_or" (formula "19"))
                     (rule "cnf_rightDist" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "commute_or" (formula "16"))
                     (rule "cnf_rightDist" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "commute_or" (formula "20"))
                     (rule "cnf_rightDist" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "commute_or" (formula "16"))
                     (rule "jdiv_axiom" (formula "28") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                     (rule "jdiv_axiom" (formula "4") (term "0,0"))
                     (rule "eqSymm" (formula "4"))
                     (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "eqSymm" (formula "4"))
                     (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                     (rule "jdiv_axiom" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "3"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                     (rule "times_zero_2" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "eqSymm" (formula "3"))
                     (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                     (rule "polySimp_mulComm1" (formula "4") (term "0"))
                     (rule "polySimp_homoEq" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1"))
                     (rule "allLeft" (formula "30") (inst "t=x_8"))
                     (rule "applyEqRigid" (formula "30") (term "0,0,0,1,0") (ifseqformula "5"))
                     (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "32"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "30") (term "0,0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "notLeft" (formula "30"))
                     (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_37"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "0"))
                     (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                     (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "35"))
                     (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                     (rule "add_literals" (formula "35") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0"))
                     (rule "qeq_literals" (formula "35") (term "0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "false_right" (formula "35"))
                     (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "div_axiom" (formula "8") (term "1") (inst "quotient=quotient_38"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "8") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0,0"))
                     (rule "leq_literals" (formula "8") (term "0,0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq0" (formula "9"))
                     (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "1,0"))
                     (rule "times_zero_1" (formula "9") (term "0"))
                     (rule "qeq_literals" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq1" (formula "9") (term "1"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "9") (term "0,0,1"))
                     (rule "applyEq" (formula "9") (term "0,2") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq1" (formula "9") (term "2"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,2"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "9") (term "0,0,2"))
                     (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "8"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "2"))
                     (rule "mul_literals" (formula "9") (term "1,2"))
                     (rule "inEqSimp_subsumption1" (formula "9") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "9") (term "0,0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                     (rule "leq_literals" (formula "9") (term "0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "div_axiom" (formula "6") (term "0,1") (inst "quotient=quotient_39"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1"))
                     (rule "inEqSimp_contradEq7" (formula "6") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0,0"))
                     (rule "leq_literals" (formula "6") (term "0,0"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "andLeft" (formula "6"))
                     (rule "andLeft" (formula "6"))
                     (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "6"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0"))
                     (rule "applyEqRigid" (formula "8") (term "0,1") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "8") (term "0,0,1"))
                     (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq0" (formula "7"))
                     (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "1,0"))
                     (rule "times_zero_1" (formula "7") (term "0"))
                     (rule "qeq_literals" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "applyEqRigid" (formula "7") (term "0,2") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq1" (formula "7") (term "2"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,2"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "7") (term "0,0,2"))
                     (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "6"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "2"))
                     (rule "mul_literals" (formula "7") (term "1,2"))
                     (rule "inEqSimp_subsumption1" (formula "7") (term "1") (ifseqformula "3"))
                     (rule "leq_literals" (formula "7") (term "0,1"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "inEqSimp_subsumption1" (formula "7") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "7") (term "0,0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "polySimp_critPair" (formula "34") (ifseqformula "33"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "34") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "34") (term "0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "34") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                     (rule "polySimp_mulComm1" (formula "34") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                     (rule "add_literals" (formula "34") (term "1,1,0"))
                     (rule "times_zero_1" (formula "34") (term "1,0"))
                     (rule "add_zero_right" (formula "34") (term "0"))
                     (rule "polySimp_addComm0" (formula "34") (term "0"))
                     (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "32"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                     (rule "add_literals" (formula "34") (term "1,0"))
                     (rule "times_zero_1" (formula "34") (term "0"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "jdiv_axiom" (formula "36") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "7"))
                     (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "18"))
                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "37") (term "0"))
                     (rule "close" (formula "37") (ifseqformula "9"))
                  )
                  (branch "result_1 >= 0 FALSE"
                     (rule "replace_known_right" (formula "15") (term "0,1,1") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_geqRight" (formula "23"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "16") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,0"))
                     (rule "qeq_literals" (formula "16") (term "0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "17"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0"))
                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "22"))
                     (rule "inEqSimp_homoInEq0" (formula "16"))
                     (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                     (rule "add_literals" (formula "16") (term "1,0"))
                     (rule "times_zero_1" (formula "16") (term "0"))
                     (rule "qeq_literals" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "21"))
                     (rule "inEqSimp_homoInEq1" (formula "17"))
                     (rule "polySimp_addComm1" (formula "17") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0"))
                     (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "16"))
                     (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "16"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1"))
                     (rule "applyEq" (formula "18") (term "1") (ifseqformula "16"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                     (rule "mul_literals" (formula "17") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "18") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0,0"))
                     (rule "qeq_literals" (formula "18") (term "0,0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "19"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0"))
                     (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "19"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0"))
                     (rule "eqSymm" (formula "23"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "24"))
                     (rule "inEqSimp_homoInEq0" (formula "18"))
                     (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                     (rule "add_literals" (formula "18") (term "1,0"))
                     (rule "times_zero_1" (formula "18") (term "0"))
                     (rule "qeq_literals" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "23"))
                     (rule "inEqSimp_homoInEq1" (formula "19"))
                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0"))
                     (rule "applyEq" (formula "20") (term "1") (ifseqformula "18"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1"))
                     (rule "jdiv_axiom" (formula "24") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "25") (term "0"))
                     (rule "polySimp_homoEq" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "25"))
                     (rule "jdiv_axiom" (formula "5") (term "0,0"))
                     (rule "eqSymm" (formula "5"))
                     (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "eqSymm" (formula "5"))
                     (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "5"))
                     (rule "jdiv_axiom" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "4"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                     (rule "times_zero_2" (formula "4") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "13"))
                     (rule "qeq_literals" (formula "4") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "eqSymm" (formula "4"))
                     (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                     (rule "polySimp_mulComm1" (formula "5") (term "0"))
                     (rule "polySimp_homoEq" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1"))
                     (rule "allLeft" (formula "26") (inst "t=x_8"))
                     (rule "applyEq" (formula "26") (term "0,0,0,1,0") (ifseqformula "6"))
                     (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEq" (formula "26") (term "0,0,1") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "26") (term "0,1"))
                     (rule "polySimp_homoEq" (formula "26") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,0,1"))
                     (rule "polySimp_sepPosMonomial" (formula "26") (term "1"))
                     (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "26") (term "0,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "notLeft" (formula "26"))
                     (rule "div_axiom" (formula "1") (term "0,1") (inst "quotient=quotient_34"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "1"))
                     (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "2"))
                     (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "6"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "div_axiom" (formula "9") (term "1") (inst "quotient=quotient_35"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0,0"))
                     (rule "leq_literals" (formula "9") (term "0,0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "9"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0"))
                     (rule "applyEqRigid" (formula "11") (term "0,2") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq1" (formula "11") (term "2"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,2"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "11") (term "0,0,2"))
                     (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq0" (formula "10"))
                     (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "1,0"))
                     (rule "times_zero_1" (formula "10") (term "0"))
                     (rule "qeq_literals" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "10") (term "0,0,1"))
                     (rule "applyEqRigid" (formula "11") (term "1") (ifseqformula "9"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "2"))
                     (rule "mul_literals" (formula "10") (term "1,2"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                     (rule "inEqSimp_subsumption1" (formula "10") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "10") (term "0,0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                     (rule "leq_literals" (formula "10") (term "0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "div_axiom" (formula "7") (term "0,1") (inst "quotient=quotient_36"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1"))
                     (rule "inEqSimp_contradEq7" (formula "7") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0,0"))
                     (rule "leq_literals" (formula "7") (term "0,0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "7"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0"))
                     (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq1" (formula "9") (term "1"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "9") (term "0,0,1"))
                     (rule "applyEq" (formula "9") (term "0,2") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq1" (formula "9") (term "2"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,2"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "9") (term "0,0,2"))
                     (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq0" (formula "8"))
                     (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "1,0"))
                     (rule "times_zero_1" (formula "8") (term "0"))
                     (rule "qeq_literals" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "7"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "2"))
                     (rule "mul_literals" (formula "8") (term "1,2"))
                     (rule "inEqSimp_subsumption1" (formula "8") (term "1") (ifseqformula "3"))
                     (rule "leq_literals" (formula "8") (term "0,1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "inEqSimp_subsumption1" (formula "8") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "8") (term "0,0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "polyDiv_pullOut" (formula "24") (term "0") (inst "polyDivCoeff=quotient_32"))
                     (rule "polySimp_mulComm1" (formula "24") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,0"))
                     (rule "applyEq" (formula "24") (term "0,1,0,1,2,0") (ifseqformula "28"))
                     (rule "polySimp_pullOutFactor1" (formula "24") (term "0,1,2,0"))
                     (rule "add_literals" (formula "24") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "24") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq3" (formula "24") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "24") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "polySimp_homoEq" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0"))
                     (rule "add_literals" (formula "24") (term "1,0,0"))
                     (rule "times_zero_1" (formula "24") (term "0,0"))
                     (rule "add_zero_left" (formula "24") (term "0"))
                     (rule "polySimp_invertEq" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "times_zero_2" (formula "24") (term "1"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "cut_direct" (formula "24") (term "0,0,0") (userinteraction))
                     (branch "CUT: result_1 = 0 TRUE"
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "24") (userinteraction))
                        (rule "leq_literals" (formula "6") (userinteraction))
                        (rule "closeFalse" (formula "6") (userinteraction))
                     )
                     (branch "CUT: result_1 = 0 FALSE"
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24") (userinteraction))
                        (rule "jdiv_axiom_inline" (formula "32") (term "0,0") (userinteraction))
                        (rule "cut_direct" (formula "32") (term "0,0,0") (userinteraction))
                        (branch "CUT: _a_0 >= 0 TRUE"
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "applyEqRigid" (formula "33") (term "0,0") (ifseqformula "8") (userinteraction))
                           (rule "mul_comm" (formula "33") (term "0") (userinteraction))
                           (rule "close" (formula "33") (ifseqformula "10") (userinteraction))
                        )
                        (branch "CUT: _a_0 >= 0 FALSE"
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "polySimp_mulComm1" (formula "33") (term "0"))
                           (rule "polySimp_homoEq" (formula "33"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,0"))
                           (rule "inEqSimp_geqRight" (formula "32"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "33"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "7"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0"))
                           (rule "qeq_literals" (formula "32") (term "0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "false_right" (formula "32"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "closeFalse" (formula "19"))
                        )
                     )
                  )
               )
            )
            (branch "CUT: a <= -1 FALSE"
               (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_leqRight" (formula "14"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "applyEq" (formula "15") (term "0,0,0,0,0") (ifseqformula "6"))
               (rule "applyEq" (formula "15") (term "0,0,0,0,1,0,0,0,1") (ifseqformula "6"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
               (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "eqSymm" (formula "12"))
               (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "6"))
               (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "6"))
               (rule "applyEq" (formula "15") (term "1,0,1,0,0,0,1") (ifseqformula "6"))
               (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "14") (term "0,0,0,0,1") (ifseqformula "12"))
               (rule "cut_direct" (formula "7") (term "0"))
               (branch "CUT: b <= -1 TRUE"
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "7"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "applyEq" (formula "15") (term "0,0,0,0,1,0,0,1") (ifseqformula "8"))
                  (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "2") (term "0,0,1") (ifseqformula "8"))
                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                  (rule "inEqSimp_homoInEq0" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,0"))
                  (rule "applyEq" (formula "15") (term "1,0,1,0,0,1") (ifseqformula "8"))
                  (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "8"))
                  (rule "polySimp_invertEq" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "inEqSimp_contradEq7" (formula "2") (term "0,1") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,1"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0,1"))
                  (rule "leq_literals" (formula "2") (term "0,0,1"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_subsumption1" (formula "12") (term "0,0") (ifseqformula "6"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "eqSymm" (formula "12"))
                  (rule "applyEq" (formula "13") (term "0,0,1,0,1") (ifseqformula "12"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                  (rule "mul_literals" (formula "6") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "inEqSimp_contradEq7" (formula "14") (term "0,0") (ifseqformula "6"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "6"))
                  (rule "leq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "div_axiom" (formula "11") (term "1") (inst "quotient=quotient_24"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,1"))
                  (rule "commute_and" (formula "11") (term "0,1"))
                  (rule "div_axiom" (formula "13") (term "1") (inst "quotient=quotient_25"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,2,1,1"))
                  (rule "commute_and" (formula "13") (term "0,1"))
                  (rule "jdiv_axiom" (formula "18") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                  (rule "times_zero_2" (formula "1") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "7"))
                  (rule "qeq_literals" (formula "1") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "1"))
                  (rule "polySimp_mulComm1" (formula "19") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "19") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,0,0"))
                  (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "17"))
                  (rule "polySimp_pullOutFactor2" (formula "19") (term "0,0"))
                  (rule "add_literals" (formula "19") (term "1,0,0"))
                  (rule "times_zero_1" (formula "19") (term "0,0"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "allRight" (formula "19") (inst "sk=x_7"))
                  (rule "orRight" (formula "19"))
                  (rule "orRight" (formula "19"))
                  (rule "orRight" (formula "19"))
                  (rule "notRight" (formula "21"))
                  (rule "notRight" (formula "21"))
                  (rule "inEqSimp_leqRight" (formula "21"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "polySimp_critPair" (formula "20") (ifseqformula "19"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                  (rule "polySimp_mulComm1" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "20") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                  (rule "polySimp_mulComm1" (formula "20") (term "1,1,0"))
                  (rule "polySimp_mulComm1" (formula "20") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                  (rule "add_literals" (formula "20") (term "1,1,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0"))
                  (rule "add_zero_right" (formula "20") (term "0"))
                  (rule "polySimp_addComm0" (formula "20") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "20"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                  (rule "polySimp_elimOne" (formula "20") (term "0"))
                  (rule "ifthenelse_split_for" (formula "17") (term "1,1"))
                  (branch "result_1 >= 0 TRUE"
                     (rule "replace_known_left" (formula "15") (term "0,1,1") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "cnf_rightDist" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "commute_or" (formula "19"))
                     (rule "cnf_rightDist" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "commute_or" (formula "16"))
                     (rule "cnf_rightDist" (formula "19"))
                     (rule "andLeft" (formula "19"))
                     (rule "commute_or" (formula "20"))
                     (rule "cnf_rightDist" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "commute_or" (formula "16"))
                     (rule "jdiv_axiom" (formula "28") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                     (rule "jdiv_axiom" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "4"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                     (rule "times_zero_2" (formula "4") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "4") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "eqSymm" (formula "4"))
                     (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                     (rule "polySimp_mulComm1" (formula "5") (term "0"))
                     (rule "polySimp_homoEq" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1"))
                     (rule "jdiv_axiom" (formula "3") (term "0,0"))
                     (rule "eqSymm" (formula "3"))
                     (rule "inEqSimp_subsumption1" (formula "3") (term "0,0") (ifseqformula "12"))
                     (rule "leq_literals" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "eqSymm" (formula "3"))
                     (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                     (rule "allLeft" (formula "30") (inst "t=x_7"))
                     (rule "applyEq" (formula "30") (term "0,0,0,1,0,0") (ifseqformula "3"))
                     (rule "replace_known_left" (formula "30") (term "0,1,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "32"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "30") (term "0,0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "notLeft" (formula "30"))
                     (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_29"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "35") (term "0"))
                     (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                     (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "35"))
                     (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                     (rule "add_literals" (formula "35") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0"))
                     (rule "qeq_literals" (formula "35") (term "0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "false_right" (formula "35"))
                     (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "div_axiom" (formula "8") (term "0,1") (inst "quotient=quotient_30"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "8") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0,0"))
                     (rule "leq_literals" (formula "8") (term "0,0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq0" (formula "9"))
                     (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "1,0"))
                     (rule "times_zero_1" (formula "9") (term "0"))
                     (rule "qeq_literals" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "applyEqRigid" (formula "9") (term "0,1") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq1" (formula "9") (term "1"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "9") (term "0,0,1"))
                     (rule "applyEqRigid" (formula "9") (term "0,2") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq1" (formula "9") (term "2"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,2"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "9") (term "0,0,2"))
                     (rule "applyEqRigid" (formula "10") (term "0,1") (ifseqformula "8"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "2"))
                     (rule "mul_literals" (formula "9") (term "1,2"))
                     (rule "inEqSimp_subsumption1" (formula "9") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "9") (term "0,0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                     (rule "leq_literals" (formula "9") (term "0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "div_axiom" (formula "6") (term "1") (inst "quotient=quotient_31"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1"))
                     (rule "inEqSimp_contradEq7" (formula "6") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0,0"))
                     (rule "leq_literals" (formula "6") (term "0,0"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "andLeft" (formula "6"))
                     (rule "andLeft" (formula "6"))
                     (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "6"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0"))
                     (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "8") (term "0,0,1"))
                     (rule "applyEq" (formula "8") (term "0,2") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq1" (formula "8") (term "2"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,2"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "8") (term "0,0,2"))
                     (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq0" (formula "7"))
                     (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "1,0"))
                     (rule "times_zero_1" (formula "7") (term "0"))
                     (rule "qeq_literals" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "applyEq" (formula "8") (term "1") (ifseqformula "6"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "2"))
                     (rule "mul_literals" (formula "7") (term "1,2"))
                     (rule "inEqSimp_subsumption1" (formula "7") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "7") (term "0,0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "polySimp_critPair" (formula "34") (ifseqformula "33"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "0,0"))
                     (rule "polySimp_mulComm1" (formula "34") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "34") (term "0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "34") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                     (rule "polySimp_mulComm1" (formula "34") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                     (rule "add_literals" (formula "34") (term "1,1,0"))
                     (rule "times_zero_1" (formula "34") (term "1,0"))
                     (rule "add_zero_right" (formula "34") (term "0"))
                     (rule "polySimp_addComm0" (formula "34") (term "0"))
                     (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "32"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                     (rule "add_literals" (formula "34") (term "1,0"))
                     (rule "times_zero_1" (formula "34") (term "0"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "jdiv_axiom" (formula "36") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "10"))
                     (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "19"))
                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "37") (term "0"))
                     (rule "close" (formula "37") (ifseqformula "12"))
                  )
                  (branch "result_1 >= 0 FALSE"
                     (rule "replace_known_right" (formula "15") (term "0,1,1") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_geqRight" (formula "23"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "16") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,0"))
                     (rule "qeq_literals" (formula "16") (term "0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "17"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "22"))
                     (rule "inEqSimp_homoInEq1" (formula "18"))
                     (rule "polySimp_addComm1" (formula "18") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                     (rule "add_literals" (formula "18") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0"))
                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "22"))
                     (rule "inEqSimp_homoInEq0" (formula "16"))
                     (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                     (rule "add_literals" (formula "16") (term "1,0"))
                     (rule "times_zero_1" (formula "16") (term "0"))
                     (rule "qeq_literals" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "16"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1"))
                     (rule "applyEq" (formula "18") (term "1") (ifseqformula "16"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                     (rule "mul_literals" (formula "17") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "18") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0,0"))
                     (rule "qeq_literals" (formula "18") (term "0,0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "19"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0"))
                     (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "19"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0"))
                     (rule "eqSymm" (formula "23"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "24"))
                     (rule "inEqSimp_homoInEq0" (formula "18"))
                     (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                     (rule "add_literals" (formula "18") (term "1,0"))
                     (rule "times_zero_1" (formula "18") (term "0"))
                     (rule "qeq_literals" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "23"))
                     (rule "inEqSimp_homoInEq1" (formula "19"))
                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0"))
                     (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "20") (term "1") (ifseqformula "18"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1"))
                     (rule "jdiv_axiom" (formula "24") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "25") (term "0"))
                     (rule "polySimp_homoEq" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "25"))
                     (rule "jdiv_axiom" (formula "5") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "5"))
                     (rule "polySimp_elimOne" (formula "5") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "5") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                     (rule "times_zero_2" (formula "5") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0") (ifseqformula "13"))
                     (rule "qeq_literals" (formula "5") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "eqSymm" (formula "5"))
                     (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "5"))
                     (rule "polySimp_mulComm1" (formula "6") (term "0"))
                     (rule "polySimp_homoEq" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "6") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                     (rule "polySimp_elimOne" (formula "6") (term "1"))
                     (rule "jdiv_axiom" (formula "4") (term "0,0"))
                     (rule "eqSymm" (formula "4"))
                     (rule "inEqSimp_subsumption1" (formula "4") (term "0,0") (ifseqformula "13"))
                     (rule "leq_literals" (formula "4") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "eqSymm" (formula "4"))
                     (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "4"))
                     (rule "allLeft" (formula "26") (inst "t=x_7"))
                     (rule "applyEq" (formula "26") (term "0,0,0,1,0,0") (ifseqformula "4"))
                     (rule "replace_known_left" (formula "26") (term "0,1,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEq" (formula "26") (term "0,0,1") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "26") (term "0,1"))
                     (rule "polySimp_homoEq" (formula "26") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,0,1"))
                     (rule "polySimp_sepPosMonomial" (formula "26") (term "1"))
                     (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "26") (term "0,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "notLeft" (formula "26"))
                     (rule "div_axiom" (formula "1") (term "0,1") (inst "quotient=quotient_26"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "4"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "1"))
                     (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "2"))
                     (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "qeq_literals" (formula "31") (term "0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "6"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "div_axiom" (formula "9") (term "0,1") (inst "quotient=quotient_27"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0,0"))
                     (rule "leq_literals" (formula "9") (term "0,0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "9"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq0" (formula "10"))
                     (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "1,0"))
                     (rule "times_zero_1" (formula "10") (term "0"))
                     (rule "qeq_literals" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "applyEqRigid" (formula "10") (term "0,1") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "10") (term "0,0,1"))
                     (rule "applyEqRigid" (formula "10") (term "0,2") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "10") (term "2"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,2"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "10") (term "0,0,2"))
                     (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "9"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "2"))
                     (rule "mul_literals" (formula "10") (term "1,2"))
                     (rule "inEqSimp_subsumption1" (formula "10") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "10") (term "0,0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                     (rule "leq_literals" (formula "10") (term "0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "div_axiom" (formula "7") (term "1") (inst "quotient=quotient_28"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1"))
                     (rule "inEqSimp_contradEq7" (formula "7") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0,0"))
                     (rule "leq_literals" (formula "7") (term "0,0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "7"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0"))
                     (rule "applyEq" (formula "9") (term "0,2") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq1" (formula "9") (term "2"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,2"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "9") (term "0,0,2"))
                     (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "11"))
                     (rule "inEqSimp_homoInEq0" (formula "8"))
                     (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "1,0"))
                     (rule "times_zero_1" (formula "8") (term "0"))
                     (rule "qeq_literals" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "10"))
                     (rule "inEqSimp_homoInEq1" (formula "8") (term "1"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "8") (term "0,0,1"))
                     (rule "applyEqRigid" (formula "9") (term "1") (ifseqformula "7"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "2"))
                     (rule "mul_literals" (formula "8") (term "1,2"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "0,1"))
                     (rule "inEqSimp_subsumption1" (formula "8") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "8") (term "0,0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                     (rule "leq_literals" (formula "8") (term "0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "polyDiv_pullOut" (formula "24") (term "0") (inst "polyDivCoeff=quotient_24"))
                     (rule "polySimp_mulComm1" (formula "24") (term "1,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,2,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "2,0"))
                     (rule "applyEq" (formula "24") (term "0,1,0,1,2,0") (ifseqformula "28"))
                     (rule "polySimp_pullOutFactor1" (formula "24") (term "0,1,2,0"))
                     (rule "add_literals" (formula "24") (term "1,0,1,2,0"))
                     (rule "times_zero_1" (formula "24") (term "0,1,2,0"))
                     (rule "inEqSimp_contradEq3" (formula "24") (term "0,0") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "24") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "polySimp_homoEq" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0"))
                     (rule "add_literals" (formula "24") (term "1,0,0"))
                     (rule "times_zero_1" (formula "24") (term "0,0"))
                     (rule "add_zero_left" (formula "24") (term "0"))
                     (rule "polySimp_invertEq" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "times_zero_2" (formula "24") (term "1"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "cut_direct" (formula "24") (term "0,0,0") (userinteraction))
                     (branch "CUT: result_1 = 0 TRUE"
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "24") (userinteraction))
                        (rule "leq_literals" (formula "6") (userinteraction))
                        (rule "closeFalse" (formula "6") (userinteraction))
                     )
                     (branch "CUT: result_1 = 0 FALSE"
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24") (userinteraction))
                        (rule "times_minus_one_1" (formula "1") (term "0,0") (userinteraction))
                        (rule "times_minus_one_1" (formula "11") (term "0,0") (userinteraction))
                        (rule "times_minus_one_1" (formula "11") (term "1") (userinteraction))
                        (rule "jdiv_axiom_inline" (formula "32") (term "0,0") (userinteraction))
                        (rule "cut_direct" (formula "32") (term "0,0,0") (userinteraction))
                        (branch "CUT: _b_0 >= 0 TRUE"
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "applyEqRigid" (formula "33") (term "0,0") (ifseqformula "11") (userinteraction))
                           (rule "mul_comm" (formula "33") (term "0") (userinteraction))
                           (rule "close" (formula "33") (ifseqformula "13") (userinteraction))
                        )
                        (branch "CUT: _b_0 >= 0 FALSE"
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                           (rule "polySimp_elimNeg" (formula "11") (term "0,0"))
                           (rule "polySimp_elimNeg" (formula "11") (term "1"))
                           (rule "polySimp_mulComm1" (formula "33") (term "0"))
                           (rule "polySimp_homoEq" (formula "33"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,0"))
                           (rule "inEqSimp_geqRight" (formula "32"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "33"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "7"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0"))
                           (rule "qeq_literals" (formula "32") (term "0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "false_right" (formula "32"))
                           (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "20") (term "0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "closeFalse" (formula "20"))
                        )
                     )
                  )
               )
               (branch "CUT: b <= -1 FALSE"
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_leqRight" (formula "14"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "applyEq" (formula "15") (term "0,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "3") (term "0,0,1") (ifseqformula "8"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                  (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "eqSymm" (formula "13"))
                  (rule "applyEq" (formula "15") (term "0,0,0,0,1,0,0,1") (ifseqformula "8"))
                  (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "15") (term "1,0,1,0,0,1") (ifseqformula "8"))
                  (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "notLeft" (formula "3"))
                  (rule "applyEq" (formula "15") (term "0,0,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "13"))
                  (rule "jdiv_axiom_inline" (formula "11") (term "0"))
                  (rule "qeq_literals" (formula "11") (term "0,0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "eqSymm" (formula "11"))
                  (rule "applyEq" (formula "15") (term "0,0,0,0,0") (ifseqformula "13"))
                  (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "13"))
                  (rule "qeq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "14") (term "0,0,0,0,1,0,0,0,1") (ifseqformula "12"))
                  (rule "jdiv_axiom_inline" (formula "14") (term "0,0,0,1,0,0,0,1"))
                  (rule "times_zero_2" (formula "14") (term "0,0,2,0,0,0,1,0,0,0,1"))
                  (rule "qeq_literals" (formula "14") (term "0,0,0,0,1,0,0,0,1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "12"))
                  (rule "add_zero_right" (formula "2") (term "1"))
                  (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "12"))
                  (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "applyEqRigid" (formula "13") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqRigid" (formula "13") (term "1,0,1,0,0,0,1") (ifseqformula "11"))
                  (rule "inEqSimp_contradEq3" (formula "12") (ifseqformula "2"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0"))
                  (rule "qeq_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "false_right" (formula "12"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Exceptional Post (gcdHelp)"
            (builtin "One Step Simplification" (formula "10"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "translateJavaMod" (formula "9") (term "0,0,0,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,0,0,1,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,0,1,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,1,1,0,1,1"))
            (rule "andLeft" (formula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "12"))
            (rule "notLeft" (formula "10"))
            (rule "close" (formula "13") (ifseqformula "12"))
         )
         (branch "Pre (gcdHelp)"
            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")))
            (rule "inEqSimp_commuteGeq" (formula "8") (term "1"))
            (rule "inEqSimp_subsumption0" (formula "8") (term "1") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "8") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "8") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
            (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "8") (term "0,0,1"))
            (rule "qeq_literals" (formula "8") (term "0,1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "inEqSimp_geqRight" (formula "8"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "cut_direct" (formula "5") (term "0"))
            (branch "CUT: a <= -1 TRUE"
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
               (rule "inEqSimp_homoInEq0" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
               (rule "mul_literals" (formula "5") (term "1"))
               (rule "cut_direct" (formula "7") (term "0"))
               (branch "CUT: b <= -1 TRUE"
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "7"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                  (rule "inEqSimp_homoInEq0" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "7") (term "0"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "closeFalse" (formula "7"))
               )
               (branch "CUT: b <= -1 FALSE"
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_leqRight" (formula "8"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "CUT: a <= -1 FALSE"
               (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_leqRight" (formula "8"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
               (rule "cut_direct" (formula "7") (term "0"))
               (branch "CUT: b <= -1 TRUE"
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "7"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                  (rule "inEqSimp_homoInEq0" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "7") (term "0"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "closeFalse" (formula "7"))
               )
               (branch "CUT: b <= -1 FALSE"
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_leqRight" (formula "8"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
      )
      (branch "if x_2 false"
         (builtin "One Step Simplification" (formula "8"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "7"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "assignment" (formula "8") (term "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "assignment" (formula "8") (term "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "blockEmpty" (formula "8") (term "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "returnUnfold" (formula "8") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "8") (term "1"))
         (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_3"))
         (builtin "Use Operation Contract" (formula "8") (newnames "heapBefore_gcdHelp,result_0,exc_0,heapAfter_gcdHelp,anon_heap_gcdHelp") (contract "Gcd[Gcd::gcdHelp(int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (gcdHelp)"
            (builtin "One Step Simplification" (formula "9"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,0,0,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,0,0,1,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,0,1,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,1,1,0,1,1"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "11"))
            (rule "inEqSimp_gtToGeq" (formula "11") (term "0,0,0,0,1,1"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0,1,1"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,1,1"))
            (rule "assignment" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "jmod_axiom" (formula "11") (term "0,1,0,1"))
            (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,1"))
            (rule "jmod_axiom" (formula "11") (term "0,1,0,0,0,1,1"))
            (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,0,0,1,1"))
            (rule "jmod_axiom" (formula "11") (term "0,0,0,1"))
            (rule "polySimp_mulComm1" (formula "11") (term "1,0,0,0,1"))
            (rule "jmod_axiom" (formula "11") (term "0,1,0,1,1"))
            (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,1,1"))
            (rule "jmod_axiom" (formula "11") (term "0,1,0,0,1,1"))
            (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0,0,1,1"))
            (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1"))
            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1"))
            (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,1,1"))
            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,1,1"))
            (rule "polySimp_sepNegMonomial" (formula "11") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1"))
            (rule "polySimp_elimOne" (formula "11") (term "0,0,0,1"))
            (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1"))
            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,1"))
            (rule "polySimp_sepNegMonomial" (formula "11") (term "1,0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,1,1"))
            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0,1,1"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0,0,1,1"))
            (rule "nnf_imp2or" (formula "11") (term "0,1,1"))
            (rule "nnf_notAnd" (formula "11") (term "0,0,1,1"))
            (rule "nnf_notAnd" (formula "11") (term "0,0,0,1,1"))
            (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0,1,1"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0,1,1"))
            (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1,1"))
            (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,1,1"))
            (rule "commute_and" (formula "11") (term "0,1"))
            (rule "commute_or_2" (formula "11") (term "0,0,1,1"))
            (rule "methodCallReturn" (formula "12") (term "1"))
            (rule "assignment" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "methodCallEmpty" (formula "12") (term "1"))
            (rule "tryEmpty" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "emptyModality" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "impRight" (formula "12"))
            (rule "jmod_axiom" (formula "13") (term "0,0,1,0,0,0,1"))
            (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,1,0,0,0,1"))
            (rule "jmod_axiom" (formula "13") (term "0,0,0"))
            (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,0"))
            (rule "jmod_axiom" (formula "13") (term "0,1,0,1"))
            (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0,1"))
            (rule "jmod_axiom" (formula "13") (term "0,0,1,0,0,1"))
            (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,1,0,0,1"))
            (rule "jmod_axiom" (formula "13") (term "0,1,0"))
            (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0"))
            (rule "polySimp_sepNegMonomial" (formula "13") (term "0,1,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0,1,0,0,0,1"))
            (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
            (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1"))
            (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1"))
            (rule "polySimp_sepNegMonomial" (formula "13") (term "0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0,1,0,0,1"))
            (rule "polySimp_sepNegMonomial" (formula "13") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
            (rule "cut_direct" (formula "5") (term "0"))
            (branch "CUT: a <= -1 TRUE"
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "applyEq" (formula "13") (term "0,0,0,0,0") (ifseqformula "6"))
               (rule "applyEq" (formula "13") (term "0,0,0,0,1,0,0,0,1") (ifseqformula "6"))
               (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
               (rule "inEqSimp_homoInEq0" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,0"))
               (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "6"))
               (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "6"))
               (rule "applyEq" (formula "13") (term "1,0,1,0,0,0,1") (ifseqformula "6"))
               (rule "polySimp_invertEq" (formula "1") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
               (rule "times_zero_2" (formula "1") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
               (rule "mul_literals" (formula "5") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "5"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
               (rule "leq_literals" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "cut_direct" (formula "7") (term "0"))
               (branch "CUT: b <= -1 TRUE"
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "7"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                  (rule "inEqSimp_homoInEq0" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0"))
                  (rule "applyEq" (formula "12") (term "0,0,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "12") (term "0,0,0,0,1,0,0,1") (ifseqformula "7"))
                  (rule "applyEq" (formula "12") (term "1,0,1,0,0,1") (ifseqformula "7"))
                  (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "7"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "inEqSimp_contradEq7" (formula "11") (term "0,0") (ifseqformula "6"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "11") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "jdiv_axiom" (formula "14") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                  (rule "times_zero_2" (formula "1") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "5"))
                  (rule "qeq_literals" (formula "1") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "1"))
                  (rule "polySimp_mulComm1" (formula "15") (term "0,0,0"))
                  (rule "polySimp_homoEq" (formula "15") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "15") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                  (rule "polyDiv_pullOut" (formula "15") (term "0,0,0,0") (inst "polyDivCoeff=jdiv(_a_0, result_0)"))
                  (rule "polySimp_mulComm1" (formula "15") (term "1,0,0,2,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "2,0,0,0,0"))
                  (rule "applyEq" (formula "15") (term "0,1,0,1,2,0,0,0,0") (ifseqformula "12"))
                  (rule "polySimp_pullOutFactor1" (formula "15") (term "0,1,2,0,0,0,0"))
                  (rule "add_literals" (formula "15") (term "1,0,1,2,0,0,0,0"))
                  (rule "times_zero_1" (formula "15") (term "0,1,2,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "2,0,0,0,0"))
                  (rule "polyDiv_zero" (formula "15") (term "0,2,0,0,0,0"))
                  (rule "div_literals" (formula "15") (term "1,0,2,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "2,0,0,0,0"))
                  (rule "polyDiv_pullOut" (formula "1") (term "0,1") (inst "polyDivCoeff=jdiv(_a_0, result_0)"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_homoEq" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                  (rule "polySimp_mulComm1" (formula "1") (term "1,0,0,2,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                  (rule "applyEq" (formula "1") (term "0,1,0,1,2,1,0") (ifseqformula "12"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,2,1,0"))
                  (rule "add_literals" (formula "1") (term "1,0,1,2,1,0"))
                  (rule "times_zero_1" (formula "1") (term "0,1,2,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "1"))
                  (rule "polyDiv_zero" (formula "1") (term "0,2,0"))
                  (rule "div_literals" (formula "1") (term "1,0,2,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "2,0"))
                  (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "1"))
                  (rule "polySimp_mulComm1" (formula "15") (term "0,0,0"))
                  (rule "polySimp_homoEq" (formula "15") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "15") (term "0,0"))
                  (rule "jdiv_axiom" (formula "15") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                  (rule "times_zero_2" (formula "1") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "1") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "polySimp_mulComm1" (formula "16") (term "0,1,0"))
                  (rule "polySimp_homoEq" (formula "16") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "16") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0"))
                  (rule "polyDiv_pullOut" (formula "16") (term "0,0,1,0") (inst "polyDivCoeff=jdiv(_b_0, result_0)"))
                  (rule "polySimp_mulComm1" (formula "16") (term "1,0,0,2,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "2,0,0,1,0"))
                  (rule "applyEq" (formula "16") (term "0,1,0,1,2,0,0,1,0") (ifseqformula "14"))
                  (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,2,0,0,1,0"))
                  (rule "add_literals" (formula "16") (term "1,0,1,2,0,0,1,0"))
                  (rule "times_zero_1" (formula "16") (term "0,1,2,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "2,0,0,1,0"))
                  (rule "polyDiv_zero" (formula "16") (term "0,2,0,0,1,0"))
                  (rule "div_literals" (formula "16") (term "1,0,2,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "2,0,0,1,0"))
                  (rule "polyDiv_pullOut" (formula "1") (term "0,1") (inst "polyDivCoeff=jdiv(_b_0, result_0)"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_homoEq" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                  (rule "polySimp_mulComm1" (formula "1") (term "1,0,0,2,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                  (rule "applyEq" (formula "1") (term "0,1,0,1,2,1,0") (ifseqformula "14"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0,1,2,1,0"))
                  (rule "add_literals" (formula "1") (term "1,0,1,2,1,0"))
                  (rule "times_zero_1" (formula "1") (term "0,1,2,1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "2,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "1"))
                  (rule "polyDiv_zero" (formula "1") (term "0,2,0"))
                  (rule "div_literals" (formula "1") (term "1,0,2,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "2,0"))
                  (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "polySimp_mulComm1" (formula "16") (term "0,1,0"))
                  (rule "polySimp_homoEq" (formula "16") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "16") (term "1,0"))
                  (rule "jdiv_axiom" (formula "14") (term "0,0"))
                  (rule "eqSymm" (formula "14"))
                  (rule "inEqSimp_subsumption1" (formula "14") (term "0,0") (ifseqformula "8"))
                  (rule "leq_literals" (formula "14") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "eqSymm" (formula "14"))
                  (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "14"))
                  (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "14"))
                  (rule "jdiv_axiom" (formula "13") (term "0,0"))
                  (rule "eqSymm" (formula "13"))
                  (rule "inEqSimp_subsumption1" (formula "13") (term "0,0") (ifseqformula "6"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "eqSymm" (formula "13"))
                  (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "13"))
                  (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "13"))
                  (rule "div_axiom" (formula "2") (term "1,0") (inst "quotient=quotient_15"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "ifthenelse_split" (formula "2") (term "1,2,0"))
                  (branch "result_0 = 0 TRUE"
                     (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "eqSymm" (formula "3"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_homoEq" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_homoEq" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                     (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0"))
                     (rule "applyEq" (formula "19") (term "1,0,0,0,0") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,0,0"))
                     (rule "applyEq" (formula "19") (term "1,0,0,1,0") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                     (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "17") (term "0"))
                     (rule "eqSymm" (formula "17"))
                     (rule "applyEq" (formula "18") (term "0,0,0,1,0") (ifseqformula "2"))
                     (rule "jdiv_axiom_inline" (formula "18") (term "0,0,1,0"))
                     (rule "qeq_literals" (formula "18") (term "0,0,0,1,0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "2"))
                     (rule "eqSymm" (formula "14"))
                     (rule "applyEq" (formula "19") (term "0,0,0,1,0,1") (ifseqformula "2"))
                     (rule "jdiv_axiom_inline" (formula "19") (term "0,0,1,0,1"))
                     (rule "qeq_literals" (formula "19") (term "0,0,0,1,0,1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "2"))
                     (rule "eqSymm" (formula "16"))
                     (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "2"))
                     (rule "apply_eq_monomials" (formula "1") (term "0,1,0") (ifseqformula "17"))
                     (rule "add_zero_left" (formula "1") (term "1,0,0,1,0"))
                     (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "1") (term "0,1,0"))
                     (rule "add_literals" (formula "1") (term "1,0,1,0"))
                     (rule "times_zero_1" (formula "1") (term "0,1,0"))
                     (rule "jdiv_axiom_inline" (formula "1") (term "1,0"))
                     (rule "qeq_literals" (formula "1") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "times_minus_one_1" (formula "19") (term "0,1,0,0,0") (userinteraction))
                     (rule "times_minus_one_1" (formula "19") (term "1,0,0") (userinteraction))
                     (rule "andRight" (formula "19") (userinteraction))
                     (branch "Case 1"
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "ifthenelse_split" (formula "1") (term "1,0") (userinteraction))
                        (branch "false TRUE"
                           (rule "closeFalse" (formula "1") (userinteraction))
                        )
                        (branch "false FALSE"
                           (rule "times_minus_one_1" (formula "3") (term "0,1,0") (userinteraction))
                           (rule "false_right" (formula "19") (userinteraction))
                           (rule "andRight" (formula "19") (userinteraction))
                           (branch "Case 1"
                              (rule "jdiv_axiom_inline" (formula "19") (term "1,0") (userinteraction))
                              (rule "cut_direct" (formula "19") (term "0,1,0") (userinteraction))
                              (branch "CUT: -_a_0 >= 0 TRUE"
                                 (rule "multiply_inEq1" (formula "8") (inst "multFac=Z(neglit(1(#)))") (userinteraction))
                                 (rule "qeq_literals" (formula "8") (term "0") (userinteraction))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "times_minus_one_1" (formula "8") (term "0") (userinteraction))
                                 (rule "mul_literals" (formula "8") (term "1") (userinteraction))
                                 (rule "leq_to_geq" (formula "8") (userinteraction))
                                 (rule "geq_to_leq" (formula "1") (userinteraction))
                                 (rule "geq_to_leq" (formula "8") (userinteraction))
                                 (rule "leq_trans" (formula "8") (ifseqformula "1") (userinteraction))
                                 (rule "leq_literals" (formula "8") (userinteraction))
                                 (rule "closeFalse" (formula "8") (userinteraction))
                              )
                              (branch "CUT: -_a_0 >= 0 FALSE"
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "times_minus_one_1" (formula "20") (term "0,0,1,0") (userinteraction))
                                 (rule "sub_sub_elim" (formula "20") (term "0,0,1,0") (userinteraction))
                                 (rule "times_minus_one_1" (formula "20") (term "1,0") (userinteraction))
                                 (rule "multiply_eq" (formula "15") (inst "multFac=Z(neglit(1(#)))") (userinteraction))
                                 (rule "times_minus_one_1" (formula "15") (term "1") (userinteraction))
                                 (rule "times_minus_one_1" (formula "15") (term "0") (userinteraction))
                                 (rule "pull_out_neg_2" (formula "21") (term "0") (userinteraction))
                                 (rule "close" (formula "21") (ifseqformula "15") (userinteraction))
                              )
                           )
                           (branch "Case 2"
                              (rule "times_minus_one_1" (formula "19") (term "1") (userinteraction))
                              (rule "times_minus_one_1" (formula "19") (term "0,1,0") (userinteraction))
                              (rule "applyEqRigid" (formula "19") (term "0,1") (ifseqformula "17") (userinteraction))
                              (rule "neg_literal" (formula "19") (term "1") (userinteraction))
                              (rule "sub_zero_1" (formula "19") (term "1") (userinteraction))
                              (rule "applyEqRigid" (formula "19") (term "0,0,1,0") (ifseqformula "17") (userinteraction))
                              (rule "neg_literal" (formula "19") (term "0,1,0") (userinteraction))
                              (rule "sub_zero_1" (formula "19") (term "0,1,0") (userinteraction))
                              (rule "jdiv_axiom_inline" (formula "19") (term "1,0") (userinteraction))
                              (rule "qeq_literals" (formula "19") (term "0,1,0") (userinteraction))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "ifthenelse_split" (formula "19") (term "1,0") (userinteraction))
                              (branch "false TRUE"
                                 (rule "closeFalse" (formula "1") (userinteraction))
                              )
                              (branch "false FALSE"
                                 (rule "false_right" (formula "19") (userinteraction))
                                 (rule "applyEqRigid" (formula "1") (term "0,0,0") (ifseqformula "17") (userinteraction))
                                 (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "17") (userinteraction))
                                 (rule "geq_to_leq" (formula "4") (userinteraction))
                                 (rule "geq_to_leq" (formula "7") (userinteraction))
                                 (rule "leq_trans" (formula "4") (ifseqformula "7") (userinteraction))
                                 (rule "leq_literals" (formula "4") (userinteraction))
                                 (rule "closeFalse" (formula "4") (userinteraction))
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "19") (inst "sk=x_0") (userinteraction))
                        (rule "cut_direct" (formula "19") (term "0,0,0") (userinteraction))
                        (branch "CUT: x_0 <= 0 TRUE"
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "closeTrue" (formula "20") (userinteraction))
                        )
                        (branch "CUT: x_0 <= 0 FALSE"
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "instAll" (formula "19") (term "0") (ifseqformula "18") (userinteraction))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20") (userinteraction))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "times_minus_one_1" (formula "21") (term "0,0,0,0,0,0") (userinteraction))
                           (rule "times_minus_one_1" (formula "21") (term "1,0,0,0") (userinteraction))
                           (rule "orLeft" (formula "1") (userinteraction))
                           (branch " !jdiv(_a_0, x_0) * x_0 = _a_0 | !jdiv(_b_0, x_0) * x_0 = _b_0"
                              (rule "orLeft" (formula "1") (userinteraction))
                              (branch "!jdiv(_a_0, x_0) * x_0 = _a_0"
                                 (rule "orRight" (formula "21") (userinteraction))
                                 (rule "orRight" (formula "21") (userinteraction))
                                 (rule "notRight" (formula "21") (userinteraction))
                                 (rule "notRight" (formula "22") (userinteraction))
                                 (rule "notLeft" (formula "3") (userinteraction))
                                 (rule "jdiv_axiom_inline" (formula "21") (term "0,0") (userinteraction))
                                 (rule "cut_direct" (formula "21") (term "0,0,0") (userinteraction))
                                 (branch "CUT: _a_0 >= 0 TRUE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "cut_direct" (formula "24") (term "0,0,0,0") (userinteraction))
                                    (branch "CUT: x_0 = 0 TRUE"
                                       (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "1") (userinteraction))
                                       (rule "leq_literals" (formula "24") (userinteraction))
                                       (rule "closeTrue" (formula "24") (userinteraction))
                                    )
                                    (branch "CUT: x_0 = 0 FALSE"
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "times_zero_2" (formula "25") (term "0") (userinteraction))
                                       (rule "eqSymm" (formula "25") (userinteraction))
                                       (rule "close" (formula "25") (ifseqformula "5") (userinteraction))
                                    )
                                 )
                                 (branch "CUT: _a_0 >= 0 FALSE"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "hide_right" (formula "22") (userinteraction))
                                    (rule "hide_right" (formula "23") (userinteraction))
                                    (rule "hide_left" (formula "20") (userinteraction))
                                    (rule "hide_left" (formula "1") (userinteraction))
                                    (rule "hide_left" (formula "1") (userinteraction))
                                    (rule "hide_left" (formula "1") (userinteraction))
                                    (rule "hide_left" (formula "2") (userinteraction))
                                    (rule "hide_left" (formula "12") (userinteraction))
                                    (rule "hide_left" (formula "13") (userinteraction))
                                    (rule "hide_left" (formula "12") (userinteraction))
                                    (rule "hide_left" (formula "10") (userinteraction))
                                    (rule "inEqSimp_geqRight" (formula "12"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "13"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "13"))
                                    (rule "qeq_literals" (formula "9"))
                                    (rule "closeFalse" (formula "9"))
                                 )
                              )
                              (branch "!jdiv(_b_0, x_0) * x_0 = _b_0"
                                 (rule "orRight" (formula "21") (userinteraction))
                                 (rule "orRight" (formula "21") (userinteraction))
                                 (rule "notLeft" (formula "1") (userinteraction))
                                 (rule "notRight" (formula "22") (userinteraction))
                                 (rule "hide_right" (formula "22") (userinteraction))
                                 (rule "times_minus_one_1" (formula "1") (term "1") (userinteraction))
                                 (rule "times_minus_one_1" (formula "1") (term "0,0,0") (userinteraction))
                                 (rule "cut_direct" (formula "22") (term "0,0,0,0") (userinteraction))
                                 (branch "CUT: x_0 = 0 TRUE"
                                    (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "1") (userinteraction))
                                    (rule "leq_literals" (formula "22") (userinteraction))
                                    (rule "closeTrue" (formula "22") (userinteraction))
                                 )
                                 (branch "CUT: x_0 = 0 FALSE"
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "times_zero_2" (formula "23") (term "0") (userinteraction))
                                    (rule "eqSymm" (formula "23") (userinteraction))
                                    (rule "close" (formula "23") (ifseqformula "3") (userinteraction))
                                 )
                              )
                           )
                           (branch " if (!x_0 = 0) then (0) else (if (!true) then (0) else (0 / 0)) * x_0 = result_0"
                              (rule "orRight" (formula "21") (userinteraction))
                              (rule "orRight" (formula "21") (userinteraction))
                              (rule "cut_direct" (formula "23") (term "0,0,0,0") (userinteraction))
                              (branch "CUT: x_0 = 0 TRUE"
                                 (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "1") (userinteraction))
                                 (rule "leq_literals" (formula "21") (userinteraction))
                                 (rule "closeTrue" (formula "21") (userinteraction))
                              )
                              (branch "CUT: x_0 = 0 FALSE"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "times_zero_2" (formula "24") (term "0") (userinteraction))
                                 (rule "eqSymm" (formula "24") (userinteraction))
                                 (rule "close" (formula "24") (ifseqformula "3") (userinteraction))
                              )
                           )
                        )
                     )
                  )
                  (branch "result_0 = 0 FALSE"
                     (rule "add_zero_right" (formula "2") (term "2,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "eqSymm" (formula "2"))
                     (rule "polySimp_homoEq" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "polySimp_homoEq" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "1"))
                     (rule "applyEq" (formula "19") (term "0,0,1,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "19") (term "0,1,0"))
                     (rule "polySimp_homoEq" (formula "19") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0"))
                     (rule "applyEq" (formula "19") (term "1,0,1,0") (ifseqformula "16"))
                     (rule "polySimp_pullOutFactor2" (formula "19") (term "0,1,0"))
                     (rule "add_literals" (formula "19") (term "1,0,1,0"))
                     (rule "times_zero_1" (formula "19") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "polySimp_sepPosMonomial" (formula "2"))
                     (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "2"))
                     (rule "polySimp_mulComm1" (formula "19") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "19") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,0,0"))
                     (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "14"))
                     (rule "polySimp_pullOutFactor2" (formula "19") (term "0,0"))
                     (rule "add_literals" (formula "19") (term "1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "0,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "allRight" (formula "19") (inst "sk=x_5"))
                     (rule "orRight" (formula "19"))
                     (rule "orRight" (formula "19"))
                     (rule "notRight" (formula "20"))
                     (rule "orRight" (formula "20"))
                     (rule "notRight" (formula "21"))
                     (rule "inEqSimp_leqRight" (formula "21"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "div_axiom" (formula "18") (term "1") (inst "quotient=quotient_16"))
                     (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "18"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,2"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0"))
                     (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "18"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0"))
                     (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "22"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1"))
                     (rule "applyEq" (formula "20") (term "0,2") (ifseqformula "22"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "2"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,2"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "20") (term "0,0,2"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "22"))
                     (rule "inEqSimp_homoInEq0" (formula "19"))
                     (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                     (rule "add_literals" (formula "19") (term "1,0"))
                     (rule "times_zero_1" (formula "19") (term "0"))
                     (rule "qeq_literals" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "18"))
                     (rule "applyEq" (formula "20") (term "1") (ifseqformula "18"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "2"))
                     (rule "mul_literals" (formula "19") (term "1,2"))
                     (rule "div_axiom" (formula "16") (term "1") (inst "quotient=quotient_17"))
                     (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,1"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,2"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0"))
                     (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "16"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0"))
                     (rule "applyEq" (formula "18") (term "0,2") (ifseqformula "20"))
                     (rule "inEqSimp_homoInEq1" (formula "18") (term "2"))
                     (rule "polySimp_addComm1" (formula "18") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,2"))
                     (rule "add_literals" (formula "18") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "18") (term "0,0,2"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "20"))
                     (rule "inEqSimp_homoInEq0" (formula "17"))
                     (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "1,0"))
                     (rule "times_zero_1" (formula "17") (term "0"))
                     (rule "qeq_literals" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "19"))
                     (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "17") (term "0,0,1"))
                     (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "16"))
                     (rule "applyEq" (formula "18") (term "1") (ifseqformula "16"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "2"))
                     (rule "mul_literals" (formula "17") (term "1,2"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                     (rule "jdiv_axiom" (formula "25") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "jdiv_axiom" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "4"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "4") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                     (rule "times_zero_2" (formula "4") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "13"))
                     (rule "qeq_literals" (formula "4") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "eqSymm" (formula "4"))
                     (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                     (rule "polySimp_mulComm1" (formula "5") (term "0"))
                     (rule "polySimp_homoEq" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1"))
                     (rule "jdiv_axiom" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "3"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                     (rule "times_zero_2" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "eqSymm" (formula "3"))
                     (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                     (rule "polySimp_mulComm1" (formula "4") (term "0"))
                     (rule "polySimp_homoEq" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1"))
                     (rule "ifthenelse_split_for" (formula "23"))
                     (branch "result_0 >= 0 TRUE"
                        (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                        (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "24"))
                        (rule "times_zero_1" (formula "28") (term "1,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0"))
                        (rule "leq_literals" (formula "28") (term "0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "false_right" (formula "28"))
                        (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                        (rule "leq_literals" (formula "23") (term "0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "div_axiom" (formula "5") (term "0,1") (inst "quotient=quotient_21"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0,1,1,1"))
                        (rule "inEqSimp_contradEq7" (formula "5") (term "0") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0,0"))
                        (rule "leq_literals" (formula "5") (term "0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "5"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0"))
                        (rule "applyEq" (formula "7") (term "0,2") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "7") (term "2"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,2"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,2"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0,2"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0,2"))
                        (rule "add_zero_right" (formula "7") (term "0,0,2"))
                        (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq0" (formula "6"))
                        (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "1,0"))
                        (rule "times_zero_1" (formula "6") (term "0"))
                        (rule "qeq_literals" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "applyEqRigid" (formula "6") (term "0,1") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "6") (term "1"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "6") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "7") (term "0,1") (ifseqformula "5"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "2"))
                        (rule "mul_literals" (formula "6") (term "1,2"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "0,1"))
                        (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_contradInEq1" (formula "6") (term "2") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "6") (term "0,2"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                        (rule "leq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "polyDiv_pullOut" (formula "23") (term "0") (inst "polyDivCoeff=quotient_16"))
                        (rule "polySimp_mulComm1" (formula "23") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "2,0"))
                        (rule "applyEq" (formula "23") (term "0,1,0,1,2,0") (ifseqformula "26"))
                        (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,2,0"))
                        (rule "add_literals" (formula "23") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "23") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq7" (formula "23") (term "0,0") (ifseqformula "24"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                        (rule "leq_literals" (formula "23") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "polySimp_homoEq" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "0,0"))
                        (rule "add_zero_left" (formula "23") (term "0"))
                        (rule "polySimp_invertEq" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                        (rule "times_zero_2" (formula "23") (term "1"))
                        (rule "polySimp_elimOne" (formula "23") (term "0"))
                        (rule "cut_direct" (formula "23") (term "0,0,0") (userinteraction))
                        (branch "CUT: result_0 = 0 TRUE"
                           (rule "applyEq" (formula "25") (term "0") (ifseqformula "23") (userinteraction))
                           (rule "qeq_literals" (formula "25") (userinteraction))
                           (rule "closeFalse" (formula "25") (userinteraction))
                        )
                        (branch "CUT: result_0 = 0 FALSE"
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23") (userinteraction))
                           (rule "hide_right" (formula "27") (userinteraction))
                           (rule "times_minus_one_1" (formula "6") (term "1") (userinteraction))
                           (rule "times_minus_one_1" (formula "6") (term "0,0") (userinteraction))
                           (rule "instAll" (formula "27") (term "1,0") (ifseqformula "26") (userinteraction))
                           (rule "cut_direct" (formula "1") (term "0,0,0") (userinteraction))
                           (branch "CUT: x_5 <= 0 TRUE"
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "polySimp_elimNeg" (formula "7") (term "0,0"))
                              (rule "polySimp_elimNeg" (formula "7") (term "1"))
                              (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch "CUT: x_5 <= 0 FALSE"
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "orLeft" (formula "1") (userinteraction))
                              (branch " !jdiv(_a_0, x_5) * x_5 = _a_0 | !jdiv(_b_0, x_5) * x_5 = _b_0"
                                 (rule "orLeft" (formula "1") (userinteraction))
                                 (branch "!jdiv(_a_0, x_5) * x_5 = _a_0"
                                    (rule "notLeft" (formula "1") (userinteraction))
                                    (rule "times_minus_one_1" (formula "3") (term "1") (userinteraction))
                                    (rule "times_minus_one_1" (formula "3") (term "0,0") (userinteraction))
                                    (rule "jdiv_axiom_inline" (formula "27") (term "0,0") (userinteraction))
                                    (rule "cut_direct" (formula "27") (term "0,0,0") (userinteraction))
                                    (branch "CUT: _a_0 >= 0 TRUE"
                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "5")))
                                       (rule "closeTrue" (formula "28") (userinteraction))
                                    )
                                    (branch "CUT: _a_0 >= 0 FALSE"
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "polySimp_elimNeg" (formula "6") (term "0,0"))
                                       (rule "polySimp_elimNeg" (formula "6") (term "1"))
                                       (rule "polySimp_elimNeg" (formula "3") (term "0,0"))
                                       (rule "polySimp_elimNeg" (formula "3") (term "1"))
                                       (rule "polySimp_mulComm1" (formula "28") (term "0"))
                                       (rule "polySimp_homoEq" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,0"))
                                       (rule "inEqSimp_geqRight" (formula "27"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_leqRight" (formula "29"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "29"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "!jdiv(_b_0, x_5) * x_5 = _b_0"
                                    (rule "notLeft" (formula "1") (userinteraction))
                                    (rule "jdiv_axiom_inline" (formula "27") (term "0,0") (userinteraction))
                                    (rule "cut_direct" (formula "27") (term "0,0,0") (userinteraction))
                                    (branch "CUT: _b_0 >= 0 TRUE"
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "applyEqRigid" (formula "28") (term "0,0") (ifseqformula "6") (userinteraction))
                                       (rule "mul_comm" (formula "28") (term "0") (userinteraction))
                                       (rule "close" (formula "28") (ifseqformula "8") (userinteraction))
                                    )
                                    (branch "CUT: _b_0 >= 0 FALSE"
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "polySimp_elimNeg" (formula "6") (term "0,0"))
                                       (rule "polySimp_elimNeg" (formula "6") (term "1"))
                                       (rule "polySimp_mulComm1" (formula "28") (term "0"))
                                       (rule "polySimp_homoEq" (formula "28"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,0"))
                                       (rule "inEqSimp_geqRight" (formula "27"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_leqRight" (formula "29"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "29"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "closeFalse" (formula "16"))
                                    )
                                 )
                              )
                              (branch "jdiv(result_0, x_5) * x_5 = result_0"
                                 (rule "jdiv_axiom_inline" (formula "1") (term "0,0") (userinteraction))
                                 (rule "cut_direct" (formula "1") (term "0,0,0") (userinteraction))
                                 (branch "CUT: result_0 >= 0 TRUE"
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "30")))
                                    (rule "closeFalse" (formula "2") (userinteraction))
                                 )
                                 (branch "CUT: result_0 >= 0 FALSE"
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "polySimp_elimNeg" (formula "7") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "7") (term "1"))
                                    (rule "polySimp_mulComm1" (formula "1") (term "0"))
                                    (rule "polySimp_homoEq" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,0"))
                                    (rule "inEqSimp_leqRight" (formula "29"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_geqRight" (formula "29"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "3"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "25"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                     )
                     (branch "result_0 >= 0 FALSE"
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "inEqSimp_geqRight" (formula "27"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "2"))
                        (rule "polySimp_mulComm1" (formula "29") (term "0"))
                        (rule "polySimp_homoEq" (formula "29"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "29"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "23"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0"))
                        (rule "qeq_literals" (formula "27") (term "0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "false_right" (formula "27"))
                        (rule "div_axiom" (formula "5") (term "0,1") (inst "quotient=quotient_18"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "5") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,1,1"))
                        (rule "inEqSimp_contradEq7" (formula "5") (term "0") (ifseqformula "2"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0,0"))
                        (rule "leq_literals" (formula "5") (term "0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "5"))
                        (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "5"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0"))
                        (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "7") (term "1"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "7") (term "0,0,1"))
                        (rule "applyEq" (formula "7") (term "0,2") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "7") (term "2"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,2"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,2"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0,2"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0,2"))
                        (rule "add_zero_right" (formula "7") (term "0,0,2"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq0" (formula "6"))
                        (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                        (rule "add_literals" (formula "6") (term "1,0"))
                        (rule "times_zero_1" (formula "6") (term "0"))
                        (rule "qeq_literals" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "applyEqRigid" (formula "7") (term "0,1") (ifseqformula "5"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "6") (term "0,1"))
                        (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "2"))
                        (rule "mul_literals" (formula "6") (term "1,2"))
                        (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "2"))
                        (rule "leq_literals" (formula "6") (term "0,0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "polyDiv_pullOut" (formula "23") (term "0") (inst "polyDivCoeff=quotient_16"))
                        (rule "polySimp_mulComm1" (formula "23") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "2,0"))
                        (rule "applyEq" (formula "23") (term "0,1,0,1,2,0") (ifseqformula "26"))
                        (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,2,0"))
                        (rule "add_literals" (formula "23") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "23") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq3" (formula "23") (term "0,0") (ifseqformula "24"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "23") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "polySimp_homoEq" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0"))
                        (rule "add_literals" (formula "23") (term "1,0,0"))
                        (rule "times_zero_1" (formula "23") (term "0,0"))
                        (rule "add_zero_left" (formula "23") (term "0"))
                        (rule "polySimp_invertEq" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                        (rule "times_zero_2" (formula "23") (term "1"))
                        (rule "polySimp_elimOne" (formula "23") (term "0"))
                        (rule "times_minus_one_1" (formula "1") (term "0,0,1") (userinteraction))
                        (rule "times_minus_one_1" (formula "1") (term "1") (userinteraction))
                        (rule "times_minus_one_1" (formula "3") (term "0,0") (userinteraction))
                        (rule "times_minus_one_1" (formula "3") (term "1") (userinteraction))
                        (rule "times_minus_one_1" (formula "28") (term "0,0,0") (userinteraction))
                        (rule "times_minus_one_1" (formula "28") (term "1") (userinteraction))
                        (rule "times_minus_one_1" (formula "8") (term "0,0") (userinteraction))
                        (rule "times_minus_one_1" (formula "9") (term "0,0") (userinteraction))
                        (rule "times_minus_one_1" (formula "8") (term "1") (userinteraction))
                        (rule "times_minus_one_1" (formula "9") (term "1") (userinteraction))
                        (rule "times_minus_one_1" (formula "14") (term "1") (userinteraction))
                        (rule "times_minus_one_1" (formula "16") (term "1") (userinteraction))
                        (rule "cut_direct" (formula "23") (term "0,0,0") (userinteraction))
                        (branch "CUT: result_0 = 0 TRUE"
                           (rule "applyEq" (formula "25") (term "0") (ifseqformula "23") (userinteraction))
                           (rule "leq_literals" (formula "25") (userinteraction))
                           (rule "closeFalse" (formula "25") (userinteraction))
                        )
                        (branch "CUT: result_0 = 0 FALSE"
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23") (userinteraction))
                           (rule "div_axiom" (formula "28") (term "0,0") (inst "quotient=quotient_0") (userinteraction))
                           (rule "orLeft" (formula "1") (userinteraction))
                           (branch "x_5 = 0"
                              (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1") (userinteraction))
                              (rule "qeq_literals" (formula "3") (userinteraction))
                              (rule "closeFalse" (formula "3") (userinteraction))
                           )
                           (branch " -result_0 / x_5 = quotient_0 & quotient_0 * x_5 <= -result_0 & if (x_5 >= 0) then ( quotient_0 * x_5 >= 1 + -result_0 + -1 * x_5) else (quotient_0 * x_5 >= 1 + -result_0 + x_5)"
                              (rule "andLeft" (formula "1") (userinteraction))
                              (rule "andLeft" (formula "1") (userinteraction))
                              (rule "cut_direct" (formula "3") (term "0") (userinteraction))
                              (branch "CUT: x_5 >= 0 TRUE"
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "times_minus_one_2" (formula "4") (term "1,1") (userinteraction))
                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "1") (userinteraction))
                                 (rule "cut" (inst "cutFormula=gt(mul(quotient_0, x_5), add(neg(result_0), neg(x_5)))") (userinteraction))
                                 (branch "CUT: quotient_0 * x_5 > -result_0 + -x_5 TRUE"
                                    (rule "cut" (inst "cutFormula=geq(mul(quotient_0, x_5), neg(result_0))") (userinteraction))
                                    (branch "CUT: quotient_0 * x_5 >= -result_0 TRUE"
                                       (rule "polySimp_elimNeg" (formula "34") (term "1"))
                                       (rule "polySimp_elimNeg" (formula "22") (term "1"))
                                       (rule "polySimp_elimNeg" (formula "4") (term "1"))
                                       (rule "polySimp_elimNeg" (formula "20") (term "1"))
                                       (rule "polySimp_elimNeg" (formula "6") (term "1,0,1"))
                                       (rule "polySimp_elimNeg" (formula "6") (term "1,1"))
                                       (rule "polySimp_elimNeg" (formula "7") (term "1"))
                                       (rule "polySimp_elimNeg" (formula "14") (term "0,0"))
                                       (rule "polySimp_elimNeg" (formula "3") (term "0,0"))
                                       (rule "polySimp_elimNeg" (formula "15") (term "0,0"))
                                       (rule "polySimp_elimNeg" (formula "15") (term "1"))
                                       (rule "polySimp_elimNeg" (formula "9") (term "1"))
                                       (rule "polySimp_elimNeg" (formula "1") (term "1"))
                                       (rule "polySimp_elimNeg" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimNeg" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimNeg" (formula "14") (term "1"))
                                       (rule "polySimp_elimNeg" (formula "9") (term "0,0"))
                                       (rule "polySimp_elimNeg" (formula "7") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "2"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "3"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                       (rule "mul_literals" (formula "2") (term "0,0,1"))
                                       (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "28"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0"))
                                       (rule "qeq_literals" (formula "32") (term "0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "false_right" (formula "32"))
                                       (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "32"))
                                       (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "3"))
                                       (rule "polySimp_mulAssoc" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0"))
                                       (rule "qeq_literals" (formula "32") (term "0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "false_right" (formula "32"))
                                       (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "3"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "CUT: quotient_0 * x_5 >= -result_0 FALSE"
                                       (rule "hide_right" (formula "34") (userinteraction))
                                       (rule "polySimp_addComm0" (formula "5") (term "0,1") (userinteraction))
                                       (rule "switch_brackets" (formula "5") (term "1") (userinteraction))
                                       (rule "hide_left" (formula "4") (userinteraction))
                                       (rule "times_minus_one_1" (formula "10") (term "0,0") (userinteraction))
                                       (rule "times_minus_one_1" (formula "10") (term "1") (userinteraction))
                                       (rule "hide_right" (formula "32") (userinteraction))
                                       (rule "insert_hidden_taclet1001111000100_0" (userinteraction))
                                       (rule "hide_right" (formula "31") (userinteraction))
                                       (rule "instAll" (formula "31") (term "1,0") (ifseqformula "30") (userinteraction))
                                       (rule "cut_direct" (formula "1") (term "0,0,0") (userinteraction))
                                       (branch "CUT: x_5 <= 0 TRUE"
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "polySimp_elimNeg" (formula "2") (term "0,1"))
                                          (rule "polySimp_elimNeg" (formula "8") (term "1"))
                                          (rule "polySimp_elimNeg" (formula "6") (term "1"))
                                          (rule "polySimp_elimNeg" (formula "5") (term "1,1,1"))
                                          (rule "polySimp_elimNeg" (formula "32") (term "1"))
                                          (rule "polySimp_elimNeg" (formula "3") (term "0,0"))
                                          (rule "polySimp_elimNeg" (formula "5") (term "0,1"))
                                          (rule "polySimp_elimNeg" (formula "8") (term "0,0"))
                                          (rule "polySimp_elimNeg" (formula "19") (term "1"))
                                          (rule "polySimp_elimNeg" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimNeg" (formula "13") (term "0,0"))
                                          (rule "polySimp_elimNeg" (formula "13") (term "1"))
                                          (rule "polySimp_elimNeg" (formula "11") (term "0,0"))
                                          (rule "polySimp_elimNeg" (formula "11") (term "1"))
                                          (rule "polySimp_elimNeg" (formula "4") (term "1"))
                                          (rule "polySimp_elimNeg" (formula "14") (term "0,0"))
                                          (rule "polySimp_elimNeg" (formula "14") (term "1"))
                                          (rule "polySimp_elimNeg" (formula "21") (term "1"))
                                          (rule "polySimp_elimNeg" (formula "6") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                          (rule "polySimp_addComm0" (formula "5") (term "0,1"))
                                          (rule "inEqSimp_geqRight" (formula "32"))
                                          (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "3"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "4"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                          (rule "mul_literals" (formula "3") (term "0,0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: x_5 <= 0 FALSE"
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "orLeft" (formula "1") (userinteraction))
                                          (branch " !jdiv(_a_0, x_5) * x_5 = _a_0 | !jdiv(_b_0, x_5) * x_5 = _b_0"
                                             (rule "orLeft" (formula "1") (userinteraction))
                                             (branch "!jdiv(_a_0, x_5) * x_5 = _a_0"
                                                (rule "notLeft" (formula "1") (userinteraction))
                                                (rule "jdiv_axiom_inline" (formula "31") (term "0,0") (userinteraction))
                                                (rule "cut_direct" (formula "31") (term "0,0,0") (userinteraction))
                                                (branch "CUT: _a_0 >= 0 TRUE"
                                                   (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "9")))
                                                   (rule "closeTrue" (formula "32") (userinteraction))
                                                )
                                                (branch "CUT: _a_0 >= 0 FALSE"
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "polySimp_elimNeg" (formula "7") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "4") (term "0,1"))
                                                   (rule "polySimp_elimNeg" (formula "18") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "12") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "7") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "20") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "12") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "5") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "4") (term "1,1,1"))
                                                   (rule "polySimp_elimNeg" (formula "3") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "13") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "2") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "13") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "10") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "10") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "34") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimNeg" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimNeg" (formula "5") (term "0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm1" (formula "32") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "32"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "0,1"))
                                                   (rule "inEqSimp_geqRight" (formula "31"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "33"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_geqRight" (formula "34"))
                                                   (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "4"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                   (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "5"))
                                                   (rule "polySimp_sepPosMonomial" (formula "34"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "mul_literals" (formula "3") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                   (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "4") (term "0,0"))
                                                   (rule "qeq_literals" (formula "4") (term "0"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "17") (term "0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                             (branch "!jdiv(_b_0, x_5) * x_5 = _b_0"
                                                (rule "notLeft" (formula "1") (userinteraction))
                                                (rule "jdiv_axiom_inline" (formula "31") (term "0,0") (userinteraction))
                                                (rule "cut_direct" (formula "31") (term "0,0,0") (userinteraction))
                                                (branch "CUT: _b_0 >= 0 TRUE"
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "applyEqRigid" (formula "32") (term "0,0") (ifseqformula "10") (userinteraction))
                                                   (rule "mul_comm" (formula "32") (term "0") (userinteraction))
                                                   (rule "close" (formula "32") (ifseqformula "12") (userinteraction))
                                                )
                                                (branch "CUT: _b_0 >= 0 FALSE"
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "polySimp_elimNeg" (formula "7") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "4") (term "0,1"))
                                                   (rule "polySimp_elimNeg" (formula "18") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "12") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "7") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "20") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "12") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "5") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "4") (term "1,1,1"))
                                                   (rule "polySimp_elimNeg" (formula "3") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "13") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "2") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "13") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "10") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "10") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "34") (term "1"))
                                                   (rule "polySimp_elimNeg" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimNeg" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimNeg" (formula "5") (term "0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm1" (formula "32") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "32"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "0,1"))
                                                   (rule "inEqSimp_geqRight" (formula "31"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "33"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_geqRight" (formula "34"))
                                                   (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "4"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                   (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "5"))
                                                   (rule "polySimp_sepPosMonomial" (formula "34"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "mul_literals" (formula "3") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "20"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                          )
                                          (branch "jdiv(result_0, x_5) * x_5 = result_0"
                                             (rule "polySimp_elimNeg" (formula "4") (term "1"))
                                             (rule "polySimp_elimNeg" (formula "3") (term "0,0"))
                                             (rule "polySimp_elimNeg" (formula "8") (term "1"))
                                             (rule "polySimp_elimNeg" (formula "11") (term "0,0"))
                                             (rule "polySimp_elimNeg" (formula "11") (term "1"))
                                             (rule "polySimp_elimNeg" (formula "6") (term "1"))
                                             (rule "polySimp_elimNeg" (formula "5") (term "1,1,1"))
                                             (rule "polySimp_elimNeg" (formula "2") (term "0,1"))
                                             (rule "polySimp_elimNeg" (formula "8") (term "0,0"))
                                             (rule "polySimp_elimNeg" (formula "33") (term "1"))
                                             (rule "polySimp_elimNeg" (formula "19") (term "1"))
                                             (rule "polySimp_elimNeg" (formula "5") (term "0,1"))
                                             (rule "polySimp_elimNeg" (formula "13") (term "0,0"))
                                             (rule "polySimp_elimNeg" (formula "13") (term "1"))
                                             (rule "polySimp_elimNeg" (formula "21") (term "1"))
                                             (rule "polySimp_elimNeg" (formula "14") (term "0,0"))
                                             (rule "polySimp_elimNeg" (formula "14") (term "1"))
                                             (rule "polySimp_elimNeg" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimNeg" (formula "6") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                             (rule "polySimp_addComm0" (formula "5") (term "0,1"))
                                             (rule "inEqSimp_leqRight" (formula "32"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_geqRight" (formula "33"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "4"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "8"))
                                             (rule "polySimp_mulComm1" (formula "3") (term "0"))
                                             (rule "polySimp_homoEq" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,0"))
                                             (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "5"))
                                             (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "3"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0"))
                                             (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "4") (term "0,0"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: quotient_0 * x_5 > -result_0 + -x_5 FALSE"
                                    (rule "polySimp_elimNeg" (formula "7") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "5") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "31") (term "0,1"))
                                    (rule "polySimp_elimNeg" (formula "31") (term "1,1"))
                                    (rule "polySimp_elimNeg" (formula "7") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "33") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "2") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "4") (term "1,0,1"))
                                    (rule "polySimp_elimNeg" (formula "4") (term "1,1"))
                                    (rule "polySimp_elimNeg" (formula "12") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "12") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "20") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "18") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "13") (term "0,0"))
                                    (rule "polySimp_elimNeg" (formula "13") (term "1"))
                                    (rule "polySimp_elimNeg" (formula "5") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "0"))
                                    (rule "inEqSimp_gtRight" (formula "31"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                    (rule "applyEq" (formula "6") (term "0,1") (ifseqformula "2"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                    (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "28"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0"))
                                    (rule "qeq_literals" (formula "32") (term "0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "false_right" (formula "32"))
                                    (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "32"))
                                    (rule "inEqSimp_contradEq3" (formula "32") (ifseqformula "3"))
                                    (rule "polySimp_mulAssoc" (formula "32") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0"))
                                    (rule "qeq_literals" (formula "32") (term "0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "false_right" (formula "32"))
                                    (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                              )
                              (branch "CUT: x_5 >= 0 FALSE"
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_elimNeg" (formula "11") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "32") (term "0,0,0"))
                                 (rule "polySimp_elimNeg" (formula "32") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "6") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "4") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "2") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "11") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "19") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "17") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "12") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "12") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "1") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "6") (term "1"))
                                 (rule "polySimp_elimNeg" (formula "3") (term "1,0,1"))
                                 (rule "polySimp_elimNeg" (formula "4") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "30"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "2"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0"))
                                 (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "2"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "27"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0"))
                                 (rule "qeq_literals" (formula "31") (term "0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "false_right" (formula "31"))
                                 (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "31"))
                                 (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "3"))
                                 (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0"))
                                 (rule "qeq_literals" (formula "31") (term "0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "false_right" (formula "31"))
                                 (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                           )
                        )
                     )
                  )
               )
               (branch "CUT: b <= -1 FALSE"
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "inEqSimp_leqRight" (formula "11"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                  (rule "applyEq" (formula "12") (term "0,0,0,0,1,0,0,1") (ifseqformula "7"))
                  (rule "applyEq" (formula "12") (term "0,0,0,1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "12") (term "1,0,1,0,0,1") (ifseqformula "7"))
                  (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "7"))
                  (rule "jdiv_axiom" (formula "11") (term "0,0,1,0,1"))
                  (rule "eqSymm" (formula "11"))
                  (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "eqSymm" (formula "11"))
                  (rule "applyEq" (formula "12") (term "0,0,1,0,1") (ifseqformula "11"))
                  (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "11"))
                  (rule "commute_and" (formula "13") (term "0"))
                  (rule "commute_and" (formula "12") (term "0,1"))
                  (rule "cut_direct" (formula "12") (term "0,0"))
                  (branch "CUT: _b_0 = 0 TRUE"
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "applyEqRigid" (formula "13") (term "0,0,0,0,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                     (rule "inEqSimp_commuteGeq" (formula "2"))
                     (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "12"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "11"))
                     (rule "jdiv_axiom_inline" (formula "10") (term "0"))
                     (rule "qeq_literals" (formula "10") (term "0,0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "eqSymm" (formula "10"))
                     (rule "applyEqRigid" (formula "12") (term "0,0,0,0,1,0,0,1") (ifseqformula "11"))
                     (rule "jdiv_axiom_inline" (formula "12") (term "0,0,0,1,0,0,1"))
                     (rule "qeq_literals" (formula "12") (term "0,0,0,0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "11"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "10"))
                     (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "10"))
                     (rule "applyEq" (formula "11") (term "1,0,1,0,0,1") (ifseqformula "10"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "CUT: _b_0 = 0 FALSE"
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "15"))
                     (rule "add_zero_right" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "15") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0"))
                     (rule "leq_literals" (formula "15") (term "0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "false_right" (formula "15"))
                     (rule "div_axiom" (formula "11") (term "1") (inst "quotient=quotient_7"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1"))
                     (rule "commute_and" (formula "11") (term "0,1"))
                     (rule "jdiv_axiom" (formula "14") (term "0,0"))
                     (rule "eqSymm" (formula "14"))
                     (rule "inEqSimp_subsumption1" (formula "14") (term "0,0") (ifseqformula "5"))
                     (rule "leq_literals" (formula "14") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "eqSymm" (formula "14"))
                     (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "14"))
                     (rule "jdiv_axiom" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                     (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                     (rule "times_zero_2" (formula "1") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm1" (formula "18") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "18") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,0,0"))
                     (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "16"))
                     (rule "polySimp_pullOutFactor2" (formula "18") (term "0,0"))
                     (rule "add_literals" (formula "18") (term "1,0,0"))
                     (rule "times_zero_1" (formula "18") (term "0,0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "allRight" (formula "18") (inst "sk=x_4"))
                     (rule "orRight" (formula "18"))
                     (rule "orRight" (formula "18"))
                     (rule "notRight" (formula "19"))
                     (rule "orRight" (formula "19"))
                     (rule "notRight" (formula "20"))
                     (rule "inEqSimp_leqRight" (formula "20"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "div_axiom" (formula "18") (term "1") (inst "quotient=quotient_8"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,1"))
                     (rule "commute_and" (formula "18") (term "0,1"))
                     (rule "ifthenelse_split_for" (formula "15") (term "1,1"))
                     (branch "result_0 >= 0 TRUE"
                        (rule "replace_known_left" (formula "19") (term "0,1,1") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "cnf_rightDist" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "commute_or" (formula "17"))
                        (rule "cnf_rightDist" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "commute_or" (formula "21"))
                        (rule "cnf_rightDist" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "commute_or" (formula "17"))
                        (rule "cnf_rightDist" (formula "21"))
                        (rule "andLeft" (formula "21"))
                        (rule "commute_or" (formula "22"))
                        (rule "jdiv_axiom" (formula "27") (term "0,0"))
                        (rule "eqSymm" (formula "1"))
                        (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
                        (rule "jdiv_axiom" (formula "4") (term "0,0"))
                        (rule "eqSymm" (formula "4"))
                        (rule "inEqSimp_subsumption1" (formula "4") (term "0,0") (ifseqformula "7"))
                        (rule "leq_literals" (formula "4") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "eqSymm" (formula "4"))
                        (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                        (rule "jdiv_axiom" (formula "3") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "3"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "3") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                        (rule "times_zero_2" (formula "3") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "12"))
                        (rule "qeq_literals" (formula "3") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "eqSymm" (formula "3"))
                        (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                        (rule "polySimp_mulComm1" (formula "4") (term "0"))
                        (rule "polySimp_homoEq" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1"))
                        (rule "polySimp_critPair" (formula "23") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                        (rule "polySimp_mulComm1" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "23") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "polySimp_mulComm1" (formula "23") (term "1,1,0"))
                        (rule "polySimp_mulComm1" (formula "23") (term "0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "1,1,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0"))
                        (rule "add_zero_right" (formula "23") (term "0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0"))
                        (rule "polySimp_sepNegMonomial" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0"))
                        (rule "allLeft" (formula "30") (inst "t=x_4"))
                        (rule "applyEqRigid" (formula "30") (term "0,0,0,1,0") (ifseqformula "5"))
                        (rule "replace_known_left" (formula "30") (term "0,1,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "applyEq" (formula "30") (term "0,0,1") (ifseqformula "1"))
                        (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "30") (term "0,0"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "notLeft" (formula "30"))
                        (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_12"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                        (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0"))
                        (rule "leq_literals" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "35") (term "0"))
                        (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "35"))
                        (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                        (rule "add_literals" (formula "35") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "35") (term "1,0,0"))
                        (rule "add_zero_right" (formula "35") (term "0,0"))
                        (rule "qeq_literals" (formula "35") (term "0"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "false_right" (formula "35"))
                        (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
                        (rule "leq_literals" (formula "3") (term "0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "3"))
                        (rule "leq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "div_axiom" (formula "8") (term "1") (inst "quotient=quotient_13"))
                        (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "8") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "8") (term "0,2,1,1"))
                        (rule "inEqSimp_contradEq7" (formula "8") (term "0") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "8") (term "0,0,0"))
                        (rule "leq_literals" (formula "8") (term "0,0"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "8"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0"))
                        (rule "applyEq" (formula "10") (term "0,1") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                        (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq0" (formula "9"))
                        (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                        (rule "add_literals" (formula "9") (term "1,0"))
                        (rule "times_zero_1" (formula "9") (term "0"))
                        (rule "qeq_literals" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "applyEq" (formula "9") (term "0,2") (ifseqformula "11"))
                        (rule "inEqSimp_homoInEq1" (formula "9") (term "2"))
                        (rule "polySimp_addComm1" (formula "9") (term "0,2"))
                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,2"))
                        (rule "add_literals" (formula "9") (term "1,1,0,0,2"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0,2"))
                        (rule "add_zero_right" (formula "9") (term "0,0,2"))
                        (rule "applyEq" (formula "10") (term "1") (ifseqformula "8"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "2"))
                        (rule "mul_literals" (formula "9") (term "1,2"))
                        (rule "inEqSimp_subsumption1" (formula "9") (term "0") (ifseqformula "3"))
                        (rule "leq_literals" (formula "9") (term "0,0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                        (rule "leq_literals" (formula "9") (term "0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "div_axiom" (formula "6") (term "0,1") (inst "quotient=quotient_14"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,1,1,1"))
                        (rule "inEqSimp_contradEq7" (formula "6") (term "0") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0,0"))
                        (rule "leq_literals" (formula "6") (term "0,0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "6"))
                        (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "6"))
                        (rule "polySimp_mulComm0" (formula "10") (term "0"))
                        (rule "applyEq" (formula "8") (term "0,2") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq1" (formula "8") (term "2"))
                        (rule "polySimp_addComm1" (formula "8") (term "0,2"))
                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,2"))
                        (rule "add_literals" (formula "8") (term "1,1,0,0,2"))
                        (rule "times_zero_1" (formula "8") (term "1,0,0,2"))
                        (rule "add_zero_right" (formula "8") (term "0,0,2"))
                        (rule "applyEq" (formula "7") (term "0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq0" (formula "7"))
                        (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "1,0"))
                        (rule "times_zero_1" (formula "7") (term "0"))
                        (rule "qeq_literals" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "applyEqRigid" (formula "7") (term "0,1") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq1" (formula "7") (term "1"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                        (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "7") (term "0,0,1"))
                        (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "6"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "2"))
                        (rule "mul_literals" (formula "7") (term "1,2"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "7") (term "0,1"))
                        (rule "inEqSimp_subsumption1" (formula "7") (term "0") (ifseqformula "3"))
                        (rule "leq_literals" (formula "7") (term "0,0"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                        (rule "leq_literals" (formula "7") (term "0"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "cut_direct" (formula "30") (term "0"))
                        (branch "CUT: result_0 = 0 TRUE"
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "27"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0"))
                           (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "27"))
                           (rule "eqSymm" (formula "28"))
                           (rule "applyEq" (formula "30") (term "0,0,0,1,0") (ifseqformula "27"))
                           (rule "jdiv_axiom_inline" (formula "30") (term "0,0,1,0"))
                           (rule "qeq_literals" (formula "30") (term "0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "27"))
                           (rule "add_zero_right" (formula "2") (term "1"))
                           (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "27"))
                           (rule "eqSymm" (formula "24"))
                           (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "27"))
                           (rule "eqSymm" (formula "12"))
                           (rule "polySimp_homoEq" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,0"))
                           (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "27"))
                           (rule "polySimp_mulComm0" (formula "26") (term "0"))
                           (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "27"))
                           (rule "eqSymm" (formula "25"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "27"))
                           (rule "qeq_literals" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "26"))
                           (rule "jdiv_axiom_inline" (formula "5") (term "0"))
                           (rule "qeq_literals" (formula "5") (term "0,0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "26"))
                           (rule "cut_direct" (formula "5") (term "0,0,0") (userinteraction))
                           (branch "CUT: x_4 = 0 TRUE"
                              (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "5") (userinteraction))
                              (rule "qeq_literals" (formula "3") (userinteraction))
                              (rule "closeFalse" (formula "3") (userinteraction))
                           )
                           (branch "CUT: x_4 = 0 FALSE"
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "eqSymm" (formula "5") (userinteraction))
                              (rule "times_minus_one_1" (formula "7") (term "1") (userinteraction))
                              (rule "times_minus_one_1" (formula "7") (term "0,0") (userinteraction))
                              (rule "times_minus_one_1" (formula "12") (term "0,0,0") (userinteraction))
                              (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "26") (userinteraction))
                              (rule "times_zero_2" (formula "25") (term "0") (userinteraction))
                              (rule "eqSymm" (formula "25") (userinteraction))
                              (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "26") (userinteraction))
                              (rule "times_zero_2" (formula "28") (term "0") (userinteraction))
                              (rule "eqSymm" (formula "28") (userinteraction))
                              (rule "applyEqRigid" (formula "31") (term "0,0,0") (ifseqformula "28") (userinteraction))
                              (rule "applyEqRigid" (formula "31") (term "1") (ifseqformula "28") (userinteraction))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                              (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "30")))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "times_zero_2" (formula "31") (term "0"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "31")))
                              (rule "eqSymm" (formula "1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "closeTrue" (formula "30"))
                           )
                        )
                        (branch "CUT: result_0 = 0 FALSE"
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "25"))
                           (rule "polySimp_mulComm0" (formula "29") (term "0"))
                           (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "25"))
                           (rule "eqSymm" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1"))
                           (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "31"))
                           (rule "polySimp_mulComm0" (formula "34") (term "0"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq1" (formula "26"))
                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                           (rule "add_literals" (formula "26") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "26") (term "1,0,0"))
                           (rule "add_zero_right" (formula "26") (term "0,0"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq0" (formula "24"))
                           (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                           (rule "add_literals" (formula "24") (term "1,0"))
                           (rule "times_zero_1" (formula "24") (term "0"))
                           (rule "qeq_literals" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "30"))
                           (rule "applyEq" (formula "26") (term "1") (ifseqformula "24"))
                           (rule "applyEq" (formula "32") (term "1") (ifseqformula "30"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "33"))
                           (rule "inEqSimp_homoInEq0" (formula "29"))
                           (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                           (rule "add_literals" (formula "29") (term "1,0"))
                           (rule "times_zero_1" (formula "29") (term "0"))
                           (rule "qeq_literals" (formula "29"))
                           (rule "true_left" (formula "29"))
                           (rule "applyEq" (formula "30") (term "0") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq1" (formula "30"))
                           (rule "polySimp_addComm1" (formula "30") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                           (rule "add_literals" (formula "30") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0"))
                           (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "29"))
                           (rule "polySimp_mulComm0" (formula "27") (term "0"))
                           (rule "eqSymm" (formula "27"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0"))
                           (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "25"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0"))
                           (rule "leq_literals" (formula "33") (term "0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "false_right" (formula "33"))
                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "25"))
                           (rule "leq_literals" (formula "23") (term "0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "jdiv_axiom" (formula "32") (term "0,0"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "7"))
                           (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "18"))
                           (rule "leq_literals" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1"))
                           (rule "applyEqRigid" (formula "33") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "33") (term "0"))
                           (rule "close" (formula "33") (ifseqformula "9"))
                        )
                     )
                     (branch "result_0 >= 0 FALSE"
                        (rule "replace_known_right" (formula "18") (term "0,1,1") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_geqRight" (formula "22"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "16") (term "0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0"))
                        (rule "qeq_literals" (formula "16") (term "0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "17"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "20"))
                        (rule "inEqSimp_homoInEq0" (formula "16"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                        (rule "qeq_literals" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                        (rule "inEqSimp_homoInEq1" (formula "17"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                        (rule "add_literals" (formula "17") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0"))
                        (rule "applyEq" (formula "18") (term "1") (ifseqformula "16"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "19") (term "0") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0"))
                        (rule "qeq_literals" (formula "19") (term "0,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "andLeft" (formula "19"))
                        (rule "andLeft" (formula "19"))
                        (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "20"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "23"))
                        (rule "inEqSimp_homoInEq1" (formula "21"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "23"))
                        (rule "inEqSimp_homoInEq0" (formula "19"))
                        (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                        (rule "add_literals" (formula "19") (term "1,0"))
                        (rule "times_zero_1" (formula "19") (term "0"))
                        (rule "qeq_literals" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "applyEq" (formula "21") (term "1") (ifseqformula "19"))
                        (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "19"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                        (rule "mul_literals" (formula "20") (term "1"))
                        (rule "jdiv_axiom" (formula "23") (term "0,0"))
                        (rule "eqSymm" (formula "1"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "1") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "24") (term "0"))
                        (rule "polySimp_homoEq" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "24"))
                        (rule "jdiv_axiom" (formula "5") (term "0,0"))
                        (rule "eqSymm" (formula "5"))
                        (rule "inEqSimp_subsumption1" (formula "5") (term "0,0") (ifseqformula "8"))
                        (rule "leq_literals" (formula "5") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "eqSymm" (formula "5"))
                        (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "5"))
                        (rule "jdiv_axiom" (formula "4") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0,0,2,1"))
                        (rule "eqSymm" (formula "4"))
                        (rule "polySimp_elimOne" (formula "4") (term "0,0,2,0"))
                        (rule "inEqSimp_invertInEq1" (formula "4") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                        (rule "times_zero_2" (formula "4") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "13"))
                        (rule "qeq_literals" (formula "4") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "eqSymm" (formula "4"))
                        (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                        (rule "polySimp_mulComm1" (formula "5") (term "0"))
                        (rule "polySimp_homoEq" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1"))
                        (rule "allLeft" (formula "25") (inst "t=x_4"))
                        (rule "applyEq" (formula "25") (term "0,0,0,1,0") (ifseqformula "6"))
                        (rule "replace_known_left" (formula "25") (term "0,1,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "applyEq" (formula "25") (term "0,0,1") (ifseqformula "1"))
                        (rule "polySimp_mulComm1" (formula "25") (term "0,1"))
                        (rule "polySimp_homoEq" (formula "25") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "25") (term "1"))
                        (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "25") (term "0,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "notLeft" (formula "25"))
                        (rule "div_axiom" (formula "1") (term "0,1") (inst "quotient=quotient_9"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                        (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0"))
                        (rule "leq_literals" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0"))
                        (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "1"))
                        (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "30"))
                        (rule "inEqSimp_contradEq3" (formula "30") (ifseqformula "2"))
                        (rule "polySimp_mulAssoc" (formula "30") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0"))
                        (rule "qeq_literals" (formula "30") (term "0"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "false_right" (formula "30"))
                        (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "6"))
                        (rule "leq_literals" (formula "3") (term "0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                        (rule "leq_literals" (formula "7") (term "0"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "div_axiom" (formula "9") (term "1") (inst "quotient=quotient_10"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
                        (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "9") (term "0,0,0"))
                        (rule "leq_literals" (formula "9") (term "0,0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "9"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0"))
                        (rule "applyEqRigid" (formula "11") (term "0,2") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq1" (formula "11") (term "2"))
                        (rule "polySimp_addComm1" (formula "11") (term "0,2"))
                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,2"))
                        (rule "add_literals" (formula "11") (term "1,1,0,0,2"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0,2"))
                        (rule "add_zero_right" (formula "11") (term "0,0,2"))
                        (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq0" (formula "10"))
                        (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                        (rule "add_literals" (formula "10") (term "1,0"))
                        (rule "times_zero_1" (formula "10") (term "0"))
                        (rule "qeq_literals" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "applyEqRigid" (formula "10") (term "0,1") (ifseqformula "12"))
                        (rule "inEqSimp_homoInEq1" (formula "10") (term "1"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                        (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1"))
                        (rule "applyEq" (formula "11") (term "1") (ifseqformula "9"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "2"))
                        (rule "mul_literals" (formula "10") (term "1,2"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                        (rule "inEqSimp_subsumption1" (formula "10") (term "0") (ifseqformula "3"))
                        (rule "leq_literals" (formula "10") (term "0,0"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                        (rule "leq_literals" (formula "10") (term "0"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "div_axiom" (formula "7") (term "0,1") (inst "quotient=quotient_11"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,1,1,1,1"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,1"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,1"))
                        (rule "inEqSimp_contradEq7" (formula "7") (term "0") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0,0"))
                        (rule "leq_literals" (formula "7") (term "0,0"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "andLeft" (formula "7"))
                        (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "7"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0"))
                        (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "11"))
                        (rule "inEqSimp_homoInEq1" (formula "9") (term "1"))
                        (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                        (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "9") (term "0,0,1"))
                        (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "11"))
                        (rule "inEqSimp_homoInEq0" (formula "8"))
                        (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "1,0"))
                        (rule "times_zero_1" (formula "8") (term "0"))
                        (rule "qeq_literals" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEqRigid" (formula "8") (term "0,2") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq1" (formula "8") (term "2"))
                        (rule "polySimp_addComm1" (formula "8") (term "0,2"))
                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,2"))
                        (rule "add_literals" (formula "8") (term "1,1,0,0,2"))
                        (rule "times_zero_1" (formula "8") (term "1,0,0,2"))
                        (rule "add_zero_right" (formula "8") (term "0,0,2"))
                        (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "7"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "8") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "2"))
                        (rule "mul_literals" (formula "8") (term "1,2"))
                        (rule "inEqSimp_subsumption1" (formula "8") (term "0") (ifseqformula "3"))
                        (rule "leq_literals" (formula "8") (term "0,0"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                        (rule "leq_literals" (formula "8") (term "0"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "polyDiv_pullOut" (formula "24") (term "0") (inst "polyDivCoeff=quotient_7"))
                        (rule "polySimp_mulComm1" (formula "24") (term "1,0,0,2,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,2,0"))
                        (rule "polySimp_addComm0" (formula "24") (term "2,0"))
                        (rule "applyEq" (formula "24") (term "0,1,0,1,2,0") (ifseqformula "26"))
                        (rule "polySimp_pullOutFactor1" (formula "24") (term "0,1,2,0"))
                        (rule "add_literals" (formula "24") (term "1,0,1,2,0"))
                        (rule "times_zero_1" (formula "24") (term "0,1,2,0"))
                        (rule "inEqSimp_contradEq3" (formula "24") (term "0,0") (ifseqformula "6"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "24") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "polySimp_homoEq" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0"))
                        (rule "add_literals" (formula "24") (term "1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "0,0"))
                        (rule "add_zero_left" (formula "24") (term "0"))
                        (rule "polySimp_invertEq" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "times_zero_2" (formula "24") (term "1"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "times_minus_one_1" (formula "1") (term "0,0") (userinteraction))
                        (builtin "One Step Simplification" (formula "24"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "cut_direct" (formula "24") (term "0,0") (userinteraction))
                        (branch "CUT: result_0 = 0 TRUE"
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "24") (userinteraction))
                           (rule "leq_literals" (formula "6") (userinteraction))
                           (rule "closeFalse" (formula "6") (userinteraction))
                        )
                        (branch "CUT: result_0 = 0 FALSE"
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24") (userinteraction))
                           (rule "hide_right" (formula "30") (userinteraction))
                           (rule "times_minus_one_1" (formula "8") (term "0,0") (userinteraction))
                           (rule "times_minus_one_1" (formula "4") (term "1,0,1") (userinteraction))
                           (rule "times_minus_one_1" (formula "4") (term "1,1") (userinteraction))
                           (rule "times_minus_one_1" (formula "8") (term "1") (userinteraction))
                           (rule "eqSymm" (formula "7") (userinteraction))
                           (rule "applyEqRigid" (formula "9") (term "1,0") (ifseqformula "7") (userinteraction))
                           (rule "mul_comm" (formula "9") (term "0") (userinteraction))
                           (rule "jdiv_axiom" (formula "30") (term "0,0") (userinteraction))
                           (rule "cut_direct" (formula "1") (term "0,1") (userinteraction))
                           (branch "CUT: _a_0 >= 0 TRUE"
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqRigid" (formula "32") (term "0,0") (ifseqformula "2") (userinteraction))
                              (rule "close" (formula "32") (ifseqformula "11") (userinteraction))
                           )
                           (branch "CUT: _a_0 >= 0 FALSE"
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "8"))
                              (rule "polySimp_elimNeg" (formula "5") (term "1,0,1"))
                              (rule "polySimp_elimNeg" (formula "9") (term "0,0"))
                              (rule "polySimp_elimNeg" (formula "9") (term "1"))
                              (rule "polySimp_elimNeg" (formula "5") (term "1,1"))
                              (rule "polySimp_elimNeg" (formula "2") (term "0,0"))
                              (rule "inEqSimp_geqRight" (formula "31"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "9"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0"))
                              (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "2"))
                              (rule "polySimp_mulComm1" (formula "32") (term "0"))
                              (rule "polySimp_homoEq" (formula "32"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "32"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "20") (term "0"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "closeFalse" (formula "20"))
                           )
                        )
                     )
                  )
               )
            )
            (branch "CUT: a <= -1 FALSE"
               (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_leqRight" (formula "12"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
               (rule "applyEq" (formula "13") (term "0,0,0,0,0") (ifseqformula "6"))
               (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "6"))
               (rule "applyEq" (formula "13") (term "0,0,0,0,1,0,0,0,1") (ifseqformula "6"))
               (rule "applyEq" (formula "13") (term "1,0,1,0,0,0,1") (ifseqformula "6"))
               (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "6"))
               (rule "cut_direct" (formula "8") (term "0"))
               (branch "CUT: b <= -1 TRUE"
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                  (rule "inEqSimp_homoInEq0" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,0"))
                  (rule "applyEq" (formula "2") (term "0,0,1") (ifseqformula "8"))
                  (rule "applyEq" (formula "13") (term "0,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "13") (term "0,0,0,0,1,0,0,1") (ifseqformula "8"))
                  (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "13") (term "1,0,1,0,0,1") (ifseqformula "8"))
                  (rule "polySimp_invertEq" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1"))
                  (rule "times_zero_2" (formula "2") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "inEqSimp_contradEq7" (formula "12") (term "0,0") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "12") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_contradEq7" (formula "2") (term "0,1") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0,0,1"))
                  (rule "add_zero_right" (formula "2") (term "0,0,0,1"))
                  (rule "leq_literals" (formula "2") (term "0,0,1"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "jdiv_axiom" (formula "11") (term "0,0"))
                  (rule "eqSymm" (formula "11"))
                  (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "eqSymm" (formula "11"))
                  (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "11"))
                  (rule "jdiv_axiom" (formula "13") (term "0,0"))
                  (rule "eqSymm" (formula "13"))
                  (rule "inEqSimp_subsumption1" (formula "13") (term "0,0") (ifseqformula "6"))
                  (rule "leq_literals" (formula "13") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "eqSymm" (formula "13"))
                  (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "13"))
                  (rule "jdiv_axiom" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                  (rule "times_zero_2" (formula "1") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "7"))
                  (rule "qeq_literals" (formula "1") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "1"))
                  (rule "polySimp_mulComm1" (formula "17") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "17") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,0,0"))
                  (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "15"))
                  (rule "polySimp_pullOutFactor2" (formula "17") (term "0,0"))
                  (rule "add_literals" (formula "17") (term "1,0,0"))
                  (rule "times_zero_1" (formula "17") (term "0,0"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "allRight" (formula "17") (inst "sk=x_0"))
                  (rule "orRight" (formula "17"))
                  (rule "orRight" (formula "17"))
                  (rule "orRight" (formula "17"))
                  (rule "notRight" (formula "19"))
                  (rule "notRight" (formula "19"))
                  (rule "inEqSimp_leqRight" (formula "19"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "div_axiom" (formula "15") (term "1") (inst "quotient=quotient_0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,1"))
                  (rule "commute_and" (formula "15") (term "0,1"))
                  (rule "div_axiom" (formula "18") (term "1") (inst "quotient=quotient_1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,1"))
                  (rule "commute_and" (formula "18") (term "0,1"))
                  (rule "jdiv_axiom" (formula "22") (term "0,0"))
                  (rule "eqSymm" (formula "1"))
                  (rule "jdiv_axiom" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "4"))
                  (rule "polySimp_elimOne" (formula "4") (term "0,0,2,0"))
                  (rule "inEqSimp_invertInEq1" (formula "4") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                  (rule "times_zero_2" (formula "4") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "12"))
                  (rule "qeq_literals" (formula "4") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "eqSymm" (formula "4"))
                  (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                  (rule "polySimp_mulComm1" (formula "5") (term "0"))
                  (rule "polySimp_homoEq" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1"))
                  (rule "jdiv_axiom" (formula "3") (term "0,0"))
                  (rule "eqSymm" (formula "3"))
                  (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "eqSymm" (formula "3"))
                  (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "3"))
                  (rule "allLeft" (formula "24") (inst "t=x_0"))
                  (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "applyEq" (formula "24") (term "0,0,0,1,0") (ifseqformula "3"))
                  (rule "replace_known_left" (formula "24") (term "0,1,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "24") (term "0,0"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "notLeft" (formula "24"))
                  (rule "polySimp_critPair" (formula "23") (ifseqformula "20"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                  (rule "polySimp_mulComm1" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "23") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                  (rule "polySimp_mulComm1" (formula "23") (term "1,1,0"))
                  (rule "polySimp_mulComm1" (formula "23") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                  (rule "add_literals" (formula "23") (term "1,1,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0"))
                  (rule "add_zero_right" (formula "23") (term "0"))
                  (rule "polySimp_addComm0" (formula "23") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "23"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                  (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_2"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (term "0") (ifseqformula "5"))
                  (rule "leq_literals" (formula "3") (term "0,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "div_axiom" (formula "4") (term "0,2,0") (inst "quotient=quotient_3"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "4") (term "0") (ifseqformula "6"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0,0"))
                  (rule "leq_literals" (formula "4") (term "0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "4"))
                  (rule "inEqSimp_subsumption1" (formula "6") (term "0") (ifseqformula "8"))
                  (rule "leq_literals" (formula "6") (term "0,0"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "div_axiom" (formula "11") (term "0,1") (inst "quotient=quotient_4"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,1,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,2,1,1"))
                  (rule "inEqSimp_contradEq7" (formula "11") (term "0") (ifseqformula "8"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0"))
                  (rule "leq_literals" (formula "11") (term "0,0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "11"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0"))
                  (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "15"))
                  (rule "inEqSimp_homoInEq0" (formula "12"))
                  (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                  (rule "add_literals" (formula "12") (term "1,0"))
                  (rule "times_zero_1" (formula "12") (term "0"))
                  (rule "qeq_literals" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "applyEq" (formula "12") (term "0,2") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "12") (term "2"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,2"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,2"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0,2"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,2"))
                  (rule "add_zero_right" (formula "12") (term "0,0,2"))
                  (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "14"))
                  (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1"))
                  (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "11"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "2"))
                  (rule "mul_literals" (formula "12") (term "1,2"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,1"))
                  (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "8"))
                  (rule "inEqSimp_subsumption1" (formula "12") (term "0") (ifseqformula "8"))
                  (rule "leq_literals" (formula "12") (term "0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "ifthenelse_split_for" (formula "28") (term "1,1"))
                  (branch "result_0 >= 0 TRUE"
                     (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "eqSymm" (formula "7"))
                     (rule "replace_known_left" (formula "25") (term "0,1,1") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "7"))
                     (rule "polySimp_mulComm0" (formula "35") (term "0"))
                     (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "35"))
                     (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "2"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                     (rule "add_literals" (formula "35") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0"))
                     (rule "qeq_literals" (formula "35") (term "0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "false_right" (formula "35"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                     (rule "leq_literals" (formula "9") (term "0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "cnf_rightDist" (formula "29"))
                     (rule "andLeft" (formula "29"))
                     (rule "commute_or" (formula "30"))
                     (rule "cnf_rightDist" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "commute_or" (formula "26"))
                     (rule "cnf_rightDist" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "commute_or" (formula "31"))
                     (rule "cnf_rightDist" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "commute_or" (formula "26"))
                     (rule "div_axiom" (formula "9") (term "1") (inst "quotient=quotient_6"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,1"))
                     (rule "inEqSimp_contradEq7" (formula "9") (term "0") (ifseqformula "3"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0,0"))
                     (rule "leq_literals" (formula "9") (term "0,0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "9"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0"))
                     (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq1" (formula "11") (term "1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "11") (term "0,0,1"))
                     (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq0" (formula "10"))
                     (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                     (rule "add_literals" (formula "10") (term "1,0"))
                     (rule "times_zero_1" (formula "10") (term "0"))
                     (rule "qeq_literals" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "applyEqRigid" (formula "10") (term "0,2") (ifseqformula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "10") (term "2"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,2"))
                     (rule "add_literals" (formula "10") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "10") (term "0,0,2"))
                     (rule "applyEq" (formula "11") (term "1") (ifseqformula "9"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "2"))
                     (rule "mul_literals" (formula "10") (term "1,2"))
                     (rule "inEqSimp_subsumption1" (formula "10") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "10") (term "0,0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                     (rule "leq_literals" (formula "10") (term "0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "jdiv_axiom" (formula "39") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "13"))
                     (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "22"))
                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "40") (term "0"))
                     (rule "close" (formula "40") (ifseqformula "15"))
                  )
                  (branch "result_0 >= 0 FALSE"
                     (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "eqSymm" (formula "7"))
                     (rule "replace_known_right" (formula "25") (term "0,1,1") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "inEqSimp_geqRight" (formula "33"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "8"))
                     (rule "polySimp_mulComm1" (formula "35") (term "0"))
                     (rule "polySimp_homoEq" (formula "35"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "35"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "29") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,0"))
                     (rule "qeq_literals" (formula "29") (term "0,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "andLeft" (formula "29"))
                     (rule "andLeft" (formula "29"))
                     (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "30"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0"))
                     (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "30"))
                     (rule "eqSymm" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1"))
                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "34"))
                     (rule "inEqSimp_homoInEq0" (formula "29"))
                     (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                     (rule "add_literals" (formula "29") (term "1,0"))
                     (rule "times_zero_1" (formula "29") (term "0"))
                     (rule "qeq_literals" (formula "29"))
                     (rule "true_left" (formula "29"))
                     (rule "applyEq" (formula "30") (term "0") (ifseqformula "33"))
                     (rule "inEqSimp_homoInEq1" (formula "30"))
                     (rule "polySimp_addComm1" (formula "30") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0"))
                     (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "29"))
                     (rule "applyEq" (formula "31") (term "1") (ifseqformula "29"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                     (rule "mul_literals" (formula "30") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "26") (term "0") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0"))
                     (rule "qeq_literals" (formula "26") (term "0,0"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "andLeft" (formula "26"))
                     (rule "andLeft" (formula "26"))
                     (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "27"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0"))
                     (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "27"))
                     (rule "polySimp_mulComm0" (formula "30") (term "0"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                     (rule "inEqSimp_homoInEq1" (formula "28"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                     (rule "add_literals" (formula "28") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0"))
                     (rule "applyEq" (formula "26") (term "0") (ifseqformula "30"))
                     (rule "inEqSimp_homoInEq0" (formula "26"))
                     (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                     (rule "add_literals" (formula "26") (term "1,0"))
                     (rule "times_zero_1" (formula "26") (term "0"))
                     (rule "qeq_literals" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "applyEq" (formula "28") (term "1") (ifseqformula "26"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                     (rule "mul_literals" (formula "27") (term "1"))
                     (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "35"))
                     (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "6"))
                     (rule "polySimp_mulAssoc" (formula "35") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                     (rule "add_literals" (formula "35") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0"))
                     (rule "qeq_literals" (formula "35") (term "0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "false_right" (formula "35"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0,0"))
                     (rule "mul_literals" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                     (rule "mul_literals" (formula "7") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "7"))
                     (rule "leq_literals" (formula "10") (term "0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "div_axiom" (formula "10") (term "1") (inst "quotient=quotient_5"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,2,1,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1"))
                     (rule "inEqSimp_contradEq7" (formula "10") (term "0") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0"))
                     (rule "leq_literals" (formula "10") (term "0,0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "10"))
                     (rule "polySimp_mulComm0" (formula "14") (term "0"))
                     (rule "applyEq" (formula "12") (term "0,2") (ifseqformula "14"))
                     (rule "inEqSimp_homoInEq1" (formula "12") (term "2"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,2"))
                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,2"))
                     (rule "add_literals" (formula "12") (term "1,1,0,0,2"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,2"))
                     (rule "add_zero_right" (formula "12") (term "0,0,2"))
                     (rule "applyEqRigid" (formula "12") (term "0,1") (ifseqformula "14"))
                     (rule "inEqSimp_homoInEq1" (formula "12") (term "1"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                     (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "12") (term "0,0,1"))
                     (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "14"))
                     (rule "inEqSimp_homoInEq0" (formula "11"))
                     (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                     (rule "add_literals" (formula "11") (term "1,0"))
                     (rule "times_zero_1" (formula "11") (term "0"))
                     (rule "qeq_literals" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "applyEq" (formula "12") (term "1") (ifseqformula "10"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "2"))
                     (rule "mul_literals" (formula "11") (term "1,2"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,1"))
                     (rule "inEqSimp_subsumption1" (formula "11") (term "0") (ifseqformula "7"))
                     (rule "leq_literals" (formula "11") (term "0,0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "7"))
                     (rule "leq_literals" (formula "11") (term "0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "jdiv_axiom" (formula "35") (term "0,0"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "14"))
                     (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "23"))
                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1"))
                     (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "36") (term "0"))
                     (rule "close" (formula "36") (ifseqformula "16"))
                  )
               )
               (branch "CUT: b <= -1 FALSE"
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "inEqSimp_leqRight" (formula "12"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                  (rule "applyEq" (formula "3") (term "0,0,1") (ifseqformula "8"))
                  (rule "applyEq" (formula "13") (term "0,0,0,0,1,0,0,1") (ifseqformula "8"))
                  (rule "applyEq" (formula "13") (term "0,0,0,1,0") (ifseqformula "8"))
                  (rule "applyEq" (formula "13") (term "1,0,1,0,0,1") (ifseqformula "8"))
                  (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "8"))
                  (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "notLeft" (formula "3"))
                  (rule "applyEq" (formula "13") (term "0,0,0,0,1,0,0,1") (ifseqformula "11"))
                  (rule "jdiv_axiom_inline" (formula "13") (term "0,0,0,1,0,0,1"))
                  (rule "times_zero_2" (formula "13") (term "0,0,2,0,0,0,1,0,0,1"))
                  (rule "qeq_literals" (formula "13") (term "0,0,0,0,1,0,0,1"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "11"))
                  (rule "inEqSimp_commuteGeq" (formula "3"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "6") (term "1") (ifseqformula "10"))
                  (rule "applyEq" (formula "12") (term "0,0,0,1,0") (ifseqformula "10"))
                  (rule "jdiv_axiom_inline" (formula "12") (term "0,0,1,0"))
                  (rule "times_zero_2" (formula "12") (term "0,0,2,0,0,1,0"))
                  (rule "qeq_literals" (formula "12") (term "0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "applyEqRigid" (formula "12") (term "1,1,0") (ifseqformula "10"))
                  (rule "applyEq" (formula "12") (term "1,0,1,0,0,1") (ifseqformula "10"))
                  (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "11"))
                  (rule "add_zero_right" (formula "1") (term "1"))
                  (rule "inEqSimp_contradEq7" (formula "11") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0"))
                  (rule "leq_literals" (formula "11") (term "0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "false_right" (formula "11"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Exceptional Post (gcdHelp)"
            (builtin "One Step Simplification" (formula "9"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "translateJavaMod" (formula "9") (term "0,0,0,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,0,0,1,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,0,1,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,1,1,0,1,1"))
            (rule "translateJavaMod" (formula "9") (term "0,1,0,1,0,1,1"))
            (rule "andLeft" (formula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "12"))
            (rule "notLeft" (formula "10"))
            (rule "close" (formula "13") (ifseqformula "12"))
         )
         (branch "Pre (gcdHelp)"
            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "1")))
            (rule "inEqSimp_geqRight" (formula "8"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "cut_direct" (formula "5") (term "0"))
            (branch "CUT: a <= -1 TRUE"
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
               (rule "inEqSimp_homoInEq0" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
               (rule "polySimp_elimOne" (formula "5") (term "1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
               (rule "mul_literals" (formula "5") (term "1"))
               (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
               (rule "qeq_literals" (formula "5") (term "0"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "closeFalse" (formula "5"))
            )
            (branch "CUT: a <= -1 FALSE"
               (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_leqRight" (formula "8"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
               (rule "qeq_literals" (formula "2") (term "0"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
         )
      )
   )
   (branch "if x_1 false"
      (builtin "One Step Simplification" (formula "6"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_leqRight" (formula "5"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (builtin "CloseAfterMerge" (formula "6") (mergeNode "75"))
   )
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "4"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "inEqSimp_leqRight" (formula "3"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (builtin "CloseAfterMerge" (formula "4") (mergeNode "41"))
)
)

}
