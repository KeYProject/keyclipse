\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jan 29 11:24:50 CET 2019
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , moreSeqRules-moreSeqRules\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , nullPointerPolicy-nullPointerPolicy\\:nullCheck
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation "#Proof Obligation Settings
#Tue Jan 29 11:24:50 CET 2019
name=jmodUnique1
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "pschmitt" ) (keyVersion "a9bb593fdc0df607887926610f5ee7300d2ef908"))

(autoModeTime "416")

(branch "dummy ID"
(rule "allRight" (formula "1") (newnames "v_a,v_deb,v_cmod,v_x") (inst "sk=v_a_0") (userinteraction))
(rule "allRight" (formula "1") (inst "sk=v_deb_0") (userinteraction))
(rule "allRight" (formula "1") (inst "sk=v_cmod_0") (userinteraction))
(rule "impRight" (formula "1") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "jmod_axiom" (formula "6") (term "1") (userinteraction))
(rule "times_minus_one_1" (formula "6") (term "0,1,1") (userinteraction))
(rule "pull_out_neg_1" (formula "6") (term "1,1") (userinteraction))
(rule "exLeft" (formula "4") (inst "sk=v_x_0") (userinteraction))
(rule "jdiv_axiom_inline" (formula "6") (term "0,0,1,1") (userinteraction))
(rule "replace_known_left" (formula "6") (term "0,0,0,1,1") (ifseqformula "1") (userinteraction))
(builtin "One Step Simplification" (formula "6"))
(rule "div_unique1" (formula "6") (term "0,0,1,1") (inst "a=a") (inst "cnom=cnom") (inst "x=x") (inst "y=y") (userinteraction))
(rule "instAll" (formula "7") (term "0,0,0,1,1") (ifseqformula "1") (userinteraction))
(rule "hide_left" (formula "2") (userinteraction))
(rule "instAll" (formula "7") (term "1,0,0,1,1") (ifseqformula "1") (userinteraction))
(rule "hide_left" (formula "2") (userinteraction))
(rule "instAll" (formula "5") (term "1,0,1") (ifseqformula "1") (userinteraction))
(rule "hide_left" (formula "1") (userinteraction))
(rule "instAll" (formula "7") (term "0,0,1,1") (ifseqformula "4") (userinteraction))
(rule "hide_left" (formula "5") (userinteraction))
(rule "polySimp_homoEq" (formula "5"))
(rule "polySimp_elimNeg" (formula "7") (term "1,1"))
(rule "polySimp_elimSub" (formula "1") (term "1,1,0,0"))
(rule "polySimp_elimSub" (formula "1") (term "1,1,0"))
(rule "polySimp_homoEq" (formula "7"))
(rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
(rule "polySimp_addComm1" (formula "7") (term "0"))
(rule "polySimp_addComm1" (formula "5") (term "0"))
(rule "polySimp_addComm0" (formula "5") (term "0,0"))
(rule "polySimp_addComm1" (formula "5") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "4"))
(rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "4") (term "0"))
(rule "inEqSimp_gtToGeq" (formula "1") (term "0,0,0,0,0"))
(rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0"))
(rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "3"))
(rule "polySimp_sepNegMonomial" (formula "7"))
(rule "polySimp_mulLiterals" (formula "7") (term "0"))
(rule "polySimp_elimOne" (formula "7") (term "0"))
(rule "polySimp_sepPosMonomial" (formula "5"))
(rule "polySimp_mulComm0" (formula "5") (term "1"))
(rule "polySimp_rightDist" (formula "5") (term "1"))
(rule "polySimp_mulAssoc" (formula "5") (term "0,1"))
(rule "polySimp_mulComm0" (formula "5") (term "0,0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "0,1"))
(rule "polySimp_elimOne" (formula "5") (term "0,1"))
(rule "applyEq" (formula "1") (term "0,1,0,0,0,0") (ifseqformula "5"))
(rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,0,0"))
(rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,1,0,0,0,0"))
(rule "add_literals" (formula "1") (term "1,0,0,1,0,0,0,0"))
(rule "times_zero_1" (formula "1") (term "0,0,1,0,0,0,0"))
(rule "add_zero_left" (formula "1") (term "0,1,0,0,0,0"))
(rule "replace_known_left" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
(builtin "One Step Simplification" (formula "1"))
(rule "applyEqRigid" (formula "1") (term "0,1,0,0") (ifseqformula "5"))
(rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
(rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,0"))
(rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1,0,0"))
(rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
(rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
(rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,1,0,0"))
(rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0,0"))
(rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,0"))
(rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0"))
(rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "4"))
(builtin "One Step Simplification" (formula "1"))
(rule "inEqSimp_sepNegMonomial0" (formula "4"))
(rule "polySimp_mulLiterals" (formula "4") (term "0"))
(rule "polySimp_elimOne" (formula "4") (term "0"))
(rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,0"))
(rule "mul_literals" (formula "1") (term "1,0,0,0"))
(rule "div_axiom" (formula "7") (term "0,0") (inst "quotient=quotient_0"))
(rule "replace_known_right" (formula "1") (term "0") (ifseqformula "7"))
(builtin "One Step Simplification" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "polySimp_mulComm0" (formula "3") (term "0,1"))
(rule "polySimp_mulComm0" (formula "3") (term "0,2"))
(rule "polySimp_mulComm0" (formula "3") (term "1,1,1"))
(rule "polySimp_mulComm0" (formula "2") (term "0"))
(rule "applyEqRigid" (formula "4") (term "0,0,1,0") (ifseqformula "1"))
(rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
(rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "1"))
(rule "polySimp_mulComm0" (formula "10") (term "0"))
(rule "applyEqRigid" (formula "4") (term "0,0,1,0,0") (ifseqformula "1"))
(rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0"))
(rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
(builtin "One Step Simplification" (formula "4"))
(rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "1"))
(rule "ifthenelse_split_for" (formula "3"))
(branch "v_deb_0 >= 0 TRUE"
   (rule "replace_known_left" (formula "5") (term "1,0") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "10"))
   (rule "add_zero_right" (formula "3") (term "1"))
   (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "5"))
   (rule "polySimp_mulComm0" (formula "9") (term "0"))
   (rule "close" (formula "11") (ifseqformula "9"))
)
(branch "v_deb_0 >= 0 FALSE"
   (rule "inEqSimp_geqRight" (formula "9"))
   (rule "times_zero_1" (formula "1") (term "1,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "inEqSimp_contradEq3" (formula "10") (ifseqformula "1"))
   (rule "times_zero_1" (formula "10") (term "1,0,0"))
   (rule "add_zero_right" (formula "10") (term "0,0"))
   (rule "qeq_literals" (formula "10") (term "0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "false_right" (formula "10"))
   (rule "inEqSimp_contradInEq0" (formula "5") (term "0,0") (ifseqformula "1"))
   (rule "qeq_literals" (formula "5") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "true_left" (formula "5"))
   (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
   (rule "polySimp_rightDist" (formula "4") (term "0,0"))
   (rule "polySimp_addComm1" (formula "4") (term "0"))
   (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
   (rule "mul_literals" (formula "4") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
   (rule "add_literals" (formula "4") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "4") (term "1,0,0"))
   (rule "add_zero_right" (formula "4") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "4"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
   (rule "polySimp_elimOne" (formula "4") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
   (rule "polySimp_rightDist" (formula "7") (term "0,0"))
   (rule "mul_literals" (formula "7") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "7") (term "0"))
   (rule "add_literals" (formula "7") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "7"))
   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
   (rule "polySimp_elimOne" (formula "7") (term "0"))
   (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
   (rule "qeq_literals" (formula "7") (term "0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "closeFalse" (formula "7"))
)
)
}
