\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jun 03 16:05:17 CEST 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=50000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=wdChecks-wdChecks\\:off , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , Strings-Strings\\:on , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , modelFields-modelFields\\:treatAsAxiom , assertions-assertions\\:safe , bigint-bigint\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , initialisation-initialisation\\:disableStaticInitialisation
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "src";

\proofObligation "#Proof Obligation Settings
#Wed Jun 03 16:05:17 CEST 2015
name=DoubleLinkedList[DoubleLinkedList\\:\\:doUndo(DoubleLinkedList.Node,int)].JML normal_behavior operation contract.0
contract=DoubleLinkedList[DoubleLinkedList\\:\\:doUndo(DoubleLinkedList.Node,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "kirsten" ) (keyVersion "2b3f29af66bd96801269ef88178ead6ae45863cb"))

(autoModeTime "95427")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "heapAtPre"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "10"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "11") (userinteraction))
(builtin "One Step Simplification" (formula "4"))
(rule "eqSymm" (formula "12") (term "0,0,0,1"))
(rule "assignment" (formula "12") (term "1"))
(builtin "One Step Simplification" (formula "12"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_doUndo,savedHeapBefore_doUndo"))
(builtin "One Step Simplification" (formula "12"))
(builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_remove,exc_0,heapAfter_remove,anon_heap_remove") (contract "DoubleLinkedList[DoubleLinkedList::remove(DoubleLinkedList.Node,int)].JML normal_behavior operation contract.0"))
(branch "Post (remove)"
   (builtin "One Step Simplification" (formula "11"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "18"))
   (rule "selectOfAnonEQ" (formula "19") (term "1,1,0,0") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "21")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "19") (term "0,1,1,0,0"))
   (rule "elementOfSingleton" (formula "19") (term "1,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "elementOfUnion" (formula "19") (term "0,1,1,0,0"))
   (rule "elementOfSingleton" (formula "19") (term "1,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "elementOfUnion" (formula "19") (term "0,1,1,0,0"))
   (rule "elementOfSingleton" (formula "19") (term "0,0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "elementOfSingleton" (formula "19") (term "0,1,1,0,0"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "selectOfAnonEQ" (formula "16") (term "0,0,1") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "21")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,1"))
   (rule "elementOfSingleton" (formula "16") (term "1,0,0,0,1"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,1"))
   (rule "elementOfSingleton" (formula "16") (term "1,0,0,0,1"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,1"))
   (rule "elementOfSingleton" (formula "16") (term "0,0,0,0,1"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "selectOfAnonEQ" (formula "19") (term "0,0,1,0,1,0") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "21")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,1,0,1,0"))
   (rule "elementOfSingleton" (formula "19") (term "1,0,0,0,1,0,1,0"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,1,0,1,0"))
   (rule "elementOfSingleton" (formula "19") (term "1,0,0,0,1,0,1,0"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,1,0,1,0"))
   (rule "elementOfSingleton" (formula "19") (term "0,0,0,0,1,0,1,0"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "selectOfAnonEQ" (formula "15") (term "0") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "22")) (ifInst ""  (formula "4")))
   (rule "elementOfUnion" (formula "15") (term "0,0"))
   (rule "elementOfSingleton" (formula "15") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "15") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "15") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "elementOfSingleton" (formula "15") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "selectOfAnonEQ" (formula "16") (term "0") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "22")) (ifInst ""  (formula "4")))
   (rule "elementOfUnion" (formula "16") (term "0,0"))
   (rule "elementOfSingleton" (formula "16") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "elementOfUnion" (formula "16") (term "0,0"))
   (rule "elementOfSingleton" (formula "16") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "16") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "elementOfSingleton" (formula "16") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "selectOfAnonEQ" (formula "13") (term "0") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "21")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "13") (term "0,0"))
   (rule "elementOfSingleton" (formula "13") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "elementOfUnion" (formula "13") (term "0,0"))
   (rule "elementOfSingleton" (formula "13") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "elementOfUnion" (formula "13") (term "0,0"))
   (rule "elementOfSingleton" (formula "13") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "elementOfSingleton" (formula "13") (term "0,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "selectOfAnonEQ" (formula "17") (term "0") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "22")) (ifInst ""  (formula "4")))
   (rule "elementOfUnion" (formula "17") (term "0,0"))
   (rule "elementOfSingleton" (formula "17") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "17") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "17") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "elementOfSingleton" (formula "17") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "selectOfAnonEQ" (formula "15") (term "0,0,1,1") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "21")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,1,1"))
   (rule "elementOfSingleton" (formula "15") (term "1,0,0,0,1,1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,1,1"))
   (rule "elementOfSingleton" (formula "15") (term "1,0,0,0,1,1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,1,1"))
   (rule "elementOfSingleton" (formula "15") (term "0,0,0,0,1,1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "selectOfAnonEQ" (formula "14") (term "0") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "21")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "14") (term "0,0"))
   (rule "elementOfSingleton" (formula "14") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "elementOfUnion" (formula "14") (term "0,0"))
   (rule "elementOfSingleton" (formula "14") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "elementOfUnion" (formula "14") (term "0,0"))
   (rule "elementOfSingleton" (formula "14") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "selectOfAnonEQ" (formula "18") (term "0,0") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "22")) (ifInst ""  (formula "4")))
   (rule "elementOfUnion" (formula "18") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "18") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "elementOfUnion" (formula "18") (term "0,0,0"))
   (rule "elementOfSingleton" (formula "18") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "elementOfUnion" (formula "18") (term "0,0,0,0"))
   (rule "elementOfSingleton" (formula "18") (term "0,0,0,0,0"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "elementOfSingleton" (formula "18") (term "0,0,0,0"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "selectOfAnonEQ" (formula "17") (term "0,0,1") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "21")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,1"))
   (rule "elementOfSingleton" (formula "17") (term "1,0,0,0,1"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,1"))
   (rule "elementOfSingleton" (formula "17") (term "1,0,0,0,1"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,1"))
   (rule "elementOfSingleton" (formula "17") (term "1,0,0,0,1"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "elementOfSingleton" (formula "17") (term "0,0,0,1"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "selectOfAnonEQ" (formula "15") (term "1") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "elementOfUnion" (formula "15") (term "0,0,1"))
   (rule "elementOfSingleton" (formula "15") (term "1,0,0,1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,1"))
   (rule "elementOfSingleton" (formula "15") (term "1,0,0,0,1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,1"))
   (rule "elementOfSingleton" (formula "15") (term "0,0,0,0,1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "elementOfSingleton" (formula "15") (term "0,0,0,1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "notLeft" (formula "18"))
   (builtin "Use Operation Contract" (formula "23") (newnames "heapBefore_unremove,exc_1,heapAfter_unremove,anon_heap_unremove") (contract "DoubleLinkedList[DoubleLinkedList::unremove(DoubleLinkedList.Node,int)].JML normal_behavior operation contract.0"))
   (branch "Post (unremove)"
      (builtin "One Step Simplification" (formula "21"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "24"))
      (rule "selectOfAnonEQ" (formula "25") (term "0,0,1") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "28")))
      (rule "elementOfUnion" (formula "25") (term "0,0,0,0,1"))
      (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,0,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "elementOfUnion" (formula "25") (term "0,0,0,0,1"))
      (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,0,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "elementOfUnion" (formula "25") (term "0,0,0,0,1"))
      (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,0,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "elementOfSingleton" (formula "25") (term "0,0,0,0,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "selectOfAnonEQ" (formula "24") (term "0,1") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "24") (term "0,0,1"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0,1"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "elementOfUnion" (formula "24") (term "0,0,1"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0,1"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "elementOfUnion" (formula "24") (term "0,0,1"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0,1"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "selectOfAnonEQ" (formula "23") (term "0,1,1,1") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "23") (term "0,0,1,1,1"))
      (rule "elementOfSingleton" (formula "23") (term "1,0,0,1,1,1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfUnion" (formula "23") (term "0,0,1,1,1"))
      (rule "elementOfSingleton" (formula "23") (term "1,0,0,1,1,1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfUnion" (formula "23") (term "0,0,1,1,1"))
      (rule "elementOfSingleton" (formula "23") (term "0,0,0,1,1,1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "selectOfAnonEQ" (formula "21") (term "0,1,0,1,0") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "29")) (ifInst ""  (formula "4")))
      (rule "elementOfUnion" (formula "21") (term "0,0,1,0,1,0"))
      (rule "elementOfSingleton" (formula "21") (term "1,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "elementOfUnion" (formula "21") (term "0,0,0,1,0,1,0"))
      (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "elementOfUnion" (formula "21") (term "0,0,0,1,0,1,0"))
      (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "elementOfSingleton" (formula "21") (term "0,0,0,1,0,1,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "selectOfAnonEQ" (formula "23") (term "2,1,1,1") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "23") (term "0,2,1,1,1"))
      (rule "elementOfSingleton" (formula "23") (term "1,0,2,1,1,1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfUnion" (formula "23") (term "0,2,1,1,1"))
      (rule "elementOfSingleton" (formula "23") (term "1,0,2,1,1,1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfUnion" (formula "23") (term "0,2,1,1,1"))
      (rule "elementOfSingleton" (formula "23") (term "0,0,2,1,1,1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfSingleton" (formula "23") (term "0,2,1,1,1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "selectOfAnonEQ" (formula "21") (term "0,1,1,0") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "29")) (ifInst ""  (formula "4")))
      (rule "elementOfUnion" (formula "21") (term "0,0,1,1,0"))
      (rule "elementOfSingleton" (formula "21") (term "1,0,0,1,1,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "elementOfUnion" (formula "21") (term "0,0,1,1,0"))
      (rule "elementOfSingleton" (formula "21") (term "1,0,0,1,1,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "elementOfUnion" (formula "21") (term "0,0,0,1,1,0"))
      (rule "elementOfSingleton" (formula "21") (term "0,0,0,0,1,1,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "elementOfSingleton" (formula "21") (term "0,0,0,1,1,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "selectOfAnonEQ" (formula "23") (term "0,0,1") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")) (ifInst ""  (formula "2")))
      (rule "elementOfUnion" (formula "23") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "23") (term "1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfUnion" (formula "23") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "23") (term "1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfUnion" (formula "23") (term "0,0,0,1"))
      (rule "elementOfSingleton" (formula "23") (term "1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfSingleton" (formula "23") (term "0,0,0,1"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "selectOfAnonEQ" (formula "23") (term "0") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")))
      (rule "elementOfUnion" (formula "23") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "23") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfUnion" (formula "23") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "23") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfUnion" (formula "23") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "23") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "elementOfSingleton" (formula "23") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "selectOfAnonEQ" (formula "24") (term "0") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "28")))
      (rule "elementOfUnion" (formula "24") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "elementOfUnion" (formula "24") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "elementOfUnion" (formula "24") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "24") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "methodCallEmpty" (formula "30") (term "1"))
      (rule "tryEmpty" (formula "30") (term "1"))
      (rule "emptyModality" (formula "30") (term "1"))
      (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "26")))
      (rule "selectOfAnonEQ" (formula "30") (term "1") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "28")))
      (rule "elementOfUnion" (formula "30") (term "0,0,1"))
      (rule "elementOfSingleton" (formula "30") (term "1,0,0,1"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfUnion" (formula "30") (term "0,0,1"))
      (rule "elementOfSingleton" (formula "30") (term "1,0,0,1"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfUnion" (formula "30") (term "0,0,1"))
      (rule "elementOfSingleton" (formula "30") (term "0,0,0,1"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "applyEq" (formula "30") (term "1") (ifseqformula "23") (userinteraction))
      (rule "eqSeqConcat" (formula "30") (userinteraction))
      (rule "lenOfSeqConcat" (formula "30") (term "1,1,0,0") (userinteraction))
      (rule "defOfSeqSingleton" (formula "30") (term "0,0,1,1,0,0") (inst "uSub=uSub") (userinteraction))
      (rule "lenOfSeqDef" (formula "30") (term "0,1,1,0,0") (userinteraction))
      (rule "less_literals" (formula "30") (term "0,0,1,1,0,0") (userinteraction))
      (rule "sub_literals" (formula "30") (term "1,0,1,1,0,0") (userinteraction))
      (rule "lenOfSeqSub" (formula "30") (term "1,1,1,0,0") (userinteraction))
      (rule "sub" (formula "30") (term "1,1,1,1,0,0") (userinteraction))
      (rule "applyEq" (formula "30") (term "1,0,1,1,1,0,0") (ifseqformula "14") (userinteraction))
      (rule "replace_known_left" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "7") (userinteraction))
      (builtin "One Step Simplification" (formula "30"))
      (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "14") (userinteraction))
      (rule "translateJavaSubInt" (formula "30") (term "0,1,1,1,0,0") (userinteraction))
      (rule "sub" (formula "30") (term "0,1,1,1,0,0") (userinteraction))
      (rule "neg_literal" (formula "30") (term "1,0,1,1,1,0,0") (userinteraction))
      (rule "polySimp_addComm0" (formula "30") (term "0,1,1,1,0,0") (userinteraction))
      (rule "polySimp_addAssoc" (formula "30") (term "1,1,0,0") (userinteraction))
      (rule "polySimp_addAssoc" (formula "30") (term "0,1,1,0,0") (userinteraction))
      (rule "add_literals" (formula "30") (term "0,0,1,1,0,0") (userinteraction))
      (rule "add_zero_left" (formula "30") (term "0,1,1,0,0") (userinteraction))
      (rule "lenOfSeqSub" (formula "30") (term "0,1,0,0") (userinteraction))
      (rule "sub_zero_2" (formula "30") (term "1,0,1,0,0") (userinteraction))
      (rule "replace_known_left" (formula "30") (term "0,0,1,0,0") (ifseqformula "6") (userinteraction))
      (builtin "One Step Simplification" (formula "30"))
      (rule "rotate_params" (formula "30") (term "1,0,0") (userinteraction))
      (rule "add_sub_elim_right" (formula "30") (term "1,1,0,0") (userinteraction))
      (rule "add_zero_right" (formula "30") (term "1,0,0") (userinteraction))
      (rule "Partial_inv_axiom_for_JML_class_invariant_nr_6_in_DoubleLinkedList" (formula "9") (userinteraction))
      (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "9") (userinteraction))
      (builtin "One Step Simplification" (formula "31"))
      (rule "lenOfSeqSub" (formula "31") (term "2,0,0") (userinteraction))
      (rule "replace_known_left" (formula "31") (term "0,2,0,0") (ifseqformula "6") (userinteraction))
      (rule "sub_zero_2" (formula "31") (term "1,2,0,0") (userinteraction))
      (builtin "One Step Simplification" (formula "31"))
      (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "14") (userinteraction))
      (rule "translateJavaAddInt" (formula "31") (term "1,1,0,1,0") (userinteraction))
      (rule "subSeqConcat" (formula "31") (term "1,0") (userinteraction))
      (rule "lenOfSeqSub" (formula "31") (term "1,2,0,1,0") (userinteraction))
      (rule "replace_known_left" (formula "31") (term "0,1,2,0,1,0") (ifseqformula "6") (userinteraction))
      (rule "sub_zero_2" (formula "31") (term "1,1,2,0,1,0") (userinteraction))
      (rule "sub" (formula "31") (term "2,1,1,1,0") (userinteraction))
      (rule "add_zero_left" (formula "31") (term "2,1,1,1,0") (userinteraction))
      (rule "lenOfSeqSub" (formula "31") (term "0,2,1,1,1,0") (userinteraction))
      (rule "replace_known_left" (formula "31") (term "0,0,2,1,1,1,0") (ifseqformula "6") (userinteraction))
      (rule "sub_zero_2" (formula "31") (term "1,0,2,1,1,1,0") (userinteraction))
      (rule "sub" (formula "31") (term "2,1,1,0") (userinteraction))
      (rule "lenOfSeqSub" (formula "31") (term "0,1,2,1,1,0") (userinteraction))
      (rule "replace_known_left" (formula "31") (term "0,0,1,2,1,1,0") (ifseqformula "6") (userinteraction))
      (rule "sub_zero_2" (formula "31") (term "1,0,1,2,1,1,0") (userinteraction))
      (builtin "One Step Simplification" (formula "31"))
      (rule "add_sub_elim_right" (formula "31") (term "2,1,1,0") (userinteraction))
      (rule "lenOfSeqSub" (formula "31") (term "1,0,1,1,1,0") (userinteraction))
      (rule "replace_known_left" (formula "31") (term "0,1,0,1,1,1,0") (ifseqformula "6") (userinteraction))
      (rule "sub_zero_2" (formula "31") (term "1,1,0,1,1,1,0") (userinteraction))
      (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "6")))
      (rule "equalityToSeqGetAndSeqLen" (formula "31") (term "0") (inst "iv=iv") (userinteraction))
      (rule "lenOfSeqSub" (formula "31") (term "0,0,0") (userinteraction))
      (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "6") (userinteraction))
      (rule "sub_zero_2" (formula "31") (term "1,0,0,0") (userinteraction))
      (rule "lenOfSeqSub" (formula "31") (term "1,0,0") (userinteraction))
      (rule "replace_known_left" (formula "31") (term "0,1,0,0") (ifseqformula "6") (userinteraction))
      (rule "sub_zero_2" (formula "31") (term "1,1,0,0") (userinteraction))
      (builtin "One Step Simplification" (formula "31"))
      (rule "lenOfSeqSub" (formula "31") (term "1,1,0,0,0") (userinteraction))
      (rule "replace_known_left" (formula "31") (term "0,1,1,0,0,0") (ifseqformula "6") (userinteraction))
      (rule "sub_zero_2" (formula "31") (term "1,1,1,0,0,0") (userinteraction))
      (builtin "One Step Simplification" (formula "31"))
      (rule "applyEq" (formula "31") (term "0,0,1,0,1") (ifseqformula "14") (userinteraction))
      (rule "translateJavaAddInt" (formula "31") (term "1,1,0,0,1,0,1") (userinteraction))
      (rule "lenOfSeqSub" (formula "31") (term "1,0,1") (userinteraction))
      (rule "replace_known_left" (formula "31") (term "0,1,0,1") (ifseqformula "6") (userinteraction))
      (rule "sub_zero_2" (formula "31") (term "1,1,0,1") (userinteraction))
      (rule "applyEq" (formula "31") (term "2,0,1") (ifseqformula "9") (userinteraction))
      (builtin "One Step Simplification" (formula "31"))
      (rule "applyEq" (formula "31") (term "0,1,1,1") (ifseqformula "14") (userinteraction))
      (rule "translateJavaAddInt" (formula "31") (term "1,1,0,1,1,1") (userinteraction))
      (rule "applyEq" (formula "31") (term "2,1,1,1") (ifseqformula "15") (userinteraction))
      (rule "translateJavaSubInt" (formula "31") (term "2,1,1,1") (userinteraction))
      (rule "sub" (formula "31") (term "2,1,1,1") (userinteraction))
      (rule "neg_literal" (formula "31") (term "1,2,1,1,1") (userinteraction))
      (rule "eqSeqConcat" (formula "31") (term "1") (userinteraction))
      (rule "defOfSeqSingleton" (formula "31") (term "0,0,1,0,0,1") (inst "uSub=uSub") (userinteraction))
      (rule "lenOfSeqDef" (formula "31") (term "0,1,0,0,1") (userinteraction))
      (rule "less_literals" (formula "31") (term "0,0,1,0,0,1") (userinteraction))
      (rule "sub_literals" (formula "31") (term "1,0,1,0,0,1") (userinteraction))
      (rule "lenOfSeqSub" (formula "31") (term "1,1,0,0,1") (userinteraction))
      (rule "translateJavaSubInt" (formula "7") (term "1") (userinteraction))
      (rule "sub" (formula "7") (term "1") (userinteraction))
      (rule "neg_literal" (formula "7") (term "1,1") (userinteraction))
      (rule "replace_known_left" (formula "31") (term "0,1,1,0,0,1") (ifseqformula "7") (userinteraction))
      (rule "sub" (formula "31") (term "1,1,1,0,0,1") (userinteraction))
      (builtin "One Step Simplification" (formula "31"))
      (rule "rotate_params" (formula "31") (term "1,0,0,1") (userinteraction))
      (rule "polySimp_addAssoc" (formula "31") (term "1,0,0,1") (userinteraction))
      (rule "polySimp_addLiterals" (formula "31") (term "0,1,0,0,1") (userinteraction))
      (rule "add_zero_right" (formula "31") (term "0,1,0,0,1") (userinteraction))
      (rule "lenOfSeqSub" (formula "31") (term "0,0,0,1") (userinteraction))
      (rule "sub" (formula "31") (term "1,0,0,0,1") (userinteraction))
      (rule "cut_direct" (formula "31") (term "0,0,0,0,1") (userinteraction))
      (branch "CUT: k < self.len TRUE"
         (builtin "One Step Simplification" (formula "32"))
         (rule "eqSeqSingleton" (formula "32") (term "0,1") (userinteraction))
         (rule "lenOfSeqSub" (formula "32") (term "0,0,0,1") (userinteraction))
         (rule "sub_literals" (formula "32") (term "1,0,0,0,1") (userinteraction))
         (rule "less_literals" (formula "32") (term "0,0,0,0,1") (userinteraction))
         (builtin "One Step Simplification" (formula "32"))
         (rule "getOfSeqSub" (formula "32") (term "0,0,1") (userinteraction))
         (rule "sub_literals" (formula "32") (term "1,1,0,0,0,1") (userinteraction))
         (rule "leq_literals" (formula "32") (term "0,0,0,0,1") (userinteraction))
         (rule "less_literals" (formula "32") (term "1,0,0,0,1") (userinteraction))
         (builtin "One Step Simplification" (formula "32"))
         (rule "add_zero_right" (formula "32") (term "1,0,0,1") (userinteraction))
         (rule "getOfSeqSub" (formula "32") (term "0,0,1") (userinteraction))
         (rule "sub" (formula "32") (term "1,1,0,0,0,1") (userinteraction))
         (rule "leq_literals" (formula "32") (term "0,0,0,0,1") (userinteraction))
         (rule "add_zero_left" (formula "32") (term "1,1,0,0,1") (userinteraction))
         (rule "castDel" (formula "32") (term "2,0,0,1") (userinteraction))
         (builtin "One Step Simplification" (formula "32"))
         (rule "add_less" (formula "32") (term "0,0,0,1") (inst "i1=k") (userinteraction))
         (rule "rotate_params" (formula "32") (term "1,0,0,0,1") (userinteraction))
         (rule "add_sub_elim_right" (formula "32") (term "1,1,0,0,0,1") (userinteraction))
         (rule "add_zero_right" (formula "32") (term "1,0,0,0,1") (userinteraction))
         (rule "add_zero_right" (formula "32") (term "0,0,0,0,1") (userinteraction))
         (rule "replace_known_left" (formula "32") (term "0,0,0,1") (ifseqformula "1") (userinteraction))
         (builtin "One Step Simplification" (formula "32"))
         (rule "lenOfSeqSub" (formula "32") (term "2,0,1,1") (userinteraction))
         (rule "replace_known_left" (formula "32") (term "0,2,0,1,1") (ifseqformula "1") (userinteraction))
         (rule "sub" (formula "32") (term "1,2,0,1,1") (userinteraction))
         (builtin "One Step Simplification" (formula "32"))
         (rule "equalityToSeqGetAndSeqLen" (formula "32") (term "1,1") (inst "iv=iv") (userinteraction))
         (rule "lenOfSeqSub" (formula "32") (term "0,0,1,1") (userinteraction))
         (rule "sub" (formula "32") (term "1,0,0,1,1") (userinteraction))
         (rule "neg_literal" (formula "32") (term "1,1,0,0,1,1") (userinteraction))
         (rule "lenOfSeqSub" (formula "32") (term "1,0,1,1") (userinteraction))
         (rule "sub" (formula "32") (term "1,1,0,1,1") (userinteraction))
         (rule "add_less" (formula "32") (term "0,0,0,1,1") (inst "i1=k") (userinteraction))
         (rule "rotate_params" (formula "32") (term "1,0,0,0,1,1") (userinteraction))
         (rule "add_sub_elim_right" (formula "32") (term "1,1,0,0,0,1,1") (userinteraction))
         (rule "add_zero_right" (formula "32") (term "1,0,0,0,1,1") (userinteraction))
         (rule "replace_known_left" (formula "32") (term "0,1,0,1,1") (ifseqformula "8") (userinteraction))
         (rule "add_less" (formula "32") (term "0,0,0,1,1") (inst "i1=Z(neglit(1(#)))") (userinteraction))
         (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,1,1") (userinteraction))
         (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,0,1,1") (userinteraction))
         (rule "polySimp_addLiterals" (formula "32") (term "0,0,0,0,1,1") (userinteraction))
         (rule "add_zero_right" (formula "32") (term "0,0,0,0,1,1") (userinteraction))
         (rule "polySimp_addComm0" (formula "32") (term "1,0,0,0,1,1") (userinteraction))
         (rule "replace_known_left" (formula "32") (term "0,0,0,1,1") (ifseqformula "8") (userinteraction))
         (builtin "One Step Simplification" (formula "32"))
         (rule "polySimp_addComm1" (formula "32") (term "1,0,1,1") (userinteraction))
         (rule "add_eq_back_2" (formula "32") (term "0,1,1") (userinteraction))
         (rule "add_eq_back_2" (formula "32") (term "0,1,1") (userinteraction))
         (builtin "One Step Simplification" (formula "32"))
         (rule "lenOfSeqSub" (formula "32") (term "1,1,0,0,1,1") (userinteraction))
         (rule "add_less" (formula "32") (term "0,1,1,0,0,1,1") (inst "i1=Z(neglit(1(#)))") (userinteraction))
         (rule "add_literals" (formula "32") (term "0,0,1,1,0,0,1,1") (userinteraction))
         (rule "add_less" (formula "32") (term "0,1,1,0,0,1,1") (inst "i1=k") (userinteraction))
         (rule "rotate_params" (formula "32") (term "1,0,1,1,0,0,1,1") (userinteraction))
         (rule "add_zero_right" (formula "32") (term "0,0,1,1,0,0,1,1") (userinteraction))
         (rule "rotate_params" (formula "32") (term "1,1,0,1,1,0,0,1,1") (userinteraction))
         (rule "add_sub_elim_right" (formula "32") (term "1,1,1,0,1,1,0,0,1,1") (userinteraction))
         (rule "add_zero_right" (formula "32") (term "1,1,0,1,1,0,0,1,1") (userinteraction))
         (rule "polySimp_addComm0" (formula "32") (term "1,0,1,1,0,0,1,1") (userinteraction))
         (rule "replace_known_left" (formula "32") (term "0,1,1,0,0,1,1") (ifseqformula "8") (userinteraction))
         (builtin "One Step Simplification" (formula "32"))
         (rule "sub" (formula "32") (term "1,1,0,0,1,1") (userinteraction))
         (rule "neg_literal" (formula "32") (term "1,1,1,0,0,1,1") (userinteraction))
         (rule "shift_paren_and" (formula "32") (userinteraction))
         (rule "getOfSeqSub" (formula "32") (term "0,1,0,0,0") (userinteraction))
         (rule "getOfSeqSub" (formula "32") (term "1,1,0,0,0") (userinteraction))
         (rule "castDel" (formula "32") (term "2,0,1,0,0,0") (userinteraction))
         (rule "add_zero_right" (formula "32") (term "1,1,0,1,0,0,0") (userinteraction))
         (rule "sub_zero_2" (formula "32") (term "1,1,0,0,1,0,0,0") (userinteraction))
         (rule "sub_zero_2" (formula "32") (term "1,1,0,1,1,0,0,0") (userinteraction))
         (rule "add_zero_right" (formula "32") (term "1,1,1,1,0,0,0") (userinteraction))
         (rule "castDel" (formula "32") (term "2,1,1,0,0,0") (userinteraction))
         (rule "andRight" (formula "32") (userinteraction))
         (branch "Case 1"
            (rule "andRight" (formula "32") (userinteraction))
            (branch "Case 1"
               (rule "allRight" (formula "32") (inst "sk=iv_0"))
               (rule "impRight" (formula "32"))
               (rule "andLeft" (formula "1"))
               (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "1") (userinteraction))
               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
               (rule "getOfSeqSub" (formula "34") (term "1") (userinteraction))
               (rule "replace_known_left" (formula "34") (term "0,0,1") (ifseqformula "1") (userinteraction))
               (rule "sub_zero_2" (formula "34") (term "1,1,0,1") (userinteraction))
               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "2")))
               (rule "add_zero_right" (formula "34") (term "1,1") (userinteraction))
               (builtin "One Step Simplification" (formula "34"))
               (rule "closeTrue" (formula "34") (userinteraction))
            )
            (branch "Case 2"
               (rule "castedGetAny" (formula "27") (term "1") (userinteraction))
               (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "25") (userinteraction))
               (rule "applyEq" (formula "27") (term "2,1,1,0,1") (ifseqformula "16") (userinteraction))
               (rule "translateJavaSubInt" (formula "27") (term "2,1,1,0,1") (userinteraction))
               (rule "sub" (formula "27") (term "2,1,1,0,1") (userinteraction))
               (rule "neg_literal" (formula "27") (term "1,2,1,1,0,1") (userinteraction))
               (rule "applyEq" (formula "27") (term "0,1,1,0,1") (ifseqformula "15") (userinteraction))
               (rule "translateJavaAddInt" (formula "27") (term "1,1,0,1,1,0,1") (userinteraction))
               (rule "applyEq" (formula "27") (term "0,0,0,1") (ifseqformula "15") (userinteraction))
               (rule "translateJavaAddInt" (formula "27") (term "1,1,0,0,0,1") (userinteraction))
               (rule "getOfSeqConcat" (formula "27") (term "1") (userinteraction))
               (rule "lenOfSeqSub" (formula "27") (term "1,0,1") (userinteraction))
               (rule "sub_zero_2" (formula "27") (term "1,1,0,1") (userinteraction))
               (rule "replace_known_left" (formula "27") (term "0,1,0,1") (ifseqformula "7") (userinteraction))
               (builtin "One Step Simplification" (formula "27"))
               (rule "less_base" (formula "27") (term "0,1") (userinteraction))
               (builtin "One Step Simplification" (formula "27"))
               (rule "getOfSeqConcat" (formula "27") (term "1") (userinteraction))
               (rule "lenOfSeqSub" (formula "27") (term "1,0,0,1") (userinteraction))
               (rule "defOfSeqSingleton" (formula "27") (term "0,1,0,1") (inst "uSub=uSub") (userinteraction))
               (rule "lenOfSeqDef" (formula "27") (term "1,0,1") (userinteraction))
               (rule "sub_literals" (formula "27") (term "1,1,0,1") (userinteraction))
               (rule "less_literals" (formula "27") (term "0,1,0,1") (userinteraction))
               (rule "sub_zero_2" (formula "27") (term "1,1,0,0,1") (userinteraction))
               (rule "replace_known_left" (formula "27") (term "0,1,0,0,1") (ifseqformula "7") (userinteraction))
               (builtin "One Step Simplification" (formula "27"))
               (rule "sub" (formula "27") (term "0,0,1") (userinteraction))
               (rule "add_sub_elim_right" (formula "27") (term "0,0,1") (userinteraction))
               (rule "less_literals" (formula "27") (term "0,1") (userinteraction))
               (builtin "One Step Simplification" (formula "27"))
               (rule "getOfSeqSingleton" (formula "27") (term "1") (userinteraction))
               (rule "lenOfSeqSub" (formula "27") (term "1,0,0,1") (userinteraction))
               (rule "replace_known_left" (formula "27") (term "0,1,0,0,1") (ifseqformula "7") (userinteraction))
               (rule "sub_zero_2" (formula "27") (term "1,1,0,0,1") (userinteraction))
               (builtin "One Step Simplification" (formula "27"))
               (rule "sub" (formula "27") (term "0,0,1") (userinteraction))
               (rule "add_sub_elim_right" (formula "27") (term "0,0,1") (userinteraction))
               (rule "equal_literals" (formula "27") (term "0,1") (userinteraction))
               (builtin "One Step Simplification" (formula "27"))
               (rule "castDel2" (formula "27") (term "1") (ifseqformula "9") (userinteraction))
               (rule "castedGetAny" (formula "27") (term "1") (userinteraction))
               (rule "eqSymm" (formula "32") (userinteraction))
               (rule "applyEq" (formula "32") (term "0") (ifseqformula "27") (userinteraction))
               (rule "eqSymm" (formula "32") (userinteraction))
               (rule "Class_invariant_axiom_for_DoubleLinkedList" (formula "11") (inst "j=j") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "i_5=i_5") (userinteraction))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (builtin "One Step Simplification" (formula "22"))
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "20"))
               (builtin "One Step Simplification" (formula "17"))
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "15"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "instAll" (formula "43") (term "1,0") (ifseqformula "17") (userinteraction))
               (rule "leq_to_gt_alt" (formula "1") (term "0,0") (userinteraction))
               (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "8") (userinteraction))
               (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "2") (userinteraction))
               (builtin "One Step Simplification" (formula "1"))
               (rule "andLeft" (formula "1") (userinteraction))
               (rule "notLeft" (formula "1") (userinteraction))
               (rule "castAdd" (formula "45") (term "0") (ifseqformula "1") (userinteraction))
               (rule "castedGetAny" (formula "45") (term "0") (userinteraction))
               (builtin "One Step Simplification" (formula "45"))
               (rule "closeTrue" (formula "45") (userinteraction))
            )
         )
         (branch "Case 2"
            (rule "allRight" (formula "32") (inst "sk=iv_1"))
            (rule "impRight" (formula "32"))
            (rule "andLeft" (formula "1"))
            (rule "getOfSeqSub" (formula "34") (term "1") (userinteraction))
            (rule "getOfSeqSub" (formula "34") (term "0") (userinteraction))
            (rule "castDel" (formula "34") (term "2,0") (userinteraction))
            (rule "castDel" (formula "34") (term "2,1") (userinteraction))
            (rule "sub" (formula "34") (term "1,1,0,1") (userinteraction))
            (rule "sub" (formula "34") (term "1,1,0,0") (userinteraction))
            (rule "neg_literal" (formula "34") (term "1,1,1,0,0") (userinteraction))
            (rule "polySimp_addComm1" (formula "34") (term "1,1,0,0") (userinteraction))
            (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "1") (userinteraction))
            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "1")))
            (rule "polySimp_addComm1" (formula "34") (term "1,0,0") (userinteraction))
            (rule "polySimp_addComm1" (formula "34") (term "1,0,1") (userinteraction))
            (rule "replace_known_left" (formula "34") (term "0,1") (ifseqformula "2") (userinteraction))
            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "2")))
            (rule "getOfSeqConcat" (formula "34") (term "1") (userinteraction))
            (rule "lenOfSeqSub" (formula "34") (term "1,0,1") (userinteraction))
            (rule "replace_known_left" (formula "34") (term "0,1,0,1") (ifseqformula "9") (userinteraction))
            (rule "sub_zero_2" (formula "34") (term "1,1,0,1") (userinteraction))
            (builtin "One Step Simplification" (formula "34"))
            (rule "add_less_back_zero_2_comm" (formula "34") (term "0,1") (userinteraction))
            (rule "less_neg" (formula "34") (term "0,1") (userinteraction))
            (rule "le1_add1_eq_le" (formula "34") (term "0,0,1") (userinteraction))
            (rule "replace_known_left" (formula "34") (term "0,0,1") (ifseqformula "1") (userinteraction))
            (builtin "One Step Simplification" (formula "34"))
            (rule "lenOfSeqSub" (formula "34") (term "1,1,1") (userinteraction))
            (rule "replace_known_left" (formula "34") (term "0,1,1,1") (ifseqformula "9") (userinteraction))
            (rule "sub_zero_2" (formula "34") (term "1,1,1,1") (userinteraction))
            (builtin "One Step Simplification" (formula "34"))
            (rule "sub" (formula "34") (term "1,1") (userinteraction))
            (rule "switch_brackets" (formula "34") (term "1,1") (userinteraction))
            (rule "add_sub_elim_right" (formula "34") (term "1,1,1") (userinteraction))
            (rule "add_zero_right" (formula "34") (term "1,1") (userinteraction))
            (rule "getOfSeqSub" (formula "34") (term "0") (userinteraction))
            (rule "getOfSeqSub" (formula "34") (term "1") (userinteraction))
            (rule "polySimp_addComm0" (formula "34") (term "1,1,1,1") (userinteraction))
            (rule "polySimp_addAssoc" (formula "34") (term "1,1,1") (userinteraction))
            (rule "sub" (formula "34") (term "1,1,0,0") (userinteraction))
            (rule "sub" (formula "34") (term "1,1,0,1") (userinteraction))
            (rule "minus_distribute_1" (formula "34") (term "1,1,1,0,1") (userinteraction))
            (rule "neg_literal" (formula "34") (term "1,1,1,1,0,1") (userinteraction))
            (rule "polySimp_addAssoc" (formula "34") (term "1,1,0,1") (userinteraction))
            (rule "replace_known_left" (formula "34") (term "0,0,1") (ifseqformula "1") (userinteraction))
            (rule "leq_to_gt_alt" (formula "34") (term "0,0,0") (userinteraction))
            (rule "le1_add1_eq_le" (formula "34") (term "0,0,0,0") (userinteraction))
            (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "1") (userinteraction))
            (rule "replace_known_left" (formula "34") (term "1,0,1") (ifseqformula "2") (userinteraction))
            (rule "add_less" (formula "34") (term "1,0,0") (inst "i1=Z(neglit(1(#)))") (userinteraction))
            (rule "polySimp_addComm0" (formula "34") (term "1,0,1,0,0") (userinteraction))
            (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0") (userinteraction))
            (rule "add_literals" (formula "34") (term "0,0,1,0,0") (userinteraction))
            (rule "add_zero_left" (formula "34") (term "0,1,0,0") (userinteraction))
            (rule "rotate_params" (formula "34") (term "1,1,0,0") (userinteraction))
            (rule "polySimp_addComm0" (formula "34") (term "1,1,1,0,0") (userinteraction))
            (rule "polySimp_addAssoc" (formula "34") (term "1,1,0,0") (userinteraction))
            (rule "replace_known_left" (formula "34") (term "1,0,0") (ifseqformula "2") (userinteraction))
            (builtin "One Step Simplification" (formula "34"))
            (rule "closeTrue" (formula "34") (userinteraction))
         )
      )
      (branch "CUT: k < self.len FALSE"
         (rule "less_add_one" (formula "7") (userinteraction))
         (rule "polySimp_addLiterals" (formula "7") (term "1") (userinteraction))
         (rule "add_zero_right" (formula "7") (term "1") (userinteraction))
         (rule "less_neg" (formula "7") (userinteraction))
         (rule "le1_add1_eq_le" (formula "7") (term "0") (userinteraction))
         (rule "leq_to_gt" (formula "7") (term "0") (userinteraction))
         (rule "gt_to_lt" (formula "7") (term "0,0") (userinteraction))
         (builtin "One Step Simplification" (formula "7"))
         (rule "less_neg" (formula "7") (userinteraction))
         (rule "le1_add1_eq_le" (formula "7") (term "0") (userinteraction))
         (rule "leq_to_gt_alt" (formula "7") (term "0") (userinteraction))
         (rule "le1_add1_eq_le" (formula "7") (term "0,0") (userinteraction))
         (rule "leq_to_gt" (formula "7") (term "0,0") (userinteraction))
         (rule "gt_to_lt" (formula "7") (term "0,0,0") (userinteraction))
         (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "31") (userinteraction))
         (builtin "One Step Simplification" (formula "7"))
         (rule "closeFalse" (formula "7") (userinteraction))
      )
   )
   (branch "Exceptional Post (unremove)"
      (builtin "One Step Simplification" (formula "21"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "translateJavaAddInt" (formula "13") (term "1,1,1"))
      (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
      (rule "translateJavaSubInt" (formula "7") (term "1"))
      (rule "translateJavaSubInt" (formula "14") (term "1"))
      (rule "translateJavaAddInt" (formula "21") (term "1,0,1,0,0,1,1"))
      (rule "andLeft" (formula "21"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,0") (ifseqformula "21"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1,0") (ifseqformula "11"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "24"))
      (rule "notLeft" (formula "22"))
      (rule "close" (formula "26") (ifseqformula "25"))
   )
   (branch "Pre (unremove)"
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "6")) (ifInst ""  (formula "19")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,1") (ifseqformula "11"))
      (rule "wellFormedAnonEQ" (formula "23") (term "0,1") (ifseqformula "11"))
      (rule "translateJavaSubInt" (formula "14") (term "1"))
      (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
      (rule "translateJavaSubInt" (formula "7") (term "1"))
      (rule "translateJavaAddInt" (formula "13") (term "1,1,1"))
      (rule "translateJavaSubInt" (formula "23") (term "1,0,1,0,1,1,1,0"))
      (rule "eqSymm" (formula "17") (term "0,0"))
      (rule "eqSymm" (formula "16") (term "0,0"))
      (rule "eqSymm" (formula "18") (term "0,1,0"))
      (rule "eqSymm" (formula "20") (term "0,0"))
      (rule "eqSymm" (formula "15") (term "0,0"))
      (rule "eqSymm" (formula "23") (term "0,1,1,0"))
      (rule "eqSymm" (formula "23") (term "0,1,0,1,1,1,1,1,0"))
      (rule "eqSymm" (formula "23") (term "0,1,0"))
      (rule "eqSymm" (formula "13"))
      (rule "eqSymm" (formula "23") (term "0,1,1,1,0"))
      (rule "eqSymm" (formula "15"))
      (rule "replace_known_left" (formula "23") (term "0,1,1") (ifseqformula "4"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "1")) (ifInst ""  (formula "10")))
      (rule "polySimp_elimSub" (formula "14") (term "1"))
      (rule "mul_literals" (formula "14") (term "1,1"))
      (rule "polySimp_elimSub" (formula "17") (term "1,0,1"))
      (rule "mul_literals" (formula "17") (term "1,1,0,1"))
      (rule "polySimp_elimSub" (formula "7") (term "1"))
      (rule "mul_literals" (formula "7") (term "1,1"))
      (rule "polySimp_elimSub" (formula "23") (term "1,0,0,0,1,1,1"))
      (rule "mul_literals" (formula "23") (term "1,1,0,0,0,1,1,1"))
      (rule "polySimp_addComm0" (formula "13") (term "1,1,0"))
      (rule "polySimp_addComm0" (formula "14") (term "1"))
      (rule "polySimp_addComm0" (formula "17") (term "1,0,1"))
      (rule "polySimp_addComm0" (formula "7") (term "1"))
      (rule "polySimp_addComm0" (formula "23") (term "1,0,0,0,1,1,1"))
      (rule "castedGetAny" (formula "8") (term "0"))
      (rule "castedGetAny" (formula "16") (term "1"))
      (rule "castedGetAny" (formula "18") (term "0,0,1,0"))
      (rule "ifEqualsNull" (formula "20"))
      (rule "orRight" (formula "20"))
      (rule "castedGetAny" (formula "15") (term "1,2,0"))
      (rule "castedGetAny" (formula "15") (term "0,0,0,0"))
      (rule "castedGetAny" (formula "15") (term "1,0,0,1,1,0,0"))
      (rule "castedGetAny" (formula "15") (term "1,1,0"))
      (rule "castedGetAny" (formula "15") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "6"))
      (rule "add_zero_right" (formula "6") (term "0"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
      (rule "castedGetAny" (formula "24") (term "1,0,0,1"))
      (rule "castedGetAny" (formula "24") (term "0,0,1,1"))
      (rule "castedGetAny" (formula "24") (term "0,0,1,0,1,1,1,1,1"))
      (rule "castedGetAny" (formula "17") (term "1"))
      (rule "castedGetAny" (formula "24") (term "0,0,1,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,1,1,1,1"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,1,1,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "0"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
      (rule "polySimp_addComm1" (formula "24") (term "0,0"))
      (rule "inEqSimp_ltToLeq" (formula "7"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,1,1,1,1"))
      (rule "applyEq" (formula "15") (term "1") (ifseqformula "17"))
      (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "6"))
      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
      (rule "polySimp_elimOne" (formula "6") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,1,1,1,1"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,1,1,1,1"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,1,1,1,1"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,1,1,1,1"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,1,1,1"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,1,1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0"))
      (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
      (rule "polySimp_elimOne" (formula "24") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
      (rule "getOfSeqConcatEQ" (formula "16") (term "1") (ifseqformula "13"))
      (rule "eqSymm" (formula "16"))
      (rule "polySimp_elimSub" (formula "16") (term "1,2,0"))
      (rule "lenOfSeqSub" (formula "16") (term "1,0,0"))
      (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
      (rule "times_zero_2" (formula "16") (term "1,1,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "1,1,0,0"))
      (rule "lenOfSeqSub" (formula "16") (term "0,1,1,2,0"))
      (rule "polySimp_elimSub" (formula "16") (term "1,0,1,1,2,0"))
      (rule "times_zero_2" (formula "16") (term "1,1,0,1,1,2,0"))
      (rule "add_zero_right" (formula "16") (term "1,0,1,1,2,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,1,2,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,1,2,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,1,2,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,1,2,0"))
      (rule "replace_known_left" (formula "16") (term "0,0,1,1,2,0") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_pullOutFactor1" (formula "16") (term "1,2,0"))
      (rule "add_literals" (formula "16") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "16") (term "1,2,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0,0,0"))
      (rule "replace_known_left" (formula "16") (term "0,0,1,0,0,0") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
      (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0"))
      (rule "leq_literals" (formula "16") (term "0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "eqSymm" (formula "16"))
      (rule "getOfSeqConcatEQ" (formula "18") (term "0,0,1,0") (ifseqformula "13"))
      (rule "polySimp_elimSub" (formula "18") (term "1,2,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "18") (term "1,2,0,0,1,0"))
      (rule "lenOfSeqSub" (formula "18") (term "1,0,0,0,1,0"))
      (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0,0,1,0"))
      (rule "times_zero_2" (formula "18") (term "1,1,1,0,0,0,1,0"))
      (rule "add_zero_right" (formula "18") (term "1,1,0,0,0,1,0"))
      (rule "lenOfSeqSub" (formula "18") (term "0,0,1,2,0,0,1,0"))
      (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,2,0,0,1,0"))
      (rule "times_zero_2" (formula "18") (term "1,1,0,0,1,2,0,0,1,0"))
      (rule "add_zero_right" (formula "18") (term "1,0,0,1,2,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,0,0,1,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,1,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,2,0,0,1,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0,0,1,2,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,2,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0,1,2,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,2,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,1,2,0,0,1,0"))
      (rule "replace_known_left" (formula "18") (term "0,0,0,1,2,0,0,1,0") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0,0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0,0,0,0,0,1,0"))
      (rule "replace_known_left" (formula "18") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1,0"))
      (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
      (rule "getOfSeqConcatEQ" (formula "15") (term "1,2,0") (ifseqformula "13"))
      (rule "polySimp_elimSub" (formula "15") (term "1,2,1,2,0"))
      (rule "lenOfSeqSub" (formula "15") (term "1,0,1,2,0"))
      (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,2,0"))
      (rule "mul_literals" (formula "15") (term "1,1,1,0,1,2,0"))
      (rule "add_zero_right" (formula "15") (term "1,1,0,1,2,0"))
      (rule "lenOfSeqSub" (formula "15") (term "0,1,1,2,1,2,0"))
      (rule "polySimp_elimSub" (formula "15") (term "1,0,1,1,2,1,2,0"))
      (rule "times_zero_2" (formula "15") (term "1,1,0,1,1,2,1,2,0"))
      (rule "add_zero_right" (formula "15") (term "1,0,1,1,2,1,2,0"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,2,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,1,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,2,0"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1,1,2,1,2,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,0,1,1,2,1,2,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,1,2,1,2,0"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,1,2,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,1,1,2,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,1,2,1,2,0"))
      (rule "polySimp_elimOne" (formula "15") (term "0,0,0,1,1,2,1,2,0"))
      (rule "replace_known_left" (formula "15") (term "0,0,1,1,2,1,2,0") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_pullOutFactor1" (formula "15") (term "1,2,1,2,0"))
      (rule "add_literals" (formula "15") (term "1,1,2,1,2,0"))
      (rule "times_zero_1" (formula "15") (term "1,2,1,2,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,1,0,0,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,0,0,1,2,0"))
      (rule "polySimp_elimOne" (formula "15") (term "0,0,0,1,0,0,1,2,0"))
      (rule "replace_known_left" (formula "15") (term "0,0,1,0,0,1,2,0") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,2,0"))
      (rule "add_literals" (formula "15") (term "1,1,0,0,1,2,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,1,2,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,1,2,0"))
      (rule "leq_literals" (formula "15") (term "0,1,2,0"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "getOfSeqConcatEQ" (formula "17") (term "1") (ifseqformula "13"))
      (rule "eqSymm" (formula "17"))
      (rule "polySimp_elimSub" (formula "17") (term "1,2,0"))
      (rule "lenOfSeqSub" (formula "17") (term "1,0,0"))
      (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
      (rule "times_zero_2" (formula "17") (term "1,1,1,0,0"))
      (rule "add_zero_right" (formula "17") (term "1,1,0,0"))
      (rule "lenOfSeqSub" (formula "17") (term "0,1,1,2,0"))
      (rule "polySimp_elimSub" (formula "17") (term "1,0,1,1,2,0"))
      (rule "times_zero_2" (formula "17") (term "1,1,0,1,1,2,0"))
      (rule "add_zero_right" (formula "17") (term "1,0,1,1,2,0"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,0"))
      (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,1,2,0"))
      (rule "add_zero_right" (formula "17") (term "0,0,0,1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,1,2,0"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
      (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,1,2,0"))
      (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,1,2,0"))
      (rule "replace_known_left" (formula "17") (term "0,0,1,1,2,0") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_pullOutFactor1b" (formula "17") (term "1,2,0"))
      (rule "add_literals" (formula "17") (term "1,1,1,2,0"))
      (rule "times_zero_1" (formula "17") (term "1,1,2,0"))
      (rule "add_literals" (formula "17") (term "1,2,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,0,0,0"))
      (rule "replace_known_left" (formula "17") (term "0,0,1,0,0,0") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0,0"))
      (rule "add_literals" (formula "17") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "17") (term "0,0,0"))
      (rule "leq_literals" (formula "17") (term "0,0"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "eqSymm" (formula "17"))
      (rule "pullOutSelect" (formula "24") (term "1,0,1") (inst "selectSK=DoubleLinkedList_Node_l_0"))
      (rule "applyEq" (formula "25") (term "1,0,1,1,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "5")))
      (rule "pullOutSelect" (formula "25") (term "1,0,1,1") (inst "selectSK=DoubleLinkedList_Node_r_0"))
      (rule "applyEq" (formula "26") (term "0,0,0,1,1,1,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "6")))
      (rule "getOfSeqSub" (formula "18") (term "1"))
      (rule "add_zero_left" (formula "18") (term "1,1,1"))
      (rule "leq_literals" (formula "18") (term "0,0,1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "eqSymm" (formula "18"))
      (rule "polySimp_elimSub" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
      (rule "polySimp_addComm0" (formula "18") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,0"))
      (rule "mul_literals" (formula "18") (term "0,0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
      (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "eqSymm" (formula "18"))
      (rule "pullOutSelect" (formula "26") (term "0,0,1") (inst "selectSK=DoubleLinkedList_Node_l_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "27") (term "0,0,0,1,1") (inst "selectSK=DoubleLinkedList_s_0"))
      (rule "applyEq" (formula "2") (term "0,1,2,0") (ifseqformula "1"))
      (rule "applyEq" (formula "2") (term "0,1,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "2") (term "0,1,0,0,1,1,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "28") (term "0,0,0,1,1,1") (ifseqformula "1"))
      (rule "applyEq" (formula "28") (term "0,0,0,1,0,1,1,1,1,1") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")) (ifInst ""  (formula "6")))
      (rule "getOfSeqSub" (formula "22") (term "2,0,0,1,0"))
      (rule "polySimp_elimSub" (formula "22") (term "1,1,0,2,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,0,2,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "22") (term "1,1,2,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,1,1,0,2,0,0,1,0"))
      (rule "mul_literals" (formula "22") (term "0,1,1,1,0,2,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "22") (term "1,1,0,2,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,1,1,2,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "22") (term "0,0,1,1,2,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,1,1,2,0,0,1,0"))
      (rule "add_literals" (formula "22") (term "1,1,0,1,1,2,0,0,1,0"))
      (rule "times_zero_1" (formula "22") (term "1,0,1,1,2,0,0,1,0"))
      (rule "add_zero_right" (formula "22") (term "0,1,1,2,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,2,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,2,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,1,0,2,0,0,1,0"))
      (rule "mul_literals" (formula "22") (term "0,0,1,0,0,1,0,2,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,1,0,2,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,0,1,0,0,1,0,2,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,2,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,0,2,0,0,1,0"))
      (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,2,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,2,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "22") (term "0,0,1,0,2,0,0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,1,0,2,0,0,1,0"))
      (rule "add_literals" (formula "22") (term "1,1,0,0,0,1,0,2,0,0,1,0"))
      (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0,2,0,0,1,0"))
      (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,2,0,0,1,0"))
      (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,2,0,0,1,0"))
      (rule "times_zero_2" (formula "22") (term "1,0,0,0,2,0,0,1,0"))
      (rule "add_zero_right" (formula "22") (term "0,0,0,2,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,2,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,2,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,1,0,2,0,0,1,0"))
      (rule "mul_literals" (formula "22") (term "0,1,1,0,2,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,2,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,2,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,2,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,2,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,0,0,2,0,0,1,0"))
      (rule "getOfSeqSub" (formula "22") (term "1,0,0,1,0"))
      (rule "add_zero_right" (formula "22") (term "1,1,1,0,0,1,0"))
      (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,0,0,1,0"))
      (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,0,0,1,0"))
      (rule "add_zero_right" (formula "22") (term "1,1,0,1,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0,0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "22") (term "0,1,1,0,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,0,0,1,0"))
      (rule "pullOutSelect" (formula "28") (term "1,1,1,0,0,1,1,1,1,1") (inst "selectSK=DoubleLinkedList_len_0"))
      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "7")))
      (rule "inEqSimp_homoInEq1" (formula "29") (term "0"))
      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "19"))
      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0"))
      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
      (rule "mul_literals" (formula "29") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
      (rule "polySimp_elimOne" (formula "29") (term "1,1,0"))
      (rule "getOfSeqSub" (formula "20") (term "1,2,0"))
      (rule "leq_literals" (formula "20") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "add_zero_left" (formula "20") (term "1,1,1,2,0"))
      (rule "polySimp_elimSub" (formula "20") (term "1,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1,2,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,1,2,0"))
      (rule "mul_literals" (formula "20") (term "0,1,1,0,1,2,0"))
      (rule "polySimp_addComm0" (formula "20") (term "1,0,1,2,0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,2,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,1,2,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,2,0"))
      (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,2,0"))
      (rule "mul_literals" (formula "20") (term "0,0,1,0,0,1,2,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,0,1,0,0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,0,1,2,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,2,0"))
      (rule "polySimp_elimOne" (formula "20") (term "0,0,1,2,0"))
      (rule "replace_known_left" (formula "20") (term "0,1,2,0") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "getOfSeqSub" (formula "22") (term "1"))
      (rule "add_zero_right" (formula "22") (term "1,1,1"))
      (rule "eqSymm" (formula "22"))
      (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0"))
      (rule "times_zero_2" (formula "22") (term "1,1,1,0,0"))
      (rule "add_zero_right" (formula "22") (term "1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0"))
      (rule "polySimp_addComm1" (formula "22") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
      (rule "polySimp_pullOutFactor2" (formula "22") (term "0,1,0,0"))
      (rule "add_literals" (formula "22") (term "1,0,1,0,0"))
      (rule "times_zero_1" (formula "22") (term "0,1,0,0"))
      (rule "leq_literals" (formula "22") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "22") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0"))
      (rule "mul_literals" (formula "22") (term "1,0,0"))
      (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "eqSymm" (formula "22"))
      (rule "elementOfUnion" (formula "5") (term "0,0"))
      (rule "elementOfSingleton" (formula "5") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "eqSymm" (formula "5") (term "1,0,0"))
      (rule "elementOfUnion" (formula "4") (term "0,0"))
      (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "elementOfUnion" (formula "3") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "3") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "5") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "elementOfUnion" (formula "4") (term "0,0"))
      (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "eqSymm" (formula "4") (term "1,0,0"))
      (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
      (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "getOfSeqConcatEQ" (formula "20") (term "1,0,0,1,1,0,0") (ifseqformula "18"))
      (rule "polySimp_elimSub" (formula "20") (term "1,2,1,0,0,1,1,0,0"))
      (rule "lenOfSeqSub" (formula "20") (term "1,0,1,0,0,1,1,0,0"))
      (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,0,0,1,1,0,0"))
      (rule "times_zero_2" (formula "20") (term "1,1,1,0,1,0,0,1,1,0,0"))
      (rule "add_zero_right" (formula "20") (term "1,1,0,1,0,0,1,1,0,0"))
      (rule "lenOfSeqSub" (formula "20") (term "0,1,1,2,1,0,0,1,1,0,0"))
      (rule "polySimp_elimSub" (formula "20") (term "1,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "times_zero_2" (formula "20") (term "1,1,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "add_zero_right" (formula "20") (term "1,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,1,0,0,1,1,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,1,0,1,0,0,1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,0,0,1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0,0,1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_addComm1" (formula "20") (term "0,0,1,0,0,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "replace_known_left" (formula "20") (term "0,0,1,1,2,1,0,0,1,1,0,0") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "polySimp_pullOutFactor1" (formula "20") (term "1,2,1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "20") (term "1,1,2,1,0,0,1,1,0,0"))
      (rule "times_zero_1" (formula "20") (term "1,2,1,0,0,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0,0,1,0,0,1,1,0,0"))
      (rule "replace_known_left" (formula "20") (term "0,0,1,0,0,1,0,0,1,1,0,0") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "20") (term "1,1,0,0,1,0,0,1,1,0,0"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "20") (term "0,0,1,0,0,1,1,0,0"))
      (rule "leq_literals" (formula "20") (term "0,1,0,0,1,1,0,0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "5") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "applyEq" (formula "5") (term "0") (ifseqformula "22"))
      (rule "applyEqReverse" (formula "29") (term "1,0,1,1,1") (ifseqformula "5"))
      (rule "applyEqReverse" (formula "29") (term "1,0,1") (ifseqformula "5"))
      (rule "hideAuxiliaryEq" (formula "5"))
      (rule "eqSymm" (formula "28") (term "0,1,1,1"))
      (rule "eqSymm" (formula "28") (term "0,1"))
      (rule "elementOfUnion" (formula "4") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "4") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "applyEq" (formula "4") (term "0") (ifseqformula "20"))
      (rule "applyEqReverse" (formula "28") (term "0,0,0,1,1,1,1") (ifseqformula "4"))
      (rule "applyEqReverse" (formula "28") (term "1,0,1,1") (ifseqformula "4"))
      (rule "hideAuxiliaryEq" (formula "4"))
      (rule "eqSymm" (formula "27") (term "0,1,1"))
      (rule "elementOfUnion" (formula "3") (term "0,0,0,0"))
      (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "elementOfSingleton" (formula "3") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "elementOfUnion" (formula "2") (term "0,0"))
      (rule "elementOfSingleton" (formula "2") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "elementOfSingleton" (formula "2") (term "0,0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "applyEqReverse" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "27") (term "0,1,0,1,1,1") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "3") (term "0,1,2,0") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "3") (term "0,1,0,0,1,1,0,0") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "27") (term "0,1,0,1,1") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "27") (term "0,0,0,1,0,1,1,1,1,1") (ifseqformula "2"))
      (rule "applyEqReverse" (formula "3") (term "0,1,1,0") (ifseqformula "2"))
      (rule "hideAuxiliaryEq" (formula "2"))
      (rule "eqSymm" (formula "26") (term "0,1,1,1"))
      (rule "eqSymm" (formula "26") (term "0,1,1"))
      (rule "getOfSeqSub" (formula "17") (term "1,0,0,1,1,0,0"))
      (rule "add_zero_left" (formula "17") (term "1,1,1,0,0,1,1,0,0"))
      (rule "leq_literals" (formula "17") (term "0,0,1,0,0,1,1,0,0"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "polySimp_elimSub" (formula "17") (term "1,0,1,0,0,1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,0,0,1,1,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,0,0,1,1,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,1,0,1,0,0,1,1,0,0"))
      (rule "polySimp_addComm0" (formula "17") (term "1,0,1,0,0,1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,0,1,1,0,0"))
      (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,1,0,0,1,1,0,0"))
      (rule "mul_literals" (formula "17") (term "0,0,1,0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,0,1,0,0,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1,0,0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "0,0,1,0,0,1,1,0,0"))
      (rule "replace_known_left" (formula "17") (term "0,1,0,0,1,1,0,0") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "26") (term "1,1,1,0,0,1,1,1,1,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "26") (term "1,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0,1,1,1,1,1"))
      (rule "add_literals" (formula "25") (term "0,1,1,0,0,1,1,1,1,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "1,0"))
      (rule "add_literals" (formula "25") (term "0,1,0"))
      (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
      (rule "polySimp_addComm1" (formula "25") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0"))
      (rule "mul_literals" (formula "25") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,0"))
      (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqConcatEQ" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
      (rule "polySimp_elimSub" (formula "1") (term "1,2,0,0,0,0"))
      (rule "lenOfSeqSub" (formula "1") (term "1,0,0,0,0,0"))
      (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "1") (term "1,1,1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "1,1,0,0,0,0,0"))
      (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,0,0,0,0"))
      (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,0,0,0,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,0,1,1,2,0,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,0,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,0,0,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,0,0,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "1,2,0,0,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0,0,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,0,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "getOfSeqConcatEQ" (formula "16") (term "1,1,0") (ifseqformula "14"))
      (rule "polySimp_elimSub" (formula "16") (term "1,2,1,1,0"))
      (rule "lenOfSeqSub" (formula "16") (term "1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "16") (term "1,1,0,1,1,0"))
      (rule "times_zero_2" (formula "16") (term "1,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "16") (term "1,1,0,1,1,0"))
      (rule "lenOfSeqSub" (formula "16") (term "0,1,1,2,1,1,0"))
      (rule "polySimp_elimSub" (formula "16") (term "1,0,1,1,2,1,1,0"))
      (rule "times_zero_2" (formula "16") (term "1,1,0,1,1,2,1,1,0"))
      (rule "add_zero_right" (formula "16") (term "1,0,1,1,2,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,1,1,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,1,2,1,1,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,1,1,2,1,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,1,2,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,1,2,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,1,2,1,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,1,2,1,1,0"))
      (rule "replace_known_left" (formula "16") (term "0,0,1,1,2,1,1,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_pullOutFactor1" (formula "16") (term "1,2,1,1,0"))
      (rule "add_literals" (formula "16") (term "1,1,2,1,1,0"))
      (rule "times_zero_1" (formula "16") (term "1,2,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0,0,1,1,0"))
      (rule "replace_known_left" (formula "16") (term "0,0,1,0,0,1,1,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "16") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,1,0"))
      (rule "leq_literals" (formula "16") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqConcatEQ" (formula "25") (term "0,0,1,1") (ifseqformula "14"))
      (rule "polySimp_elimSub" (formula "25") (term "1,2,0,0,1,1"))
      (rule "lenOfSeqSub" (formula "25") (term "1,0,0,0,1,1"))
      (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0,0,1,1"))
      (rule "times_zero_2" (formula "25") (term "1,1,1,0,0,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "1,1,0,0,0,1,1"))
      (rule "lenOfSeqSub" (formula "25") (term "0,1,1,2,0,0,1,1"))
      (rule "polySimp_elimSub" (formula "25") (term "1,0,1,1,2,0,0,1,1"))
      (rule "times_zero_2" (formula "25") (term "1,1,0,1,1,2,0,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "1,0,1,1,2,0,0,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1,1,2,0,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "0,0,0,1,1,2,0,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,1,2,0,0,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,1"))
      (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,1,1"))
      (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,1,1"))
      (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1,1,2,0,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,1,2,0,0,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1,1,2,0,0,1,1"))
      (rule "replace_known_left" (formula "25") (term "0,0,1,1,2,0,0,1,1") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "polySimp_pullOutFactor1b" (formula "25") (term "1,2,0,0,1,1"))
      (rule "add_literals" (formula "25") (term "1,1,1,2,0,0,1,1"))
      (rule "times_zero_1" (formula "25") (term "1,1,2,0,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "1,2,0,0,1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0,1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0,0,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0,0,0,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0,0,0,1,1"))
      (rule "replace_known_left" (formula "25") (term "0,0,0,0,0,1,1") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0,1,1"))
      (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0,0,0,1,1"))
      (rule "add_literals" (formula "25") (term "1,0,0,0,0,1,1"))
      (rule "times_zero_1" (formula "25") (term "0,0,0,0,1,1"))
      (rule "leq_literals" (formula "25") (term "0,0,0,1,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "1") (term "0,0,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "add_zero_left" (formula "1") (term "1,1,0,0,0,0"))
      (rule "polySimp_elimSub" (formula "1") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "getOfSeqSub" (formula "16") (term "1,1,0"))
      (rule "add_zero_left" (formula "16") (term "1,1,1,1,0"))
      (rule "leq_literals" (formula "16") (term "0,0,1,1,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_elimSub" (formula "16") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,1,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "16") (term "1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,1,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "16") (term "0,0,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,1,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,1,1,0"))
      (rule "replace_known_left" (formula "16") (term "0,1,1,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "25") (term "0,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "1,1,0,0,1,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0,1,1"))
      (rule "mul_literals" (formula "25") (term "1,1,1,0,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "1,1,0,0,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0,1,1"))
      (rule "polySimp_addComm1" (formula "25") (term "0,0,1,0,0,1,1"))
      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,1"))
      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,1"))
      (rule "polySimp_pullOutFactor2" (formula "25") (term "0,1,0,0,1,1"))
      (rule "add_literals" (formula "25") (term "1,0,1,0,0,1,1"))
      (rule "times_zero_1" (formula "25") (term "0,1,0,0,1,1"))
      (rule "leq_literals" (formula "25") (term "1,0,0,1,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,1,1"))
      (rule "times_zero_2" (formula "25") (term "1,0,0,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "0,0,0,1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,1,1"))
      (rule "mul_literals" (formula "25") (term "1,0,0,1,1"))
      (rule "replace_known_left" (formula "25") (term "0,0,1,1") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqConcatEQ" (formula "1") (term "1,1,0") (ifseqformula "14"))
      (rule "polySimp_elimSub" (formula "1") (term "1,2,1,1,0"))
      (rule "lenOfSeqSub" (formula "1") (term "1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,1,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,1,0,1,1,0"))
      (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,1,1,0"))
      (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,1,1,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,0,1,1,2,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,1,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,1,1,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,1,1,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,1,1,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "1,2,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,1,1,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,0,1,1,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "leq_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "getOfSeqConcatEQ" (formula "16") (term "0,0,0,1,0,0") (ifseqformula "14"))
      (rule "polySimp_elimSub" (formula "16") (term "1,2,0,0,0,1,0,0"))
      (rule "lenOfSeqSub" (formula "16") (term "1,0,0,0,0,1,0,0"))
      (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0,0,0,1,0,0"))
      (rule "times_zero_2" (formula "16") (term "1,1,1,0,0,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "1,1,0,0,0,0,1,0,0"))
      (rule "lenOfSeqSub" (formula "16") (term "0,1,1,2,0,0,0,1,0,0"))
      (rule "polySimp_elimSub" (formula "16") (term "1,0,1,1,2,0,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "1,1,0,1,1,2,0,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "1,0,1,1,2,0,0,0,1,0,0"))
      (rule "ifEqualsNull" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,1,0,1,1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,1,0,1,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,0,0,0,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,0,0,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0,0,0,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,0,0,0,1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0,0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,1,0,1,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
      (rule "replace_known_left" (formula "16") (term "0,0,1,1,0,1,1,0,0,1,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_pullOutFactor1" (formula "16") (term "1,0,1,1,0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "1,1,0,1,1,0,0,1,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,1,1,0,0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0,0,0,1,0,0,1,0,0"))
      (rule "replace_known_left" (formula "16") (term "0,0,1,0,0,0,1,0,0,1,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,1,0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "1,1,0,0,0,1,0,0,1,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1,0,0"))
      (rule "leq_literals" (formula "16") (term "0,0,1,0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0,0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,0,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,0,0,0,1,0,0"))
      (rule "replace_known_left" (formula "16") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "1,1,0,0,0,0,0,1,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0,1,0,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqConcatEQ" (formula "25") (term "0,0,1") (ifseqformula "14"))
      (rule "polySimp_elimSub" (formula "25") (term "1,2,0,0,1"))
      (rule "lenOfSeqSub" (formula "25") (term "1,0,0,0,1"))
      (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0,0,1"))
      (rule "times_zero_2" (formula "25") (term "1,1,1,0,0,0,1"))
      (rule "add_zero_right" (formula "25") (term "1,1,0,0,0,1"))
      (rule "lenOfSeqSub" (formula "25") (term "0,1,1,2,0,0,1"))
      (rule "polySimp_elimSub" (formula "25") (term "1,0,1,1,2,0,0,1"))
      (rule "times_zero_2" (formula "25") (term "1,1,0,1,1,2,0,0,1"))
      (rule "add_zero_right" (formula "25") (term "1,0,1,1,2,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,1"))
      (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1,1,2,0,0,1"))
      (rule "add_zero_right" (formula "25") (term "0,0,0,1,1,2,0,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,1,2,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1"))
      (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1,1,2,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,1,2,0,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1,1,2,0,0,1"))
      (rule "replace_known_left" (formula "25") (term "0,0,1,1,2,0,0,1") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "polySimp_pullOutFactor1" (formula "25") (term "1,2,0,0,1"))
      (rule "add_literals" (formula "25") (term "1,1,2,0,0,1"))
      (rule "times_zero_1" (formula "25") (term "1,2,0,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,0,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1,0,0,0,0,1"))
      (rule "replace_known_left" (formula "25") (term "0,0,1,0,0,0,0,1") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0,1"))
      (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,1"))
      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,1"))
      (rule "add_zero_right" (formula "25") (term "0,0,0,0,1"))
      (rule "leq_literals" (formula "25") (term "0,0,0,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqSub" (formula "1") (term "1,1,0"))
      (rule "add_zero_left" (formula "1") (term "1,1,1,1,0"))
      (rule "leq_literals" (formula "1") (term "0,0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1,1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,1,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,1,1,0"))
      (rule "replace_known_left" (formula "1") (term "0,1,1,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "getOfSeqSub" (formula "16") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "16") (term "1,1,0,0,0,1,0,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0,0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_elimSub" (formula "16") (term "1,0,0,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,0,1,0,0"))
      (rule "polySimp_addComm0" (formula "16") (term "1,0,0,0,0,1,0,0"))
      (rule "ifEqualsNull" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0,1,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,0,1,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,1,0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0,0,0,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,0,1,0,0,0,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0,1,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0,0,1,0,0"))
      (rule "replace_known_left" (formula "16") (term "0,0,1,0,0,1,0,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,1,0,0"))
      (rule "replace_known_left" (formula "16") (term "0,0,0,1,0,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "25") (term "0,0,1"))
      (rule "leq_literals" (formula "25") (term "0,0,0,0,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "add_zero_left" (formula "25") (term "1,1,0,0,1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "polySimp_elimSub" (formula "25") (term "1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
      (rule "polySimp_addComm0" (formula "25") (term "1,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1"))
      (rule "add_zero_right" (formula "25") (term "0,0,0,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0,1"))
      (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,1"))
      (rule "add_literals" (formula "25") (term "0,0,0,0,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1"))
      (rule "replace_known_left" (formula "25") (term "0,0,1") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "getOfSeqConcatEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "14"))
      (rule "polySimp_elimSub" (formula "1") (term "1,2,0,0,0,1,0,0"))
      (rule "lenOfSeqSub" (formula "1") (term "1,0,0,0,0,1,0,0"))
      (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,1,0,0,0,0,1,0,0"))
      (rule "add_zero_right" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
      (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,0,0,0,1,0,0"))
      (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,0,0,0,1,0,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,0,1,1,2,0,0,0,1,0,0"))
      (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,0,0,0,1,0,0"))
      (rule "ifEqualsNull" (formula "1") (term "0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,0,0,1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,0,1,1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,0,1,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,0,1,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,0,1,1,0,0,1,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,1,0,1,1,0,0,1,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "1,0,1,1,0,0,1,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,1,1,0,0,1,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,1,1,0,0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,1,0,0,1,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,0,0,1,0,0,1,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,1,0,0,1,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0,0,1,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0,1,0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,0,0,0,1,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0,1,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,1,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0,0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "getOfSeqConcatEQ" (formula "16") (term "1") (ifseqformula "14"))
      (rule "polySimp_elimSub" (formula "16") (term "1,2,1"))
      (rule "lenOfSeqSub" (formula "16") (term "1,0,1"))
      (rule "polySimp_elimSub" (formula "16") (term "1,1,0,1"))
      (rule "times_zero_2" (formula "16") (term "1,1,1,0,1"))
      (rule "add_zero_right" (formula "16") (term "1,1,0,1"))
      (rule "lenOfSeqSub" (formula "16") (term "0,1,1,2,1"))
      (rule "polySimp_elimSub" (formula "16") (term "1,0,1,1,2,1"))
      (rule "mul_literals" (formula "16") (term "1,1,0,1,1,2,1"))
      (rule "add_zero_right" (formula "16") (term "1,0,1,1,2,1"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,1"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,1,2,1"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,1,1,2,1"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,1,2,1"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,1"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
      (rule "add_zero_left" (formula "16") (term "0,0,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,1,2,1"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,1,2,1"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,1,2,1"))
      (rule "replace_known_left" (formula "16") (term "0,0,1,1,2,1") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_pullOutFactor1b" (formula "16") (term "1,2,1"))
      (rule "add_literals" (formula "16") (term "1,1,1,2,1"))
      (rule "times_zero_1" (formula "16") (term "1,1,2,1"))
      (rule "add_zero_right" (formula "16") (term "1,2,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0,0,1"))
      (rule "replace_known_left" (formula "16") (term "0,0,1,0,0,1") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_pullOutFactor1" (formula "16") (term "0,0,1"))
      (rule "add_literals" (formula "16") (term "1,0,0,1"))
      (rule "times_zero_1" (formula "16") (term "0,0,1"))
      (rule "leq_literals" (formula "16") (term "0,1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqConcatEQ" (formula "25") (term "0,0,1,0,1,1") (ifseqformula "14"))
      (rule "polySimp_elimSub" (formula "25") (term "1,2,0,0,1,0,1,1"))
      (rule "polySimp_addComm0" (formula "25") (term "1,2,0,0,1,0,1,1"))
      (rule "lenOfSeqSub" (formula "25") (term "1,0,0,0,1,0,1,1"))
      (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0,0,1,0,1,1"))
      (rule "mul_literals" (formula "25") (term "1,1,1,0,0,0,1,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "1,1,0,0,0,1,0,1,1"))
      (rule "lenOfSeqSub" (formula "25") (term "0,0,1,2,0,0,1,0,1,1"))
      (rule "polySimp_elimSub" (formula "25") (term "1,0,0,1,2,0,0,1,0,1,1"))
      (rule "times_zero_2" (formula "25") (term "1,1,0,0,1,2,0,0,1,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "1,0,0,1,2,0,0,1,0,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,1,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0,1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1,0,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,2,0,0,1,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "0,0,0,0,1,2,0,0,1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,1,2,0,0,1,0,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0,1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0,1,2,0,0,1,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0,1,2,0,0,1,0,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0,1,2,0,0,1,0,1,1"))
      (rule "replace_known_left" (formula "25") (term "0,0,0,1,2,0,0,1,0,1,1") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1,0,0,0,0,0,1,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,0,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,0,1,1"))
      (rule "replace_known_left" (formula "25") (term "0,0,1,0,0,0,0,0,1,0,1,1") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,1,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0,1,1"))
      (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0,1,1"))
      (rule "getOfSeqSub" (formula "1") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "1") (term "1,1,0,0,0,1,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0,0,0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_elimSub" (formula "1") (term "1,0,0,0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,0,1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,0,1,0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0,0,0,0,1,0,0"))
      (rule "ifEqualsNull" (formula "1") (term "0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,1,0,0,1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0,0,1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0,0,1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0,0,0,1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,0,1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0,1,0,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,1,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "getOfSeqSub" (formula "16") (term "1"))
      (rule "add_zero_right" (formula "16") (term "1,1,1"))
      (rule "polySimp_elimSub" (formula "16") (term "1,1,0,1"))
      (rule "times_zero_2" (formula "16") (term "1,1,1,0,1"))
      (rule "add_zero_right" (formula "16") (term "1,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,1"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,1,0,1"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0,1"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,1"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,1"))
      (rule "polySimp_pullOutFactor2" (formula "16") (term "0,1,0,1"))
      (rule "add_literals" (formula "16") (term "1,0,1,0,1"))
      (rule "times_zero_1" (formula "16") (term "0,1,0,1"))
      (rule "leq_literals" (formula "16") (term "1,0,1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "0,1"))
      (rule "mul_literals" (formula "16") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "16") (term "0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,1"))
      (rule "mul_literals" (formula "16") (term "1,0,1"))
      (rule "replace_known_left" (formula "16") (term "0,1") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "25") (term "1,0,0,1,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "1,1,1,0,0,1,0,1,1"))
      (rule "polySimp_elimSub" (formula "25") (term "1,1,0,1,0,0,1,0,1,1"))
      (rule "mul_literals" (formula "25") (term "1,1,1,0,1,0,0,1,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "1,1,0,1,0,0,1,0,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,0,0,1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0,0,1,0,1,1"))
      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,1,0,0,1,0,1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,1,0,0,1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,1,0,0,1,0,1,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,1,0,0,1,0,1,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,1,0,0,1,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,1,0,0,1,0,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,1,0,0,1,0,1,1"))
      (rule "getOfSeqSub" (formula "25") (term "2,0,0,1,0,1,1"))
      (rule "polySimp_elimSub" (formula "25") (term "1,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_addComm1" (formula "25") (term "1,1,2,0,0,1,0,1,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,1,0,2,0,0,1,0,1,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_addComm0" (formula "25") (term "1,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,1,1,2,0,0,1,0,1,1"))
      (rule "polySimp_addComm0" (formula "25") (term "0,0,1,1,2,0,0,1,0,1,1"))
      (rule "polySimp_pullOutFactor2b" (formula "25") (term "0,1,1,2,0,0,1,0,1,1"))
      (rule "add_literals" (formula "25") (term "1,1,0,1,1,2,0,0,1,0,1,1"))
      (rule "times_zero_1" (formula "25") (term "1,0,1,1,2,0,0,1,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "0,1,1,2,0,0,1,0,1,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,0,2,0,0,1,0,1,1"))
      (rule "mul_literals" (formula "25") (term "0,0,1,0,0,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0,2,0,0,1,0,1,1"))
      (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_addComm1" (formula "25") (term "0,0,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,1,0,2,0,0,1,0,1,1"))
      (rule "add_literals" (formula "25") (term "1,1,0,0,0,1,0,2,0,0,1,0,1,1"))
      (rule "times_zero_1" (formula "25") (term "1,0,0,0,1,0,2,0,0,1,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,2,0,0,1,0,1,1"))
      (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,2,0,0,1,0,1,1"))
      (rule "times_zero_2" (formula "25") (term "1,0,0,0,2,0,0,1,0,1,1"))
      (rule "add_zero_right" (formula "25") (term "0,0,0,2,0,0,1,0,1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,2,0,0,1,0,1,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,2,0,0,1,0,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,2,0,0,1,0,1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,2,0,0,1,0,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,2,0,0,1,0,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,0,0,2,0,0,1,0,1,1"))
      (rule "replace_known_left" (formula "25") (term "1,1") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "commuteUnion" (formula "12") (term "0,0,1,0"))
      (rule "getOfSeqConcatEQ" (formula "16") (term "0,0,0,0") (ifseqformula "14"))
      (rule "polySimp_elimSub" (formula "16") (term "1,2,0,0,0,0"))
      (rule "lenOfSeqSub" (formula "16") (term "1,0,0,0,0,0"))
      (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,1,1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "1,1,0,0,0,0,0"))
      (rule "lenOfSeqSub" (formula "16") (term "0,1,1,2,0,0,0,0"))
      (rule "polySimp_elimSub" (formula "16") (term "1,0,1,1,2,0,0,0,0"))
      (rule "times_zero_2" (formula "16") (term "1,1,0,1,1,2,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "1,0,1,1,2,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,1,2,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,1,1,2,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,1,2,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,1,2,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,1,2,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,1,2,0,0,0,0"))
      (rule "replace_known_left" (formula "16") (term "0,0,1,1,2,0,0,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_pullOutFactor1" (formula "16") (term "1,2,0,0,0,0"))
      (rule "add_literals" (formula "16") (term "1,1,2,0,0,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,2,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0,0,0,0,0,0"))
      (rule "replace_known_left" (formula "16") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "16") (term "1,1,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqConcatEQ" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "14"))
      (rule "polySimp_elimSub" (formula "1") (term "1,2,1,0,0,1,1,0,0"))
      (rule "lenOfSeqSub" (formula "1") (term "1,0,1,0,0,1,1,0,0"))
      (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,0,0,1,1,0,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,1,0,1,0,0,1,1,0,0"))
      (rule "add_zero_right" (formula "1") (term "1,1,0,1,0,0,1,1,0,0"))
      (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,1,0,0,1,1,0,0"))
      (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,0,0,1,1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,0,0,1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,0,0,1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,1,0,0,1,1,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,1,0,0,1,1,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "1,2,1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,1,0,0,1,1,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,1,0,0,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0,0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,1,0,0,1,1,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0,1,1,0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0,0,1,1,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0,1,1,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
      (rule "leq_literals" (formula "1") (term "0,1,0,0,1,1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "getOfSeqSub" (formula "16") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "16") (term "1,1,0,0,0,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_elimSub" (formula "16") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "16") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,0,0"))
      (rule "replace_known_left" (formula "16") (term "0,0,0,0,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "getOfSeqSub" (formula "1") (term "1,0,0,1,1,0,0"))
      (rule "add_zero_left" (formula "1") (term "1,1,1,0,0,1,1,0,0"))
      (rule "leq_literals" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_elimSub" (formula "1") (term "1,0,1,0,0,1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1,0,0,1,1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1,0,0,1,1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,1,0,1,0,0,1,1,0,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0,1,0,0,1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,0,1,1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,0,0,1,1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0,1,1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,0,0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0,0,1,1,0,0"))
      (rule "replace_known_left" (formula "1") (term "0,1,0,0,1,1,0,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "getOfSeqConcatEQ" (formula "1") (term "1,2,0") (ifseqformula "14"))
      (rule "polySimp_elimSub" (formula "1") (term "1,2,1,2,0"))
      (rule "lenOfSeqSub" (formula "1") (term "1,0,1,2,0"))
      (rule "polySimp_elimSub" (formula "1") (term "1,1,0,1,2,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,1,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "1,1,0,1,2,0"))
      (rule "lenOfSeqSub" (formula "1") (term "0,1,1,2,1,2,0"))
      (rule "polySimp_elimSub" (formula "1") (term "1,0,1,1,2,1,2,0"))
      (rule "times_zero_2" (formula "1") (term "1,1,0,1,1,2,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "1,0,1,1,2,1,2,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,2,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,1,2,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,1,2,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,1,2,1,2,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0,1,2,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,1,2,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,1,2,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,1,2,1,2,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,1,2,1,2,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "1,2,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,1,2,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,1,2,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,0,1,2,0"))
      (rule "replace_known_left" (formula "1") (term "0,0,0,1,2,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,2,0"))
      (rule "leq_literals" (formula "1") (term "0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "getOfSeqSub" (formula "1") (term "1,2,0"))
      (rule "add_zero_left" (formula "1") (term "1,1,1,2,0"))
      (rule "leq_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_elimSub" (formula "1") (term "1,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1,2,0"))
      (rule "mul_literals" (formula "1") (term "0,1,1,0,1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0,1,2,0"))
      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1,2,0"))
      (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0,1,2,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,1,2,0"))
      (rule "replace_known_left" (formula "1") (term "0,1,2,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
      (rule "applyEqReverse" (formula "25") (term "1,0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "notRight" (formula "25"))
      (rule "hideAuxiliaryEq" (formula "2"))
      (rule "replace_known_left" (formula "16") (term "0,0,1,0,0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "applyEq" (formula "17") (term "1") (ifseqformula "1"))
      (rule "ifEqualsNull" (formula "17"))
      (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "21")))
      (rule "closeFalse" (formula "17"))
   )
)
(branch "Exceptional Post (remove)"
   (builtin "One Step Simplification" (formula "11"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "translateJavaSubInt" (formula "7") (term "1"))
   (rule "translateJavaAddInt" (formula "11") (term "1,1,1,0,0,0,1,1"))
   (rule "translateJavaSubInt" (formula "11") (term "1,0,1,0,1,1,1,1,0,0,1,1"))
   (rule "translateJavaSubInt" (formula "11") (term "1,0,1,0,0,1,1"))
   (rule "andLeft" (formula "11"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "14"))
   (rule "notLeft" (formula "12"))
   (rule "close" (formula "16") (ifseqformula "15"))
)
(branch "Pre (remove)"
   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "8")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")) (ifInst ""  (formula "9")) (ifInst ""  (formula "11")) (ifInst ""  (formula "1")) (ifInst ""  (formula "11")) (ifInst ""  (formula "4")))
   (rule "closeTrue" (formula "12"))
)
)

}
