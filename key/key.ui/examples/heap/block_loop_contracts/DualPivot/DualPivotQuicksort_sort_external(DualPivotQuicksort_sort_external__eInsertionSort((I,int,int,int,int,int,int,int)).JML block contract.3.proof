\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Mar 30 18:30:35 CEST 2018
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_EXTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Fri Mar 30 18:30:35 CEST 2018
name=DualPivotQuicksort_sort_external[DualPivotQuicksort_sort_external\\:\\:eInsertionSort([I,int,int,int,int,int,int,int)].JML block contract.3
contract=DualPivotQuicksort_sort_external[DualPivotQuicksort_sort_external\\:\\:eInsertionSort([I,int,int,int,int,int,int,int)].JML block contract.3
class=de.uka.ilkd.key.proof.init.FunctionalBlockContractPO
";

\proof {
(keyLog "0" (keyUser "Flo" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "1952")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "anonOut_heap,exc#33,heap_Before_BLOCK,savedHeap_Before_BLOCK,heap_Before_METHOD,savedHeap_Before_METHOD,e1_Before_METHOD#34,e2_Before_METHOD#35,a_Before_METHOD#36,o,f,anonIn_heap,anonIn_e1,anonIn_e2,anonIn_a"))
(rule "impRight" (formula "1"))
(rule "impRight" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "eqSymm" (formula "17") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "13") (term "0") (ifseqformula "16"))
(builtin "One Step Simplification" (formula "13"))
(rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "5"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "5") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "4"))
(rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "4") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
(rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "3"))
(rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "9"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "9") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "8"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "8") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "7") (term "0"))
(rule "inEqSimp_ltToLeq" (formula "6"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "6") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "2"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "exc#33_1"))
(rule "assignment" (formula "17") (term "1"))
(builtin "One Step Simplification" (formula "17"))
(builtin "Block Contract (External)" (formula "17") (newnames "anonOut_heap_0,exc#33_0,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0"))
(branch "Precondition"
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")) (ifInst ""  (formula "16")) (ifInst ""  (formula "12")) (ifInst ""  (formula "16")) (ifInst ""  (formula "13")))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0"))
   (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1"))
   (rule "replace_known_left" (formula "17") (term "1,0,1") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0,1,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,1,1,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,1,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1"))
   (rule "replace_known_left" (formula "17") (term "1,0,1") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1,0,0,1"))
   (rule "replace_known_left" (formula "17") (term "1,0,0,1") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0,1,1,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0,1,1,1"))
   (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0,1,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,0,1,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,0,1,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1"))
   (rule "replace_known_left" (formula "17") (term "1,0,1") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1"))
   (rule "replace_known_left" (formula "17") (term "1,0,1") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1"))
   (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
   (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
   (rule "replace_known_left" (formula "17") (term "1,0") (ifseqformula "5"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0"))
   (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "2"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,0,0"))
   (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "allRight" (formula "17") (inst "sk=i_0"))
   (rule "impRight" (formula "17"))
   (rule "andLeft" (formula "1"))
   (rule "allRight" (formula "19") (inst "sk=j_0"))
   (rule "impRight" (formula "19"))
   (rule "andLeft" (formula "1"))
   (rule "polySimp_addComm1" (formula "2") (term "0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_leqRight" (formula "21"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "4"))
   (rule "inEqSimp_commuteLeq" (formula "5"))
   (rule "inEqSimp_sepNegMonomial0" (formula "10"))
   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
   (rule "polySimp_elimOne" (formula "10") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "9"))
   (rule "polySimp_mulLiterals" (formula "9") (term "0"))
   (rule "polySimp_elimOne" (formula "9") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8"))
   (rule "polySimp_mulComm0" (formula "8") (term "1"))
   (rule "polySimp_rightDist" (formula "8") (term "1"))
   (rule "mul_literals" (formula "8") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "14"))
   (rule "polySimp_mulLiterals" (formula "14") (term "0"))
   (rule "polySimp_elimOne" (formula "14") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "13"))
   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
   (rule "polySimp_elimOne" (formula "13") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "12"))
   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
   (rule "polySimp_elimOne" (formula "12") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "11"))
   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
   (rule "polySimp_elimOne" (formula "11") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
   (rule "polySimp_elimOne" (formula "3") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "2"))
   (rule "polySimp_mulComm0" (formula "2") (term "1"))
   (rule "polySimp_rightDist" (formula "2") (term "1"))
   (rule "mul_literals" (formula "2") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "pullOutSelect" (formula "1") (term "1,1") (inst "selectSK=arr_0"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
   (rule "times_zero_1" (formula "7") (term "0,0"))
   (rule "add_zero_left" (formula "7") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "7"))
   (rule "mul_literals" (formula "7") (term "1"))
   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
   (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "5") (term "0"))
   (rule "polySimp_addComm0" (formula "5") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
   (rule "polySimp_mulComm0" (formula "5") (term "1"))
   (rule "polySimp_rightDist" (formula "5") (term "1"))
   (rule "mul_literals" (formula "5") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_1"))
   (rule "simplifySelectOfAnon" (formula "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
   (rule "polySimp_rightDist" (formula "11") (term "0,0"))
   (rule "mul_literals" (formula "11") (term "0,0,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0"))
   (rule "polySimp_addComm1" (formula "11") (term "0,0"))
   (rule "add_literals" (formula "11") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "11"))
   (rule "polySimp_mulComm0" (formula "11") (term "1"))
   (rule "polySimp_rightDist" (formula "11") (term "1"))
   (rule "mul_literals" (formula "11") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1"))
   (rule "nnf_imp2or" (formula "18") (term "0"))
   (rule "nnf_imp2or" (formula "19") (term "0"))
   (rule "nnf_notAnd" (formula "18") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
   (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "19") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
   (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
   (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
   (rule "mul_literals" (formula "19") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
   (rule "nnf_imp2or" (formula "19") (term "0,1,0"))
   (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0"))
   (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
   (rule "nnf_notAnd" (formula "19") (term "0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0,1,0"))
   (rule "add_literals" (formula "19") (term "0,0,0,0,0,0,1,0"))
   (rule "add_zero_left" (formula "19") (term "0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0"))
   (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,0"))
   (rule "cut_direct" (formula "21") (term "0"))
   (branch "CUT: anonIn_a.<created> = TRUE TRUE"
      (builtin "One Step Simplification" (formula "22"))
      (rule "true_left" (formula "22"))
      (rule "arrayLengthNotNegative" (formula "13") (term "0"))
      (rule "arrayLengthIsAShort" (formula "14") (term "0"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "all_pull_out3" (formula "19") (term "0"))
      (rule "shift_paren_or" (formula "19") (term "0,0"))
      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
      (rule "all_pull_out3" (formula "20") (term "0"))
      (rule "shift_paren_or" (formula "20") (term "0,0"))
      (rule "shift_paren_or" (formula "20") (term "0,0,0"))
      (rule "allLeft" (formula "20") (inst "t=i_0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "20") (term "1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "20") (term "1,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
      (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0,0") (ifseqformula "4"))
      (rule "qeq_literals" (formula "20") (term "0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0") (ifseqformula "6"))
      (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "20") (term "1,1,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "allLeft" (formula "20") (inst "t=j_0"))
      (rule "replaceKnownSelect_taclet0_2" (formula "20") (term "0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "20") (term "0,1"))
      (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0"))
      (rule "inEqSimp_contradInEq0" (formula "20") (term "0,0") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
      (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
      (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "3"))
      (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
      (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
      (rule "andLeft" (formula "20"))
      (rule "inEqSimp_homoInEq1" (formula "20"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0"))
      (rule "polySimp_addComm0" (formula "20") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "times_zero_1" (formula "20") (term "1,0"))
      (rule "add_zero_right" (formula "20") (term "0"))
      (rule "leq_literals" (formula "20"))
      (rule "closeFalse" (formula "20"))
   )
   (branch "CUT: anonIn_a.<created> = TRUE FALSE"
      (builtin "One Step Simplification" (formula "21"))
      (rule "arrayLengthNotNegative" (formula "13") (term "0"))
      (rule "arrayLengthIsAShort" (formula "14") (term "0"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "all_pull_out3" (formula "19") (term "0"))
      (rule "shift_paren_or" (formula "19") (term "0,0"))
      (rule "shift_paren_or" (formula "19") (term "0,0,0"))
      (rule "all_pull_out3" (formula "20") (term "0"))
      (rule "shift_paren_or" (formula "20") (term "0,0"))
      (rule "shift_paren_or" (formula "20") (term "0,0,0"))
      (rule "allLeft" (formula "20") (inst "t=i_0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "20") (term "1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "20") (term "1,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,0"))
      (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0,0") (ifseqformula "4"))
      (rule "qeq_literals" (formula "20") (term "0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0,0,0") (ifseqformula "6"))
      (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "20") (term "1,1,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0"))
      (rule "leq_literals" (formula "20") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "allLeft" (formula "20") (inst "t=j_0"))
      (rule "replaceKnownSelect_taclet0_2" (formula "20") (term "0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "20") (term "0,1"))
      (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0"))
      (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "3"))
      (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
      (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
      (rule "leq_literals" (formula "20") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
      (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
      (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "20") (term "0,0,1"))
      (rule "leq_literals" (formula "20") (term "0,1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "2"))
      (rule "andLeft" (formula "20"))
      (rule "inEqSimp_homoInEq1" (formula "20"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0"))
      (rule "polySimp_addComm0" (formula "20") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
      (rule "add_literals" (formula "20") (term "1,1,0"))
      (rule "times_zero_1" (formula "20") (term "1,0"))
      (rule "add_literals" (formula "20") (term "0"))
      (rule "leq_literals" (formula "20"))
      (rule "closeFalse" (formula "20"))
   )
)
(branch "Usage"
   (builtin "One Step Simplification" (formula "16"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "17"))
   (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "19"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "true_left" (formula "21"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "16"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "1,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "5"))
   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
   (rule "polySimp_elimOne" (formula "5") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "4"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
   (rule "polySimp_elimOne" (formula "4") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
   (rule "polySimp_mulComm0" (formula "3") (term "1"))
   (rule "polySimp_rightDist" (formula "3") (term "1"))
   (rule "mul_literals" (formula "3") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "9"))
   (rule "polySimp_mulLiterals" (formula "9") (term "0"))
   (rule "polySimp_elimOne" (formula "9") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "8"))
   (rule "polySimp_mulLiterals" (formula "8") (term "0"))
   (rule "polySimp_elimOne" (formula "8") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "7"))
   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
   (rule "polySimp_elimOne" (formula "7") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "6"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
   (rule "polySimp_elimOne" (formula "6") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,1,1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,1,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
   (rule "elementOfUnion" (formula "22") (term "0,0,0,0,1,0,1"))
   (rule "elementOfSingleton" (formula "22") (term "0,0,0,0,0,1,0,1"))
   (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,1,0,1"))
   (rule "pullOutSelect" (formula "16") (term "1") (inst "selectSK=arr_0"))
   (rule "simplifySelectOfAnon" (formula "16"))
   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "22")) (ifInst ""  (formula "13")))
   (rule "elementOfUnion" (formula "16") (term "0,0"))
   (rule "elementOfSingleton" (formula "16") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "eqSymm" (formula "16") (term "1,0,0"))
   (rule "elementOfSingleton" (formula "16") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "16"))
   (rule "hideAuxiliaryEq" (formula "16"))
   (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_1"))
   (rule "simplifySelectOfAnon" (formula "16"))
   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "22")) (ifInst ""  (formula "13")))
   (rule "inEqSimp_commuteGeq" (formula "17"))
   (rule "elementOfUnion" (formula "16") (term "0,0"))
   (rule "elementOfSingleton" (formula "16") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "elementOfSingleton" (formula "16") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "16"))
   (rule "hideAuxiliaryEq" (formula "16"))
   (rule "inEqSimp_commuteLeq" (formula "16"))
   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
   (rule "times_zero_1" (formula "2") (term "0,0"))
   (rule "add_zero_left" (formula "2") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
   (rule "mul_literals" (formula "2") (term "1"))
   (rule "nnf_imp2or" (formula "11") (term "0"))
   (rule "nnf_imp2or" (formula "12") (term "0"))
   (rule "nnf_imp2or" (formula "19") (term "0"))
   (rule "nnf_imp2or" (formula "18") (term "0"))
   (rule "nnf_notAnd" (formula "11") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
   (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
   (rule "mul_literals" (formula "11") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "12") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
   (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
   (rule "mul_literals" (formula "12") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "23") (term "0,0,1,1,0,0,0,1"))
   (rule "nnf_notAnd" (formula "19") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
   (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
   (rule "mul_literals" (formula "19") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "18") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
   (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
   (rule "mul_literals" (formula "18") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
   (rule "nnf_imp2or" (formula "23") (term "0,1,1,1,0,0,0,1"))
   (rule "nnf_imp2or" (formula "11") (term "0,1,0"))
   (rule "nnf_imp2or" (formula "12") (term "0,1,0"))
   (rule "nnf_imp2or" (formula "19") (term "0,1,0"))
   (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
   (rule "nnf_notAnd" (formula "11") (term "0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0"))
   (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0"))
   (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,0"))
   (rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0"))
   (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1,0"))
   (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1,0"))
   (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,1,0"))
   (rule "nnf_notAnd" (formula "19") (term "0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0,1,0"))
   (rule "add_literals" (formula "19") (term "0,0,0,0,0,0,1,0"))
   (rule "add_zero_left" (formula "19") (term "0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0"))
   (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,0"))
   (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,0"))
   (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
   (rule "nnf_notAnd" (formula "23") (term "0,0,0,1,1,0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,1,1,0,0,0,1"))
   (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,1,1,0,0,0,1"))
   (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "23") (term "1,0,0,0,0,1,1,0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,1,1,0,0,0,1"))
   (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,1,1,0,0,0,1"))
   (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,1,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,1,0,0,0,1"))
   (rule "nnf_imp2or" (formula "23") (term "0,1,0,0,1,1,0,0,0,1"))
   (rule "nnf_notAnd" (formula "23") (term "0,0,1,1,1,0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,1,1,0,0,0,1"))
   (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1,1,1,0,0,0,1"))
   (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,1,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "23") (term "1,0,0,0,1,1,1,0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,1,1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,1,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,1,1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,1,1,0,0,0,1"))
   (rule "nnf_imp2or" (formula "23") (term "0,1,0,1,1,1,0,0,0,1"))
   (rule "nnf_notAnd" (formula "23") (term "0,0,1,0,0,1,1,0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,0,0,1,1,0,0,0,1"))
   (rule "nnf_notAnd" (formula "23") (term "0,0,1,0,1,1,1,0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "add_zero_left" (formula "23") (term "0,0,0,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0,1,1,1,0,0,0,1"))
   (rule "arrayLengthNotNegative" (formula "6") (term "0"))
   (rule "arrayLengthIsAShort" (formula "7") (term "0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "all_pull_out3" (formula "12") (term "0"))
   (rule "shift_paren_or" (formula "12") (term "0,0"))
   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
   (rule "all_pull_out3" (formula "13") (term "0"))
   (rule "shift_paren_or" (formula "13") (term "0,0"))
   (rule "shift_paren_or" (formula "13") (term "0,0,0"))
   (rule "all_pull_out3" (formula "20") (term "0"))
   (rule "shift_paren_or" (formula "20") (term "0,0"))
   (rule "shift_paren_or" (formula "20") (term "0,0,0"))
   (rule "all_pull_out3" (formula "19") (term "0"))
   (rule "shift_paren_or" (formula "19") (term "0,0"))
   (rule "shift_paren_or" (formula "19") (term "0,0,0"))
   (rule "ifUnfold" (formula "24") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "24") (term "1") (newnames "x"))
   (rule "inequality_comparison_simple" (formula "24") (term "1"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "replace_known_left" (formula "24") (term "0,0,1,0") (ifseqformula "21"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "ifSplit" (formula "24"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "25"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "25"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "tryEmpty" (formula "24") (term "1"))
      (rule "blockEmptyLabel" (formula "24") (term "1"))
      (rule "blockEmpty" (formula "24") (term "1"))
      (rule "methodCallEmpty" (formula "24") (term "1"))
      (rule "emptyModality" (formula "24") (term "1"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "replaceKnownSelect_taclet1_2" (formula "24") (term "0,0,0"))
      (rule "replaceKnownSelect_taclet1_0" (formula "24") (term "1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_3" (formula "24") (term "0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "24") (term "1,0,0"))
      (rule "eqSymm" (formula "24") (term "1,0,0,1"))
      (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "18"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "nnf_notOr" (formula "24") (term "1,1,0,0,0,1"))
      (rule "andRight" (formula "24"))
      (branch
         (rule "andRight" (formula "24"))
         (branch
            (rule "allRight" (formula "24") (inst "sk=i_0"))
            (rule "orRight" (formula "24"))
            (rule "orRight" (formula "24"))
            (rule "allRight" (formula "26") (inst "sk=j_0"))
            (rule "orRight" (formula "26"))
            (rule "orRight" (formula "26"))
            (rule "inEqSimp_geqRight" (formula "25"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "25"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "28"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_leqRight" (formula "27"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "28"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "5"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
            (rule "polySimp_elimOne" (formula "5") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
            (rule "simplifySelectOfAnon" (formula "3"))
            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")) (ifInst ""  (formula "21")))
            (rule "inEqSimp_homoInEq0" (formula "4"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
            (rule "elementOfUnion" (formula "3") (term "0,0"))
            (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "10"))
            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
            (rule "mul_literals" (formula "6") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "6") (term "0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "polySimp_elimOne" (formula "6") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
            (rule "times_zero_1" (formula "10") (term "0,0"))
            (rule "add_zero_left" (formula "10") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
            (rule "mul_literals" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
            (rule "polySimp_mulComm0" (formula "7") (term "1"))
            (rule "polySimp_rightDist" (formula "7") (term "1"))
            (rule "mul_literals" (formula "7") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1"))
            (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
            (rule "simplifySelectOfAnon" (formula "4"))
            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "33")) (ifInst ""  (formula "25")))
            (rule "elementOfUnion" (formula "4") (term "0,0"))
            (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "inEqSimp_contradEq3" (formula "4") (term "0,0,0") (ifseqformula "7"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0"))
            (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
            (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_4"))
            (rule "simplifySelectOfAnon" (formula "3"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_5"))
            (rule "simplifySelectOfAnon" (formula "4"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
            (rule "times_zero_1" (formula "6") (term "0,0"))
            (rule "add_zero_left" (formula "6") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "mul_literals" (formula "6") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "6"))
            (rule "leq_literals" (formula "12") (term "0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "cut_direct" (formula "25") (term "0"))
            (branch "CUT: anonIn_a.<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "allLeft" (formula "29") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet0011_5" (formula "29") (term "1,1,0"))
               (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0,0"))
               (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0") (ifseqformula "7"))
               (rule "qeq_literals" (formula "29") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "allLeft" (formula "22") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet0011_8" (formula "22") (term "1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0011_9" (formula "22") (term "1,1,0"))
               (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0,0") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0,0"))
               (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0") (ifseqformula "7"))
               (rule "qeq_literals" (formula "22") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "ifthenelse_split" (formula "3") (term "0"))
               (branch "j_0 = anonIn_e1 ∨ j_0 = anonIn_e2 TRUE"
                  (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                  (rule "ifthenelse_split" (formula "4") (term "0"))
                  (branch "i_0 = anonIn_e2 TRUE"
                     (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                     (rule "applyEqReverse" (formula "31") (term "1,1,0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "applyEq" (formula "30") (term "0,2,1,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "5") (term "0,2,1,1") (ifseqformula "4"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "4"))
                     (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "4"))
                     (rule "applyEqRigid" (formula "10") (term "1,1") (ifseqformula "4"))
                     (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "4"))
                     (rule "applyEqRigid" (formula "22") (term "0,2,1,1,0") (ifseqformula "4"))
                     (rule "inEqSimp_contradEq7" (formula "3") (term "1") (ifseqformula "9"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "3") (term "0,0,1"))
                     (rule "leq_literals" (formula "3") (term "0,1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "9"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "3"))
                     (rule "applyEq" (formula "2") (term "1") (ifseqformula "3"))
                     (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "5"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1"))
                     (rule "polySimp_rightDist" (formula "9") (term "1"))
                     (rule "mul_literals" (formula "9") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0"))
                     (rule "qeq_literals" (formula "29") (term "0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "true_left" (formula "29"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "6"))
                     (rule "leq_literals" (formula "12") (term "0"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "13"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "16"))
                     (rule "andLeft" (formula "8"))
                     (rule "inEqSimp_homoInEq1" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "1,1,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0"))
                     (rule "add_zero_right" (formula "8") (term "0"))
                     (rule "leq_literals" (formula "8"))
                     (rule "closeFalse" (formula "8"))
                  )
                  (branch "i_0 = anonIn_e2 FALSE"
                     (rule "applyEqReverse" (formula "30") (term "1,1,0") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "allLeft" (formula "29") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet0011_4" (formula "29") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet000011_10" (formula "29") (term "0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "29") (term "1") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1"))
                     (rule "leq_literals" (formula "29") (term "0,1"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1"))
                     (rule "leq_literals" (formula "29") (term "0,1"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "29"))
                     (rule "andLeft" (formula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,1,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0"))
                     (rule "add_zero_right" (formula "2") (term "0"))
                     (rule "leq_literals" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
               (branch "j_0 = anonIn_e1 ∨ j_0 = anonIn_e2 FALSE"
                  (rule "orRight" (formula "35"))
                  (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "ifthenelse_split" (formula "3") (term "0"))
                  (branch "i_0 = anonIn_e2 TRUE"
                     (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "30") (term "1,1,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "inEqSimp_homoInEq0" (formula "4"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "applyEqRigid" (formula "4") (term "0,2,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "29") (term "0,2,1,1,0") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "8") (term "1,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "21") (term "0,2,1,1,0") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "8"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                     (rule "add_literals" (formula "35") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0"))
                     (rule "leq_literals" (formula "35") (term "0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "false_right" (formula "35"))
                     (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "17"))
                     (rule "andLeft" (formula "7"))
                     (rule "inEqSimp_homoInEq1" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                     (rule "mul_literals" (formula "7") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                     (rule "add_literals" (formula "7") (term "1,1,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0"))
                     (rule "add_zero_right" (formula "7") (term "0"))
                     (rule "leq_literals" (formula "7"))
                     (rule "closeFalse" (formula "7"))
                  )
                  (branch "i_0 = anonIn_e2 FALSE"
                     (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "3"))
                     (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "allLeft" (formula "28") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet0011_4" (formula "28") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet100011_10" (formula "28") (term "0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "28") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                     (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                     (rule "add_literals" (formula "28") (term "0,0,1"))
                     (rule "leq_literals" (formula "28") (term "0,1"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                     (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,0"))
                     (rule "leq_literals" (formula "28") (term "0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "1"))
                     (rule "andLeft" (formula "28"))
                     (rule "inEqSimp_homoInEq1" (formula "28"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                     (rule "add_literals" (formula "28") (term "1,1,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0"))
                     (rule "add_literals" (formula "28") (term "0"))
                     (rule "leq_literals" (formula "28"))
                     (rule "closeFalse" (formula "28"))
                  )
               )
            )
            (branch "CUT: anonIn_a.<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "25"))
               (rule "allLeft" (formula "29") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet0011_5" (formula "29") (term "1,1,0"))
               (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0,0") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0,0"))
               (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0,0,0") (ifseqformula "7"))
               (rule "qeq_literals" (formula "29") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "allLeft" (formula "22") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet0011_8" (formula "22") (term "1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0011_9" (formula "22") (term "1,1,0"))
               (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0,0") (ifseqformula "10"))
               (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0,0"))
               (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0") (ifseqformula "7"))
               (rule "qeq_literals" (formula "22") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "ifthenelse_split" (formula "3") (term "0"))
               (branch "j_0 = anonIn_e1 ∨ j_0 = anonIn_e2 TRUE"
                  (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                  (rule "ifthenelse_split" (formula "4") (term "0"))
                  (branch "i_0 = anonIn_e2 TRUE"
                     (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                     (rule "applyEqReverse" (formula "31") (term "1,1,0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "applyEq" (formula "22") (term "0,2,1,1,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                     (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "4"))
                     (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "4"))
                     (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "4"))
                     (rule "applyEq" (formula "5") (term "0,2,1,1") (ifseqformula "4"))
                     (rule "applyEq" (formula "30") (term "0,2,1,1,0") (ifseqformula "4"))
                     (rule "inEqSimp_contradEq7" (formula "3") (term "1") (ifseqformula "9"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "3") (term "0,0,1"))
                     (rule "leq_literals" (formula "3") (term "0,1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "3"))
                     (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "5"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "9"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "3"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1"))
                     (rule "polySimp_rightDist" (formula "5") (term "1"))
                     (rule "mul_literals" (formula "5") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1"))
                     (rule "polySimp_rightDist" (formula "9") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                     (rule "mul_literals" (formula "9") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0"))
                     (rule "add_literals" (formula "29") (term "0,0"))
                     (rule "qeq_literals" (formula "29") (term "0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "true_left" (formula "29"))
                     (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "14"))
                     (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0"))
                     (rule "qeq_literals" (formula "8") (term "0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "7"))
                     (rule "andLeft" (formula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                     (rule "add_literals" (formula "16") (term "1,1,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0"))
                     (rule "add_literals" (formula "16") (term "0"))
                     (rule "leq_literals" (formula "16"))
                     (rule "closeFalse" (formula "16"))
                  )
                  (branch "i_0 = anonIn_e2 FALSE"
                     (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "30") (term "1,1,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "allLeft" (formula "21") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet0011_6" (formula "21") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0011_7" (formula "21") (term "0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "21") (term "0,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "21") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0"))
                     (rule "leq_literals" (formula "21") (term "0,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "allLeft" (formula "30") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet0011_4" (formula "30") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet010011_10" (formula "30") (term "0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "30") (term "0,0,1"))
                     (rule "leq_literals" (formula "30") (term "0,1"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "30") (term "0,0,1"))
                     (rule "leq_literals" (formula "30") (term "0,1"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "2"))
                     (rule "andLeft" (formula "30"))
                     (rule "inEqSimp_homoInEq1" (formula "30"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                     (rule "add_literals" (formula "30") (term "1,1,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0"))
                     (rule "add_zero_right" (formula "30") (term "0"))
                     (rule "leq_literals" (formula "30"))
                     (rule "closeFalse" (formula "30"))
                  )
               )
               (branch "j_0 = anonIn_e1 ∨ j_0 = anonIn_e2 FALSE"
                  (rule "orRight" (formula "35"))
                  (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "ifthenelse_split" (formula "3") (term "0"))
                  (branch "i_0 = anonIn_e2 TRUE"
                     (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "30") (term "1,1,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "inEqSimp_homoInEq0" (formula "4"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "applyEqRigid" (formula "29") (term "0,2,1,1,0") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "21") (term "0,2,1,1,0") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "3"))
                     (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "4") (term "0,2,1,0") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "3"))
                     (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "8"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                     (rule "add_literals" (formula "35") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0"))
                     (rule "add_zero_right" (formula "35") (term "0,0"))
                     (rule "leq_literals" (formula "35") (term "0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "false_right" (formula "35"))
                     (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "7"))
                     (rule "andLeft" (formula "17"))
                     (rule "inEqSimp_homoInEq1" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "1,1,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0"))
                     (rule "add_zero_right" (formula "17") (term "0"))
                     (rule "leq_literals" (formula "17"))
                     (rule "closeFalse" (formula "17"))
                  )
                  (branch "i_0 = anonIn_e2 FALSE"
                     (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                     (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "allLeft" (formula "20") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet0011_6" (formula "20") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0011_7" (formula "20") (term "0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "20") (term "0,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "20") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1"))
                     (rule "leq_literals" (formula "20") (term "0,1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "1"))
                     (rule "andLeft" (formula "20"))
                     (rule "inEqSimp_homoInEq1" (formula "20"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                     (rule "add_literals" (formula "20") (term "1,1,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0"))
                     (rule "add_zero_right" (formula "20") (term "0"))
                     (rule "leq_literals" (formula "20"))
                     (rule "closeFalse" (formula "20"))
                  )
               )
            )
         )
         (branch
            (rule "allRight" (formula "24") (inst "sk=i_0"))
            (rule "orRight" (formula "24"))
            (rule "orRight" (formula "24"))
            (rule "allRight" (formula "26") (inst "sk=j_0"))
            (rule "orRight" (formula "26"))
            (rule "orRight" (formula "26"))
            (rule "inEqSimp_leqRight" (formula "24"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "25"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "28"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_geqRight" (formula "28"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "28"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
            (rule "polySimp_elimOne" (formula "4") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
            (rule "simplifySelectOfAnon" (formula "3"))
            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")) (ifInst ""  (formula "21")))
            (rule "inEqSimp_homoInEq0" (formula "4"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1"))
            (rule "polySimp_rightDist" (formula "4") (term "1"))
            (rule "mul_literals" (formula "4") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
            (rule "polySimp_elimOne" (formula "4") (term "1,1"))
            (rule "elementOfUnion" (formula "3") (term "0,0"))
            (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "polySimp_mulComm0" (formula "11") (term "1"))
            (rule "polySimp_rightDist" (formula "11") (term "1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
            (rule "mul_literals" (formula "11") (term "0,1"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1"))
            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
            (rule "polySimp_mulComm0" (formula "5") (term "1"))
            (rule "polySimp_rightDist" (formula "5") (term "1"))
            (rule "mul_literals" (formula "5") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
            (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_3"))
            (rule "simplifySelectOfAnon" (formula "4"))
            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "32")) (ifInst ""  (formula "24")))
            (rule "elementOfUnion" (formula "4") (term "0,0"))
            (rule "elementOfSingleton" (formula "4") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "elementOfSingleton" (formula "4") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_4"))
            (rule "simplifySelectOfAnon" (formula "3"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_5"))
            (rule "simplifySelectOfAnon" (formula "4"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "cut_direct" (formula "24") (term "0"))
            (branch "CUT: anonIn_a.<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "allLeft" (formula "22") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet1011_8" (formula "22") (term "1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1011_9" (formula "22") (term "1,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0,0") (ifseqformula "8"))
               (rule "qeq_literals" (formula "22") (term "0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0") (ifseqformula "7"))
               (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0"))
               (rule "leq_literals" (formula "22") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "allLeft" (formula "30") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet1011_5" (formula "30") (term "1,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "7"))
               (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0") (ifseqformula "8"))
               (rule "qeq_literals" (formula "30") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "ifthenelse_split" (formula "3") (term "0"))
               (branch "j_0 = anonIn_e1 ∨ j_0 = anonIn_e2 TRUE"
                  (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                  (rule "ifthenelse_split" (formula "4") (term "0"))
                  (branch "i_0 = anonIn_e1 ∨ i_0 = anonIn_e2 TRUE"
                     (rule "applyEqReverse" (formula "31") (term "1,1,0") (ifseqformula "5"))
                     (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "allLeft" (formula "22") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet1011_6" (formula "22") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1011_7" (formula "22") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                     (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "22") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,0"))
                     (rule "leq_literals" (formula "22") (term "0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "allLeft" (formula "31") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet1011_4" (formula "31") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet001011_10" (formula "31") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                     (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "31") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0"))
                     (rule "leq_literals" (formula "31") (term "0,0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "5"))
                     (rule "andLeft" (formula "31"))
                     (rule "inEqSimp_homoInEq1" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0"))
                     (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                     (rule "add_literals" (formula "31") (term "1,1,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0"))
                     (rule "add_zero_right" (formula "31") (term "0"))
                     (rule "leq_literals" (formula "31"))
                     (rule "closeFalse" (formula "31"))
                  )
                  (branch "i_0 = anonIn_e1 ∨ i_0 = anonIn_e2 FALSE"
                     (rule "orRight" (formula "34"))
                     (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "30") (term "1,1,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "allLeft" (formula "21") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet1011_6" (formula "21") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1011_7" (formula "21") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                     (rule "inEqSimp_contradInEq0" (formula "21") (term "0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "21") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0"))
                     (rule "leq_literals" (formula "21") (term "0,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "allLeft" (formula "30") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet1011_4" (formula "30") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet001011_10" (formula "30") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                     (rule "inEqSimp_contradInEq0" (formula "30") (term "0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "30") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "30") (term "0,0,1"))
                     (rule "leq_literals" (formula "30") (term "0,1"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "30"))
                     (rule "andLeft" (formula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,1,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0"))
                     (rule "add_zero_right" (formula "2") (term "0"))
                     (rule "leq_literals" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
               (branch "j_0 = anonIn_e1 ∨ j_0 = anonIn_e2 FALSE"
                  (rule "orRight" (formula "34"))
                  (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "ifthenelse_split" (formula "3") (term "0"))
                  (branch "i_0 = anonIn_e1 ∨ i_0 = anonIn_e2 TRUE"
                     (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "30") (term "1,1,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "inEqSimp_homoInEq0" (formula "4"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "allLeft" (formula "21") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet1011_6" (formula "21") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1011_7" (formula "21") (term "0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "21") (term "0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "21") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0"))
                     (rule "leq_literals" (formula "21") (term "0,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "allLeft" (formula "30") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet1011_4" (formula "30") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet101011_10" (formula "30") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0"))
                     (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                     (rule "inEqSimp_contradInEq0" (formula "30") (term "0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "30") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0,0"))
                     (rule "leq_literals" (formula "30") (term "0,0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "30"))
                     (rule "andLeft" (formula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "1,1,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0"))
                     (rule "add_zero_right" (formula "4") (term "0"))
                     (rule "leq_literals" (formula "4"))
                     (rule "closeFalse" (formula "4"))
                  )
                  (branch "i_0 = anonIn_e1 ∨ i_0 = anonIn_e2 FALSE"
                     (rule "orRight" (formula "33"))
                     (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "3"))
                     (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "allLeft" (formula "20") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet1011_6" (formula "20") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1011_7" (formula "20") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                     (rule "inEqSimp_contradInEq0" (formula "20") (term "0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "20") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1"))
                     (rule "leq_literals" (formula "20") (term "0,1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "20"))
                     (rule "andLeft" (formula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,1,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0"))
                     (rule "add_zero_right" (formula "2") (term "0"))
                     (rule "leq_literals" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
            )
            (branch "CUT: anonIn_a.<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "24"))
               (rule "allLeft" (formula "22") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet1011_8" (formula "22") (term "1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1011_9" (formula "22") (term "1,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0,0,0,0") (ifseqformula "7"))
               (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,0,0"))
               (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0,0,0") (ifseqformula "8"))
               (rule "qeq_literals" (formula "22") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "allLeft" (formula "30") (inst "t=i_0"))
               (rule "replaceKnownSelect_taclet1011_5" (formula "30") (term "1,1,0"))
               (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0,0,0") (ifseqformula "7"))
               (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
               (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
               (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0,0,0"))
               (rule "add_zero_right" (formula "30") (term "0,0,1,0,0,0,0"))
               (rule "leq_literals" (formula "30") (term "0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0,0,0") (ifseqformula "8"))
               (rule "qeq_literals" (formula "30") (term "0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "ifthenelse_split" (formula "3") (term "0"))
               (branch "j_0 = anonIn_e1 ∨ j_0 = anonIn_e2 TRUE"
                  (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                  (rule "ifthenelse_split" (formula "4") (term "0"))
                  (branch "i_0 = anonIn_e1 ∨ i_0 = anonIn_e2 TRUE"
                     (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                     (rule "applyEqReverse" (formula "31") (term "1,1,0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "allLeft" (formula "22") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet1011_6" (formula "22") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1011_7" (formula "22") (term "0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "22") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,0"))
                     (rule "leq_literals" (formula "22") (term "0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "allLeft" (formula "31") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet1011_4" (formula "31") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet011011_10" (formula "31") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                     (rule "inEqSimp_contradInEq0" (formula "31") (term "1") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "31") (term "0,0,1"))
                     (rule "leq_literals" (formula "31") (term "0,1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "inEqSimp_contradInEq0" (formula "31") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0"))
                     (rule "leq_literals" (formula "31") (term "0,0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "2"))
                     (rule "andLeft" (formula "31"))
                     (rule "inEqSimp_homoInEq1" (formula "31"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                     (rule "add_literals" (formula "31") (term "1,1,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0"))
                     (rule "add_literals" (formula "31") (term "0"))
                     (rule "leq_literals" (formula "31"))
                     (rule "closeFalse" (formula "31"))
                  )
                  (branch "i_0 = anonIn_e1 ∨ i_0 = anonIn_e2 FALSE"
                     (rule "orRight" (formula "34"))
                     (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "30") (term "1,1,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "allLeft" (formula "29") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet1011_4" (formula "29") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet011011_10" (formula "29") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                     (rule "inEqSimp_contradInEq0" (formula "29") (term "0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "29") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,0"))
                     (rule "leq_literals" (formula "29") (term "0,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq0" (formula "29") (ifseqformula "4"))
                     (rule "andLeft" (formula "29"))
                     (rule "inEqSimp_homoInEq1" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0"))
                     (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                     (rule "add_literals" (formula "29") (term "1,1,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0"))
                     (rule "add_literals" (formula "29") (term "0"))
                     (rule "leq_literals" (formula "29"))
                     (rule "closeFalse" (formula "29"))
                  )
               )
               (branch "j_0 = anonIn_e1 ∨ j_0 = anonIn_e2 FALSE"
                  (rule "orRight" (formula "34"))
                  (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                  (rule "ifthenelse_split" (formula "3") (term "0"))
                  (branch "i_0 = anonIn_e1 ∨ i_0 = anonIn_e2 TRUE"
                     (rule "applyEqReverse" (formula "30") (term "1,1,0") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "inEqSimp_homoInEq0" (formula "4"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "allLeft" (formula "29") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet1011_4" (formula "29") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet111011_10" (formula "29") (term "0,1"))
                     (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1"))
                     (rule "leq_literals" (formula "29") (term "0,1"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "29") (term "0,0,1"))
                     (rule "leq_literals" (formula "29") (term "0,1"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "inEqSimp_contradInEq0" (formula "29") (ifseqformula "1"))
                     (rule "andLeft" (formula "29"))
                     (rule "inEqSimp_homoInEq1" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0"))
                     (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                     (rule "add_literals" (formula "29") (term "1,1,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0"))
                     (rule "add_literals" (formula "29") (term "0"))
                     (rule "leq_literals" (formula "29"))
                     (rule "closeFalse" (formula "29"))
                  )
                  (branch "i_0 = anonIn_e1 ∨ i_0 = anonIn_e2 FALSE"
                     (rule "orRight" (formula "33"))
                     (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "3"))
                     (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "allLeft" (formula "28") (inst "t=j_0"))
                     (rule "replaceKnownSelect_taclet1011_4" (formula "28") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet111011_10" (formula "28") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                     (rule "inEqSimp_contradInEq0" (formula "28") (term "0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                     (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "28") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "inEqSimp_contradInEq0" (formula "28") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                     (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "28") (term "0,0,1"))
                     (rule "leq_literals" (formula "28") (term "0,1"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "2"))
                     (rule "andLeft" (formula "28"))
                     (rule "inEqSimp_homoInEq1" (formula "28"))
                     (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                     (rule "add_literals" (formula "28") (term "1,1,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0"))
                     (rule "add_zero_right" (formula "28") (term "0"))
                     (rule "leq_literals" (formula "28"))
                     (rule "closeFalse" (formula "28"))
                  )
               )
            )
         )
      )
      (branch
         (rule "allRight" (formula "24") (inst "sk=f_0"))
         (rule "allRight" (formula "24") (inst "sk=o_0"))
         (rule "orRight" (formula "24"))
         (rule "orRight" (formula "24"))
         (rule "orRight" (formula "24"))
         (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "eqSymm" (formula "28"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "26"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "25"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=f_0_1"))
         (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "commute_and" (formula "27"))
         (rule "commute_and" (formula "26"))
         (rule "shift_paren_and" (formula "28"))
         (rule "cnf_rightDist" (formula "1") (term "0,0"))
         (rule "commute_or" (formula "1") (term "1,0,0"))
         (rule "ifthenelse_split" (formula "1") (term "0"))
         (branch " (¬f_0 = java.lang.Object::<created> ∨ ¬o_0 = null) ∧ ( ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE) TRUE"
            (rule "andLeft" (formula "1"))
            (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "ifthenelse_split" (formula "3") (term "0"))
            (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anonIn_heap«anonHeapFunction» = TRUE) TRUE"
               (rule "andLeft" (formula "3"))
               (rule "notLeft" (formula "3"))
               (rule "notLeft" (formula "3"))
               (rule "orRight" (formula "26"))
               (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "eqSymm" (formula "32"))
               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "replace_known_right" (formula "29") (term "0,0,0") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")))
               (rule "closeTrue" (formula "29"))
            )
            (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anonIn_heap«anonHeapFunction» = TRUE) FALSE"
               (rule "close" (formula "31") (ifseqformula "3"))
            )
         )
         (branch " (¬f_0 = java.lang.Object::<created> ∨ ¬o_0 = null) ∧ ( ¬f_0 = java.lang.Object::<created> ∨ ¬o_0.<created> = TRUE) FALSE"
            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "andRight" (formula "24"))
            (branch
               (rule "orRight" (formula "24"))
               (rule "notRight" (formula "25"))
               (rule "notRight" (formula "25"))
               (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
               (rule "closeFalse" (formula "3"))
            )
            (branch
               (rule "orRight" (formula "24"))
               (rule "notRight" (formula "24"))
               (rule "notRight" (formula "25"))
               (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
               (rule "closeFalse" (formula "3"))
            )
         )
      )
   )
)
)

}
