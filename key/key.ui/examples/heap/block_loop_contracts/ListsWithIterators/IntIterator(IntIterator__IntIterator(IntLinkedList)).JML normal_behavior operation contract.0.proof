\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Mar 25 16:53:51 CET 2019
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=\\#begboolean_equal_2\\#end,\\#begboolean_not_equal_1\\#end,\\#begboolean_not_equal_2\\#end,\\#begtrue_to_not_false\\#end,\\#begfalse_to_not_true\\#end,\\#begboolean_true_commute\\#end,\\#begboolean_false_commute\\#end,\\#begapply_eq_boolean\\#end,\\#begapply_eq_boolean_2\\#end,\\#begapply_eq_boolean_rigid\\#end,\\#begapply_eq_boolean_rigid_2\\#end,\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end,\\#begreplace_byte_MAX\\#end,\\#begreplace_byte_MIN\\#end,\\#begreplace_char_MAX\\#end,\\#begreplace_char_MIN\\#end,\\#begreplace_short_MAX\\#end,\\#begreplace_short_MIN\\#end,\\#begreplace_int_MAX\\#end,\\#begreplace_int_MIN\\#end,\\#begreplace_long_MAX\\#end,\\#begreplace_long_MIN\\#end,\\#begreplace_byte_RANGE\\#end,\\#begreplace_byte_HALFRANGE\\#end,\\#begreplace_short_RANGE\\#end,\\#begreplace_short_HALFRANGE\\#end,\\#begreplace_char_RANGE\\#end,\\#begreplace_int_RANGE\\#end,\\#begreplace_int_HALFRANGE\\#end,\\#begreplace_long_RANGE\\#end,\\#begreplace_long_HALFRANGE\\#end,\\#begtranslateJavaUnaryMinusInt\\#end,\\#begtranslateJavaUnaryMinusLong\\#end,\\#begtranslateJavaBitwiseNegation\\#end,\\#begtranslateJavaAddInt\\#end,\\#begtranslateJavaAddLong\\#end,\\#begtranslateJavaSubInt\\#end,\\#begtranslateJavaSubLong\\#end,\\#begtranslateJavaMulInt\\#end,\\#begtranslateJavaMulLong\\#end,\\#begtranslateJavaMod\\#end,\\#begtranslateJavaDivInt\\#end,\\#begtranslateJavaDivLong\\#end,\\#begtranslateJavaCastByte\\#end,\\#begtranslateJavaCastShort\\#end,\\#begtranslateJavaCastInt\\#end,\\#begtranslateJavaCastLong\\#end,\\#begtranslateJavaCastChar\\#end,\\#begtranslateJavaShiftRightInt\\#end,\\#begtranslateJavaShiftRightLong\\#end,\\#begtranslateJavaShiftLeftInt\\#end,\\#begtranslateJavaShiftLeftLong\\#end,\\#begtranslateJavaUnsignedShiftRightInt\\#end,\\#begtranslateJavaUnsignedShiftRightLong\\#end,\\#begtranslateJavaBitwiseOrInt\\#end,\\#begtranslateJavaBitwiseOrLong\\#end,\\#begtranslateJavaBitwiseAndInt\\#end,\\#begtranslateJavaBitwiseAndLong\\#end,\\#begtranslateJavaBitwiseXOrInt\\#end,\\#begtranslateJavaBitwiseXOrLong\\#end,\\#begelementOfEmpty\\#end,\\#begelementOfAllLocs\\#end,\\#begelementOfSingleton\\#end,\\#begelementOfUnion\\#end,\\#begelementOfIntersect\\#end,\\#begelementOfSetMinus\\#end,\\#begelementOfAllFields\\#end,\\#begelementOfAllObjects\\#end,\\#begelementOfArrayRange\\#end,\\#begelementOfFreshLocs\\#end,\\#begequalityToElementOf\\#end,\\#begsubsetToElementOf\\#end,\\#begdisjointToElementOf\\#end,\\#begcreatedInHeapToElementOf\\#end,\\#begelementOfEmptyEQ\\#end,\\#begelementOfAllLocsEQ\\#end,\\#begelementOfSingletonEQ\\#end,\\#begelementOfUnionEQ\\#end,\\#begelementOfIntersectEQ\\#end,\\#begelementOfSetMinusEQ\\#end,\\#begelementOfAllFieldsEQ\\#end,\\#begelementOfAllObjectsEQ\\#end,\\#begelementOfArrayRangeEQ\\#end,\\#begelementOfFreshLocsEQ\\#end,\\#begunionWithEmpty1\\#end,\\#begunionWithEmpty2\\#end,\\#begunionWithAllLocs1\\#end,\\#begunionWithAllLocs2\\#end,\\#begintersectWithEmpty1\\#end,\\#begintersectWithEmpty2\\#end,\\#begintersectWithAllLocs1\\#end,\\#begintersectWithAllLocs2\\#end,\\#begsetMinusWithEmpty1\\#end,\\#begsetMinusWithEmpty2\\#end,\\#begsetMinusWithAllLocs\\#end,\\#begsubsetWithEmpty\\#end,\\#begsubsetWithAllLocs\\#end,\\#begdisjointWithEmpty1\\#end,\\#begdisjointWithEmpty2\\#end,\\#begcreatedInHeapWithEmpty\\#end,\\#begcreatedInHeapWithSingleton\\#end,\\#begcreatedInHeapWithUnion\\#end,\\#begcreatedInHeapWithSetMinusFreshLocs\\#end,\\#begcreatedInHeapWithAllFields\\#end,\\#begcreatedInHeapWithArrayRange\\#end,\\#begreferencedObjectIsCreatedRight\\#end,\\#begreferencedObjectIsCreatedRightEQ\\#end,\\#begunionWithItself\\#end,\\#begintersectWithItself\\#end,\\#begsetMinusItself\\#end,\\#begsubsetOfItself\\#end,\\#begselectOfStore\\#end,\\#begselectOfCreate\\#end,\\#begselectOfAnon\\#end,\\#begselectOfMemset\\#end,\\#begonlyCreatedObjectsAreReferenced\\#end,\\#begonlyCreatedObjectsAreInLocSets\\#end,\\#begonlyCreatedObjectsAreInLocSetsEQ\\#end,\\#begarrayLengthNotNegative\\#end,\\#begwellFormedStoreObject\\#end,\\#begwellFormedStoreLocSet\\#end,\\#begwellFormedStorePrimitive\\#end,\\#begwellFormedCreate\\#end,\\#begwellFormedAnon\\#end,\\#begwellFormedMemsetObject\\#end,\\#begwellFormedMemsetLocSet\\#end,\\#begwellFormedMemsetPrimitive\\#end,\\#begselectOfStoreEQ\\#end,\\#begselectOfCreateEQ\\#end,\\#begselectOfAnonEQ\\#end,\\#begselectOfMemsetEQ\\#end,\\#begmemsetEmpty\\#end,\\#begselectCreatedOfAnonEQ\\#end,\\#begwellFormedStoreObjectEQ\\#end,\\#begwellFormedStoreLocSetEQ\\#end,\\#begwellFormedStorePrimitiveEQ\\#end,\\#begwellFormedAnonEQ\\#end,\\#begwellFormedMemsetObjectEQ\\#end,\\#begwellFormedMemsetPrimitiveEQ\\#end
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_OFF
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_EXTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";

\proofObligation "#Proof Obligation Settings
#Mon Mar 25 16:53:51 CET 2019
contract=IntIterator[IntIterator\\:\\:IntIterator(IntLinkedList)].JML normal_behavior operation contract.0
name=IntIterator[IntIterator\\:\\:IntIterator(IntLinkedList)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "65978")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "list,self,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "eqSymm" (formula "6") (term "0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "6") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
(builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "self_1"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "6") (term "1") (inst "#v0=i"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "i"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
(builtin "One Step Simplification" (formula "6"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "6") (term "1") (inst "#v0=i_1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "i_1"))
(rule "allocateInstance" (formula "6"))
(builtin "One Step Simplification" (formula "7"))
(builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment_write_attribute_this" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallWithinClass" (formula "9") (term "1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallSuper" (formula "9") (term "1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallEmpty" (formula "9") (term "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "assignment_write_attribute_this" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment_write_attribute_this" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment_write_attribute_this" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment_write_attribute_this" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallEmpty" (formula "9") (term "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "9") (term "1"))
(rule "methodCallReturn" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallEmpty" (formula "9") (term "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "var"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallSuper" (formula "9") (term "1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallEmpty" (formula "9") (term "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "assignment_write_attribute_this" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "eval_order_access4" (formula "9") (term "1") (inst "#v1=i_1") (inst "#v0=i"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "i_2"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "i_3"))
(rule "assignment_read_attribute" (formula "9") (term "1"))
(branch "Normal Execution (var != null)"
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
   (rule "false_right" (formula "9"))
   (rule "dismissNonSelectedField" (formula "9") (term "0,1,0"))
   (rule "dismissNonSelectedField" (formula "9") (term "0,1,0"))
   (rule "dismissNonSelectedField" (formula "9") (term "0,1,0"))
   (rule "dismissNonSelectedField" (formula "9") (term "0,1,0"))
   (rule "dismissNonSelectedField" (formula "9") (term "0,1,0"))
   (rule "pullOutSelect" (formula "9") (term "0,1,0") (inst "selectSK=IntLinkedList_first_0"))
   (rule "simplifySelectOfCreate" (formula "1"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
   (rule "applyEqReverse" (formula "10") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "assignment_write_attribute" (formula "9") (term "1"))
   (branch "Normal Execution (i_2 != null)"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")))
      (rule "false_right" (formula "9"))
      (rule "methodCallEmpty" (formula "9") (term "1"))
      (rule "blockEmpty" (formula "9") (term "1"))
      (rule "assignment_write_attribute" (formula "9") (term "1"))
      (branch "Normal Execution (self_1 != null)"
         (builtin "One Step Simplification" (formula "10"))
         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")))
         (rule "false_right" (formula "9"))
         (rule "tryEmpty" (formula "9") (term "1"))
         (rule "emptyModality" (formula "9") (term "1"))
         (rule "andRight" (formula "9"))
         (branch "Case 1"
            (rule "andRight" (formula "9"))
            (branch "Case 1"
               (rule "andRight" (formula "9"))
               (branch "Case 1"
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "Class_invariant_axiom_for_IntLinkedList" (formula "9") (inst "i=i_4") (inst "j=j") (inst "i_0=i_0") (inst "i_1=i_1_1") (inst "sk=sk_0") (userinteraction))
                  (branch "Use Axiom"
                     (rule "Class_invariant_axiom_for_IntLinkedList" (formula "5") (inst "i=i_4") (inst "j=j") (inst "i_0=i_0") (inst "i_1=i_1_1") (inst "sk=sk_1") (userinteraction))
                     (branch "Use Axiom"
                        (rule "andRight" (formula "9"))
                        (branch "Case 1"
                           (rule "andRight" (formula "9"))
                           (branch "Case 1"
                              (rule "andRight" (formula "9"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "9"))
                                 (branch
                                    (rule "andRight" (formula "9"))
                                    (branch
                                       (rule "andRight" (formula "9"))
                                       (branch
                                          (rule "andRight" (formula "9"))
                                          (branch
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                             (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "eqSymm" (formula "11"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "eqSymm" (formula "10"))
                                             (rule "eqSymm" (formula "9") (term "1,1,0"))
                                             (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                             (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "8"))
                                             (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                             (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                             (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                             (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                             (rule "subsetSingletonLeft" (formula "17"))
                                             (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                             (rule "subsetSingletonLeft" (formula "5"))
                                             (rule "subsetSingletonLeft" (formula "6"))
                                             (rule "castedGetAny" (formula "10") (term "2,0"))
                                             (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "1,1,1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                             (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                             (rule "castedGetAny" (formula "11") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "2"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "2"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "2"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "2"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "2"))
                                             (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                             (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                             (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "pullOutSelect" (formula "15") (term "2") (inst "selectSK=IntList_footprint_0"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                             (rule "applyEqReverse" (formula "16") (term "2") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "elementOfUnionEQ" (formula "15") (ifseqformula "6"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "closeTrue" (formula "15"))
                                          )
                                          (branch
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "eqSymm" (formula "11"))
                                             (rule "eqSymm" (formula "10"))
                                             (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                             (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "9") (term "1,1,0"))
                                             (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "8"))
                                             (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                             (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                             (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                             (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                             (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                             (rule "subsetSingletonLeft" (formula "6"))
                                             (rule "subsetSingletonLeft" (formula "5"))
                                             (rule "castedGetAny" (formula "10") (term "2,0"))
                                             (rule "castedGetAny" (formula "9") (term "1,1,1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                             (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                             (rule "castedGetAny" (formula "11") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                             (rule "subsetSingletonLeft" (formula "17"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "2"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "2"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "2"))
                                             (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                             (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                             (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "pullOutSelect" (formula "15") (term "2") (inst "selectSK=IntList_footprint_0"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                             (rule "applyEqReverse" (formula "16") (term "2") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "elementOfUnionEQ" (formula "15") (ifseqformula "6"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "closeTrue" (formula "15"))
                                          )
                                       )
                                       (branch
                                          (builtin "One Step Simplification" (formula "5"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                          (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                          (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "allRight" (formula "17") (inst "sk=i_1_1_0"))
                                          (rule "impRight" (formula "17"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "eqSymm" (formula "14"))
                                          (rule "eqSymm" (formula "15"))
                                          (rule "eqSymm" (formula "12"))
                                          (rule "eqSymm" (formula "11") (term "1,1,0"))
                                          (rule "eqSymm" (formula "11") (term "0,1,0,1,0,1,0"))
                                          (rule "eqSymm" (formula "11") (term "1,1,0,1,0,1,0"))
                                          (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
                                          (rule "eqSymm" (formula "10"))
                                          (rule "polySimp_elimSub" (formula "13") (term "1,0,2,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,2,0"))
                                          (rule "polySimp_elimSub" (formula "11") (term "1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "11") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1,1,0"))
                                          (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,1,0"))
                                          (rule "subsetSingletonLeft" (formula "8"))
                                          (rule "subsetSingletonLeft" (formula "7"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                          (rule "castedGetAny" (formula "12") (term "2,0"))
                                          (rule "castedGetAny" (formula "11") (term "1,1,1,1,0"))
                                          (rule "castedGetAny" (formula "11") (term "1,0,1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "11") (term "0,0,1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "11") (term "1,1,1,0,0,1,0"))
                                          (rule "castedGetAny" (formula "11") (term "0,1,0,0,1,0"))
                                          (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
                                          (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "11") (term "2,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "13") (term "2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                          (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "pullOutSelect" (formula "17") (term "0,0,0,0") (inst "selectSK=IntList_seq_0"))
                                          (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "18") (term "0,0,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                          (rule "applyEqReverse" (formula "18") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "18") (term "0,0,0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                                          (rule "nnf_imp2or" (formula "9") (term "0"))
                                          (rule "nnf_imp2or" (formula "7") (term "0"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "9") (term "0,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,0,1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "9") (term "1,0,1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "7") (term "0"))
                                          (rule "distr_forallAnd" (formula "7"))
                                          (rule "andLeft" (formula "7"))
                                          (rule "commute_or_2" (formula "7") (term "0"))
                                          (rule "shift_paren_or" (formula "8") (term "0"))
                                          (rule "commute_or" (formula "7") (term "0,0"))
                                          (rule "ifthenelse_to_or_left" (formula "10") (term "1,1,0"))
                                          (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
                                          (rule "eqSymm" (formula "10") (term "1,1,1,1,0"))
                                          (rule "commute_or" (formula "10") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "10") (term "1,1,1,0"))
                                          (rule "shift_paren_or" (formula "10") (term "0,1,0,1,0"))
                                          (rule "commute_or_2" (formula "10") (term "0,0,1,0,1,0"))
                                          (rule "ifthenelse_split" (formula "11") (term "0"))
                                          (branch "list.size = 0 TRUE"
                                             (rule "eqSymm" (formula "12"))
                                             (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "11"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "10") (term "1,1,0,0,1,0,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "9") (term "1,1,1,0,0,1,0") (ifseqformula "11"))
                                             (rule "add_zero_right" (formula "9") (term "1,1,0,0,1,0"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "times_zero_2" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "14") (term "1") (ifseqformula "11"))
                                             (rule "applyEq" (formula "10") (term "1,1,0,1,0,1,1,0") (ifseqformula "11"))
                                             (rule "add_literals" (formula "10") (term "1,0,1,0,1,1,0"))
                                             (rule "applyEq" (formula "15") (term "1") (ifseqformula "11"))
                                             (rule "applyEq" (formula "10") (term "1,1,1,1,1,1,0") (ifseqformula "11"))
                                             (rule "add_literals" (formula "10") (term "1,1,1,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "list.size = 0 FALSE"
                                             (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "commute_or" (formula "10") (term "0,0,0,1,0,1,0"))
                                             (rule "lenNonNegative" (formula "13") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "13"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                             (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "16"))
                                             (rule "add_zero_right" (formula "13") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "16") (ifseqformula "13"))
                                             (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0"))
                                             (rule "leq_literals" (formula "16") (term "0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "false_right" (formula "16"))
                                             (rule "lenNonNegative" (formula "15") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                             (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                                             (rule "leq_literals" (formula "15") (term "0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "all_pull_out1" (formula "10") (term "0,1,0"))
                                             (rule "all_pull_out0" (formula "10") (term "1,0"))
                                             (rule "shift_paren_and" (formula "10") (term "0,1,0"))
                                             (rule "all_pull_out3" (formula "10") (term "0"))
                                             (rule "cnf_rightDist" (formula "10") (term "0,0"))
                                             (rule "distr_forallAnd" (formula "10") (term "0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "distr_forallAnd" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "shift_paren_or" (formula "11") (term "0"))
                                             (rule "commute_or_2" (formula "11") (term "0,0"))
                                             (rule "inEqSimp_or_weaken3" (formula "11") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "1,0,1,0"))
                                             (rule "add_literals" (formula "11") (term "0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "11") (term "1,0,1,0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "cnf_rightDist" (formula "10") (term "0,0"))
                                             (rule "distr_forallAnd" (formula "10") (term "0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "distr_forallAnd" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "commute_or_2" (formula "11") (term "0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1"))
                                             (rule "add_zero_left" (formula "11") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "11") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "0,0,1,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,1,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,1,1"))
                                             (rule "add_zero_right" (formula "11") (term "0,1,1"))
                                             (rule "leq_literals" (formula "11") (term "1,1"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "14"))
                                             (rule "inEqSimp_invertInEq1" (formula "11") (term "1"))
                                             (rule "times_zero_2" (formula "11") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "11") (term "0,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "11") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "cnf_rightDist" (formula "10") (term "0,0"))
                                             (rule "distr_forallAnd" (formula "10") (term "0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "distr_forallAnd" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "commute_or_2" (formula "11") (term "0,0"))
                                             (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                             (rule "cnf_rightDist" (formula "10") (term "0"))
                                             (rule "distr_forallAnd" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "commute_or" (formula "11") (term "0"))
                                             (rule "commute_or_2" (formula "10") (term "0"))
                                             (rule "commute_or" (formula "10") (term "0,0"))
                                             (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                             (rule "cut_direct" (formula "23") (term "0,0"))
                                             (branch "CUT: list.seq[i_1_1_0] = null TRUE"
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "false_right" (formula "24"))
                                                (rule "allLeft" (formula "9") (inst "t=i_1_1_0"))
                                                (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                                                (rule "applyEq" (formula "9") (term "0,0,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                (rule "leq_literals" (formula "9") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: list.seq[i_1_1_0] = null FALSE"
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "allLeft" (formula "8") (inst "t=i_1_1_0"))
                                                (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "25"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_commuteGeq" (formula "8") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "8") (term "0,0,1"))
                                                (rule "leq_literals" (formula "8") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "8") (term "0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "closeFalse" (formula "8"))
                                             )
                                          )
                                       )
                                    )
                                    (branch
                                       (builtin "One Step Simplification" (formula "5"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "eqSymm" (formula "17"))
                                       (rule "eqSymm" (formula "11"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "eqSymm" (formula "10"))
                                       (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                       (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                       (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                       (rule "eqSymm" (formula "9") (term "1,1,0"))
                                       (rule "eqSymm" (formula "8"))
                                       (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                       (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                       (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                       (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                       (rule "subsetSingletonLeft" (formula "5"))
                                       (rule "subsetSingletonLeft" (formula "6"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "castedGetAny" (formula "10") (term "2,0"))
                                       (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                       (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                       (rule "castedGetAny" (formula "9") (term "1,1,1,0,0,1,0"))
                                       (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                       (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                       (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                       (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                       (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                       (rule "castedGetAny" (formula "11") (term "2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "17") (term "0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                       (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                       (rule "elementOfUnionEQ" (formula "5") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "pullOutSelect" (formula "15") (term "1") (inst "selectSK=IntList_footprint_0"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                       (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "15") (term "0,0,1,0,1,0") (inst "selectSK=IntLinkedList_nodeseq_0"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                       (rule "applyEqReverse" (formula "16") (term "0,0,1,0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "15") (term "1,1,1,0,0,1,0") (inst "selectSK=IntLinkedList_size_0"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                       (rule "applyEqReverse" (formula "16") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                                       (rule "close" (formula "16") (ifseqformula "7"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "dismissNonSelectedField" (formula "9") (term "0,0,2,1,1,1,0") (userinteraction))
                                    (rule "dismissNonSelectedField" (formula "9") (term "0,0,2,1,1,1,0") (userinteraction))
                                    (rule "dismissNonSelectedField" (formula "9") (term "0,0,2,1,1,1,0") (userinteraction))
                                    (rule "dismissNonSelectedField" (formula "9") (term "0,0,2,1,1,1,0") (userinteraction))
                                    (rule "dismissNonSelectedField" (formula "9") (term "0,0,2,1,1,1,0") (userinteraction))
                                    (rule "selectOfCreate" (formula "9") (term "0,0,2,1,1,1,0") (userinteraction))
                                    (rule "ifthenelse_split" (formula "9") (term "0,0,2,1,1,1,0") (userinteraction))
                                    (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$nodeseq = java.lang.Object::<created> TRUE"
                                       (builtin "One Step Simplification" (formula "6"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$nodeseq = java.lang.Object::<created> FALSE"
                                       (rule "dismissNonSelectedField" (formula "10") (term "0,1,0,1,1,1,0") (userinteraction))
                                       (rule "dismissNonSelectedField" (formula "10") (term "0,1,0,1,1,1,0") (userinteraction))
                                       (rule "dismissNonSelectedField" (formula "10") (term "0,1,0,1,1,1,0") (userinteraction))
                                       (rule "dismissNonSelectedField" (formula "10") (term "0,1,0,1,1,1,0") (userinteraction))
                                       (rule "dismissNonSelectedField" (formula "10") (term "0,1,0,1,1,1,0") (userinteraction))
                                       (rule "selectOfCreate" (formula "10") (term "0,1,0,1,1,1,0") (userinteraction))
                                       (rule "ifthenelse_split" (formula "10") (term "0,1,0,1,1,1,0") (userinteraction))
                                       (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$size = java.lang.Object::<created> TRUE"
                                          (builtin "One Step Simplification" (formula "6"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$size = java.lang.Object::<created> FALSE"
                                          (rule "dismissNonSelectedField" (formula "11") (term "0,1,1,0") (userinteraction))
                                          (rule "dismissNonSelectedField" (formula "11") (term "0,1,1,0") (userinteraction))
                                          (rule "dismissNonSelectedField" (formula "11") (term "0,1,1,0") (userinteraction))
                                          (rule "dismissNonSelectedField" (formula "11") (term "0,1,1,0") (userinteraction))
                                          (rule "dismissNonSelectedField" (formula "11") (term "0,1,1,0") (userinteraction))
                                          (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,1,1,0") (userinteraction))
                                          (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,1,1,0") (userinteraction))
                                          (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,1,1,0") (userinteraction))
                                          (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,1,1,0") (userinteraction))
                                          (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,1,1,0") (userinteraction))
                                          (rule "selectOfCreate" (formula "11") (term "0,0,1,0,1,1,0") (userinteraction))
                                          (rule "ifthenelse_split" (formula "11") (term "0,0,1,0,1,1,0") (userinteraction))
                                          (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$nodeseq = java.lang.Object::<created> TRUE"
                                             (rule "close" (formula "10") (ifseqformula "1"))
                                          )
                                          (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$nodeseq = java.lang.Object::<created> FALSE"
                                             (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,1,0,1,0,1,0") (userinteraction))
                                             (rule "dismissNonSelectedField" (formula "11") (term "1,1,0,0,0,1,0,1,0") (userinteraction))
                                             (rule "dismissNonSelectedField" (formula "11") (term "1,1,0,0,0,1,0,1,0") (userinteraction))
                                             (rule "dismissNonSelectedField" (formula "11") (term "1,1,0,0,0,1,0,1,0") (userinteraction))
                                             (rule "dismissNonSelectedField" (formula "11") (term "1,1,0,0,0,1,0,1,0") (userinteraction))
                                             (rule "dismissNonSelectedField" (formula "11") (term "1,1,0,0,0,1,0,1,0") (userinteraction))
                                             (rule "selectOfCreate" (formula "11") (term "1,1,0,0,0,1,0,1,0") (userinteraction))
                                             (rule "ifthenelse_split" (formula "11") (term "1,1,0,0,0,1,0,1,0") (userinteraction))
                                             (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$size = java.lang.Object::<created> TRUE"
                                                (rule "close" (formula "11") (ifseqformula "1"))
                                             )
                                             (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$size = java.lang.Object::<created> FALSE"
                                                (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,1,0,1,0,1,0") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,1,0,1,0,1,0") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,1,0,1,0,1,0") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,0,1,0,1,0,1,0") (userinteraction))
                                                (rule "selectOfCreate" (formula "11") (term "0,0,1,0,1,0,1,0,1,0") (userinteraction))
                                                (rule "ifthenelse_split" (formula "11") (term "0,0,1,0,1,0,1,0,1,0") (userinteraction))
                                                (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$nodeseq = java.lang.Object::<created> TRUE"
                                                   (rule "close" (formula "10") (ifseqformula "1"))
                                                )
                                                (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$nodeseq = java.lang.Object::<created> FALSE"
                                                   (rule "dismissNonSelectedField" (formula "11") (term "0,0,0,0,1,0,1,0,1,0") (userinteraction))
                                                   (rule "dismissNonSelectedField" (formula "11") (term "0,0,0,0,1,0,1,0,1,0") (userinteraction))
                                                   (rule "dismissNonSelectedField" (formula "11") (term "0,0,0,0,1,0,1,0,1,0") (userinteraction))
                                                   (rule "dismissNonSelectedField" (formula "11") (term "0,0,0,0,1,0,1,0,1,0") (userinteraction))
                                                   (rule "dismissNonSelectedField" (formula "11") (term "0,0,0,0,1,0,1,0,1,0") (userinteraction))
                                                   (rule "selectOfCreate" (formula "11") (term "0,0,0,0,1,0,1,0,1,0") (userinteraction))
                                                   (rule "ifthenelse_split" (formula "11") (term "0,0,0,0,1,0,1,0,1,0") (userinteraction))
                                                   (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$nodeseq = java.lang.Object::<created> TRUE"
                                                      (rule "close" (formula "10") (ifseqformula "1"))
                                                   )
                                                   (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$nodeseq = java.lang.Object::<created> FALSE"
                                                      (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,1,0,0,1,0") (userinteraction))
                                                      (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,1,0,0,1,0") (userinteraction))
                                                      (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,1,0,0,1,0") (userinteraction))
                                                      (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,1,0,0,1,0") (userinteraction))
                                                      (rule "dismissNonSelectedField" (formula "11") (term "0,0,1,1,0,0,1,0") (userinteraction))
                                                      (rule "selectOfCreate" (formula "11") (term "0,0,1,1,0,0,1,0") (userinteraction))
                                                      (rule "ifthenelse_split" (formula "11") (term "0,0,1,1,0,0,1,0") (userinteraction))
                                                      (branch " i_1 = list ∧ ¬i_1 = null ∧ IntList::$seq = java.lang.Object::<created> TRUE"
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch " i_1 = list ∧ ¬i_1 = null ∧ IntList::$seq = java.lang.Object::<created> FALSE"
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,0,1,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,0,1,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,0,1,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,0,1,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,0,1,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,1,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,1,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,1,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,1,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,1,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,0,0,0,0,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,0,0,0,0,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,0,0,0,0,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,0,0,0,0,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "0,0,0,0,0,0,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "1,1,0,0,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "1,1,0,0,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "1,1,0,0,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "1,1,0,0,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "12") (term "1,1,0,0,0") (userinteraction))
                                                         (rule "selectOfCreate" (formula "12") (term "1,1,0,0,0") (userinteraction))
                                                         (rule "ifthenelse_split" (formula "12") (term "1,1,0,0,0") (userinteraction))
                                                         (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$size = java.lang.Object::<created> TRUE"
                                                            (rule "close" (formula "11") (ifseqformula "1"))
                                                         )
                                                         (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$size = java.lang.Object::<created> FALSE"
                                                            (rule "selectOfCreate" (formula "12") (term "0,0,0,0,0,0,0,1,0") (userinteraction))
                                                            (rule "ifthenelse_split" (formula "12") (term "0,0,0,0,0,0,0,1,0") (userinteraction))
                                                            (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$nodeseq = java.lang.Object::<created> TRUE"
                                                               (rule "close" (formula "10") (ifseqformula "1"))
                                                            )
                                                            (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$nodeseq = java.lang.Object::<created> FALSE"
                                                               (rule "selectOfCreate" (formula "12") (term "0,0,1,0,1,0,0,1,0") (userinteraction))
                                                               (rule "ifthenelse_split" (formula "12") (term "0,0,1,0,1,0,0,1,0") (userinteraction))
                                                               (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$nodeseq = java.lang.Object::<created> TRUE"
                                                                  (rule "close" (formula "10") (ifseqformula "1"))
                                                               )
                                                               (branch " i_1 = list ∧ ¬i_1 = null ∧ IntLinkedList::$nodeseq = java.lang.Object::<created> FALSE"
                                                                  (rule "andLeft" (formula "5") (userinteraction))
                                                                  (rule "andLeft" (formula "5") (userinteraction))
                                                                  (rule "andLeft" (formula "5") (userinteraction))
                                                                  (rule "andLeft" (formula "5") (userinteraction))
                                                                  (rule "allRight" (formula "16") (inst "sk=i_4_0") (userinteraction))
                                                                  (rule "allLeft" (formula "6") (inst "t=i_4_0") (userinteraction))
                                                                  (rule "andRight" (formula "14"))
                                                                  (branch
                                                                     (rule "andRight" (formula "14"))
                                                                     (branch
                                                                        (rule "andRight" (formula "15"))
                                                                        (branch
                                                                           (rule "andRight" (formula "15"))
                                                                           (branch
                                                                              (rule "andRight" (formula "15"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "15"))
                                                                                 (branch
                                                                                    (rule "impRight" (formula "15"))
                                                                                    (rule "andRight" (formula "16"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "16"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "16"))
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "16")))
                                                                                             (rule "closeFalse" (formula "7"))
                                                                                          )
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                             (builtin "One Step Simplification" (formula "6"))
                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                             (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                             (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                             (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                             (rule "andLeft" (formula "11"))
                                                                                             (rule "andLeft" (formula "6"))
                                                                                             (rule "andLeft" (formula "1"))
                                                                                             (rule "andLeft" (formula "9"))
                                                                                             (rule "andLeft" (formula "7"))
                                                                                             (rule "andLeft" (formula "10"))
                                                                                             (rule "andLeft" (formula "7"))
                                                                                             (rule "andLeft" (formula "11"))
                                                                                             (rule "notLeft" (formula "11"))
                                                                                             (rule "eqSymm" (formula "24"))
                                                                                             (rule "eqSymm" (formula "15"))
                                                                                             (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                             (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                             (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                             (rule "eqSymm" (formula "16"))
                                                                                             (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                             (rule "eqSymm" (formula "17"))
                                                                                             (rule "eqSymm" (formula "18"))
                                                                                             (rule "eqSymm" (formula "10"))
                                                                                             (rule "eqSymm" (formula "13") (term "0,1"))
                                                                                             (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                             (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                             (rule "eqSymm" (formula "11"))
                                                                                             (rule "eqSymm" (formula "13"))
                                                                                             (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                             (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                             (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                             (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                             (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                             (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                             (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                             (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                             (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                             (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                             (rule "sortsDisjointModuloNull" (formula "23"))
                                                                                             (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "22"))
                                                                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")))
                                                                                             (rule "false_right" (formula "23"))
                                                                                             (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                             (rule "subsetSingletonLeft" (formula "8"))
                                                                                             (rule "subsetSingletonLeft" (formula "7"))
                                                                                             (rule "castedGetAny" (formula "19") (term "0"))
                                                                                             (rule "castedGetAny" (formula "23") (term "1,1"))
                                                                                             (rule "castedGetAny" (formula "23") (term "0"))
                                                                                             (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                             (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                             (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                             (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                             (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                             (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                             (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                             (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                             (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                             (rule "castedGetAny" (formula "11") (term "1,1"))
                                                                                             (rule "castedGetAny" (formula "11") (term "0"))
                                                                                             (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                             (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                             (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                             (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                             (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                             (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                             (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                             (rule "castedGetAny" (formula "14") (term "1,0,1,0,0,1,0"))
                                                                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                             (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                             (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                             (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                             (rule "applyEq" (formula "23") (term "0") (ifseqformula "11"))
                                                                                             (rule "eqSymm" (formula "23"))
                                                                                             (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                             (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                             (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                             (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                             (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                             (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (rule "true_left" (formula "8"))
                                                                                             (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                             (builtin "One Step Simplification" (formula "7"))
                                                                                             (rule "true_left" (formula "7"))
                                                                                             (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_data_0"))
                                                                                             (rule "simplifySelectOfCreate" (formula "1"))
                                                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                             (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                             (builtin "One Step Simplification" (formula "22"))
                                                                                             (rule "closeTrue" (formula "22"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "16")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                       (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                       (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                       (rule "andLeft" (formula "11"))
                                                                                       (rule "andLeft" (formula "6"))
                                                                                       (rule "andLeft" (formula "1"))
                                                                                       (rule "andLeft" (formula "9"))
                                                                                       (rule "andLeft" (formula "7"))
                                                                                       (rule "andLeft" (formula "10"))
                                                                                       (rule "andLeft" (formula "7"))
                                                                                       (rule "andLeft" (formula "11"))
                                                                                       (rule "notLeft" (formula "11"))
                                                                                       (rule "eqSymm" (formula "15"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                       (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                       (rule "eqSymm" (formula "24") (term "0,1"))
                                                                                       (rule "eqSymm" (formula "16"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                       (rule "eqSymm" (formula "17"))
                                                                                       (rule "eqSymm" (formula "18"))
                                                                                       (rule "eqSymm" (formula "10"))
                                                                                       (rule "eqSymm" (formula "13"))
                                                                                       (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                       (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                       (rule "eqSymm" (formula "11"))
                                                                                       (rule "eqSymm" (formula "24"))
                                                                                       (rule "eqSymm" (formula "13") (term "0,0"))
                                                                                       (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                       (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                       (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                       (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                       (rule "polySimp_elimSub" (formula "24") (term "0,0,0"))
                                                                                       (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                                                       (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                       (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                       (rule "polySimp_homoEq" (formula "24") (term "0,0"))
                                                                                       (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                       (rule "polySimp_addComm0" (formula "24") (term "1,0,2,0"))
                                                                                       (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                       (rule "sortsDisjointModuloNull" (formula "23"))
                                                                                       (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "22"))
                                                                                       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")))
                                                                                       (rule "false_right" (formula "23"))
                                                                                       (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                       (rule "subsetSingletonLeft" (formula "7"))
                                                                                       (rule "subsetSingletonLeft" (formula "8"))
                                                                                       (rule "castedGetAny" (formula "19") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                       (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                       (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                       (rule "castedGetAny" (formula "11") (term "1,1"))
                                                                                       (rule "castedGetAny" (formula "11") (term "0"))
                                                                                       (rule "castedGetAny" (formula "23") (term "1,1"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                       (rule "castedGetAny" (formula "23") (term "2,0"))
                                                                                       (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                       (rule "castedGetAny" (formula "14") (term "1,0,1,0,0,1,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                                                                                       (rule "eqSymm" (formula "23"))
                                                                                       (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                       (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                       (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                       (rule "elementOfUnionEQ" (formula "7") (ifseqformula "10"))
                                                                                       (builtin "One Step Simplification" (formula "7"))
                                                                                       (rule "true_left" (formula "7"))
                                                                                       (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                       (builtin "One Step Simplification" (formula "7"))
                                                                                       (rule "true_left" (formula "7"))
                                                                                       (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_next_0"))
                                                                                       (rule "simplifySelectOfCreate" (formula "1"))
                                                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                       (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                       (builtin "One Step Simplification" (formula "22"))
                                                                                       (rule "closeTrue" (formula "22"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "impRight" (formula "16"))
                                                                                    (rule "andRight" (formula "17"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "17"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "17"))
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                             (rule "closeFalse" (formula "7"))
                                                                                          )
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                             (builtin "One Step Simplification" (formula "6"))
                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                             (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                             (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                             (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                             (rule "andLeft" (formula "11"))
                                                                                             (rule "notRight" (formula "17"))
                                                                                             (rule "close" (formula "14") (ifseqformula "1"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
                                                                                       (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1"))
                                                                                       (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                       (rule "notRight" (formula "16"))
                                                                                       (rule "close" (formula "13") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "impRight" (formula "16"))
                                                                                 (rule "andRight" (formula "17"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "17"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "17"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "16"))
                                                                                          (rule "false_right" (formula "16"))
                                                                                          (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                          (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                          (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                          (rule "andLeft" (formula "11"))
                                                                                          (rule "andLeft" (formula "6"))
                                                                                          (rule "andLeft" (formula "1"))
                                                                                          (rule "andLeft" (formula "9"))
                                                                                          (rule "andLeft" (formula "7"))
                                                                                          (rule "andLeft" (formula "10"))
                                                                                          (rule "andLeft" (formula "7"))
                                                                                          (rule "andLeft" (formula "11"))
                                                                                          (rule "notLeft" (formula "11"))
                                                                                          (rule "eqSymm" (formula "24"))
                                                                                          (rule "eqSymm" (formula "15"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                          (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "16"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                          (rule "eqSymm" (formula "17"))
                                                                                          (rule "eqSymm" (formula "18"))
                                                                                          (rule "eqSymm" (formula "10"))
                                                                                          (rule "eqSymm" (formula "13"))
                                                                                          (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                          (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                          (rule "eqSymm" (formula "11"))
                                                                                          (rule "eqSymm" (formula "13") (term "0,0"))
                                                                                          (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                          (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                          (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                          (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                          (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                          (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                          (rule "sortsDisjointModuloNull" (formula "23"))
                                                                                          (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "20"))
                                                                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
                                                                                          (rule "false_right" (formula "23"))
                                                                                          (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                          (rule "subsetSingletonLeft" (formula "8"))
                                                                                          (rule "subsetSingletonLeft" (formula "7"))
                                                                                          (rule "castedGetAny" (formula "19") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "23") (term "0"))
                                                                                          (rule "eqSymm" (formula "23"))
                                                                                          (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "1,1,1,0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                          (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                          (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "11") (term "0"))
                                                                                          (rule "eqSymm" (formula "11"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                          (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                          (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                          (rule "castedGetAny" (formula "23") (term "1,0"))
                                                                                          (rule "eqSymm" (formula "23"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                          (rule "castedGetAny" (formula "11") (term "1,0"))
                                                                                          (rule "eqSymm" (formula "11"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "11"))
                                                                                          (rule "eqSymm" (formula "23"))
                                                                                          (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                          (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                          (rule "elementOfUnionEQ" (formula "7") (ifseqformula "10"))
                                                                                          (builtin "One Step Simplification" (formula "7"))
                                                                                          (rule "true_left" (formula "7"))
                                                                                          (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                          (builtin "One Step Simplification" (formula "7"))
                                                                                          (rule "true_left" (formula "7"))
                                                                                          (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_data_0"))
                                                                                          (rule "simplifySelectOfCreate" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                          (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                          (builtin "One Step Simplification" (formula "22"))
                                                                                          (rule "closeTrue" (formula "22"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "false_right" (formula "16"))
                                                                                    (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                    (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                    (rule "andLeft" (formula "11"))
                                                                                    (rule "andLeft" (formula "6"))
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "andLeft" (formula "9"))
                                                                                    (rule "andLeft" (formula "7"))
                                                                                    (rule "andLeft" (formula "10"))
                                                                                    (rule "andLeft" (formula "7"))
                                                                                    (rule "andLeft" (formula "11"))
                                                                                    (rule "notLeft" (formula "11"))
                                                                                    (rule "eqSymm" (formula "15"))
                                                                                    (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "24") (term "0,1"))
                                                                                    (rule "eqSymm" (formula "16"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                    (rule "eqSymm" (formula "17"))
                                                                                    (rule "eqSymm" (formula "18"))
                                                                                    (rule "eqSymm" (formula "10"))
                                                                                    (rule "eqSymm" (formula "13"))
                                                                                    (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                    (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                    (rule "eqSymm" (formula "11"))
                                                                                    (rule "eqSymm" (formula "24"))
                                                                                    (rule "eqSymm" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "24") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "24") (term "0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "24") (term "1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                    (rule "sortsDisjointModuloNull" (formula "23"))
                                                                                    (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "22"))
                                                                                    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")))
                                                                                    (rule "false_right" (formula "23"))
                                                                                    (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                    (rule "subsetSingletonLeft" (formula "7"))
                                                                                    (rule "subsetSingletonLeft" (formula "8"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                    (rule "castedGetAny" (formula "19") (term "0"))
                                                                                    (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                    (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "11") (term "0"))
                                                                                    (rule "eqSymm" (formula "11"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "castedGetAny" (formula "23") (term "1,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                    (rule "castedGetAny" (formula "23") (term "2,0"))
                                                                                    (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                    (rule "castedGetAny" (formula "11") (term "1,0"))
                                                                                    (rule "eqSymm" (formula "11"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                                                                                    (rule "eqSymm" (formula "23"))
                                                                                    (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                    (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (rule "true_left" (formula "8"))
                                                                                    (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                    (builtin "One Step Simplification" (formula "7"))
                                                                                    (rule "true_left" (formula "7"))
                                                                                    (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_next_0"))
                                                                                    (rule "simplifySelectOfCreate" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                    (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "closeTrue" (formula "22"))
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "andRight" (formula "16"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "16"))
                                                                                 (branch
                                                                                    (rule "impRight" (formula "16"))
                                                                                    (rule "andRight" (formula "17"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "17"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "17"))
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                             (rule "closeFalse" (formula "7"))
                                                                                          )
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                             (builtin "One Step Simplification" (formula "6"))
                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                             (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                             (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                             (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                             (rule "notRight" (formula "16"))
                                                                                             (rule "close" (formula "13") (ifseqformula "1"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
                                                                                       (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                       (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1"))
                                                                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                       (rule "notRight" (formula "16"))
                                                                                       (rule "close" (formula "13") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "impRight" (formula "16"))
                                                                                    (rule "andRight" (formula "17"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "17"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "17"))
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                             (rule "closeFalse" (formula "7"))
                                                                                          )
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                             (builtin "One Step Simplification" (formula "6"))
                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                             (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                             (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                             (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                             (rule "notRight" (formula "16"))
                                                                                             (rule "close" (formula "13") (ifseqformula "1"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
                                                                                       (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                       (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1"))
                                                                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                       (rule "notRight" (formula "16"))
                                                                                       (rule "close" (formula "13") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "impRight" (formula "17"))
                                                                                 (rule "andRight" (formula "18"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "18"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "18"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "17"))
                                                                                          (rule "false_right" (formula "17"))
                                                                                          (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                          (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                          (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                          (rule "notRight" (formula "16"))
                                                                                          (rule "close" (formula "13") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "false_right" (formula "17"))
                                                                                    (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                    (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                    (rule "notRight" (formula "16"))
                                                                                    (rule "close" (formula "13") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "andRight" (formula "16"))
                                                                           (branch
                                                                              (rule "andRight" (formula "16"))
                                                                              (branch
                                                                                 (rule "impRight" (formula "16"))
                                                                                 (rule "andRight" (formula "17"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "17"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "17"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "16"))
                                                                                          (rule "false_right" (formula "16"))
                                                                                          (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                          (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                          (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                          (rule "andLeft" (formula "11"))
                                                                                          (rule "andLeft" (formula "6"))
                                                                                          (rule "andLeft" (formula "1"))
                                                                                          (rule "andLeft" (formula "9"))
                                                                                          (rule "andLeft" (formula "7"))
                                                                                          (rule "andLeft" (formula "10"))
                                                                                          (rule "andLeft" (formula "7"))
                                                                                          (rule "andLeft" (formula "11"))
                                                                                          (rule "notLeft" (formula "11"))
                                                                                          (rule "eqSymm" (formula "15"))
                                                                                          (rule "eqSymm" (formula "24"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                          (rule "eqSymm" (formula "16"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                          (rule "eqSymm" (formula "17"))
                                                                                          (rule "eqSymm" (formula "18"))
                                                                                          (rule "eqSymm" (formula "10"))
                                                                                          (rule "eqSymm" (formula "13"))
                                                                                          (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                          (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                          (rule "eqSymm" (formula "11"))
                                                                                          (rule "eqSymm" (formula "13") (term "0,0"))
                                                                                          (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                          (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                          (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                          (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                          (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                          (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                          (rule "sortsDisjointModuloNull" (formula "23"))
                                                                                          (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "20"))
                                                                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
                                                                                          (rule "false_right" (formula "23"))
                                                                                          (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                          (rule "subsetSingletonLeft" (formula "8"))
                                                                                          (rule "subsetSingletonLeft" (formula "7"))
                                                                                          (rule "castedGetAny" (formula "19") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                          (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                          (rule "castedGetAny" (formula "23") (term "0"))
                                                                                          (rule "eqSymm" (formula "23"))
                                                                                          (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                          (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                          (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                          (rule "castedGetAny" (formula "11") (term "0"))
                                                                                          (rule "eqSymm" (formula "11"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                          (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                          (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "23") (term "1,0"))
                                                                                          (rule "eqSymm" (formula "23"))
                                                                                          (rule "castedGetAny" (formula "14") (term "1,0,1,0,0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                          (rule "castedGetAny" (formula "11") (term "1,0"))
                                                                                          (rule "eqSymm" (formula "11"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "11"))
                                                                                          (rule "eqSymm" (formula "23"))
                                                                                          (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                          (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                          (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "true_left" (formula "8"))
                                                                                          (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                          (builtin "One Step Simplification" (formula "7"))
                                                                                          (rule "true_left" (formula "7"))
                                                                                          (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_data_0"))
                                                                                          (rule "simplifySelectOfCreate" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                          (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                          (builtin "One Step Simplification" (formula "22"))
                                                                                          (rule "closeTrue" (formula "22"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "false_right" (formula "16"))
                                                                                    (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                    (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                    (rule "andLeft" (formula "11"))
                                                                                    (rule "andLeft" (formula "6"))
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "andLeft" (formula "9"))
                                                                                    (rule "andLeft" (formula "7"))
                                                                                    (rule "andLeft" (formula "10"))
                                                                                    (rule "andLeft" (formula "7"))
                                                                                    (rule "andLeft" (formula "11"))
                                                                                    (rule "notLeft" (formula "11"))
                                                                                    (rule "eqSymm" (formula "15"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "24") (term "0,1"))
                                                                                    (rule "eqSymm" (formula "16"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                    (rule "eqSymm" (formula "17"))
                                                                                    (rule "eqSymm" (formula "18"))
                                                                                    (rule "eqSymm" (formula "10"))
                                                                                    (rule "eqSymm" (formula "13") (term "0,1"))
                                                                                    (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                    (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                    (rule "eqSymm" (formula "11"))
                                                                                    (rule "eqSymm" (formula "24"))
                                                                                    (rule "eqSymm" (formula "13"))
                                                                                    (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "24") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "24") (term "0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "24") (term "1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                    (rule "sortsDisjointModuloNull" (formula "23"))
                                                                                    (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "22"))
                                                                                    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")))
                                                                                    (rule "false_right" (formula "23"))
                                                                                    (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                    (rule "subsetSingletonLeft" (formula "7"))
                                                                                    (rule "subsetSingletonLeft" (formula "8"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "19") (term "0"))
                                                                                    (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "11") (term "1,1"))
                                                                                    (rule "castedGetAny" (formula "11") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "castedGetAny" (formula "23") (term "1,1"))
                                                                                    (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "23") (term "2,0"))
                                                                                    (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                                                                    (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                                                                                    (rule "eqSymm" (formula "23"))
                                                                                    (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                    (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (rule "true_left" (formula "8"))
                                                                                    (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                    (builtin "One Step Simplification" (formula "7"))
                                                                                    (rule "true_left" (formula "7"))
                                                                                    (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_next_0"))
                                                                                    (rule "simplifySelectOfCreate" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                    (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "closeTrue" (formula "22"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "impRight" (formula "17"))
                                                                                 (rule "andRight" (formula "18"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "18"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "18"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "16"))
                                                                                          (rule "false_right" (formula "16"))
                                                                                          (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                          (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                          (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                          (rule "andLeft" (formula "11"))
                                                                                          (rule "notRight" (formula "17"))
                                                                                          (rule "close" (formula "14") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "false_right" (formula "16"))
                                                                                    (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                    (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                    (rule "andLeft" (formula "11"))
                                                                                    (rule "notRight" (formula "17"))
                                                                                    (rule "close" (formula "14") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "impRight" (formula "17"))
                                                                              (rule "andRight" (formula "18"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "18"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "18"))
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (builtin "One Step Simplification" (formula "17"))
                                                                                       (builtin "One Step Simplification" (formula "16"))
                                                                                       (rule "false_right" (formula "16"))
                                                                                       (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                       (rule "andLeft" (formula "11"))
                                                                                       (rule "andLeft" (formula "6"))
                                                                                       (rule "andLeft" (formula "1"))
                                                                                       (rule "andLeft" (formula "9"))
                                                                                       (rule "andLeft" (formula "7"))
                                                                                       (rule "andLeft" (formula "10"))
                                                                                       (rule "andLeft" (formula "7"))
                                                                                       (rule "andLeft" (formula "11"))
                                                                                       (rule "notLeft" (formula "11"))
                                                                                       (rule "eqSymm" (formula "15"))
                                                                                       (rule "eqSymm" (formula "24"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                       (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                       (rule "eqSymm" (formula "16"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                       (rule "eqSymm" (formula "17"))
                                                                                       (rule "eqSymm" (formula "18"))
                                                                                       (rule "eqSymm" (formula "10"))
                                                                                       (rule "eqSymm" (formula "13"))
                                                                                       (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                       (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                       (rule "eqSymm" (formula "11"))
                                                                                       (rule "eqSymm" (formula "13") (term "0,0"))
                                                                                       (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                       (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                       (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                       (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                       (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                       (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                       (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                       (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                       (rule "sortsDisjointModuloNull" (formula "23"))
                                                                                       (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "20"))
                                                                                       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
                                                                                       (rule "false_right" (formula "23"))
                                                                                       (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                       (rule "subsetSingletonLeft" (formula "7"))
                                                                                       (rule "subsetSingletonLeft" (formula "8"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                       (rule "castedGetAny" (formula "19") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                       (rule "castedGetAny" (formula "23") (term "0"))
                                                                                       (rule "eqSymm" (formula "23"))
                                                                                       (rule "castedGetAny" (formula "14") (term "1,1,1,0,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                       (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                       (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "11") (term "0"))
                                                                                       (rule "eqSymm" (formula "11"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                       (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                       (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                       (rule "castedGetAny" (formula "23") (term "1,0"))
                                                                                       (rule "eqSymm" (formula "23"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                       (rule "castedGetAny" (formula "11") (term "1,0"))
                                                                                       (rule "eqSymm" (formula "11"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "11"))
                                                                                       (rule "eqSymm" (formula "23"))
                                                                                       (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                       (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                       (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                       (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (rule "true_left" (formula "8"))
                                                                                       (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                       (builtin "One Step Simplification" (formula "7"))
                                                                                       (rule "true_left" (formula "7"))
                                                                                       (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_data_0"))
                                                                                       (rule "simplifySelectOfCreate" (formula "1"))
                                                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                       (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                       (builtin "One Step Simplification" (formula "22"))
                                                                                       (rule "closeTrue" (formula "22"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                    (rule "closeFalse" (formula "7"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (builtin "One Step Simplification" (formula "8"))
                                                                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                 (builtin "One Step Simplification" (formula "6"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (builtin "One Step Simplification" (formula "17"))
                                                                                 (builtin "One Step Simplification" (formula "16"))
                                                                                 (rule "false_right" (formula "16"))
                                                                                 (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                 (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                 (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                 (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                 (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                 (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                 (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                 (rule "andLeft" (formula "11"))
                                                                                 (rule "andLeft" (formula "6"))
                                                                                 (rule "andLeft" (formula "1"))
                                                                                 (rule "andLeft" (formula "9"))
                                                                                 (rule "andLeft" (formula "7"))
                                                                                 (rule "andLeft" (formula "10"))
                                                                                 (rule "andLeft" (formula "7"))
                                                                                 (rule "andLeft" (formula "11"))
                                                                                 (rule "notLeft" (formula "11"))
                                                                                 (rule "eqSymm" (formula "15"))
                                                                                 (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                 (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                 (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                 (rule "eqSymm" (formula "16"))
                                                                                 (rule "eqSymm" (formula "24") (term "0,1"))
                                                                                 (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                 (rule "eqSymm" (formula "17"))
                                                                                 (rule "eqSymm" (formula "18"))
                                                                                 (rule "eqSymm" (formula "10"))
                                                                                 (rule "eqSymm" (formula "13"))
                                                                                 (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                 (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                 (rule "eqSymm" (formula "11"))
                                                                                 (rule "eqSymm" (formula "24"))
                                                                                 (rule "eqSymm" (formula "13") (term "0,0"))
                                                                                 (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                 (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                 (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                 (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                 (rule "polySimp_elimSub" (formula "24") (term "0,0,0"))
                                                                                 (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                                                 (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                 (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                 (rule "polySimp_homoEq" (formula "24") (term "0,0"))
                                                                                 (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                 (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                 (rule "polySimp_addComm0" (formula "24") (term "1,0,2,0"))
                                                                                 (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                 (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                 (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                 (rule "sortsDisjointModuloNull" (formula "23"))
                                                                                 (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "22"))
                                                                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")))
                                                                                 (rule "false_right" (formula "23"))
                                                                                 (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                 (rule "subsetSingletonLeft" (formula "7"))
                                                                                 (rule "subsetSingletonLeft" (formula "8"))
                                                                                 (rule "castedGetAny" (formula "19") (term "0"))
                                                                                 (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                 (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                 (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                 (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                 (rule "castedGetAny" (formula "11") (term "0"))
                                                                                 (rule "eqSymm" (formula "11"))
                                                                                 (rule "castedGetAny" (formula "23") (term "1,1"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                 (rule "castedGetAny" (formula "23") (term "2,0"))
                                                                                 (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                 (rule "castedGetAny" (formula "14") (term "1,0,1,0,0,1,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                 (rule "castedGetAny" (formula "11") (term "1,0"))
                                                                                 (rule "eqSymm" (formula "11"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                                                                                 (rule "eqSymm" (formula "23"))
                                                                                 (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                 (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                 (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                 (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                 (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                                                                 (builtin "One Step Simplification" (formula "8"))
                                                                                 (rule "true_left" (formula "8"))
                                                                                 (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                 (builtin "One Step Simplification" (formula "7"))
                                                                                 (rule "true_left" (formula "7"))
                                                                                 (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_next_0"))
                                                                                 (rule "simplifySelectOfCreate" (formula "1"))
                                                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                 (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                 (builtin "One Step Simplification" (formula "22"))
                                                                                 (rule "closeTrue" (formula "22"))
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "andRight" (formula "15"))
                                                                        (branch
                                                                           (rule "andRight" (formula "15"))
                                                                           (branch
                                                                              (rule "andRight" (formula "16"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "16"))
                                                                                 (branch
                                                                                    (rule "impRight" (formula "16"))
                                                                                    (rule "andRight" (formula "17"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "17"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "17"))
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                             (rule "closeFalse" (formula "7"))
                                                                                          )
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                             (builtin "One Step Simplification" (formula "6"))
                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                             (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                             (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                             (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                             (rule "andLeft" (formula "11"))
                                                                                             (rule "notRight" (formula "16"))
                                                                                             (rule "close" (formula "14") (ifseqformula "1"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
                                                                                       (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1"))
                                                                                       (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                       (rule "notRight" (formula "15"))
                                                                                       (rule "close" (formula "13") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "impRight" (formula "16"))
                                                                                    (rule "andRight" (formula "17"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "17"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "17"))
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                             (rule "closeFalse" (formula "7"))
                                                                                          )
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                             (builtin "One Step Simplification" (formula "6"))
                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                             (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                             (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                             (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                             (rule "andLeft" (formula "11"))
                                                                                             (rule "notRight" (formula "16"))
                                                                                             (rule "close" (formula "14") (ifseqformula "1"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
                                                                                       (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1"))
                                                                                       (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                       (rule "notRight" (formula "15"))
                                                                                       (rule "close" (formula "13") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "impRight" (formula "17"))
                                                                                 (rule "andRight" (formula "18"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "18"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "18"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "17"))
                                                                                          (rule "false_right" (formula "17"))
                                                                                          (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                          (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                          (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                          (rule "andLeft" (formula "11"))
                                                                                          (rule "notRight" (formula "16"))
                                                                                          (rule "close" (formula "14") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "false_right" (formula "17"))
                                                                                    (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                    (rule "andLeft" (formula "11"))
                                                                                    (rule "notRight" (formula "16"))
                                                                                    (rule "close" (formula "14") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "andRight" (formula "15"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "15"))
                                                                                 (branch
                                                                                    (rule "impRight" (formula "16"))
                                                                                    (rule "andRight" (formula "17"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "17"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "17"))
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                             (rule "closeFalse" (formula "7"))
                                                                                          )
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                             (builtin "One Step Simplification" (formula "6"))
                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                             (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                             (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                             (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                             (rule "notRight" (formula "15"))
                                                                                             (rule "close" (formula "13") (ifseqformula "1"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
                                                                                       (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                       (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1"))
                                                                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                       (rule "notRight" (formula "15"))
                                                                                       (rule "close" (formula "13") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "impRight" (formula "15"))
                                                                                    (rule "andRight" (formula "16"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "16"))
                                                                                       (branch
                                                                                          (rule "andRight" (formula "16"))
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "16")))
                                                                                             (rule "closeFalse" (formula "7"))
                                                                                          )
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "8"))
                                                                                             (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                             (builtin "One Step Simplification" (formula "6"))
                                                                                             (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                             (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                             (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                             (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                             (rule "notRight" (formula "15"))
                                                                                             (rule "close" (formula "13") (ifseqformula "1"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "16")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                       (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                       (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                       (rule "andLeft" (formula "11"))
                                                                                       (rule "notRight" (formula "16"))
                                                                                       (rule "close" (formula "14") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "impRight" (formula "16"))
                                                                                 (rule "andRight" (formula "17"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "17"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "17"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "16"))
                                                                                          (rule "false_right" (formula "16"))
                                                                                          (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                          (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                          (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                          (rule "notRight" (formula "15"))
                                                                                          (rule "close" (formula "13") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "false_right" (formula "16"))
                                                                                    (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                    (rule "notRight" (formula "15"))
                                                                                    (rule "close" (formula "13") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "andRight" (formula "16"))
                                                                           (branch
                                                                              (rule "andRight" (formula "16"))
                                                                              (branch
                                                                                 (rule "impRight" (formula "17"))
                                                                                 (rule "andRight" (formula "18"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "18"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "18"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "16"))
                                                                                          (rule "false_right" (formula "16"))
                                                                                          (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                          (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                          (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                          (rule "andLeft" (formula "11"))
                                                                                          (rule "notRight" (formula "16"))
                                                                                          (rule "close" (formula "14") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "false_right" (formula "16"))
                                                                                    (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                    (rule "andLeft" (formula "11"))
                                                                                    (rule "notRight" (formula "16"))
                                                                                    (rule "close" (formula "14") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "impRight" (formula "16"))
                                                                                 (rule "andRight" (formula "17"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "17"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "17"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "16"))
                                                                                          (rule "false_right" (formula "16"))
                                                                                          (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                          (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                          (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                          (rule "andLeft" (formula "11"))
                                                                                          (rule "notRight" (formula "16"))
                                                                                          (rule "close" (formula "14") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "false_right" (formula "16"))
                                                                                    (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                    (rule "andLeft" (formula "11"))
                                                                                    (rule "notRight" (formula "16"))
                                                                                    (rule "close" (formula "14") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "impRight" (formula "17"))
                                                                              (rule "andRight" (formula "18"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "18"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "18"))
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (builtin "One Step Simplification" (formula "17"))
                                                                                       (builtin "One Step Simplification" (formula "16"))
                                                                                       (rule "false_right" (formula "16"))
                                                                                       (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                       (rule "andLeft" (formula "11"))
                                                                                       (rule "notRight" (formula "16"))
                                                                                       (rule "close" (formula "14") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                    (rule "closeFalse" (formula "7"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (builtin "One Step Simplification" (formula "8"))
                                                                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                 (builtin "One Step Simplification" (formula "6"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (builtin "One Step Simplification" (formula "17"))
                                                                                 (builtin "One Step Simplification" (formula "16"))
                                                                                 (rule "false_right" (formula "16"))
                                                                                 (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                 (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                 (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                 (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                 (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                 (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                 (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                 (rule "andLeft" (formula "11"))
                                                                                 (rule "notRight" (formula "16"))
                                                                                 (rule "close" (formula "14") (ifseqformula "1"))
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "andRight" (formula "15"))
                                                                     (branch
                                                                        (rule "andRight" (formula "15"))
                                                                        (branch
                                                                           (rule "andRight" (formula "16"))
                                                                           (branch
                                                                              (rule "andRight" (formula "16"))
                                                                              (branch
                                                                                 (rule "impRight" (formula "16"))
                                                                                 (rule "andRight" (formula "17"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "17"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "17"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "15"))
                                                                                          (rule "false_right" (formula "15"))
                                                                                          (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                          (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                          (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                          (rule "andLeft" (formula "11"))
                                                                                          (rule "andLeft" (formula "6"))
                                                                                          (rule "andLeft" (formula "1"))
                                                                                          (rule "andLeft" (formula "9"))
                                                                                          (rule "andLeft" (formula "7"))
                                                                                          (rule "andLeft" (formula "10"))
                                                                                          (rule "andLeft" (formula "7"))
                                                                                          (rule "andLeft" (formula "11"))
                                                                                          (rule "notLeft" (formula "11"))
                                                                                          (rule "eqSymm" (formula "24"))
                                                                                          (rule "eqSymm" (formula "15"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                          (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "16"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                          (rule "eqSymm" (formula "17"))
                                                                                          (rule "eqSymm" (formula "18"))
                                                                                          (rule "eqSymm" (formula "10"))
                                                                                          (rule "eqSymm" (formula "13"))
                                                                                          (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                          (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                          (rule "eqSymm" (formula "11"))
                                                                                          (rule "eqSymm" (formula "13") (term "0,0"))
                                                                                          (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                          (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                          (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                          (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                          (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                          (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                          (rule "sortsDisjointModuloNull" (formula "23"))
                                                                                          (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "20"))
                                                                                          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
                                                                                          (rule "false_right" (formula "23"))
                                                                                          (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                          (rule "subsetSingletonLeft" (formula "8"))
                                                                                          (rule "subsetSingletonLeft" (formula "7"))
                                                                                          (rule "castedGetAny" (formula "19") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "23") (term "0"))
                                                                                          (rule "eqSymm" (formula "23"))
                                                                                          (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "1,1,1,0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                          (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                          (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                          (rule "castedGetAny" (formula "11") (term "0"))
                                                                                          (rule "eqSymm" (formula "11"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                          (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                          (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                          (rule "castedGetAny" (formula "23") (term "1,0"))
                                                                                          (rule "eqSymm" (formula "23"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                          (rule "castedGetAny" (formula "11") (term "1,0"))
                                                                                          (rule "eqSymm" (formula "11"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "11"))
                                                                                          (rule "eqSymm" (formula "23"))
                                                                                          (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                          (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                          (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "true_left" (formula "8"))
                                                                                          (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                          (builtin "One Step Simplification" (formula "7"))
                                                                                          (rule "true_left" (formula "7"))
                                                                                          (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_data_0"))
                                                                                          (rule "simplifySelectOfCreate" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                          (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                          (builtin "One Step Simplification" (formula "22"))
                                                                                          (rule "closeTrue" (formula "22"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "false_right" (formula "15"))
                                                                                    (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                    (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                    (rule "andLeft" (formula "11"))
                                                                                    (rule "andLeft" (formula "6"))
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "andLeft" (formula "9"))
                                                                                    (rule "andLeft" (formula "7"))
                                                                                    (rule "andLeft" (formula "10"))
                                                                                    (rule "andLeft" (formula "7"))
                                                                                    (rule "andLeft" (formula "11"))
                                                                                    (rule "notLeft" (formula "11"))
                                                                                    (rule "eqSymm" (formula "15"))
                                                                                    (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "24") (term "0,1"))
                                                                                    (rule "eqSymm" (formula "16"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                    (rule "eqSymm" (formula "17"))
                                                                                    (rule "eqSymm" (formula "18"))
                                                                                    (rule "eqSymm" (formula "10"))
                                                                                    (rule "eqSymm" (formula "13"))
                                                                                    (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                    (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                    (rule "eqSymm" (formula "11"))
                                                                                    (rule "eqSymm" (formula "24"))
                                                                                    (rule "eqSymm" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "24") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "24") (term "0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "24") (term "1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                    (rule "sortsDisjointModuloNull" (formula "23"))
                                                                                    (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "22"))
                                                                                    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")))
                                                                                    (rule "false_right" (formula "23"))
                                                                                    (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                    (rule "subsetSingletonLeft" (formula "7"))
                                                                                    (rule "subsetSingletonLeft" (formula "8"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                    (rule "castedGetAny" (formula "19") (term "0"))
                                                                                    (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                    (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "11") (term "0"))
                                                                                    (rule "eqSymm" (formula "11"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "castedGetAny" (formula "23") (term "1,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                    (rule "castedGetAny" (formula "23") (term "2,0"))
                                                                                    (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                    (rule "castedGetAny" (formula "11") (term "1,0"))
                                                                                    (rule "eqSymm" (formula "11"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                                                                                    (rule "eqSymm" (formula "23"))
                                                                                    (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                    (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (rule "true_left" (formula "8"))
                                                                                    (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                    (builtin "One Step Simplification" (formula "7"))
                                                                                    (rule "true_left" (formula "7"))
                                                                                    (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_next_0"))
                                                                                    (rule "simplifySelectOfCreate" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                    (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "closeTrue" (formula "22"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "impRight" (formula "17"))
                                                                                 (rule "andRight" (formula "18"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "18"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "18"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "15"))
                                                                                          (rule "false_right" (formula "15"))
                                                                                          (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                          (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                          (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                          (rule "notRight" (formula "16"))
                                                                                          (rule "close" (formula "13") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "false_right" (formula "15"))
                                                                                    (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                    (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                    (rule "andLeft" (formula "11"))
                                                                                    (rule "notRight" (formula "17"))
                                                                                    (rule "close" (formula "14") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "impRight" (formula "17"))
                                                                              (rule "andRight" (formula "18"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "18"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "18"))
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (builtin "One Step Simplification" (formula "17"))
                                                                                       (builtin "One Step Simplification" (formula "15"))
                                                                                       (rule "false_right" (formula "16"))
                                                                                       (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                       (rule "andLeft" (formula "11"))
                                                                                       (rule "andLeft" (formula "6"))
                                                                                       (rule "andLeft" (formula "1"))
                                                                                       (rule "andLeft" (formula "9"))
                                                                                       (rule "andLeft" (formula "7"))
                                                                                       (rule "andLeft" (formula "10"))
                                                                                       (rule "andLeft" (formula "7"))
                                                                                       (rule "andLeft" (formula "11"))
                                                                                       (rule "notLeft" (formula "11"))
                                                                                       (rule "eqSymm" (formula "24"))
                                                                                       (rule "eqSymm" (formula "15"))
                                                                                       (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                       (rule "eqSymm" (formula "16"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                       (rule "eqSymm" (formula "17"))
                                                                                       (rule "eqSymm" (formula "18"))
                                                                                       (rule "eqSymm" (formula "10"))
                                                                                       (rule "eqSymm" (formula "13"))
                                                                                       (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                       (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                       (rule "eqSymm" (formula "11"))
                                                                                       (rule "eqSymm" (formula "13") (term "0,0"))
                                                                                       (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                       (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                       (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                       (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                       (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                       (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                       (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                       (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                       (rule "sortsDisjointModuloNull" (formula "23"))
                                                                                       (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "20"))
                                                                                       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
                                                                                       (rule "false_right" (formula "23"))
                                                                                       (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                       (rule "subsetSingletonLeft" (formula "8"))
                                                                                       (rule "subsetSingletonLeft" (formula "7"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                       (rule "castedGetAny" (formula "19") (term "0"))
                                                                                       (rule "castedGetAny" (formula "23") (term "0"))
                                                                                       (rule "eqSymm" (formula "23"))
                                                                                       (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "1,1,1,0,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                       (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                       (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                       (rule "castedGetAny" (formula "11") (term "1,1"))
                                                                                       (rule "castedGetAny" (formula "11") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                       (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                       (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "23") (term "1,0"))
                                                                                       (rule "eqSymm" (formula "23"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "11"))
                                                                                       (rule "eqSymm" (formula "23"))
                                                                                       (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                       (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                       (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                       (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (rule "true_left" (formula "8"))
                                                                                       (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                       (builtin "One Step Simplification" (formula "7"))
                                                                                       (rule "true_left" (formula "7"))
                                                                                       (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_data_0"))
                                                                                       (rule "simplifySelectOfCreate" (formula "1"))
                                                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                       (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                       (builtin "One Step Simplification" (formula "22"))
                                                                                       (rule "closeTrue" (formula "22"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                    (rule "closeFalse" (formula "7"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (builtin "One Step Simplification" (formula "8"))
                                                                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                 (builtin "One Step Simplification" (formula "6"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (builtin "One Step Simplification" (formula "17"))
                                                                                 (builtin "One Step Simplification" (formula "15"))
                                                                                 (rule "false_right" (formula "16"))
                                                                                 (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                 (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                 (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                 (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                 (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                 (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                 (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                 (rule "andLeft" (formula "11"))
                                                                                 (rule "andLeft" (formula "6"))
                                                                                 (rule "andLeft" (formula "1"))
                                                                                 (rule "andLeft" (formula "9"))
                                                                                 (rule "andLeft" (formula "7"))
                                                                                 (rule "andLeft" (formula "10"))
                                                                                 (rule "andLeft" (formula "7"))
                                                                                 (rule "andLeft" (formula "11"))
                                                                                 (rule "notLeft" (formula "11"))
                                                                                 (rule "eqSymm" (formula "15"))
                                                                                 (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                 (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                 (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                 (rule "eqSymm" (formula "16"))
                                                                                 (rule "eqSymm" (formula "24") (term "0,1"))
                                                                                 (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                 (rule "eqSymm" (formula "17"))
                                                                                 (rule "eqSymm" (formula "18"))
                                                                                 (rule "eqSymm" (formula "10"))
                                                                                 (rule "eqSymm" (formula "13") (term "0,1"))
                                                                                 (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                 (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                 (rule "eqSymm" (formula "11"))
                                                                                 (rule "eqSymm" (formula "24"))
                                                                                 (rule "eqSymm" (formula "13"))
                                                                                 (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                 (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                 (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                 (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                 (rule "polySimp_elimSub" (formula "24") (term "0,0,0"))
                                                                                 (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                                                 (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                 (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                 (rule "polySimp_homoEq" (formula "24") (term "0,0"))
                                                                                 (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                 (rule "polySimp_addComm0" (formula "24") (term "1,0,2,0"))
                                                                                 (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                 (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                 (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                 (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                 (rule "sortsDisjointModuloNull" (formula "23"))
                                                                                 (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "22"))
                                                                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")))
                                                                                 (rule "false_right" (formula "23"))
                                                                                 (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                 (rule "subsetSingletonLeft" (formula "7"))
                                                                                 (rule "subsetSingletonLeft" (formula "8"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "19") (term "0"))
                                                                                 (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "1,1,1,0,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                 (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                 (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "11") (term "1,1"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                 (rule "castedGetAny" (formula "11") (term "0"))
                                                                                 (rule "castedGetAny" (formula "23") (term "1,1"))
                                                                                 (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                 (rule "castedGetAny" (formula "23") (term "2,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                                                                 (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                                                                                 (rule "eqSymm" (formula "23"))
                                                                                 (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                 (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                 (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                 (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                 (rule "elementOfUnionEQ" (formula "7") (ifseqformula "10"))
                                                                                 (builtin "One Step Simplification" (formula "7"))
                                                                                 (rule "true_left" (formula "7"))
                                                                                 (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                 (builtin "One Step Simplification" (formula "7"))
                                                                                 (rule "true_left" (formula "7"))
                                                                                 (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_next_0"))
                                                                                 (rule "simplifySelectOfCreate" (formula "1"))
                                                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                 (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                 (builtin "One Step Simplification" (formula "22"))
                                                                                 (rule "closeTrue" (formula "22"))
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "andRight" (formula "16"))
                                                                           (branch
                                                                              (rule "andRight" (formula "16"))
                                                                              (branch
                                                                                 (rule "impRight" (formula "17"))
                                                                                 (rule "andRight" (formula "18"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "18"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "18"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "15"))
                                                                                          (rule "false_right" (formula "15"))
                                                                                          (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                          (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                          (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                          (rule "andLeft" (formula "11"))
                                                                                          (rule "notRight" (formula "16"))
                                                                                          (rule "close" (formula "14") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "false_right" (formula "15"))
                                                                                    (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                    (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                    (rule "andLeft" (formula "11"))
                                                                                    (rule "notRight" (formula "16"))
                                                                                    (rule "close" (formula "14") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "impRight" (formula "16"))
                                                                                 (rule "andRight" (formula "17"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "17"))
                                                                                    (branch
                                                                                       (rule "andRight" (formula "17"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                          (rule "closeFalse" (formula "7"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "15"))
                                                                                          (rule "false_right" (formula "15"))
                                                                                          (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                          (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                          (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                          (rule "notRight" (formula "15"))
                                                                                          (rule "close" (formula "13") (ifseqformula "1"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "false_right" (formula "15"))
                                                                                    (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                    (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                    (rule "notRight" (formula "15"))
                                                                                    (rule "close" (formula "13") (ifseqformula "1"))
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "impRight" (formula "17"))
                                                                              (rule "andRight" (formula "18"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "18"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "18"))
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (builtin "One Step Simplification" (formula "17"))
                                                                                       (builtin "One Step Simplification" (formula "15"))
                                                                                       (rule "false_right" (formula "16"))
                                                                                       (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                       (rule "andLeft" (formula "11"))
                                                                                       (rule "notRight" (formula "16"))
                                                                                       (rule "close" (formula "14") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                    (rule "closeFalse" (formula "7"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (builtin "One Step Simplification" (formula "8"))
                                                                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                 (builtin "One Step Simplification" (formula "6"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (builtin "One Step Simplification" (formula "17"))
                                                                                 (builtin "One Step Simplification" (formula "15"))
                                                                                 (rule "false_right" (formula "16"))
                                                                                 (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                 (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                 (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                 (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                 (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                 (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                 (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                 (rule "notRight" (formula "15"))
                                                                                 (rule "close" (formula "13") (ifseqformula "1"))
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch "Case 2"
                                                                        (rule "andRight" (formula "16"))
                                                                        (branch
                                                                           (rule "andRight" (formula "16"))
                                                                           (branch
                                                                              (rule "impRight" (formula "17"))
                                                                              (rule "andRight" (formula "18"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "18"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "18"))
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (builtin "One Step Simplification" (formula "16"))
                                                                                       (builtin "One Step Simplification" (formula "15"))
                                                                                       (rule "false_right" (formula "15"))
                                                                                       (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                       (rule "andLeft" (formula "11"))
                                                                                       (rule "andLeft" (formula "6"))
                                                                                       (rule "andLeft" (formula "1"))
                                                                                       (rule "andLeft" (formula "9"))
                                                                                       (rule "andLeft" (formula "7"))
                                                                                       (rule "andLeft" (formula "10"))
                                                                                       (rule "andLeft" (formula "7"))
                                                                                       (rule "andLeft" (formula "11"))
                                                                                       (rule "notLeft" (formula "11"))
                                                                                       (rule "eqSymm" (formula "15"))
                                                                                       (rule "eqSymm" (formula "24"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                       (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                       (rule "eqSymm" (formula "16"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                       (rule "eqSymm" (formula "17"))
                                                                                       (rule "eqSymm" (formula "18"))
                                                                                       (rule "eqSymm" (formula "10"))
                                                                                       (rule "eqSymm" (formula "13"))
                                                                                       (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                       (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                       (rule "eqSymm" (formula "11"))
                                                                                       (rule "eqSymm" (formula "13") (term "0,0"))
                                                                                       (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                       (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                       (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                       (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                       (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                       (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                       (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                       (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                       (rule "sortsDisjointModuloNull" (formula "23"))
                                                                                       (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "20"))
                                                                                       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
                                                                                       (rule "false_right" (formula "23"))
                                                                                       (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                       (rule "subsetSingletonLeft" (formula "8"))
                                                                                       (rule "subsetSingletonLeft" (formula "7"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "19") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                       (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                       (rule "castedGetAny" (formula "23") (term "0"))
                                                                                       (rule "eqSymm" (formula "23"))
                                                                                       (rule "castedGetAny" (formula "14") (term "1,1,1,0,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                       (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                       (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                       (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                       (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                       (rule "castedGetAny" (formula "11") (term "1,1"))
                                                                                       (rule "castedGetAny" (formula "11") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                       (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                       (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                       (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                       (rule "castedGetAny" (formula "23") (term "1,0"))
                                                                                       (rule "eqSymm" (formula "23"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "11"))
                                                                                       (rule "eqSymm" (formula "23"))
                                                                                       (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                       (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                       (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                       (rule "elementOfUnionEQ" (formula "7") (ifseqformula "10"))
                                                                                       (builtin "One Step Simplification" (formula "7"))
                                                                                       (rule "true_left" (formula "7"))
                                                                                       (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                       (builtin "One Step Simplification" (formula "7"))
                                                                                       (rule "true_left" (formula "7"))
                                                                                       (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_data_0"))
                                                                                       (rule "simplifySelectOfCreate" (formula "1"))
                                                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                       (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                       (builtin "One Step Simplification" (formula "22"))
                                                                                       (rule "closeTrue" (formula "22"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                    (rule "closeFalse" (formula "7"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (builtin "One Step Simplification" (formula "8"))
                                                                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                 (builtin "One Step Simplification" (formula "6"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (builtin "One Step Simplification" (formula "16"))
                                                                                 (builtin "One Step Simplification" (formula "15"))
                                                                                 (rule "false_right" (formula "15"))
                                                                                 (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                 (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                 (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                 (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                 (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                 (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                 (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                 (rule "andLeft" (formula "11"))
                                                                                 (rule "andLeft" (formula "6"))
                                                                                 (rule "andLeft" (formula "1"))
                                                                                 (rule "andLeft" (formula "9"))
                                                                                 (rule "andLeft" (formula "7"))
                                                                                 (rule "andLeft" (formula "10"))
                                                                                 (rule "andLeft" (formula "7"))
                                                                                 (rule "andLeft" (formula "11"))
                                                                                 (rule "notLeft" (formula "11"))
                                                                                 (rule "eqSymm" (formula "15"))
                                                                                 (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                 (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                 (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                 (rule "eqSymm" (formula "16"))
                                                                                 (rule "eqSymm" (formula "24") (term "0,1"))
                                                                                 (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                 (rule "eqSymm" (formula "17"))
                                                                                 (rule "eqSymm" (formula "18"))
                                                                                 (rule "eqSymm" (formula "10"))
                                                                                 (rule "eqSymm" (formula "13"))
                                                                                 (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                 (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                 (rule "eqSymm" (formula "11"))
                                                                                 (rule "eqSymm" (formula "24"))
                                                                                 (rule "eqSymm" (formula "13") (term "0,0"))
                                                                                 (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                 (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                 (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                 (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                 (rule "polySimp_elimSub" (formula "24") (term "0,0,0"))
                                                                                 (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                                                                 (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                 (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                 (rule "polySimp_homoEq" (formula "24") (term "0,0"))
                                                                                 (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                 (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                 (rule "polySimp_addComm0" (formula "24") (term "1,0,2,0"))
                                                                                 (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                 (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                 (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                 (rule "sortsDisjointModuloNull" (formula "23"))
                                                                                 (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "22"))
                                                                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")))
                                                                                 (rule "false_right" (formula "23"))
                                                                                 (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                 (rule "subsetSingletonLeft" (formula "8"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                 (rule "subsetSingletonLeft" (formula "7"))
                                                                                 (rule "castedGetAny" (formula "19") (term "0"))
                                                                                 (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                 (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                 (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                 (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                 (rule "castedGetAny" (formula "11") (term "0"))
                                                                                 (rule "eqSymm" (formula "11"))
                                                                                 (rule "castedGetAny" (formula "23") (term "1,1"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                 (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                 (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                 (rule "castedGetAny" (formula "23") (term "2,0"))
                                                                                 (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                 (rule "castedGetAny" (formula "14") (term "1,0,1,0,0,1,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                 (rule "castedGetAny" (formula "11") (term "1,0"))
                                                                                 (rule "eqSymm" (formula "11"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                                                                                 (rule "eqSymm" (formula "23"))
                                                                                 (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                 (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                 (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                 (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                 (rule "elementOfUnionEQ" (formula "7") (ifseqformula "10"))
                                                                                 (builtin "One Step Simplification" (formula "7"))
                                                                                 (rule "true_left" (formula "7"))
                                                                                 (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                 (builtin "One Step Simplification" (formula "7"))
                                                                                 (rule "true_left" (formula "7"))
                                                                                 (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_next_0"))
                                                                                 (rule "simplifySelectOfCreate" (formula "1"))
                                                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                 (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                 (builtin "One Step Simplification" (formula "22"))
                                                                                 (rule "closeTrue" (formula "22"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "impRight" (formula "17"))
                                                                              (rule "andRight" (formula "18"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "18"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "18"))
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                       (rule "closeFalse" (formula "7"))
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "8"))
                                                                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                       (builtin "One Step Simplification" (formula "6"))
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (builtin "One Step Simplification" (formula "16"))
                                                                                       (builtin "One Step Simplification" (formula "15"))
                                                                                       (rule "false_right" (formula "15"))
                                                                                       (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                       (rule "notRight" (formula "15"))
                                                                                       (rule "close" (formula "13") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                    (rule "closeFalse" (formula "7"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (builtin "One Step Simplification" (formula "8"))
                                                                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                 (builtin "One Step Simplification" (formula "6"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (builtin "One Step Simplification" (formula "16"))
                                                                                 (builtin "One Step Simplification" (formula "15"))
                                                                                 (rule "false_right" (formula "15"))
                                                                                 (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                 (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                 (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                 (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                 (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                 (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                 (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                 (rule "notRight" (formula "15"))
                                                                                 (rule "close" (formula "13") (ifseqformula "1"))
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch "Case 2"
                                                                           (rule "impRight" (formula "17"))
                                                                           (rule "andRight" (formula "18"))
                                                                           (branch
                                                                              (rule "andRight" (formula "18"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "18"))
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                    (rule "closeFalse" (formula "7"))
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "17"))
                                                                                    (builtin "One Step Simplification" (formula "16"))
                                                                                    (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "false_right" (formula "15"))
                                                                                    (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                                    (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                                    (rule "andLeft" (formula "11"))
                                                                                    (rule "andLeft" (formula "6"))
                                                                                    (rule "andLeft" (formula "1"))
                                                                                    (rule "andLeft" (formula "9"))
                                                                                    (rule "andLeft" (formula "7"))
                                                                                    (rule "andLeft" (formula "10"))
                                                                                    (rule "andLeft" (formula "7"))
                                                                                    (rule "andLeft" (formula "11"))
                                                                                    (rule "notLeft" (formula "11"))
                                                                                    (rule "eqSymm" (formula "15"))
                                                                                    (rule "eqSymm" (formula "23"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                    (rule "eqSymm" (formula "16"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                    (rule "eqSymm" (formula "18"))
                                                                                    (rule "eqSymm" (formula "17"))
                                                                                    (rule "eqSymm" (formula "10"))
                                                                                    (rule "eqSymm" (formula "13") (term "0,1"))
                                                                                    (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                    (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                    (rule "eqSymm" (formula "11"))
                                                                                    (rule "eqSymm" (formula "13"))
                                                                                    (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                    (rule "subsetSingletonLeft" (formula "8"))
                                                                                    (rule "subsetSingletonLeft" (formula "7"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                    (rule "castedGetAny" (formula "19") (term "0"))
                                                                                    (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                    (rule "castedGetAny" (formula "23") (term "1,1"))
                                                                                    (rule "castedGetAny" (formula "23") (term "0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                    (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "castedGetAny" (formula "11") (term "0"))
                                                                                    (rule "eqSymm" (formula "11"))
                                                                                    (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                                    (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                    (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                                    (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                    (rule "castedGetAny" (formula "11") (term "1,0"))
                                                                                    (rule "eqSymm" (formula "11"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "11"))
                                                                                    (rule "eqSymm" (formula "23"))
                                                                                    (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                    (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (rule "true_left" (formula "8"))
                                                                                    (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                    (builtin "One Step Simplification" (formula "7"))
                                                                                    (rule "true_left" (formula "7"))
                                                                                    (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_data_0"))
                                                                                    (rule "simplifySelectOfCreate" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                                    (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "closeTrue" (formula "22"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (builtin "One Step Simplification" (formula "8"))
                                                                                 (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")) (ifInst ""  (formula "18")))
                                                                                 (rule "closeFalse" (formula "7"))
                                                                              )
                                                                           )
                                                                           (branch "Case 2"
                                                                              (builtin "One Step Simplification" (formula "8"))
                                                                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                                                                              (builtin "One Step Simplification" (formula "6"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (builtin "One Step Simplification" (formula "17"))
                                                                              (builtin "One Step Simplification" (formula "16"))
                                                                              (builtin "One Step Simplification" (formula "15"))
                                                                              (rule "false_right" (formula "15"))
                                                                              (rule "translateJavaSubInt" (formula "15") (term "1,0,1"))
                                                                              (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                              (rule "translateJavaAddInt" (formula "15") (term "1,0,2,1"))
                                                                              (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                              (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                              (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1"))
                                                                              (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1"))
                                                                              (rule "andLeft" (formula "11"))
                                                                              (rule "andLeft" (formula "6"))
                                                                              (rule "andLeft" (formula "1"))
                                                                              (rule "andLeft" (formula "9"))
                                                                              (rule "andLeft" (formula "7"))
                                                                              (rule "andLeft" (formula "10"))
                                                                              (rule "andLeft" (formula "7"))
                                                                              (rule "andLeft" (formula "11"))
                                                                              (rule "notLeft" (formula "11"))
                                                                              (rule "eqSymm" (formula "15"))
                                                                              (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                              (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                              (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                              (rule "eqSymm" (formula "23") (term "0,1"))
                                                                              (rule "eqSymm" (formula "16"))
                                                                              (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                              (rule "eqSymm" (formula "18"))
                                                                              (rule "eqSymm" (formula "17"))
                                                                              (rule "eqSymm" (formula "10"))
                                                                              (rule "eqSymm" (formula "13") (term "0,1"))
                                                                              (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                              (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                              (rule "eqSymm" (formula "11"))
                                                                              (rule "eqSymm" (formula "23"))
                                                                              (rule "eqSymm" (formula "13"))
                                                                              (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                              (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                              (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                              (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "23") (term "0,0,0"))
                                                                              (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                                                              (rule "polySimp_elimSub" (formula "13") (term "0,0,0"))
                                                                              (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                              (rule "polySimp_homoEq" (formula "23") (term "0,0"))
                                                                              (rule "polySimp_homoEq" (formula "13") (term "0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "23") (term "1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,0"))
                                                                              (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                              (rule "subsetSingletonLeft" (formula "7"))
                                                                              (rule "subsetSingletonLeft" (formula "8"))
                                                                              (rule "castedGetAny" (formula "19") (term "0"))
                                                                              (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                              (rule "castedGetAny" (formula "14") (term "1,1,1,0,0,1,0"))
                                                                              (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                              (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                              (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                              (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                              (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                              (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                              (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                              (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                              (rule "castedGetAny" (formula "11") (term "0"))
                                                                              (rule "eqSymm" (formula "11"))
                                                                              (rule "castedGetAny" (formula "23") (term "1,1"))
                                                                              (rule "castedGetAny" (formula "13") (term "1,1"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                                                              (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                              (rule "castedGetAny" (formula "23") (term "2,0"))
                                                                              (rule "castedGetAny" (formula "13") (term "2,0"))
                                                                              (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                              (rule "castedGetAny" (formula "11") (term "1,0"))
                                                                              (rule "eqSymm" (formula "11"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                                                                              (rule "eqSymm" (formula "23"))
                                                                              (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "13") (term "0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                              (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                              (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                              (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                              (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                              (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                              (rule "elementOfUnionEQ" (formula "7") (ifseqformula "10"))
                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "true_left" (formula "7"))
                                                                              (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "true_left" (formula "7"))
                                                                              (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntNode_next_0"))
                                                                              (rule "simplifySelectOfCreate" (formula "1"))
                                                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                                                              (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                                              (builtin "One Step Simplification" (formula "22"))
                                                                              (rule "closeTrue" (formula "22"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                 (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "eqSymm" (formula "11"))
                                 (rule "eqSymm" (formula "10"))
                                 (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                 (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                 (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "9") (term "1,1,0"))
                                 (rule "eqSymm" (formula "8"))
                                 (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                 (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                 (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                 (rule "subsetSingletonLeft" (formula "5"))
                                 (rule "subsetSingletonLeft" (formula "6"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "0,0,2,0"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                 (rule "castedGetAny" (formula "10") (term "2,0"))
                                 (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                 (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                 (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                 (rule "castedGetAny" (formula "11") (term "2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                                 (rule "castedGetAny" (formula "17") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                 (rule "castedGetAny" (formula "9") (term "1,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "0,2,0"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "0,2,0"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "0,2,0"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                 (rule "replaceKnownSelect_taclet0_0" (formula "17") (term "1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "17") (term "1"))
                                 (rule "dismissNonSelectedField" (formula "17") (term "0,2,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                 (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                 (rule "elementOfUnionEQ" (formula "5") (ifseqformula "8"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "pullOutSelect" (formula "15") (term "0,0,0") (inst "selectSK=IntLinkedList_size_0"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                 (rule "applyEqReverse" (formula "16") (term "0,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "15") (term "0,2,0") (inst "selectSK=IntLinkedList_nodeseq_0"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                 (rule "applyEqReverse" (formula "16") (term "0,2,0") (ifseqformula "1"))
                                 (rule "close" (formula "16") (ifseqformula "9"))
                              )
                           )
                           (branch
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "translateJavaSubInt" (formula "9") (term "1,0,2,1"))
                              (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                              (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                              (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "eqSymm" (formula "17"))
                              (rule "eqSymm" (formula "11"))
                              (rule "eqSymm" (formula "12"))
                              (rule "eqSymm" (formula "13"))
                              (rule "eqSymm" (formula "10"))
                              (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                              (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                              (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "9") (term "1,1,0"))
                              (rule "eqSymm" (formula "8"))
                              (rule "polySimp_elimSub" (formula "17") (term "1,0,2,0"))
                              (rule "mul_literals" (formula "17") (term "1,1,0,2,0"))
                              (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                              (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                              (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "17") (term "1,0,2,0"))
                              (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                              (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                              (rule "subsetSingletonLeft" (formula "5"))
                              (rule "subsetSingletonLeft" (formula "6"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0,2,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                              (rule "castedGetAny" (formula "10") (term "2,0"))
                              (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                              (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                              (rule "castedGetAny" (formula "9") (term "1,1,1,0,0,1,0"))
                              (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                              (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                              (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                              (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                              (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,2,0"))
                              (rule "castedGetAny" (formula "11") (term "2,0"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0,2,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,2,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0,2,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,2,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0,2,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,2,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0,2,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,2,0"))
                              (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                              (rule "castedGetAny" (formula "17") (term "2,0"))
                              (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                              (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                              (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "pullOutSelect" (formula "15") (term "1") (inst "selectSK=IntLinkedList_last_0"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                              (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "15") (term "0,0,0") (inst "selectSK=IntLinkedList_size_0"))
                              (rule "applyEq" (formula "16") (term "1,1,2,0") (ifseqformula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                              (rule "applyEqReverse" (formula "16") (term "0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "16") (term "1,1,2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "15") (term "0,2,0") (inst "selectSK=IntLinkedList_nodeseq_0"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                              (rule "applyEqReverse" (formula "16") (term "0,2,0") (ifseqformula "1"))
                              (rule "close" (formula "16") (ifseqformula "10"))
                           )
                        )
                        (branch
                           (rule "andRight" (formula "9"))
                           (branch
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                              (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                              (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "eqSymm" (formula "17"))
                              (rule "eqSymm" (formula "11"))
                              (rule "eqSymm" (formula "12"))
                              (rule "eqSymm" (formula "13"))
                              (rule "eqSymm" (formula "10"))
                              (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                              (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                              (rule "eqSymm" (formula "9") (term "1,1,0"))
                              (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "8"))
                              (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                              (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                              (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                              (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                              (rule "subsetSingletonLeft" (formula "6"))
                              (rule "subsetSingletonLeft" (formula "5"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                              (rule "eqSymm" (formula "17"))
                              (rule "castedGetAny" (formula "10") (term "2,0"))
                              (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                              (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                              (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                              (rule "castedGetAny" (formula "9") (term "1,1,1,0,0,1,0"))
                              (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                              (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                              (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                              (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                              (rule "castedGetAny" (formula "11") (term "2,0"))
                              (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0"))
                              (rule "eqSymm" (formula "17"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                              (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                              (rule "elementOfUnionEQ" (formula "5") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "pullOutSelect" (formula "15") (term "1") (inst "selectSK=IntLinkedList_size_0"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                              (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "15") (term "0,0") (inst "selectSK=IntList_seq_0"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                              (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "1"))
                              (rule "close" (formula "16") (ifseqformula "11"))
                           )
                           (branch
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                              (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                              (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "5"))
                              (rule "eqSymm" (formula "17"))
                              (rule "eqSymm" (formula "11"))
                              (rule "eqSymm" (formula "12"))
                              (rule "eqSymm" (formula "13"))
                              (rule "eqSymm" (formula "10"))
                              (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                              (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                              (rule "eqSymm" (formula "9") (term "1,1,0"))
                              (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "8"))
                              (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                              (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                              (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                              (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                              (rule "subsetSingletonLeft" (formula "6"))
                              (rule "subsetSingletonLeft" (formula "5"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                              (rule "castedGetAny" (formula "10") (term "2,0"))
                              (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                              (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                              (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                              (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                              (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                              (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                              (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                              (rule "castedGetAny" (formula "11") (term "2,0"))
                              (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                              (rule "castedGetAny" (formula "9") (term "1,0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                              (rule "dismissNonSelectedField" (formula "17") (term "1"))
                              (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                              (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                              (rule "elementOfUnionEQ" (formula "5") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "pullOutSelect" (formula "15") (term "1") (inst "selectSK=IntLinkedList_size_0"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                              (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "15") (term "0,0") (inst "selectSK=IntLinkedList_nodeseq_0"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                              (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "1"))
                              (rule "close" (formula "16") (ifseqformula "12"))
                           )
                        )
                     )
                     (branch "Show Axiom Satisfiability"
                        (rule "andRight" (formula "10"))
                        (branch
                           (rule "andRight" (formula "10"))
                           (branch
                              (rule "andRight" (formula "10"))
                              (branch
                                 (rule "andRight" (formula "10"))
                                 (branch
                                    (rule "andRight" (formula "10"))
                                    (branch
                                       (rule "andRight" (formula "10"))
                                       (branch
                                          (rule "andRight" (formula "10"))
                                          (branch
                                             (rule "orRight" (formula "6"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                             (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                             (rule "notRight" (formula "7"))
                                             (rule "close" (formula "7") (ifseqformula "1"))
                                          )
                                          (branch
                                             (rule "orRight" (formula "6"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                             (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                             (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                             (rule "notRight" (formula "7"))
                                             (rule "close" (formula "7") (ifseqformula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "orRight" (formula "6"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                          (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                                          (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                          (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                          (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                          (rule "notRight" (formula "7"))
                                          (rule "close" (formula "7") (ifseqformula "1"))
                                       )
                                    )
                                    (branch
                                       (rule "orRight" (formula "6"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                       (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                       (rule "notRight" (formula "7"))
                                       (rule "close" (formula "7") (ifseqformula "1"))
                                    )
                                 )
                                 (branch
                                    (rule "orRight" (formula "6"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "translateJavaSubInt" (formula "11") (term "1,0,1,1,1,0"))
                                    (rule "translateJavaAddInt" (formula "11") (term "1,0,2,1,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                    (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                    (rule "notRight" (formula "7"))
                                    (rule "close" (formula "7") (ifseqformula "1"))
                                 )
                              )
                              (branch
                                 (rule "orRight" (formula "6"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                 (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                 (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                 (rule "notRight" (formula "7"))
                                 (rule "close" (formula "7") (ifseqformula "1"))
                              )
                           )
                           (branch
                              (rule "orRight" (formula "6"))
                              (builtin "One Step Simplification" (formula "7"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "translateJavaSubInt" (formula "11") (term "1,0,2,1"))
                              (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                              (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                              (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                              (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                              (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                              (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                              (rule "notRight" (formula "7"))
                              (rule "close" (formula "7") (ifseqformula "1"))
                           )
                        )
                        (branch
                           (rule "andRight" (formula "10"))
                           (branch
                              (rule "orRight" (formula "6"))
                              (builtin "One Step Simplification" (formula "7"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                              (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                              (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                              (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                              (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                              (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                              (rule "notRight" (formula "7"))
                              (rule "close" (formula "7") (ifseqformula "1"))
                           )
                           (branch
                              (rule "orRight" (formula "6"))
                              (builtin "One Step Simplification" (formula "7"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                              (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                              (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                              (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                              (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                              (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                              (rule "notRight" (formula "7"))
                              (rule "close" (formula "7") (ifseqformula "1"))
                           )
                        )
                     )
                  )
                  (branch "Show Axiom Satisfiability"
                     (rule "orRight" (formula "9"))
                     (builtin "One Step Simplification" (formula "10"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "translateJavaSubInt" (formula "10") (term "1,0,1,1,1,0,1,0,0,0,0"))
                     (rule "translateJavaAddInt" (formula "10") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                     (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "9") (term "1,0,2,1,1,0"))
                     (rule "translateJavaAddInt" (formula "9") (term "1,0,2,1,1,1,0,1,0,0,0"))
                     (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,0,1,0,0,0"))
                     (rule "notRight" (formula "10"))
                     (rule "close" (formula "10") (ifseqformula "1"))
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "9"))
                  (branch
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "dismissNonSelectedField" (formula "9") (term "0"))
                     (rule "dismissNonSelectedField" (formula "9") (term "0"))
                     (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=IntIterator_list_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "closeTrue" (formula "10"))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "9"))
                     (branch
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "eqSymm" (formula "9"))
                        (rule "dismissNonSelectedField" (formula "9") (term "1"))
                        (rule "dismissNonSelectedField" (formula "9") (term "0"))
                        (rule "dismissNonSelectedField" (formula "9") (term "1"))
                        (rule "dismissNonSelectedField" (formula "9") (term "1"))
                        (rule "dismissNonSelectedField" (formula "9") (term "1"))
                        (rule "dismissNonSelectedField" (formula "9") (term "1"))
                        (rule "replaceKnownSelect_taclet0_0" (formula "9") (term "1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "9") (term "1"))
                        (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=IntIterator_next_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "closeTrue" (formula "10"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "9"))
                        (branch
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "dismissNonSelectedField" (formula "9") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "9") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "9") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "9") (term "0,0"))
                           (rule "pullOutSelect" (formula "9") (term "0,0") (inst "selectSK=IntIterator_seq_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "lenOfSeqEmptyEQ" (formula "10") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "closeTrue" (formula "10"))
                        )
                        (branch "Case 2"
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "Class_invariant_axiom_for_IntIterator" (formula "9") (inst "sk=sk_0") (ifseqformula "1") (userinteraction))
                           (branch "Use Axiom"
                              (rule "Class_invariant_axiom_for_IntLinkedList" (formula "5") (inst "i=i_4") (inst "j=j") (inst "i_0=i_0") (inst "i_1=i_1_1") (inst "sk=sk_1") (userinteraction))
                              (branch "Use Axiom"
                                 (rule "andRight" (formula "9"))
                                 (branch
                                    (rule "andRight" (formula "9"))
                                    (branch
                                       (rule "andRight" (formula "9"))
                                       (branch
                                          (rule "andRight" (formula "9"))
                                          (branch
                                             (rule "andRight" (formula "9"))
                                             (branch
                                                (rule "andRight" (formula "9"))
                                                (branch
                                                   (rule "andRight" (formula "9"))
                                                   (branch
                                                      (rule "andRight" (formula "9"))
                                                      (branch
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                                         (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                                         (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                         (rule "notRight" (formula "9"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "eqSymm" (formula "13"))
                                                         (rule "eqSymm" (formula "14"))
                                                         (rule "eqSymm" (formula "12"))
                                                         (rule "eqSymm" (formula "11"))
                                                         (rule "eqSymm" (formula "10") (term "0,1,0,1,0,1,0"))
                                                         (rule "eqSymm" (formula "10") (term "1,1,0"))
                                                         (rule "eqSymm" (formula "10") (term "1,1,0,1,0,1,0"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,1,0"))
                                                         (rule "eqSymm" (formula "9"))
                                                         (rule "polySimp_elimSub" (formula "12") (term "1,0,2,0"))
                                                         (rule "mul_literals" (formula "12") (term "1,1,0,2,0"))
                                                         (rule "polySimp_elimSub" (formula "10") (term "1,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "10") (term "1,1,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "10") (term "1,0,2,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "12") (term "1,0,2,0"))
                                                         (rule "polySimp_addComm0" (formula "10") (term "1,0,0,1,1,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,1,0"))
                                                         (rule "subsetSingletonLeft" (formula "6"))
                                                         (rule "subsetSingletonLeft" (formula "7"))
                                                         (rule "castedGetAny" (formula "11") (term "2,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,0,1,0,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,1,0,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,1,1,1,0"))
                                                         (rule "castedGetAny" (formula "10") (term "0,1,0,0,1,0"))
                                                         (rule "eqSymm" (formula "10") (term "1,0,0,1,0"))
                                                         (rule "castedGetAny" (formula "9") (term "0,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "10") (term "2,0,1,1,0"))
                                                         (rule "castedGetAny" (formula "12") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                                         (rule "castedGetAny" (formula "10") (term "1,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0"))
                                                         (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0,1,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                                         (rule "elementOfUnionEQ" (formula "6") (ifseqformula "9"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=IntIterator_list_0"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "0"))
                                                         (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "16") (ifseqformula "2"))
                                                      )
                                                      (branch
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                                         (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                                         (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "7"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "eqSymm" (formula "17"))
                                                         (rule "eqSymm" (formula "11"))
                                                         (rule "eqSymm" (formula "12"))
                                                         (rule "eqSymm" (formula "13"))
                                                         (rule "eqSymm" (formula "10"))
                                                         (rule "eqSymm" (formula "9") (term "1,1,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                                         (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                                         (rule "eqSymm" (formula "8"))
                                                         (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                                         (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                                         (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                                         (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                                         (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                                         (rule "subsetSingletonLeft" (formula "6"))
                                                         (rule "subsetSingletonLeft" (formula "5"))
                                                         (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                         (rule "dismissNonSelectedField" (formula "17") (term "0,2,0"))
                                                         (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                                         (rule "castedGetAny" (formula "10") (term "2,0"))
                                                         (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                                         (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                                         (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                                         (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                                         (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                                         (rule "castedGetAny" (formula "11") (term "2,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                         (rule "dismissNonSelectedField" (formula "17") (term "0,2,0"))
                                                         (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                                         (rule "castedGetAny" (formula "9") (term "1,0,1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                         (rule "dismissNonSelectedField" (formula "17") (term "0,2,0"))
                                                         (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                                         (rule "dismissNonSelectedField" (formula "17") (term "1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "17") (term "1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                         (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                                         (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                                         (rule "equalityToSeqGetAndSeqLenRight" (formula "17") (inst "iv=iv"))
                                                         (rule "lenOfSeqSub" (formula "17") (term "0,0"))
                                                         (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
                                                         (rule "times_zero_2" (formula "17") (term "1,1,0,0"))
                                                         (rule "add_zero_right" (formula "17") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "eqSymm" (formula "17") (term "1,0"))
                                                         (rule "lenOfSeqSub" (formula "17") (term "1,1,0,0,1"))
                                                         (rule "polySimp_elimSub" (formula "17") (term "1,1,1,0,0,1"))
                                                         (rule "times_zero_2" (formula "17") (term "1,1,1,1,0,0,1"))
                                                         (rule "add_zero_right" (formula "17") (term "1,1,1,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
                                                         (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,1,0,0,1"))
                                                         (rule "add_zero_right" (formula "17") (term "0,0,1,1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,0,0,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,0,0,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,0,0,1,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1"))
                                                         (rule "elementOfUnionEQ" (formula "5") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "getOfSeqSub" (formula "15") (term "0,1,0,1"))
                                                         (rule "castDel" (formula "15") (term "2,0,1,0,1"))
                                                         (rule "add_zero_right" (formula "15") (term "1,1,0,1,0,1"))
                                                         (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0,1,0,1"))
                                                         (rule "times_zero_2" (formula "15") (term "1,1,1,0,0,1,0,1"))
                                                         (rule "add_zero_right" (formula "15") (term "1,1,0,0,1,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,1"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,1"))
                                                         (rule "pullOutSelect" (formula "15") (term "0,1,1,0,1") (inst "selectSK=IntIterator_nodeseq_0"))
                                                         (rule "applyEq" (formula "16") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "16") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "0"))
                                                         (rule "lenOfSeqEmptyEQ" (formula "16") (term "0,1,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "lenOfSeqEmptyEQ" (formula "16") (term "1,1,1,1,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "lenOfSeqEmptyEQ" (formula "16") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                                                         (rule "add_zero_right" (formula "16") (term "1,1,0,0"))
                                                         (rule "add_zero_right" (formula "16") (term "1,1,0,0,1,0"))
                                                         (rule "allRight" (formula "16") (inst "sk=iv_0"))
                                                         (rule "impRight" (formula "16"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "2")))
                                                         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "eqSymm" (formula "17"))
                                                      (rule "eqSymm" (formula "11"))
                                                      (rule "eqSymm" (formula "13"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "eqSymm" (formula "10"))
                                                      (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                                      (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "eqSymm" (formula "9") (term "1,1,0"))
                                                      (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                                      (rule "eqSymm" (formula "8"))
                                                      (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                                      (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                                      (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                                      (rule "subsetSingletonLeft" (formula "6"))
                                                      (rule "subsetSingletonLeft" (formula "5"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "0,2,0"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                                      (rule "castedGetAny" (formula "10") (term "2,0"))
                                                      (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                                      (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                                      (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                                      (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                                      (rule "castedGetAny" (formula "11") (term "2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "0,2,0"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                                      (rule "castedGetAny" (formula "9") (term "1,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "0,2,0"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "0,2,0"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "1"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                      (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                                      (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenRight" (formula "17") (inst "iv=iv"))
                                                      (rule "lenOfSeqSub" (formula "17") (term "1,1,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "17") (term "1,1,1,0,0,1"))
                                                      (rule "times_zero_2" (formula "17") (term "1,1,1,1,0,0,1"))
                                                      (rule "add_zero_right" (formula "17") (term "1,1,1,0,0,1"))
                                                      (rule "lenOfSeqSub" (formula "17") (term "0,0"))
                                                      (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
                                                      (rule "times_zero_2" (formula "17") (term "1,1,0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "eqSymm" (formula "17") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,1,0,0,1,0,0,1"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,0,1,0,0,1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1,1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0,0,1,1,1,0,0,1"))
                                                      (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "getOfSeqSub" (formula "15") (term "0,1,0,1"))
                                                      (rule "castDel" (formula "15") (term "2,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "15") (term "1,1,0,1,0,1"))
                                                      (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0,1,0,1"))
                                                      (rule "times_zero_2" (formula "15") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "15") (term "1,1,0,0,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "pullOutSelect" (formula "15") (term "0,1,1,0,1") (inst "selectSK=IntIterator_seq_0"))
                                                      (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "16") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "16") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "lenOfSeqEmptyEQ" (formula "16") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "lenOfSeqEmptyEQ" (formula "16") (term "0,1,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "lenOfSeqEmptyEQ" (formula "16") (term "1,1,1,1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "lenOfSeqEmptyEQ" (formula "16") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                                                      (rule "add_zero_right" (formula "16") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                                                      (rule "allRight" (formula "16") (inst "sk=iv_0"))
                                                      (rule "impRight" (formula "16"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                                   (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                                   (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "eqSymm" (formula "12"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "eqSymm" (formula "11"))
                                                   (rule "eqSymm" (formula "10"))
                                                   (rule "eqSymm" (formula "9") (term "1,1,0"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                                   (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                                   (rule "eqSymm" (formula "8"))
                                                   (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                                   (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                                   (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "1,0,1"))
                                                   (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                                   (rule "subsetSingletonLeft" (formula "5"))
                                                   (rule "subsetSingletonLeft" (formula "6"))
                                                   (rule "castedGetAny" (formula "10") (term "2,0"))
                                                   (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                                   (rule "castedGetAny" (formula "11") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                                   (rule "castedGetAny" (formula "9") (term "1,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "1,0,1"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                   (rule "inEqSimp_leqRight" (formula "17"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0"))
                                                   (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                                   (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=IntIterator_nodeseq_0"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "lenOfSeqEmptyEQ" (formula "2") (term "1,1") (ifseqformula "1"))
                                                   (rule "add_zero_right" (formula "2") (term "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=IntLinkedList_nodeseq_0"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                                   (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=IntIterator_list_0"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                                                   (rule "inEqSimp_contradEq3" (formula "10") (term "0,0") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "10") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "inEqSimp_contradEq3" (formula "9") (term "0,0") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "9") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "nnf_imp2or" (formula "8") (term "0"))
                                                   (rule "nnf_imp2or" (formula "6") (term "0"))
                                                   (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                   (rule "nnf_imp2or" (formula "8") (term "0,1,0,1,0"))
                                                   (rule "nnf_notAnd" (formula "8") (term "0,0,1,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "8") (term "1,0,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,1,0,1,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "8") (term "1,0,1,0,1,0"))
                                                   (rule "cnf_rightDist" (formula "6") (term "0"))
                                                   (rule "distr_forallAnd" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "commute_or_2" (formula "6") (term "0"))
                                                   (rule "shift_paren_or" (formula "7") (term "0"))
                                                   (rule "commute_or" (formula "6") (term "0,0"))
                                                   (rule "ifthenelse_to_or_left" (formula "9") (term "1,1,0"))
                                                   (rule "eqSymm" (formula "9") (term "1,1,1,1,0"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
                                                   (rule "commute_or" (formula "9") (term "1,1,1,0"))
                                                   (rule "commute_or" (formula "9") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,1,0,1,0"))
                                                   (rule "commute_or_2" (formula "9") (term "0,0,1,0,1,0"))
                                                   (rule "commute_or" (formula "9") (term "0,0,0,1,0,1,0"))
                                                   (rule "lenNonNegative" (formula "12") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "12"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                   (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "12") (term "0"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "closeFalse" (formula "12"))
                                                )
                                             )
                                             (branch
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "eqSymm" (formula "12"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "eqSymm" (formula "11"))
                                                (rule "eqSymm" (formula "10"))
                                                (rule "eqSymm" (formula "9") (term "1,1,0"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                                (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                                (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                                (rule "eqSymm" (formula "8"))
                                                (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                                (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "17") (term "1,0,1"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                                (rule "subsetSingletonLeft" (formula "5"))
                                                (rule "subsetSingletonLeft" (formula "6"))
                                                (rule "castedGetAny" (formula "10") (term "2,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                                (rule "castedGetAny" (formula "11") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "17") (term "1,0,1"))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "17"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0"))
                                                (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                                (rule "elementOfUnionEQ" (formula "6") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=IntIterator_seq_0"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "lenOfSeqEmptyEQ" (formula "2") (term "1,1") (ifseqformula "1"))
                                                (rule "add_zero_right" (formula "2") (term "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=IntList_seq_0"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                                (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=IntIterator_list_0"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                                                (rule "inEqSimp_contradEq3" (formula "9") (term "0,0") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "9") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradEq3" (formula "10") (term "0,0") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "10") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "10") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "nnf_imp2or" (formula "8") (term "0"))
                                                (rule "nnf_imp2or" (formula "6") (term "0"))
                                                (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                (rule "nnf_imp2or" (formula "8") (term "0,1,0,1,0"))
                                                (rule "nnf_notAnd" (formula "8") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0,1,0,1,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "1,0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "8") (term "1,0,1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "6") (term "0"))
                                                (rule "distr_forallAnd" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "commute_or_2" (formula "6") (term "0"))
                                                (rule "shift_paren_or" (formula "7") (term "0"))
                                                (rule "commute_or" (formula "6") (term "0,0"))
                                                (rule "ifthenelse_to_or_left" (formula "9") (term "1,1,0"))
                                                (rule "eqSymm" (formula "9") (term "1,1,1,1,0"))
                                                (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
                                                (rule "commute_or" (formula "9") (term "1,1,1,0"))
                                                (rule "commute_or" (formula "9") (term "0,1,1,0"))
                                                (rule "shift_paren_or" (formula "9") (term "0,1,0,1,0"))
                                                (rule "commute_or_2" (formula "9") (term "0,0,1,0,1,0"))
                                                (rule "commute_or" (formula "9") (term "0,0,0,1,0,1,0"))
                                                (rule "lenNonNegative" (formula "12") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "12"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "12") (term "0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "closeFalse" (formula "12"))
                                             )
                                          )
                                          (branch
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "eqSymm" (formula "11"))
                                             (rule "eqSymm" (formula "10"))
                                             (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                             (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "9") (term "1,1,0"))
                                             (rule "eqSymm" (formula "8"))
                                             (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                             (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                             (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                             (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                             (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                             (rule "subsetSingletonLeft" (formula "5"))
                                             (rule "subsetSingletonLeft" (formula "6"))
                                             (rule "castedGetAny" (formula "10") (term "2,0"))
                                             (rule "castedGetAny" (formula "9") (term "1,1,1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                             (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                             (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                             (rule "castedGetAny" (formula "11") (term "2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                             (rule "dismissNonSelectedField" (formula "17") (term "0,0"))
                                             (rule "eqSymm" (formula "17"))
                                             (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                             (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                             (rule "elementOfUnionEQ" (formula "5") (ifseqformula "8"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "pullOutSelect" (formula "15") (term "0,1") (inst "selectSK=IntIterator_seq_0"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "lenOfSeqEmptyEQ" (formula "16") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "15") (term "0,0") (inst "selectSK=IntIterator_nodeseq_0"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "lenOfSeqEmptyEQ" (formula "16") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "closeTrue" (formula "16"))
                                          )
                                       )
                                       (branch
                                          (rule "impRight" (formula "9"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                          (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                          (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "eqSymm" (formula "12"))
                                          (rule "eqSymm" (formula "11"))
                                          (rule "eqSymm" (formula "10"))
                                          (rule "eqSymm" (formula "9") (term "1,1,0"))
                                          (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                          (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                          (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                          (rule "eqSymm" (formula "8"))
                                          (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                          (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                          (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                          (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                          (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                          (rule "subsetSingletonLeft" (formula "6"))
                                          (rule "subsetSingletonLeft" (formula "5"))
                                          (rule "dismissNonSelectedField" (formula "18") (term "0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "18") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "18") (term "1"))
                                          (rule "castedGetAny" (formula "10") (term "2,0"))
                                          (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                          (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                          (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                          (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                          (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                          (rule "castedGetAny" (formula "11") (term "2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "18") (term "0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,0"))
                                          (rule "castedGetAny" (formula "9") (term "1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                          (rule "dismissNonSelectedField" (formula "18") (term "0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "18") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "18") (term "0,0,0"))
                                          (rule "castedGetAny" (formula "18") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "18") (term "1,0,0"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "dismissNonSelectedField" (formula "18") (term "0,1"))
                                          (rule "dismissNonSelectedField" (formula "18") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                          (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                          (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=IntIterator_next_0"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "16"))
                                          (rule "pullOutSelect" (formula "16") (term "1,0,0") (inst "selectSK=IntIterator_list_0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "17") (term "1,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "16") (term "0,1,0") (inst "selectSK=IntIterator_nodeseq_0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "lenOfSeqEmptyEQ" (formula "17") (term "1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "16") (term "0,0") (inst "selectSK=IntLinkedList_nodeseq_0"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                          (rule "applyEqReverse" (formula "17") (term "0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "nnf_imp2or" (formula "7") (term "0"))
                                          (rule "nnf_imp2or" (formula "5") (term "0"))
                                          (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                          (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                          (rule "nnf_imp2or" (formula "7") (term "0,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "7") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "7") (term "1,0,0,0,1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "7") (term "1,0,1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "5") (term "0"))
                                          (rule "distr_forallAnd" (formula "5"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "commute_or_2" (formula "5") (term "0"))
                                          (rule "shift_paren_or" (formula "6") (term "0"))
                                          (rule "commute_or" (formula "5") (term "0,0"))
                                          (rule "ifthenelse_to_or_left" (formula "8") (term "1,1,0"))
                                          (rule "eqSymm" (formula "8") (term "1,0,1,1,0"))
                                          (rule "eqSymm" (formula "8") (term "1,1,1,1,0"))
                                          (rule "commute_or" (formula "8") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "8") (term "1,1,1,0"))
                                          (rule "shift_paren_or" (formula "8") (term "0,1,0,1,0"))
                                          (rule "ifthenelse_split" (formula "9") (term "0"))
                                          (branch "list.size = 0 TRUE"
                                             (rule "eqSymm" (formula "10"))
                                             (rule "close" (formula "14") (ifseqformula "10"))
                                          )
                                          (branch "list.size = 0 FALSE"
                                             (rule "close" (formula "18") (ifseqformula "9"))
                                          )
                                       )
                                    )
                                    (branch
                                       (rule "impRight" (formula "9"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                       (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "6"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "eqSymm" (formula "18"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "eqSymm" (formula "11"))
                                       (rule "eqSymm" (formula "10"))
                                       (rule "eqSymm" (formula "9") (term "1,1,0"))
                                       (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                       (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                       (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                       (rule "eqSymm" (formula "8"))
                                       (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                       (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                       (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                       (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                       (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                       (rule "subsetSingletonLeft" (formula "5"))
                                       (rule "subsetSingletonLeft" (formula "6"))
                                       (rule "castedGetAny" (formula "18") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "1,1"))
                                       (rule "castedGetAny" (formula "10") (term "2,0"))
                                       (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                       (rule "castedGetAny" (formula "9") (term "1,1,1,0,0,1,0"))
                                       (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                       (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                       (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                       (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                       (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                       (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                       (rule "castedGetAny" (formula "11") (term "2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "0,0"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "0,1,0"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "0,0"))
                                       (rule "eqSymm" (formula "18"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "0,1"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "0,1"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "18") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                       (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                       (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=IntIterator_next_0"))
                                       (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "16"))
                                       (rule "pullOutSelect" (formula "16") (term "0,0") (inst "selectSK=IntList_seq_0"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                       (rule "pullOutSelect" (formula "17") (term "0,1,0") (inst "selectSK=IntIterator_seq_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "lenOfSeqEmptyEQ" (formula "18") (term "1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "17"))
                                       (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=IntIterator_list_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "18") (term "1,0,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "16"))
                                       (rule "pullOutSelect" (formula "16") (term "1") (inst "selectSK=IntNode_data_0"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                       (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "nnf_imp2or" (formula "7") (term "0"))
                                       (rule "nnf_imp2or" (formula "5") (term "0"))
                                       (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                                       (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                       (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
                                       (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                       (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "7") (term "0,1,0,1,0"))
                                       (rule "nnf_imp2or" (formula "7") (term "1,0,1,0,1,0"))
                                       (rule "nnf_notAnd" (formula "7") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,1,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "7") (term "1,0,0,0,1,0,1,0"))
                                       (rule "cnf_rightDist" (formula "5") (term "0"))
                                       (rule "distr_forallAnd" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "commute_or_2" (formula "5") (term "0"))
                                       (rule "shift_paren_or" (formula "6") (term "0"))
                                       (rule "commute_or" (formula "5") (term "0,0"))
                                       (rule "ifthenelse_to_or_left" (formula "8") (term "1,1,0"))
                                       (rule "eqSymm" (formula "8") (term "1,0,1,1,0"))
                                       (rule "eqSymm" (formula "8") (term "1,1,1,1,0"))
                                       (rule "commute_or" (formula "8") (term "0,1,1,0"))
                                       (rule "commute_or" (formula "8") (term "1,1,1,0"))
                                       (rule "ifthenelse_split" (formula "9") (term "0"))
                                       (branch "list.size = 0 TRUE"
                                          (rule "eqSymm" (formula "10"))
                                          (rule "close" (formula "14") (ifseqformula "10"))
                                       )
                                       (branch "list.size = 0 FALSE"
                                          (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "13"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "shift_paren_or" (formula "8") (term "0,1,0,1,0"))
                                          (rule "commute_or_2" (formula "8") (term "0,0,1,0,1,0"))
                                          (rule "commute_or" (formula "8") (term "0,0,0,1,0,1,0"))
                                          (rule "lenNonNegative" (formula "11") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                          (rule "inEqSimp_strengthen1" (formula "11") (ifseqformula "14"))
                                          (rule "add_zero_right" (formula "11") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "14") (ifseqformula "11"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "false_right" (formula "14"))
                                          (rule "lenNonNegative" (formula "13") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13"))
                                          (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "all_pull_out1" (formula "8") (term "0,1,0"))
                                          (rule "all_pull_out0" (formula "8") (term "1,0"))
                                          (rule "shift_paren_and" (formula "8") (term "0,1,0"))
                                          (rule "all_pull_out3" (formula "8") (term "0"))
                                          (rule "cnf_rightDist" (formula "8") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "8") (term "0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "distr_forallAnd" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "shift_paren_or" (formula "9") (term "0"))
                                          (rule "commute_or_2" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_or_weaken3" (formula "9") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "1,0,1,0"))
                                          (rule "add_literals" (formula "9") (term "0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "9") (term "1,0,1,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "cnf_rightDist" (formula "8") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "8") (term "0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "distr_forallAnd" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "commute_or_2" (formula "9") (term "0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "9") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,1,1"))
                                          (rule "polySimp_addComm0" (formula "9") (term "0,0,1,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,1,1"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,1,1"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,1,1"))
                                          (rule "add_zero_right" (formula "9") (term "0,1,1"))
                                          (rule "leq_literals" (formula "9") (term "1,1"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_homoInEq0" (formula "9") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,1"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
                                          (rule "add_literals" (formula "9") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "9") (term "0,1"))
                                          (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "12"))
                                          (rule "inEqSimp_invertInEq1" (formula "9") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                                          (rule "mul_literals" (formula "9") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "9") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "cnf_rightDist" (formula "8") (term "0,0"))
                                          (rule "distr_forallAnd" (formula "8") (term "0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "distr_forallAnd" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "commute_or_2" (formula "9") (term "0,0"))
                                          (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                          (rule "cnf_rightDist" (formula "8") (term "0"))
                                          (rule "distr_forallAnd" (formula "8"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "commute_or_2" (formula "8") (term "0"))
                                          (rule "commute_or" (formula "9") (term "0"))
                                          (rule "commute_or" (formula "8") (term "0,0"))
                                          (rule "commute_or_2" (formula "10") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "10") (term "0,0,0,0,0"))
                                          (rule "seqGetAlphaCast" (formula "22") (term "0"))
                                          (rule "castedGetAny" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                          (rule "castedGetAny" (formula "13") (term "0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "seqGetAlphaCast" (formula "14") (term "0"))
                                          (rule "castedGetAny" (formula "14") (term "0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "allLeft" (formula "9") (inst "t=add(Z(neglit(1(#))),
    int::select(heap, list, IntLinkedList::$size))"))
                                          (rule "eqSymm" (formula "9") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "9") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,1,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,1,0"))
                                          (rule "leq_literals" (formula "9") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "applyEq" (formula "9") (term "1,1,1") (ifseqformula "15"))
                                          (rule "inEqSimp_invertInEq1" (formula "9") (term "0"))
                                          (rule "mul_literals" (formula "9") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "16"))
                                          (rule "qeq_literals" (formula "9") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "allLeft" (formula "10") (inst "t=Z(0(#))"))
                                          (rule "leq_literals" (formula "10") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "eqSymm" (formula "10") (term "1"))
                                          (rule "inEqSimp_commuteGeq" (formula "10") (term "0"))
                                          (rule "applyEq" (formula "10") (term "1,1,1") (ifseqformula "15"))
                                          (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "17"))
                                          (rule "qeq_literals" (formula "10") (term "0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "closeFalse" (formula "10"))
                                       )
                                    )
                                 )
                                 (branch
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                    (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "eqSymm" (formula "17") (term "0"))
                                    (rule "eqSymm" (formula "12"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "eqSymm" (formula "11"))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "eqSymm" (formula "9") (term "1,1,0"))
                                    (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                    (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                    (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "8"))
                                    (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                    (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                    (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                    (rule "dismissNonSelectedField" (formula "17") (term "0,1"))
                                    (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                    (rule "subsetSingletonLeft" (formula "6"))
                                    (rule "subsetSingletonLeft" (formula "5"))
                                    (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "17") (term "0,1,0"))
                                    (rule "castedGetAny" (formula "10") (term "2,0"))
                                    (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                    (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "9") (term "1,1,1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                    (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                    (rule "castedGetAny" (formula "11") (term "2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "17") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "17") (term "0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "17") (term "0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "17") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                    (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                    (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "pullOutSelect" (formula "15") (term "0,1") (inst "selectSK=IntIterator_next_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "15") (term "0,1,0") (inst "selectSK=IntIterator_seq_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "lenOfSeqEmptyEQ" (formula "16") (term "1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "15") (term "0,0,0") (inst "selectSK=IntList_seq_0"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                    (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=IntIterator_list_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "17") (term "0,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "17") (term "1,0,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "10"))
                                    (rule "nnf_imp2or" (formula "7") (term "0"))
                                    (rule "nnf_imp2or" (formula "5") (term "0"))
                                    (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "7") (term "0,1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "7") (term "1,0,1,0,1,0"))
                                    (rule "nnf_notAnd" (formula "7") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,1,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,1,0,1,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "7") (term "1,0,0,0,1,0,1,0"))
                                    (rule "equiv_right" (formula "15"))
                                    (branch
                                       (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "eqSymm" (formula "9"))
                                       (rule "close" (formula "16") (ifseqformula "9"))
                                    )
                                    (branch
                                       (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "applyEq" (formula "9") (term "1") (ifseqformula "1"))
                                       (rule "cnf_rightDist" (formula "6") (term "0"))
                                       (rule "distr_forallAnd" (formula "6"))
                                       (rule "andLeft" (formula "6"))
                                       (rule "commute_or_2" (formula "6") (term "0"))
                                       (rule "shift_paren_or" (formula "7") (term "0"))
                                       (rule "commute_or" (formula "6") (term "0,0"))
                                       (rule "ifthenelse_to_or_left" (formula "9") (term "1,1,0"))
                                       (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
                                       (rule "eqSymm" (formula "9") (term "1,1,1,1,0"))
                                       (rule "commute_or" (formula "9") (term "0,1,1,0"))
                                       (rule "commute_or" (formula "9") (term "1,1,1,0"))
                                       (rule "shift_paren_or" (formula "9") (term "0,1,0,1,0"))
                                       (rule "commute_or_2" (formula "9") (term "0,0,1,0,1,0"))
                                       (rule "commute_or" (formula "9") (term "0,0,0,1,0,1,0"))
                                       (rule "lenNonNegative" (formula "12") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "12"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                       (rule "inEqSimp_strengthen1" (formula "12") (ifseqformula "18"))
                                       (rule "add_zero_right" (formula "12") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "18") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "false_right" (formula "18"))
                                       (rule "lenNonNegative" (formula "14") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "all_pull_out1" (formula "9") (term "0,1,0"))
                                       (rule "all_pull_out0" (formula "9") (term "1,0"))
                                       (rule "shift_paren_and" (formula "9") (term "0,1,0"))
                                       (rule "all_pull_out3" (formula "9") (term "0"))
                                       (rule "cnf_rightDist" (formula "9") (term "0,0"))
                                       (rule "distr_forallAnd" (formula "9") (term "0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "distr_forallAnd" (formula "9"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "shift_paren_or" (formula "10") (term "0"))
                                       (rule "commute_or_2" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_or_weaken3" (formula "10") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "1,0,1,0"))
                                       (rule "add_literals" (formula "10") (term "0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "10") (term "1,0,1,0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "cnf_rightDist" (formula "9") (term "0,0"))
                                       (rule "distr_forallAnd" (formula "9") (term "0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "distr_forallAnd" (formula "9"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "commute_or_2" (formula "10") (term "0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "10") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "10") (term "1,1"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,1,1"))
                                       (rule "polySimp_addComm0" (formula "10") (term "0,0,1,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,1,1"))
                                       (rule "add_literals" (formula "10") (term "1,1,0,1,1"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,1,1"))
                                       (rule "add_zero_right" (formula "10") (term "0,1,1"))
                                       (rule "leq_literals" (formula "10") (term "1,1"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "applyEq" (formula "10") (term "1,0,0") (ifseqformula "13"))
                                       (rule "inEqSimp_invertInEq1" (formula "10") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                                       (rule "times_zero_2" (formula "10") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "10") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "cnf_rightDist" (formula "9") (term "0,0"))
                                       (rule "distr_forallAnd" (formula "9") (term "0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "distr_forallAnd" (formula "9"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "commute_or_2" (formula "10") (term "0,0"))
                                       (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                       (rule "cnf_rightDist" (formula "9") (term "0"))
                                       (rule "distr_forallAnd" (formula "9"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "commute_or" (formula "10") (term "0"))
                                       (rule "commute_or_2" (formula "9") (term "0"))
                                       (rule "commute_or" (formula "9") (term "0,0"))
                                       (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "11") (term "0,0,0,0,0"))
                                       (rule "allLeft" (formula "9") (inst "t=Z(0(#))"))
                                       (rule "leq_literals" (formula "9") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "15")))
                                       (rule "inEqSimp_commuteGeq" (formula "9"))
                                       (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "9") (term "0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "closeFalse" (formula "9"))
                                    )
                                 )
                              )
                              (branch "Show Axiom Satisfiability"
                                 (rule "andRight" (formula "10"))
                                 (branch
                                    (rule "andRight" (formula "10"))
                                    (branch
                                       (rule "andRight" (formula "10"))
                                       (branch
                                          (rule "andRight" (formula "10"))
                                          (branch
                                             (rule "andRight" (formula "10"))
                                             (branch
                                                (rule "andRight" (formula "10"))
                                                (branch
                                                   (rule "andRight" (formula "10"))
                                                   (branch
                                                      (rule "andRight" (formula "10"))
                                                      (branch
                                                         (rule "orRight" (formula "6"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                                         (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                                         (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                                         (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                         (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                                         (rule "notRight" (formula "11"))
                                                         (rule "notRight" (formula "8"))
                                                         (rule "close" (formula "8") (ifseqformula "1"))
                                                      )
                                                      (branch
                                                         (rule "orRight" (formula "6"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                                         (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                                         (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                                         (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                                         (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                         (rule "notRight" (formula "7"))
                                                         (rule "close" (formula "7") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "orRight" (formula "6"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                                      (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                                      (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                      (rule "notRight" (formula "7"))
                                                      (rule "close" (formula "7") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch
                                                   (rule "orRight" (formula "6"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                                   (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                                   (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                                                   (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                                   (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                                   (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                   (rule "notRight" (formula "7"))
                                                   (rule "close" (formula "7") (ifseqformula "1"))
                                                )
                                             )
                                             (branch
                                                (rule "orRight" (formula "6"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                                                (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                (rule "notRight" (formula "7"))
                                                (rule "close" (formula "7") (ifseqformula "1"))
                                             )
                                          )
                                          (branch
                                             (rule "orRight" (formula "6"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                             (rule "notRight" (formula "7"))
                                             (rule "close" (formula "7") (ifseqformula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "impRight" (formula "10"))
                                          (rule "orRight" (formula "7"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,2,1,1,0,0"))
                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                          (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0"))
                                          (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0"))
                                          (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "notRight" (formula "8"))
                                          (rule "close" (formula "8") (ifseqformula "1"))
                                       )
                                    )
                                    (branch
                                       (rule "impRight" (formula "10"))
                                       (rule "orRight" (formula "7"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "8") (term "1,0,2,1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0"))
                                       (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "notRight" (formula "8"))
                                       (rule "close" (formula "8") (ifseqformula "1"))
                                    )
                                 )
                                 (branch
                                    (rule "orRight" (formula "6"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                    (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                    (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                    (rule "notRight" (formula "7"))
                                    (rule "close" (formula "7") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch "Show Axiom Satisfiability"
                              (rule "orRight" (formula "9"))
                              (builtin "One Step Simplification" (formula "10"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "notRight" (formula "10"))
                              (rule "close" (formula "10") (ifseqformula "1"))
                           )
                        )
                     )
                  )
               )
            )
            (branch
               (builtin "One Step Simplification" (formula "9"))
               (rule "closeTrue" (formula "9"))
            )
         )
         (branch
            (builtin "One Step Simplification" (formula "9"))
            (rule "allRight" (formula "9") (inst "sk=f_0"))
            (rule "allRight" (formula "9") (inst "sk=o_0"))
            (rule "orRight" (formula "9"))
            (rule "eqSymm" (formula "10"))
            (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "11"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "commute_and" (formula "6") (term "0,0"))
            (rule "commute_and" (formula "5") (term "0,0"))
            (rule "commute_and" (formula "4") (term "0,0"))
            (rule "commute_and" (formula "3") (term "0,0"))
            (rule "commute_and" (formula "2") (term "0,0"))
            (rule "commute_and" (formula "1") (term "0,0"))
            (rule "ifthenelse_split" (formula "1") (term "0"))
            (branch "f_0 = java.lang.Object::<created> ∧ o_0 = i_1 TRUE"
               (rule "andLeft" (formula "1"))
               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "applyEq" (formula "16") (term "1,0,0,1") (ifseqformula "2"))
               (rule "replace_known_right" (formula "16") (term "0,1") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "notRight" (formula "16"))
               (rule "applyEq" (formula "17") (term "2,0") (ifseqformula "2"))
               (rule "narrowSelectType" (formula "17") (term "0") (ifseqformula "10"))
               (rule "eqSymm" (formula "17"))
               (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "5"))
               (rule "hideAuxiliaryEq" (formula "5"))
               (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "eqSymm" (formula "12"))
               (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
               (rule "eqSymm" (formula "3"))
               (rule "close" (formula "9") (ifseqformula "3"))
            )
            (branch "f_0 = java.lang.Object::<created> ∧ o_0 = i_1 FALSE"
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch "f_0 = IntIterator::$seq ∧ o_0 = i_1 TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "applyEqRigid" (formula "16") (term "2,0") (ifseqformula "1"))
                  (rule "narrowSelectType" (formula "16") (term "0") (ifseqformula "7"))
                  (rule "eqSymm" (formula "16"))
                  (rule "applyEq" (formula "15") (term "1,0,0,1") (ifseqformula "2"))
                  (rule "replace_known_right" (formula "15") (term "0,1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "notRight" (formula "15"))
                  (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "6"))
                  (rule "hideAuxiliaryEq" (formula "6"))
                  (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "eqSymm" (formula "13"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "false_right" (formula "9"))
                  (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "3"))
                  (rule "close" (formula "9") (ifseqformula "3"))
               )
               (branch "f_0 = IntIterator::$seq ∧ o_0 = i_1 FALSE"
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch "f_0 = IntIterator::$nodeseq ∧ o_0 = i_1 TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "applyEq" (formula "17") (term "2,0") (ifseqformula "1"))
                     (rule "narrowSelectType" (formula "17") (term "0") (ifseqformula "7"))
                     (rule "eqSymm" (formula "17"))
                     (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "2"))
                     (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "notRight" (formula "16"))
                     (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "eqSymm" (formula "14"))
                     (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "false_right" (formula "9"))
                     (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "false_right" (formula "9"))
                     (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                     (rule "close" (formula "10") (ifseqformula "1"))
                  )
                  (branch "f_0 = IntIterator::$nodeseq ∧ o_0 = i_1 FALSE"
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "f_0 = IntIterator::$list ∧ o_0 = i_1 TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "applyEqRigid" (formula "17") (term "2,0") (ifseqformula "1"))
                        (rule "narrowSelectType" (formula "17") (term "0") (ifseqformula "6"))
                        (rule "eqSymm" (formula "17"))
                        (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "notRight" (formula "16"))
                        (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "15"))
                        (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "false_right" (formula "11"))
                        (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "false_right" (formula "9"))
                        (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "false_right" (formula "9"))
                        (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                        (rule "close" (formula "10") (ifseqformula "1"))
                     )
                     (branch "f_0 = IntIterator::$list ∧ o_0 = i_1 FALSE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "f_0 = IntIterator::$next ∧ o_0 = i_1 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "17") (term "2,0") (ifseqformula "1"))
                           (rule "narrowSelectType" (formula "17") (term "0") (ifseqformula "5"))
                           (rule "eqSymm" (formula "17"))
                           (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "notRight" (formula "16"))
                           (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "false_right" (formula "11"))
                           (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "false_right" (formula "9"))
                           (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "false_right" (formula "9"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "false_right" (formula "9"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "10") (ifseqformula "1"))
                        )
                        (branch "f_0 = IntIterator::$next ∧ o_0 = i_1 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = i_1 TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "8") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "applyEqRigid" (formula "17") (term "2,0") (ifseqformula "1"))
                              (rule "narrowSelectType" (formula "17") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "16") (term "1,0,0,1") (ifseqformula "2"))
                              (rule "replace_known_right" (formula "16") (term "0,1") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "notRight" (formula "16"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "false_right" (formula "9"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "false_right" (formula "12"))
                              (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "false_right" (formula "10"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "false_right" (formula "10"))
                              (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "false_right" (formula "9"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3"))
                              (rule "close" (formula "9") (ifseqformula "3"))
                           )
                           (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = i_1 FALSE"
                              (rule "close" (formula "17") (ifseqformula "1"))
                           )
                        )
                     )
                  )
               )
            )
         )
      )
      (branch "Null Reference (self_1 = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (i_2 = null)"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Null Reference (var = null)"
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
   (rule "closeFalse" (formula "1"))
)
)
}
