\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Mar 25 17:32:20 CET 2019
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=\\#begboolean_equal_2\\#end,\\#begboolean_not_equal_1\\#end,\\#begboolean_not_equal_2\\#end,\\#begtrue_to_not_false\\#end,\\#begfalse_to_not_true\\#end,\\#begboolean_true_commute\\#end,\\#begboolean_false_commute\\#end,\\#begapply_eq_boolean\\#end,\\#begapply_eq_boolean_2\\#end,\\#begapply_eq_boolean_rigid\\#end,\\#begapply_eq_boolean_rigid_2\\#end,\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end,\\#begreplace_byte_MAX\\#end,\\#begreplace_byte_MIN\\#end,\\#begreplace_char_MAX\\#end,\\#begreplace_char_MIN\\#end,\\#begreplace_short_MAX\\#end,\\#begreplace_short_MIN\\#end,\\#begreplace_int_MAX\\#end,\\#begreplace_int_MIN\\#end,\\#begreplace_long_MAX\\#end,\\#begreplace_long_MIN\\#end,\\#begreplace_byte_RANGE\\#end,\\#begreplace_byte_HALFRANGE\\#end,\\#begreplace_short_RANGE\\#end,\\#begreplace_short_HALFRANGE\\#end,\\#begreplace_char_RANGE\\#end,\\#begreplace_int_RANGE\\#end,\\#begreplace_int_HALFRANGE\\#end,\\#begreplace_long_RANGE\\#end,\\#begreplace_long_HALFRANGE\\#end,\\#begtranslateJavaUnaryMinusInt\\#end,\\#begtranslateJavaUnaryMinusLong\\#end,\\#begtranslateJavaBitwiseNegation\\#end,\\#begtranslateJavaAddInt\\#end,\\#begtranslateJavaAddLong\\#end,\\#begtranslateJavaSubInt\\#end,\\#begtranslateJavaSubLong\\#end,\\#begtranslateJavaMulInt\\#end,\\#begtranslateJavaMulLong\\#end,\\#begtranslateJavaMod\\#end,\\#begtranslateJavaDivInt\\#end,\\#begtranslateJavaDivLong\\#end,\\#begtranslateJavaCastByte\\#end,\\#begtranslateJavaCastShort\\#end,\\#begtranslateJavaCastInt\\#end,\\#begtranslateJavaCastLong\\#end,\\#begtranslateJavaCastChar\\#end,\\#begtranslateJavaShiftRightInt\\#end,\\#begtranslateJavaShiftRightLong\\#end,\\#begtranslateJavaShiftLeftInt\\#end,\\#begtranslateJavaShiftLeftLong\\#end,\\#begtranslateJavaUnsignedShiftRightInt\\#end,\\#begtranslateJavaUnsignedShiftRightLong\\#end,\\#begtranslateJavaBitwiseOrInt\\#end,\\#begtranslateJavaBitwiseOrLong\\#end,\\#begtranslateJavaBitwiseAndInt\\#end,\\#begtranslateJavaBitwiseAndLong\\#end,\\#begtranslateJavaBitwiseXOrInt\\#end,\\#begtranslateJavaBitwiseXOrLong\\#end,\\#begelementOfEmpty\\#end,\\#begelementOfAllLocs\\#end,\\#begelementOfSingleton\\#end,\\#begelementOfUnion\\#end,\\#begelementOfIntersect\\#end,\\#begelementOfSetMinus\\#end,\\#begelementOfAllFields\\#end,\\#begelementOfAllObjects\\#end,\\#begelementOfArrayRange\\#end,\\#begelementOfFreshLocs\\#end,\\#begequalityToElementOf\\#end,\\#begsubsetToElementOf\\#end,\\#begdisjointToElementOf\\#end,\\#begcreatedInHeapToElementOf\\#end,\\#begelementOfEmptyEQ\\#end,\\#begelementOfAllLocsEQ\\#end,\\#begelementOfSingletonEQ\\#end,\\#begelementOfUnionEQ\\#end,\\#begelementOfIntersectEQ\\#end,\\#begelementOfSetMinusEQ\\#end,\\#begelementOfAllFieldsEQ\\#end,\\#begelementOfAllObjectsEQ\\#end,\\#begelementOfArrayRangeEQ\\#end,\\#begelementOfFreshLocsEQ\\#end,\\#begunionWithEmpty1\\#end,\\#begunionWithEmpty2\\#end,\\#begunionWithAllLocs1\\#end,\\#begunionWithAllLocs2\\#end,\\#begintersectWithEmpty1\\#end,\\#begintersectWithEmpty2\\#end,\\#begintersectWithAllLocs1\\#end,\\#begintersectWithAllLocs2\\#end,\\#begsetMinusWithEmpty1\\#end,\\#begsetMinusWithEmpty2\\#end,\\#begsetMinusWithAllLocs\\#end,\\#begsubsetWithEmpty\\#end,\\#begsubsetWithAllLocs\\#end,\\#begdisjointWithEmpty1\\#end,\\#begdisjointWithEmpty2\\#end,\\#begcreatedInHeapWithEmpty\\#end,\\#begcreatedInHeapWithSingleton\\#end,\\#begcreatedInHeapWithUnion\\#end,\\#begcreatedInHeapWithSetMinusFreshLocs\\#end,\\#begcreatedInHeapWithAllFields\\#end,\\#begcreatedInHeapWithArrayRange\\#end,\\#begreferencedObjectIsCreatedRight\\#end,\\#begreferencedObjectIsCreatedRightEQ\\#end,\\#begunionWithItself\\#end,\\#begintersectWithItself\\#end,\\#begsetMinusItself\\#end,\\#begsubsetOfItself\\#end,\\#begselectOfStore\\#end,\\#begselectOfCreate\\#end,\\#begselectOfAnon\\#end,\\#begselectOfMemset\\#end,\\#begonlyCreatedObjectsAreReferenced\\#end,\\#begonlyCreatedObjectsAreInLocSets\\#end,\\#begonlyCreatedObjectsAreInLocSetsEQ\\#end,\\#begarrayLengthNotNegative\\#end,\\#begwellFormedStoreObject\\#end,\\#begwellFormedStoreLocSet\\#end,\\#begwellFormedStorePrimitive\\#end,\\#begwellFormedCreate\\#end,\\#begwellFormedAnon\\#end,\\#begwellFormedMemsetObject\\#end,\\#begwellFormedMemsetLocSet\\#end,\\#begwellFormedMemsetPrimitive\\#end,\\#begselectOfStoreEQ\\#end,\\#begselectOfCreateEQ\\#end,\\#begselectOfAnonEQ\\#end,\\#begselectOfMemsetEQ\\#end,\\#begmemsetEmpty\\#end,\\#begselectCreatedOfAnonEQ\\#end,\\#begwellFormedStoreObjectEQ\\#end,\\#begwellFormedStoreLocSetEQ\\#end,\\#begwellFormedStorePrimitiveEQ\\#end,\\#begwellFormedAnonEQ\\#end,\\#begwellFormedMemsetObjectEQ\\#end,\\#begwellFormedMemsetPrimitiveEQ\\#end
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_OFF
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_EXTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "src";

\proofObligation "#Proof Obligation Settings
#Mon Mar 25 17:32:20 CET 2019
contract=IntIterator[IntIterator\\:\\:next()].JML normal_behavior operation contract.0
name=IntIterator[IntIterator\\:\\:next()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "flo" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "flo" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "2" (keyUser "flo" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "3" (keyUser "flo" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "433276")

(branch "dummy ID"
(rule "translateJavaAddInt" (formula "1") (term "1,0,1,1,1,0,0,0,1,1") (newnames "self,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "1,0,1,1,1,0,0,0,1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "elementOfUnion" (formula "9") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "9") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "1,0,0,0,0,0,1,0,1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_next,savedHeapBefore_next"))
(builtin "One Step Simplification" (formula "9"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "result_1"))
(rule "eval_order_access2" (formula "9") (term "1") (inst "#v0=i"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "i"))
(rule "assignment_read_attribute_this" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment_read_attribute" (formula "9") (term "1"))
(branch "Normal Execution (i != null)"
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
   (rule "false_right" (formula "9"))
   (rule "eval_order_access4_this" (formula "9") (term "1") (inst "#v1=x"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x"))
   (rule "seqConcatUnfoldLeft" (formula "9") (term "1") (inst "#vLeftNew=x_1"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_1"))
   (rule "assignment_read_attribute_this" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "seqConcatUnfoldRight" (formula "9") (term "1") (inst "#vRightNew=x_2"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_2"))
   (rule "seqSingletonUnfold" (formula "9") (term "1") (inst "#vNew=i"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "i_1"))
   (rule "assignment_read_attribute_this" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "assignment" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "assignment" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "assignment_write_attribute_this" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "eval_order_access4_this" (formula "9") (term "1") (inst "#v1=x"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_3"))
   (rule "seqConcatUnfoldLeft" (formula "9") (term "1") (inst "#vLeftNew=x_4"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_4"))
   (rule "assignment_read_attribute_this" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "dismissNonSelectedField" (formula "9") (term "0,1,0"))
   (rule "seqConcatUnfoldRight" (formula "9") (term "1") (inst "#vRightNew=x_5"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_5"))
   (rule "seqSingletonUnfold" (formula "9") (term "1") (inst "#vNew=x_6"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_6"))
   (rule "eval_order_access2" (formula "9") (term "1") (inst "#v0=i"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "i_2"))
   (rule "assignment_read_attribute_this" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "dismissNonSelectedField" (formula "9") (term "0,1,0"))
   (rule "assignment_read_attribute" (formula "9") (term "1"))
   (branch "Normal Execution (i_2 != null)"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
      (rule "false_right" (formula "9"))
      (rule "dismissNonSelectedField" (formula "9") (term "0,1,0"))
      (rule "assignment" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "assignment" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "assignment_write_attribute_this" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "eval_order_access4_this" (formula "9") (term "1") (inst "#v1=i"))
      (rule "variableDeclarationAssign" (formula "9") (term "1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "i_3"))
      (rule "eval_order_access2" (formula "9") (term "1") (inst "#v0=i_4"))
      (rule "variableDeclarationAssign" (formula "9") (term "1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "i_4"))
      (rule "assignment_read_attribute_this" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "dismissNonSelectedField" (formula "9") (term "0,1,0"))
      (rule "dismissNonSelectedField" (formula "9") (term "0,1,0"))
      (rule "assignment_read_attribute" (formula "9") (term "1"))
      (branch "Normal Execution (i_4 != null)"
         (builtin "One Step Simplification" (formula "10"))
         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
         (rule "false_right" (formula "9"))
         (rule "dismissNonSelectedField" (formula "9") (term "0,1,0"))
         (rule "dismissNonSelectedField" (formula "9") (term "0,1,0"))
         (rule "assignment_write_attribute_this" (formula "9") (term "1"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "returnUnfold" (formula "9") (term "1") (inst "#v0=m"))
         (rule "variableDeclarationAssign" (formula "9") (term "1"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "m"))
         (builtin "Use Operation Contract" (formula "9") (newnames "heapBefore_valueOf,result_0,exc_0,heapAfter_valueOf,anon_heap_valueOf") (contract "MyInteger[MyInteger::valueOf(int)].JML normal_behavior operation contract.0"))
         (branch "Post (valueOf)"
            (builtin "One Step Simplification" (formula "11"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,1,0") (ifseqformula "8"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "notLeft" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "notLeft" (formula "12"))
            (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "dismissNonSelectedField" (formula "10") (term "0,0"))
            (rule "dismissNonSelectedField" (formula "10") (term "0,0"))
            (rule "dismissNonSelectedField" (formula "10") (term "0,0"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=MyInteger_val_0"))
            (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "13")))
            (rule "eqSymm" (formula "12"))
            (rule "applyEqReverse" (formula "11") (term "1") (ifseqformula "12"))
            (rule "hideAuxiliaryEq" (formula "12"))
            (rule "ifthenelse_negated" (formula "11") (term "0"))
            (rule "dismissNonSelectedField" (formula "11") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "11") (term "1,0"))
            (rule "dismissNonSelectedField" (formula "11") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "11") (term "1,0"))
            (rule "dismissNonSelectedField" (formula "11") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "11") (term "1,0"))
            (rule "methodCallReturn" (formula "15") (term "1"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "methodCallEmpty" (formula "15") (term "1"))
            (rule "tryEmpty" (formula "15") (term "1"))
            (rule "emptyModality" (formula "15") (term "1"))
            (rule "andRight" (formula "15"))
            (branch
               (rule "andRight" (formula "15"))
               (branch
                  (rule "andRight" (formula "15"))
                  (branch "Case 1"
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "Class_invariant_axiom_for_IntLinkedList" (formula "15") (inst "sk=sk_0") (inst "i=i_5") (inst "j=j") (inst "i_0=i_0") (inst "i_1=i_1_1") (userinteraction))
                     (branch "Use Axiom"
                        (rule "Class_invariant_axiom_for_IntLinkedList" (formula "5") (inst "sk=sk_1") (inst "i=i_5") (inst "j=j") (inst "i_0=i_0") (inst "i_1=i_1_1") (userinteraction))
                        (branch "Use Axiom"
                           (rule "andRight" (formula "15"))
                           (branch
                              (rule "andRight" (formula "15"))
                              (branch
                                 (rule "andRight" (formula "15"))
                                 (branch
                                    (rule "andRight" (formula "15"))
                                    (branch
                                       (rule "andRight" (formula "15"))
                                       (branch
                                          (rule "andRight" (formula "15"))
                                          (branch
                                             (rule "andRight" (formula "15"))
                                             (branch
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "eqSymm" (formula "11"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "eqSymm" (formula "12"))
                                                (rule "eqSymm" (formula "10"))
                                                (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                                (rule "eqSymm" (formula "9") (term "1,1,0"))
                                                (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                                (rule "eqSymm" (formula "8"))
                                                (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                                (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                                (rule "subsetSingletonLeft" (formula "23"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                                (rule "subsetSingletonLeft" (formula "6"))
                                                (rule "subsetSingletonLeft" (formula "5"))
                                                (rule "castedGetAny" (formula "10") (term "2,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,1,1,0,0,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                                (rule "castedGetAny" (formula "11") (term "2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                                (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                                (rule "elementOfUnionEQ" (formula "5") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "pullOutSelect" (formula "21") (term "1,2") (inst "selectSK=IntIterator_list_0"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "22") (term "1,2") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "21") (term "2") (inst "selectSK=IntList_footprint_0"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "nnf_imp2or" (formula "8") (term "0"))
                                                (rule "nnf_imp2or" (formula "6") (term "0"))
                                                (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "8") (term "0,1,0,1,0"))
                                                (rule "nnf_notAnd" (formula "8") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,1,0,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "1,0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "8") (term "1,0,1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "6") (term "0"))
                                                (rule "distr_forallAnd" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "commute_or_2" (formula "6") (term "0"))
                                                (rule "shift_paren_or" (formula "7") (term "0"))
                                                (rule "commute_or" (formula "6") (term "0,0"))
                                                (rule "ifthenelse_split" (formula "19") (term "0"))
                                                (branch "result_0.<created> = TRUE TRUE"
                                                   (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "ifthenelse_to_or_left" (formula "9") (term "1,1,0"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
                                                   (rule "eqSymm" (formula "9") (term "1,1,1,1,0"))
                                                   (rule "commute_or" (formula "9") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "9") (term "1,1,1,0"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,1,0,1,0"))
                                                   (rule "commute_or_2" (formula "9") (term "0,0,1,0,1,0"))
                                                   (rule "ifthenelse_split" (formula "10") (term "0"))
                                                   (branch "self.list.size = 0 TRUE"
                                                      (rule "eqSymm" (formula "11"))
                                                      (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "10"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "applyEq" (formula "8") (term "1,1,1,0,0,1,0") (ifseqformula "10"))
                                                      (rule "add_zero_right" (formula "8") (term "1,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "9") (term "1,1,0,0,1,0,1,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "9") (term "1,1,1,1,1,1,0") (ifseqformula "10"))
                                                      (rule "add_zero_right" (formula "9") (term "1,1,1,1,1,0"))
                                                      (rule "applyEq" (formula "13") (term "1") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "14") (term "1") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "9") (term "1,1,0,1,0,1,1,0") (ifseqformula "10"))
                                                      (rule "add_zero_right" (formula "9") (term "1,0,1,0,1,1,0"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "9") (term "0,0"))
                                                      (rule "add_zero_right" (formula "9") (term "1,1,0,0"))
                                                      (rule "qeq_literals" (formula "9") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
                                                      (rule "add_zero_right" (formula "6") (term "1,1,0"))
                                                      (rule "qeq_literals" (formula "6") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
                                                      (rule "add_zero_right" (formula "6") (term "1,1,0"))
                                                      (rule "qeq_literals" (formula "6") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "commute_and" (formula "6") (term "0,0,1,0"))
                                                      (rule "inEqSimp_and_contradInEq0" (formula "6") (term "0,0,1,0"))
                                                      (rule "qeq_literals" (formula "6") (term "1,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "eqSymm" (formula "6"))
                                                      (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "6"))
                                                      (rule "lenNonNegative" (formula "11") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "11"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "lenNonNegative" (formula "10") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "10"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "18") (ifseqformula "19"))
                                                         (rule "close" (formula "18") (ifseqformula "2"))
                                                      )
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "22") (term "2") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "closeTrue" (formula "22"))
                                                      )
                                                   )
                                                   (branch "self.list.size = 0 FALSE"
                                                      (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "20"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "commute_or" (formula "9") (term "0,0,0,1,0,1,0"))
                                                      (rule "lenNonNegative" (formula "13") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13"))
                                                      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                      (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "21"))
                                                      (rule "add_zero_right" (formula "13") (term "1"))
                                                      (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "13"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "false_right" (formula "21"))
                                                      (rule "lenNonNegative" (formula "12") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "12"))
                                                      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                      (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "14"))
                                                      (rule "leq_literals" (formula "12") (term "0"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "22"))
                                                         (rule "close" (formula "21") (ifseqformula "2"))
                                                      )
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "25") (term "2") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "elementOfUnionEQ" (formula "24") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "closeTrue" (formula "24"))
                                                      )
                                                   )
                                                )
                                                (branch "result_0.<created> = TRUE FALSE"
                                                   (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "ifthenelse_to_or_left" (formula "9") (term "1,1,0"))
                                                   (rule "eqSymm" (formula "9") (term "1,1,1,1,0"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
                                                   (rule "commute_or" (formula "9") (term "1,1,1,0"))
                                                   (rule "commute_or" (formula "9") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,1,0,1,0"))
                                                   (rule "commute_or_2" (formula "9") (term "0,0,1,0,1,0"))
                                                   (rule "ifthenelse_split" (formula "10") (term "0"))
                                                   (branch "self.list.size = 0 TRUE"
                                                      (rule "eqSymm" (formula "11"))
                                                      (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "10"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "9") (term "1,1,0,0,1,0,1,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "8") (term "1,1,1,0,0,1,0") (ifseqformula "10"))
                                                      (rule "add_zero_right" (formula "8") (term "1,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "13") (term "1") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "9") (term "1,1,0,1,0,1,1,0") (ifseqformula "10"))
                                                      (rule "add_zero_right" (formula "9") (term "1,0,1,0,1,1,0"))
                                                      (rule "applyEq" (formula "9") (term "1,1,1,1,1,1,0") (ifseqformula "10"))
                                                      (rule "add_literals" (formula "9") (term "1,1,1,1,1,0"))
                                                      (rule "applyEq" (formula "14") (term "1") (ifseqformula "10"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
                                                      (rule "add_zero_right" (formula "6") (term "1,1,0"))
                                                      (rule "qeq_literals" (formula "6") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0"))
                                                      (rule "qeq_literals" (formula "6") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "7") (term "0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "1,1,0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "commute_and" (formula "6") (term "0,0,1,0"))
                                                      (rule "inEqSimp_and_contradInEq0" (formula "6") (term "0,0,1,0"))
                                                      (rule "qeq_literals" (formula "6") (term "1,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "eqSymm" (formula "6"))
                                                      (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "6"))
                                                      (rule "lenNonNegative" (formula "11") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "11"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "lenNonNegative" (formula "10") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "10"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "18") (ifseqformula "19"))
                                                         (rule "close" (formula "18") (ifseqformula "2"))
                                                      )
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "23") (term "2") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "closeTrue" (formula "23"))
                                                      )
                                                   )
                                                   (branch "self.list.size = 0 FALSE"
                                                      (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "20"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "commute_or" (formula "9") (term "0,0,0,1,0,1,0"))
                                                      (rule "lenNonNegative" (formula "13") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13"))
                                                      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                      (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "21"))
                                                      (rule "add_zero_right" (formula "13") (term "1"))
                                                      (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "13"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "false_right" (formula "21"))
                                                      (rule "lenNonNegative" (formula "12") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "12"))
                                                      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                      (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "14"))
                                                      (rule "leq_literals" (formula "12") (term "0"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "21"))
                                                         (rule "close" (formula "22") (ifseqformula "2"))
                                                      )
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "26") (term "2") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "elementOfUnionEQ" (formula "25") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "closeTrue" (formula "25"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "eqSymm" (formula "12"))
                                                (rule "eqSymm" (formula "11"))
                                                (rule "eqSymm" (formula "10"))
                                                (rule "eqSymm" (formula "9") (term "1,1,0"))
                                                (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                                (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                                (rule "eqSymm" (formula "8"))
                                                (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                                (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                                (rule "subsetSingletonLeft" (formula "23"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                                (rule "subsetSingletonLeft" (formula "5"))
                                                (rule "subsetSingletonLeft" (formula "6"))
                                                (rule "castedGetAny" (formula "10") (term "2,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,1,1,0,0,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                                (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                                (rule "castedGetAny" (formula "11") (term "2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                                (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                                (rule "elementOfUnionEQ" (formula "5") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "pullOutSelect" (formula "21") (term "1,2") (inst "selectSK=IntIterator_list_0"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "22") (term "1,2") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "21") (term "2") (inst "selectSK=IntList_footprint_0"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "nnf_imp2or" (formula "8") (term "0"))
                                                (rule "nnf_imp2or" (formula "6") (term "0"))
                                                (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                (rule "nnf_imp2or" (formula "8") (term "0,1,0,1,0"))
                                                (rule "nnf_notAnd" (formula "8") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,1,0,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "1,0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "8") (term "1,0,1,0,1,0"))
                                                (rule "cnf_rightDist" (formula "6") (term "0"))
                                                (rule "distr_forallAnd" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "commute_or_2" (formula "6") (term "0"))
                                                (rule "shift_paren_or" (formula "7") (term "0"))
                                                (rule "commute_or" (formula "6") (term "0,0"))
                                                (rule "ifthenelse_split" (formula "19") (term "0"))
                                                (branch "result_0.<created> = TRUE TRUE"
                                                   (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "ifthenelse_to_or_left" (formula "9") (term "1,1,0"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
                                                   (rule "eqSymm" (formula "9") (term "1,1,1,1,0"))
                                                   (rule "commute_or" (formula "9") (term "0,1,1,0"))
                                                   (rule "commute_or" (formula "9") (term "1,1,1,0"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,1,0,1,0"))
                                                   (rule "commute_or_2" (formula "9") (term "0,0,1,0,1,0"))
                                                   (rule "ifthenelse_split" (formula "10") (term "0"))
                                                   (branch "self.list.size = 0 TRUE"
                                                      (rule "eqSymm" (formula "11"))
                                                      (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "10"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "8") (term "1,1,1,0,0,1,0") (ifseqformula "10"))
                                                      (rule "add_zero_right" (formula "8") (term "1,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "9") (term "1,1,0,0,1,0,1,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "9") (term "1,1,0,1,0,1,1,0") (ifseqformula "10"))
                                                      (rule "add_zero_right" (formula "9") (term "1,0,1,0,1,1,0"))
                                                      (rule "applyEq" (formula "14") (term "1") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "9") (term "1,1,1,1,1,1,0") (ifseqformula "10"))
                                                      (rule "add_zero_right" (formula "9") (term "1,1,1,1,1,0"))
                                                      (rule "applyEq" (formula "13") (term "1") (ifseqformula "10"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0"))
                                                      (rule "add_zero_right" (formula "7") (term "1,1,0"))
                                                      (rule "qeq_literals" (formula "7") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
                                                      (rule "add_zero_right" (formula "6") (term "1,1,0"))
                                                      (rule "qeq_literals" (formula "6") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "7") (term "0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "1,1,0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "commute_and" (formula "6") (term "0,0,1,0"))
                                                      (rule "inEqSimp_and_contradInEq0" (formula "6") (term "0,0,1,0"))
                                                      (rule "qeq_literals" (formula "6") (term "1,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "eqSymm" (formula "6"))
                                                      (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "6"))
                                                      (rule "lenNonNegative" (formula "11") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "11"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "lenNonNegative" (formula "10") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "10"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "18") (ifseqformula "19"))
                                                         (rule "close" (formula "18") (ifseqformula "2"))
                                                      )
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "22") (term "2") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "closeTrue" (formula "22"))
                                                      )
                                                   )
                                                   (branch "self.list.size = 0 FALSE"
                                                      (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "20"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "commute_or" (formula "9") (term "0,0,0,1,0,1,0"))
                                                      (rule "lenNonNegative" (formula "13") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13"))
                                                      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                      (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "21"))
                                                      (rule "add_zero_right" (formula "13") (term "1"))
                                                      (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "13"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "false_right" (formula "21"))
                                                      (rule "lenNonNegative" (formula "12") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "12"))
                                                      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                      (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "14"))
                                                      (rule "leq_literals" (formula "12") (term "0"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "22"))
                                                         (rule "close" (formula "21") (ifseqformula "2"))
                                                      )
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "25") (term "2") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "elementOfUnionEQ" (formula "24") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "closeTrue" (formula "24"))
                                                      )
                                                   )
                                                )
                                                (branch "result_0.<created> = TRUE FALSE"
                                                   (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "ifthenelse_to_or_left" (formula "9") (term "1,1,0"))
                                                   (rule "eqSymm" (formula "9") (term "1,1,1,1,0"))
                                                   (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
                                                   (rule "commute_or" (formula "9") (term "1,1,1,0"))
                                                   (rule "commute_or" (formula "9") (term "0,1,1,0"))
                                                   (rule "shift_paren_or" (formula "9") (term "0,1,0,1,0"))
                                                   (rule "commute_or_2" (formula "9") (term "0,0,1,0,1,0"))
                                                   (rule "ifthenelse_split" (formula "10") (term "0"))
                                                   (branch "self.list.size = 0 TRUE"
                                                      (rule "eqSymm" (formula "11"))
                                                      (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "10"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "9") (term "1,1,0,0,1,0,1,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "8") (term "1,1,1,0,0,1,0") (ifseqformula "10"))
                                                      (rule "add_zero_right" (formula "8") (term "1,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "9") (term "1,1,1,1,1,1,0") (ifseqformula "10"))
                                                      (rule "add_literals" (formula "9") (term "1,1,1,1,1,0"))
                                                      (rule "applyEq" (formula "14") (term "1") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "9") (term "1,1,0,1,0,1,1,0") (ifseqformula "10"))
                                                      (rule "add_literals" (formula "9") (term "1,0,1,0,1,1,0"))
                                                      (rule "applyEq" (formula "13") (term "1") (ifseqformula "10"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0"))
                                                      (rule "add_zero_right" (formula "7") (term "1,1,0"))
                                                      (rule "qeq_literals" (formula "7") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "6") (term "0"))
                                                      (rule "add_zero_right" (formula "6") (term "1,1,0"))
                                                      (rule "qeq_literals" (formula "6") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "7") (term "0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "1,1,0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "commute_and" (formula "6") (term "0,0,1,0"))
                                                      (rule "inEqSimp_and_contradInEq0" (formula "6") (term "0,0,1,0"))
                                                      (rule "qeq_literals" (formula "6") (term "1,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "eqSymm" (formula "6"))
                                                      (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "6"))
                                                      (rule "lenNonNegative" (formula "11") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "11"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "lenNonNegative" (formula "10") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "10"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "18") (ifseqformula "19"))
                                                         (rule "close" (formula "18") (ifseqformula "2"))
                                                      )
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "23") (term "2") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "closeTrue" (formula "23"))
                                                      )
                                                   )
                                                   (branch "self.list.size = 0 FALSE"
                                                      (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "20"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "commute_or" (formula "9") (term "0,0,0,1,0,1,0"))
                                                      (rule "lenNonNegative" (formula "13") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "13"))
                                                      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                      (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "21"))
                                                      (rule "add_zero_right" (formula "13") (term "1"))
                                                      (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "13"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "false_right" (formula "21"))
                                                      (rule "lenNonNegative" (formula "12") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "12"))
                                                      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                      (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "14"))
                                                      (rule "leq_literals" (formula "12") (term "0"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "21"))
                                                         (rule "close" (formula "22") (ifseqformula "2"))
                                                      )
                                                      (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                                         (rule "applyEqReverse" (formula "26") (term "2") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "elementOfUnionEQ" (formula "25") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "closeTrue" (formula "25"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch
                                             (builtin "One Step Simplification" (formula "5"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                             (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "allRight" (formula "23") (inst "sk=i_1_1_0"))
                                             (rule "impRight" (formula "23"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "eqSymm" (formula "15"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "eqSymm" (formula "11") (term "1,1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
                                             (rule "eqSymm" (formula "11") (term "0,1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "11") (term "1,1,0"))
                                             (rule "eqSymm" (formula "10"))
                                             (rule "polySimp_elimSub" (formula "13") (term "1,0,2,0"))
                                             (rule "mul_literals" (formula "13") (term "1,1,0,2,0"))
                                             (rule "polySimp_elimSub" (formula "11") (term "1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "11") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1,1,0"))
                                             (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,1,0"))
                                             (rule "subsetSingletonLeft" (formula "7"))
                                             (rule "subsetSingletonLeft" (formula "8"))
                                             (rule "castedGetAny" (formula "12") (term "2,0"))
                                             (rule "castedGetAny" (formula "11") (term "0,1,0,0,1,0"))
                                             (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "11") (term "1,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "11") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "11") (term "1,1,1,1,0"))
                                             (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "11") (term "2,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "13") (term "2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "castedGetAny" (formula "11") (term "1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                             (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                             (rule "elementOfUnionEQ" (formula "7") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "pullOutSelect" (formula "23") (term "0,0,0,1") (inst "selectSK=IntList_seq_0"))
                                             (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "24") (term "0,0,0,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=IntIterator_list_0"))
                                             (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "6"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "nnf_imp2or" (formula "10") (term "0"))
                                             (rule "nnf_imp2or" (formula "8") (term "0"))
                                             (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "10") (term "0,1,0,1,0"))
                                             (rule "nnf_imp2or" (formula "10") (term "1,0,1,0,1,0"))
                                             (rule "nnf_notAnd" (formula "10") (term "0,0,1,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,1,0"))
                                             (rule "cnf_rightDist" (formula "8") (term "0"))
                                             (rule "distr_forallAnd" (formula "8"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "commute_or_2" (formula "8") (term "0"))
                                             (rule "shift_paren_or" (formula "9") (term "0"))
                                             (rule "commute_or" (formula "8") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "21") (term "0"))
                                             (branch "result_0.<created> = TRUE TRUE"
                                                (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "ifthenelse_to_or_left" (formula "11") (term "1,1,0"))
                                                (rule "eqSymm" (formula "11") (term "1,0,1,1,0"))
                                                (rule "eqSymm" (formula "11") (term "1,1,1,1,0"))
                                                (rule "commute_or" (formula "11") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "11") (term "1,1,1,0"))
                                                (rule "shift_paren_or" (formula "11") (term "0,1,0,1,0"))
                                                (rule "ifthenelse_split" (formula "12") (term "0"))
                                                (branch "self.list.size = 0 TRUE"
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "eqSymm" (formula "14"))
                                                   (rule "applyEq" (formula "10") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
                                                   (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0"))
                                                   (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "11") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "11") (term "1,1,0,1,0,1,1,0") (ifseqformula "12"))
                                                   (rule "add_zero_right" (formula "11") (term "1,0,1,0,1,1,0"))
                                                   (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "11") (term "1,1,1,1,1,1,0") (ifseqformula "12"))
                                                   (rule "add_zero_right" (formula "11") (term "1,1,1,1,1,0"))
                                                   (rule "inEqSimp_or_tautInEq1" (formula "9") (term "0"))
                                                   (rule "add_zero_right" (formula "9") (term "1,1,0"))
                                                   (rule "qeq_literals" (formula "9") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "inEqSimp_or_tautInEq0" (formula "10") (term "0,0,0,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "10") (term "1,1,0,0,0,1,0,1,0"))
                                                   (rule "qeq_literals" (formula "10") (term "1,0,0,0,1,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0"))
                                                   (rule "qeq_literals" (formula "8") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_or_tautInEq0" (formula "9") (term "0,0"))
                                                   (rule "add_zero_right" (formula "9") (term "1,1,0,0"))
                                                   (rule "qeq_literals" (formula "9") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "commute_and" (formula "8") (term "0,0,1,0"))
                                                   (rule "inEqSimp_and_contradInEq0" (formula "8") (term "0,0,1,0"))
                                                   (rule "qeq_literals" (formula "8") (term "1,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8"))
                                                   (rule "lenNonNegative" (formula "12") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "12"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "lenNonNegative" (formula "13") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "13"))
                                                   (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "20"))
                                                      (rule "close" (formula "21") (ifseqformula "4"))
                                                   )
                                                   (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "24") (term "0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "24") (term "0,0,0,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch "self.list.size = 0 FALSE"
                                                   (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,1,0,1,0"))
                                                   (rule "commute_or" (formula "11") (term "0,0,0,1,0,1,0"))
                                                   (rule "lenNonNegative" (formula "14") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "14"))
                                                   (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                   (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "23"))
                                                   (rule "add_zero_right" (formula "14") (term "1"))
                                                   (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "14"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0"))
                                                   (rule "leq_literals" (formula "23") (term "0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "false_right" (formula "23"))
                                                   (rule "lenNonNegative" (formula "16") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "16"))
                                                   (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                                   (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                                   (rule "leq_literals" (formula "16") (term "0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "23"))
                                                      (rule "close" (formula "24") (ifseqformula "4"))
                                                   )
                                                   (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "27") (term "0,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "27") (term "0,0,0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "14"))
                                                      (rule "all_pull_out1" (formula "10") (term "0,1,0"))
                                                      (rule "all_pull_out0" (formula "10") (term "1,0"))
                                                      (rule "shift_paren_and" (formula "10") (term "0,1,0"))
                                                      (rule "all_pull_out3" (formula "10") (term "0"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "shift_paren_or" (formula "11") (term "0"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_or_weaken3" (formula "11") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "11") (term "0,1,0,1,0"))
                                                      (rule "add_zero_left" (formula "11") (term "1,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "commute_or_2" (formula "11") (term "0"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "11") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "0,0,1,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1,1"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,1,1"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,1,1"))
                                                      (rule "add_literals" (formula "11") (term "0,1,1"))
                                                      (rule "leq_literals" (formula "11") (term "1,1"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "14"))
                                                      (rule "inEqSimp_invertInEq1" (formula "11") (term "1"))
                                                      (rule "times_zero_2" (formula "11") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "11") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "commute_or_2" (formula "10") (term "0"))
                                                      (rule "commute_or" (formula "11") (term "0"))
                                                      (rule "commute_or" (formula "10") (term "0,0"))
                                                      (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                      (rule "allLeft" (formula "8") (inst "t=i_1_1_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "8") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "8") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "8") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "8") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "8"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "notRight" (formula "31"))
                                                      (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "closeFalse" (formula "9"))
                                                   )
                                                )
                                             )
                                             (branch "result_0.<created> = TRUE FALSE"
                                                (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "ifthenelse_to_or_left" (formula "11") (term "1,1,0"))
                                                (rule "eqSymm" (formula "11") (term "1,0,1,1,0"))
                                                (rule "eqSymm" (formula "11") (term "1,1,1,1,0"))
                                                (rule "commute_or" (formula "11") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "11") (term "1,1,1,0"))
                                                (rule "shift_paren_or" (formula "11") (term "0,1,0,1,0"))
                                                (rule "ifthenelse_split" (formula "12") (term "0"))
                                                (branch "self.list.size = 0 TRUE"
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "eqSymm" (formula "14"))
                                                   (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "10") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
                                                   (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0"))
                                                   (rule "applyEq" (formula "11") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "11") (term "1,1,1,1,1,1,0") (ifseqformula "12"))
                                                   (rule "add_literals" (formula "11") (term "1,1,1,1,1,0"))
                                                   (rule "applyEq" (formula "11") (term "1,1,0,1,0,1,1,0") (ifseqformula "12"))
                                                   (rule "add_zero_right" (formula "11") (term "1,0,1,0,1,1,0"))
                                                   (rule "inEqSimp_or_tautInEq0" (formula "11") (term "0,0"))
                                                   (rule "add_zero_right" (formula "11") (term "1,1,0,0"))
                                                   (rule "qeq_literals" (formula "11") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0"))
                                                   (rule "add_zero_right" (formula "8") (term "1,1,0"))
                                                   (rule "qeq_literals" (formula "8") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0"))
                                                   (rule "add_zero_right" (formula "8") (term "1,1,0"))
                                                   (rule "qeq_literals" (formula "8") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "commute_and" (formula "8") (term "0,0,1,0"))
                                                   (rule "inEqSimp_and_contradInEq0" (formula "8") (term "0,0,1,0"))
                                                   (rule "qeq_literals" (formula "8") (term "1,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "eqSymm" (formula "8"))
                                                   (rule "lenNonNegative" (formula "12") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "12"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "lenNonNegative" (formula "13") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "13"))
                                                   (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "referencedObjectIsCreatedRight" (formula "20") (ifseqformula "21"))
                                                      (rule "close" (formula "20") (ifseqformula "4"))
                                                   )
                                                   (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "25") (term "0,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "25") (term "0,0,0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "times_zero_2" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch "self.list.size = 0 FALSE"
                                                   (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "commute_or_2" (formula "11") (term "0,0,1,0,1,0"))
                                                   (rule "commute_or" (formula "11") (term "0,0,0,1,0,1,0"))
                                                   (rule "lenNonNegative" (formula "14") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "14"))
                                                   (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                   (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "23"))
                                                   (rule "add_zero_right" (formula "14") (term "1"))
                                                   (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "14"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0"))
                                                   (rule "leq_literals" (formula "23") (term "0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "false_right" (formula "23"))
                                                   (rule "lenNonNegative" (formula "16") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "16"))
                                                   (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                                   (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                                   (rule "leq_literals" (formula "16") (term "0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "23"))
                                                      (rule "close" (formula "24") (ifseqformula "4"))
                                                   )
                                                   (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                                      (rule "applyEqReverse" (formula "28") (term "0,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "28") (term "0,0,0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "14"))
                                                      (rule "all_pull_out1" (formula "10") (term "0,1,0"))
                                                      (rule "all_pull_out0" (formula "10") (term "1,0"))
                                                      (rule "shift_paren_and" (formula "10") (term "0,1,0"))
                                                      (rule "all_pull_out3" (formula "10") (term "0"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "shift_paren_or" (formula "11") (term "0"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_or_weaken3" (formula "11") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "11") (term "0,1,0,1,0"))
                                                      (rule "add_zero_left" (formula "11") (term "1,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "commute_or_2" (formula "11") (term "0"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                                      (rule "add_literals" (formula "11") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "11") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "11") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "0,0,1,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1,1"))
                                                      (rule "add_literals" (formula "11") (term "1,1,0,1,1"))
                                                      (rule "times_zero_1" (formula "11") (term "1,0,1,1"))
                                                      (rule "add_zero_right" (formula "11") (term "0,1,1"))
                                                      (rule "leq_literals" (formula "11") (term "1,1"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "14"))
                                                      (rule "inEqSimp_invertInEq1" (formula "11") (term "1"))
                                                      (rule "times_zero_2" (formula "11") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "11") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0,0"))
                                                      (rule "distr_forallAnd" (formula "10") (term "0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0"))
                                                      (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                      (rule "cnf_rightDist" (formula "10") (term "0"))
                                                      (rule "distr_forallAnd" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "commute_or" (formula "11") (term "0"))
                                                      (rule "commute_or_2" (formula "10") (term "0"))
                                                      (rule "commute_or" (formula "10") (term "0,0"))
                                                      (rule "commute_or_2" (formula "12") (term "0,0,0,0"))
                                                      (rule "shift_paren_or" (formula "12") (term "0,0,0,0,0"))
                                                      (rule "allLeft" (formula "7") (inst "t=i_1_1_0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "7") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "7") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "7") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "notLeft" (formula "7"))
                                                      (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "26"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "allLeft" (formula "8") (inst "t=i_1_1_0"))
                                                      (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "inEqSimp_commuteGeq" (formula "8") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "8") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "8"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch
                                          (rule "selectOfAnonEQ" (formula "15") (term "0,0,1") (ifseqformula "8") (userinteraction))
                                          (rule "ifthenelse_split" (formula "15") (term "0,0,1") (userinteraction))
                                          (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                             (builtin "One Step Simplification" (formula "6"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                             (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "andLeft" (formula "5"))
                                             (rule "eqSymm" (formula "24"))
                                             (rule "eqSymm" (formula "11"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "eqSymm" (formula "10"))
                                             (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                             (rule "eqSymm" (formula "9") (term "1,1,0"))
                                             (rule "eqSymm" (formula "8"))
                                             (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                             (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                             (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                             (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                             (rule "subsetSingletonLeft" (formula "6"))
                                             (rule "subsetSingletonLeft" (formula "5"))
                                             (rule "castedGetAny" (formula "24") (term "0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "10") (term "2,0"))
                                             (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "1,1,1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                             (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                             (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                             (rule "castedGetAny" (formula "11") (term "2,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "close" (formula "20") (ifseqformula "2"))
                                          )
                                          (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "selectOfAnonEQ" (formula "16") (term "0") (ifseqformula "8") (userinteraction))
                                             (rule "ifthenelse_split" (formula "16") (term "0") (userinteraction))
                                             (branch " (self.list@heapAfter_valueOf, IntList::$footprint) ∊ ∅ ∧ ¬IntList::$footprint = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntList::$footprint) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                (builtin "One Step Simplification" (formula "6"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")))
                                                (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notRight" (formula "17"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "eqSymm" (formula "26"))
                                                (rule "eqSymm" (formula "12"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "eqSymm" (formula "14"))
                                                (rule "eqSymm" (formula "11"))
                                                (rule "eqSymm" (formula "10") (term "0,1,0,1,0,1,0"))
                                                (rule "eqSymm" (formula "10") (term "1,1,0,1,0,1,0"))
                                                (rule "eqSymm" (formula "10") (term "1,1,0"))
                                                (rule "eqSymm" (formula "10") (term "1,0,0,1,0"))
                                                (rule "eqSymm" (formula "9"))
                                                (rule "polySimp_elimSub" (formula "12") (term "1,0,2,0"))
                                                (rule "mul_literals" (formula "12") (term "1,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "10") (term "1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "10") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "10") (term "1,0,2,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "12") (term "1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "10") (term "1,0,0,1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,1,0"))
                                                (rule "subsetSingletonLeft" (formula "7"))
                                                (rule "subsetSingletonLeft" (formula "6"))
                                                (rule "dismissNonSelectedField" (formula "26") (term "0,0,0"))
                                                (rule "castedGetAny" (formula "26") (term "0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "11") (term "2,0"))
                                                (rule "castedGetAny" (formula "10") (term "1,0,1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "10") (term "0,0,1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "10") (term "1,1,1,1,0"))
                                                (rule "castedGetAny" (formula "10") (term "0,1,0,0,1,0"))
                                                (rule "eqSymm" (formula "10") (term "1,0,0,1,0"))
                                                (rule "castedGetAny" (formula "9") (term "0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "10") (term "2,0,1,1,0"))
                                                (rule "castedGetAny" (formula "12") (term "2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "26") (term "0,0,0"))
                                                (rule "castedGetAny" (formula "10") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "25") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                                (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                                (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=IntIterator_list_0"))
                                                (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "24") (term "1,1,1,1,0,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "24") (term "1,0,0,1,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "referencedObjectIsCreatedRightEQ" (formula "19") (ifseqformula "1") (ifseqformula "20"))
                                                (rule "close" (formula "19") (ifseqformula "2"))
                                             )
                                             (branch " (self.list@heapAfter_valueOf, IntList::$footprint) ∊ ∅ ∧ ¬IntList::$footprint = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntList::$footprint) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                (rule "dismissNonSelectedField" (formula "17") (term "0") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0,0,1") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0,0,1") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0,0,1") (userinteraction))
                                                (rule "andLeft" (formula "5") (userinteraction))
                                                (rule "andLeft" (formula "5") (userinteraction))
                                                (rule "andLeft" (formula "5") (userinteraction))
                                                (rule "andLeft" (formula "5") (userinteraction))
                                                (rule "andLeft" (formula "5") (userinteraction))
                                                (rule "selectOfAnonEQ" (formula "22") (term "1,0") (ifseqformula "13") (userinteraction))
                                                (rule "ifthenelse_split" (formula "22") (term "1,0") (userinteraction))
                                                (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                   (rule "close" (formula "21") (ifseqformula "1"))
                                                )
                                                (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                   (rule "dismissNonSelectedField" (formula "22") (term "1,0") (userinteraction))
                                                   (rule "dismissNonSelectedField" (formula "22") (term "1,0") (userinteraction))
                                                   (rule "dismissNonSelectedField" (formula "22") (term "1,0") (userinteraction))
                                                   (rule "selectOfAnonEQ" (formula "22") (term "1,1,0,0,1,1") (ifseqformula "13") (userinteraction))
                                                   (rule "ifthenelse_split" (formula "22") (term "1,1,0,0,1,1") (userinteraction))
                                                   (branch " (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ ∅ ∧ ¬IntLinkedList::$size = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "1")))
                                                      (rule "closeTrue" (formula "22"))
                                                   )
                                                   (branch " (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ ∅ ∧ ¬IntLinkedList::$size = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                      (rule "dismissNonSelectedField" (formula "23") (term "1,1,0,0,1,1") (userinteraction))
                                                      (rule "dismissNonSelectedField" (formula "23") (term "1,1,0,0,1,1") (userinteraction))
                                                      (rule "dismissNonSelectedField" (formula "23") (term "1,1,0,0,1,1") (userinteraction))
                                                      (rule "selectOfAnonEQ" (formula "23") (term "1,1,1,0,0,1,1") (ifseqformula "13") (userinteraction))
                                                      (rule "ifthenelse_split" (formula "23") (term "1,1,1,0,0,1,1") (userinteraction))
                                                      (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                         (rule "close" (formula "21") (ifseqformula "1"))
                                                      )
                                                      (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                         (rule "dismissNonSelectedField" (formula "23") (term "1,1,1,0,0,1,1") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "23") (term "1,1,1,0,0,1,1") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "23") (term "1,1,1,0,0,1,1") (userinteraction))
                                                         (rule "selectOfAnonEQ" (formula "23") (term "0,0,0,1,0,1,1") (ifseqformula "13") (userinteraction))
                                                         (rule "ifthenelse_split" (formula "23") (term "0,0,0,1,0,1,1") (userinteraction))
                                                         (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "1")))
                                                            (rule "closeTrue" (formula "23"))
                                                         )
                                                         (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                            (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0,1,1") (userinteraction))
                                                            (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0,1,1") (userinteraction))
                                                            (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,0,1,1") (userinteraction))
                                                            (rule "selectOfAnonEQ" (formula "24") (term "1,0,0,0,1,0,1,1") (ifseqformula "13") (userinteraction))
                                                            (rule "ifthenelse_split" (formula "24") (term "1,0,0,0,1,0,1,1") (userinteraction))
                                                            (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                               (rule "close" (formula "21") (ifseqformula "1"))
                                                            )
                                                            (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                               (rule "dismissNonSelectedField" (formula "24") (term "1,0,0,0,1,0,1,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "24") (term "1,0,0,0,1,0,1,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "24") (term "1,0,0,0,1,0,1,1") (userinteraction))
                                                               (rule "orRight" (formula "20"))
                                                               (rule "andRight" (formula "20"))
                                                               (branch
                                                                  (rule "orRight" (formula "22"))
                                                                  (rule "andRight" (formula "22"))
                                                                  (branch
                                                                     (rule "orRight" (formula "24"))
                                                                     (rule "andRight" (formula "24"))
                                                                     (branch
                                                                        (rule "orRight" (formula "26"))
                                                                        (rule "andRight" (formula "26"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "orRight" (formula "26"))
                                                                        (rule "andRight" (formula "26"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "orRight" (formula "24"))
                                                                     (rule "andRight" (formula "24"))
                                                                     (branch
                                                                        (rule "orRight" (formula "26"))
                                                                        (rule "andRight" (formula "26"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "orRight" (formula "26"))
                                                                        (rule "andRight" (formula "26"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "orRight" (formula "22"))
                                                                  (rule "andRight" (formula "22"))
                                                                  (branch
                                                                     (rule "orRight" (formula "24"))
                                                                     (rule "andRight" (formula "24"))
                                                                     (branch
                                                                        (rule "orRight" (formula "26"))
                                                                        (rule "andRight" (formula "26"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "orRight" (formula "26"))
                                                                        (rule "andRight" (formula "26"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "orRight" (formula "24"))
                                                                     (rule "andRight" (formula "24"))
                                                                     (branch
                                                                        (rule "orRight" (formula "26"))
                                                                        (rule "andRight" (formula "26"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "orRight" (formula "26"))
                                                                        (rule "andRight" (formula "26"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "28")))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch
                                       (rule "allRight" (formula "15") (inst "sk=i_5_0") (userinteraction))
                                       (rule "impRight" (formula "15") (userinteraction))
                                       (rule "andRight" (formula "16") (userinteraction))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "16") (userinteraction))
                                          (branch
                                             (rule "andRight" (formula "16") (userinteraction))
                                             (branch
                                                (rule "selectOfAnonEQ" (formula "16") (term "0,0,0,0") (ifseqformula "9") (userinteraction))
                                                (rule "ifthenelse_split" (formula "16") (term "0,0,0,0") (userinteraction))
                                                (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0"))
                                                   (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0"))
                                                   (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                   (rule "notRight" (formula "17"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "eqSymm" (formula "14"))
                                                   (rule "eqSymm" (formula "16"))
                                                   (rule "eqSymm" (formula "15"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0,1,0,1,0"))
                                                   (rule "eqSymm" (formula "12") (term "0,1,0,1,0,1,0"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,1,0"))
                                                   (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                   (rule "eqSymm" (formula "11"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "1,0,2,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,1,0,2,0"))
                                                   (rule "polySimp_elimSub" (formula "12") (term "1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "12") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "1,0,2,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1,1,0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "24") (term "0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,1,0"))
                                                   (rule "subsetSingletonLeft" (formula "9"))
                                                   (rule "subsetSingletonLeft" (formula "8"))
                                                   (rule "castedGetAny" (formula "13") (term "2,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,0,1,0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,0,1,0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,1,1,0,0,1,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0,1,0,0,1,0"))
                                                   (rule "eqSymm" (formula "12") (term "1,0,0,1,0"))
                                                   (rule "castedGetAny" (formula "12") (term "1,1,1,1,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "castedGetAny" (formula "12") (term "2,0,1,1,0"))
                                                   (rule "castedGetAny" (formula "14") (term "2,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "24") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "24") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "2"))
                                                   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0"))
                                                   (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                   (rule "elementOfUnionEQ" (formula "8") (ifseqformula "11"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntIterator_list_0"))
                                                   (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "23") (ifseqformula "1") (ifseqformula "22"))
                                                   (rule "close" (formula "23") (ifseqformula "5"))
                                                )
                                                (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0") (userinteraction))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0") (userinteraction))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0") (userinteraction))
                                                   (rule "selectOfAnonEQ" (formula "17") (term "1,0,0,0,0") (ifseqformula "9") (userinteraction))
                                                   (rule "ifthenelse_split" (formula "17") (term "1,0,0,0,0") (userinteraction))
                                                   (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0"))
                                                      (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                      (rule "notRight" (formula "18"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "eqSymm" (formula "14"))
                                                      (rule "eqSymm" (formula "15"))
                                                      (rule "eqSymm" (formula "16"))
                                                      (rule "eqSymm" (formula "13"))
                                                      (rule "eqSymm" (formula "12") (term "1,0,0,1,0"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0,1,0,1,0"))
                                                      (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                      (rule "eqSymm" (formula "12") (term "0,1,0,1,0,1,0"))
                                                      (rule "eqSymm" (formula "11"))
                                                      (rule "polySimp_elimSub" (formula "14") (term "1,0,2,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,1,0,2,0"))
                                                      (rule "polySimp_elimSub" (formula "12") (term "1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "12") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "12") (term "1,0,2,0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0"))
                                                      (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1,1,0"))
                                                      (rule "dismissNonSelectedField" (formula "27") (term "0,0,1"))
                                                      (rule "castedGetAny" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "23") (term "0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,0,0,0,0,1,0"))
                                                      (rule "subsetSingletonLeft" (formula "8"))
                                                      (rule "subsetSingletonLeft" (formula "9"))
                                                      (rule "castedGetAny" (formula "13") (term "2,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,1,1,0,0,1,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,1,0,0,1,0"))
                                                      (rule "eqSymm" (formula "12") (term "1,0,0,1,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,1,1,1,0"))
                                                      (rule "castedGetAny" (formula "12") (term "1,0,1,0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0,0,1,0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "castedGetAny" (formula "12") (term "2,0,1,1,0"))
                                                      (rule "castedGetAny" (formula "14") (term "2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0,1,0"))
                                                      (rule "dismissNonSelectedField" (formula "27") (term "0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "23") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "dismissNonSelectedField" (formula "27") (term "0,0,1"))
                                                      (rule "dismissNonSelectedField" (formula "23") (term "0"))
                                                      (rule "close" (formula "23") (ifseqformula "5"))
                                                   )
                                                   (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                      (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,0,0") (userinteraction))
                                                      (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,0,0") (userinteraction))
                                                      (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,0,0") (userinteraction))
                                                      (rule "orRight" (formula "17"))
                                                      (rule "andRight" (formula "17"))
                                                      (branch
                                                         (rule "orRight" (formula "16"))
                                                         (rule "andRight" (formula "16"))
                                                         (branch
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "14")))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "false_right" (formula "17"))
                                                            (rule "translateJavaSubInt" (formula "6") (term "1,0,1,1,1,0,1,0,0,0"))
                                                            (rule "translateJavaSubInt" (formula "6") (term "1,0,2,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "6") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                            (rule "notRight" (formula "18"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "notRight" (formula "19"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "andLeft" (formula "11"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "eqSymm" (formula "15"))
                                                            (rule "eqSymm" (formula "16"))
                                                            (rule "eqSymm" (formula "17"))
                                                            (rule "eqSymm" (formula "14"))
                                                            (rule "eqSymm" (formula "13") (term "1,1,0,1,0,1,0"))
                                                            (rule "eqSymm" (formula "13") (term "1,1,0"))
                                                            (rule "eqSymm" (formula "13") (term "1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "13") (term "0,1,0,1,0,1,0"))
                                                            (rule "eqSymm" (formula "12"))
                                                            (rule "polySimp_elimSub" (formula "15") (term "1,0,2,0"))
                                                            (rule "mul_literals" (formula "15") (term "1,1,0,2,0"))
                                                            (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1,0"))
                                                            (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,0,2,0"))
                                                            (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1,0"))
                                                            (rule "dismissNonSelectedField" (formula "27") (term "0,0,1"))
                                                            (rule "castedGetAny" (formula "2") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                            (rule "castedGetAny" (formula "13") (term "0,0,0,0,0,1,0"))
                                                            (rule "subsetSingletonLeft" (formula "10"))
                                                            (rule "subsetSingletonLeft" (formula "9"))
                                                            (rule "castedGetAny" (formula "14") (term "2,0"))
                                                            (rule "castedGetAny" (formula "13") (term "1,1,1,1,0"))
                                                            (rule "castedGetAny" (formula "13") (term "0,1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "13") (term "1,0,0,1,0"))
                                                            (rule "castedGetAny" (formula "13") (term "0,0,1,0,1,0,1,0"))
                                                            (rule "castedGetAny" (formula "13") (term "1,0,1,0,1,0,1,0"))
                                                            (rule "castedGetAny" (formula "12") (term "0,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                            (rule "castedGetAny" (formula "13") (term "2,0,1,1,0"))
                                                            (rule "castedGetAny" (formula "15") (term "2,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "27") (term "0,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                            (rule "castedGetAny" (formula "13") (term "1,0,1,0,0,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0"))
                                                            (rule "dismissNonSelectedField" (formula "27") (term "0,0,1"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "2"))
                                                            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0"))
                                                            (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                            (rule "elementOfUnionEQ" (formula "9") (ifseqformula "11"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "true_left" (formula "8"))
                                                            (rule "pullOutSelect" (formula "24") (term "0,0,0") (inst "selectSK=IntIterator_list_0"))
                                                            (rule "applyEq" (formula "25") (term "1,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                                            (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "25") (term "1,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=IntLinkedList_size_0"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "18"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                            (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                            (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                                            (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "25"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfStore" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "nnf_imp2or" (formula "10") (term "0"))
                                                            (rule "nnf_imp2or" (formula "8") (term "0"))
                                                            (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                                            (rule "nnf_imp2or" (formula "10") (term "0,1,0,1,0"))
                                                            (rule "nnf_notAnd" (formula "10") (term "0,0,1,0,1,0"))
                                                            (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,0,1,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0,1,0"))
                                                            (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                                            (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1,0,1,0"))
                                                            (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,1,0"))
                                                            (rule "nnf_imp2or" (formula "10") (term "1,0,1,0,1,0"))
                                                            (rule "cnf_rightDist" (formula "8") (term "0"))
                                                            (rule "distr_forallAnd" (formula "8"))
                                                            (rule "andLeft" (formula "8"))
                                                            (rule "commute_or_2" (formula "8") (term "0"))
                                                            (rule "shift_paren_or" (formula "9") (term "0"))
                                                            (rule "commute_or" (formula "8") (term "0,0"))
                                                            (rule "ifthenelse_split" (formula "21") (term "0"))
                                                            (branch "result_0.<created> = TRUE TRUE"
                                                               (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "21"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "ifthenelse_to_or_left" (formula "11") (term "1,1,0"))
                                                               (rule "eqSymm" (formula "11") (term "1,0,1,1,0"))
                                                               (rule "eqSymm" (formula "11") (term "1,1,1,1,0"))
                                                               (rule "commute_or" (formula "11") (term "0,1,1,0"))
                                                               (rule "commute_or" (formula "11") (term "1,1,1,0"))
                                                               (rule "shift_paren_or" (formula "11") (term "0,1,0,1,0"))
                                                               (rule "ifthenelse_split" (formula "12") (term "0"))
                                                               (branch "self.list.size = 0 TRUE"
                                                                  (rule "eqSymm" (formula "13"))
                                                                  (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "eqSymm" (formula "14"))
                                                                  (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "12"))
                                                                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "12"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "times_zero_2" (formula "3") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0"))
                                                                  (rule "applyEq" (formula "11") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "12"))
                                                                  (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "12"))
                                                                  (rule "applyEq" (formula "10") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
                                                                  (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "12"))
                                                                  (rule "applyEq" (formula "11") (term "1,1,0,1,0,1,1,0") (ifseqformula "12"))
                                                                  (rule "add_zero_right" (formula "11") (term "1,0,1,0,1,1,0"))
                                                                  (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
                                                                  (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
                                                                  (rule "applyEq" (formula "11") (term "1,1,1,1,1,1,0") (ifseqformula "12"))
                                                                  (rule "add_zero_right" (formula "11") (term "1,1,1,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "3") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                               (branch "self.list.size = 0 FALSE"
                                                                  (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "22"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "commute_or_2" (formula "11") (term "0,0,1,0,1,0"))
                                                                  (rule "commute_or" (formula "11") (term "0,0,0,1,0,1,0"))
                                                                  (rule "lenNonNegative" (formula "14") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "14"))
                                                                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                                  (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "23"))
                                                                  (rule "add_zero_right" (formula "14") (term "1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "14"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                  (rule "leq_literals" (formula "23") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "false_right" (formula "23"))
                                                                  (rule "lenNonNegative" (formula "16") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "16"))
                                                                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                                                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                                                  (rule "leq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                                  (rule "castedGetAny" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "all_pull_out1" (formula "11") (term "0,1,0"))
                                                                  (rule "all_pull_out0" (formula "11") (term "1,0"))
                                                                  (rule "shift_paren_and" (formula "11") (term "0,1,0"))
                                                                  (rule "all_pull_out3" (formula "11") (term "0"))
                                                                  (rule "cnf_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "distr_forallAnd" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "distr_forallAnd" (formula "11"))
                                                                  (rule "andLeft" (formula "11"))
                                                                  (rule "shift_paren_or" (formula "12") (term "0"))
                                                                  (rule "commute_or_2" (formula "12") (term "0,0"))
                                                                  (rule "inEqSimp_or_weaken3" (formula "12") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "1,0,1,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,1,0,1,0"))
                                                                  (rule "add_zero_left" (formula "12") (term "1,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "cnf_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "distr_forallAnd" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "distr_forallAnd" (formula "11"))
                                                                  (rule "andLeft" (formula "11"))
                                                                  (rule "commute_or_2" (formula "12") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "12") (term "0,0,0,1"))
                                                                  (rule "add_zero_left" (formula "12") (term "0,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "12") (term "0,0,1,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1,1"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0,1,1"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0,1,1"))
                                                                  (rule "add_zero_right" (formula "12") (term "0,1,1"))
                                                                  (rule "leq_literals" (formula "12") (term "1,1"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "15"))
                                                                  (rule "inEqSimp_invertInEq1" (formula "12") (term "1"))
                                                                  (rule "times_zero_2" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "16"))
                                                                  (rule "qeq_literals" (formula "12") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "cnf_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "distr_forallAnd" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "distr_forallAnd" (formula "11"))
                                                                  (rule "andLeft" (formula "11"))
                                                                  (rule "commute_or_2" (formula "12") (term "0,0"))
                                                                  (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                                  (rule "cnf_rightDist" (formula "11") (term "0"))
                                                                  (rule "distr_forallAnd" (formula "11"))
                                                                  (rule "andLeft" (formula "11"))
                                                                  (rule "commute_or" (formula "12") (term "0"))
                                                                  (rule "commute_or_2" (formula "11") (term "0"))
                                                                  (rule "commute_or" (formula "11") (term "0,0"))
                                                                  (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                                  (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                                  (rule "cut_direct" (formula "30") (term "0,0"))
                                                                  (branch "CUT: self.list = null TRUE"
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "false_right" (formula "31"))
                                                                     (rule "applyEq" (formula "10") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "14") (term "1,1,1,0,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "14") (term "1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "16") (term "1,1,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "11") (term "1,0,0,1,0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "11") (term "1,1,1,1,0,0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "14") (term "1,1,1,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "9") (term "1,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "9") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "10") (term "1,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "16") (term "1,0,1,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "13") (term "1,0,1,0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "12") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "16") (term "1,0,1,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "13") (term "1,0,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "18") (term "1,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "1"))
                                                                     (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1,3,0,0") (ifseqformula "5"))
                                                                     (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "31"))
                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "3,0,0") (ifseqformula "5"))
                                                                     (rule "allLeft" (formula "12") (inst "t=i_5_0"))
                                                                     (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "12") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "3"))
                                                                     (rule "qeq_literals" (formula "12") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "closeFalse" (formula "12"))
                                                                  )
                                                                  (branch "CUT: self.list = null FALSE"
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "notRight" (formula "31"))
                                                                     (rule "allLeft" (formula "12") (inst "t=i_5_0"))
                                                                     (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "3"))
                                                                     (rule "qeq_literals" (formula "12") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "4"))
                                                                     (rule "andLeft" (formula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                                     (rule "add_literals" (formula "12") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "12") (term "1,0"))
                                                                     (rule "add_literals" (formula "12") (term "0"))
                                                                     (rule "leq_literals" (formula "12"))
                                                                     (rule "closeFalse" (formula "12"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "result_0.<created> = TRUE FALSE"
                                                               (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "22"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "ifthenelse_to_or_left" (formula "11") (term "1,1,0"))
                                                               (rule "eqSymm" (formula "11") (term "1,1,1,1,0"))
                                                               (rule "eqSymm" (formula "11") (term "1,0,1,1,0"))
                                                               (rule "commute_or" (formula "11") (term "1,1,1,0"))
                                                               (rule "commute_or" (formula "11") (term "0,1,1,0"))
                                                               (rule "shift_paren_or" (formula "11") (term "0,1,0,1,0"))
                                                               (rule "ifthenelse_split" (formula "12") (term "0"))
                                                               (branch "self.list.size = 0 TRUE"
                                                                  (rule "eqSymm" (formula "13"))
                                                                  (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "eqSymm" (formula "14"))
                                                                  (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "12"))
                                                                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "12"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "times_zero_2" (formula "3") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0"))
                                                                  (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "12"))
                                                                  (rule "applyEq" (formula "10") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
                                                                  (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "11") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "12"))
                                                                  (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "12"))
                                                                  (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
                                                                  (rule "applyEq" (formula "11") (term "1,1,1,1,1,1,0") (ifseqformula "12"))
                                                                  (rule "add_zero_right" (formula "11") (term "1,1,1,1,1,0"))
                                                                  (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
                                                                  (rule "applyEq" (formula "11") (term "1,1,0,1,0,1,1,0") (ifseqformula "12"))
                                                                  (rule "add_zero_right" (formula "11") (term "1,0,1,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "3") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                               (branch "self.list.size = 0 FALSE"
                                                                  (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "22"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "commute_or_2" (formula "11") (term "0,0,1,0,1,0"))
                                                                  (rule "commute_or" (formula "11") (term "0,0,0,1,0,1,0"))
                                                                  (rule "lenNonNegative" (formula "14") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "14"))
                                                                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                                  (rule "inEqSimp_strengthen1" (formula "14") (ifseqformula "23"))
                                                                  (rule "add_zero_right" (formula "14") (term "1"))
                                                                  (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "14"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                  (rule "leq_literals" (formula "23") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "false_right" (formula "23"))
                                                                  (rule "lenNonNegative" (formula "16") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "16"))
                                                                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                                                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                                                  (rule "leq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                                                  (rule "castedGetAny" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "all_pull_out1" (formula "11") (term "0,1,0"))
                                                                  (rule "all_pull_out0" (formula "11") (term "1,0"))
                                                                  (rule "shift_paren_and" (formula "11") (term "0,1,0"))
                                                                  (rule "all_pull_out3" (formula "11") (term "0"))
                                                                  (rule "cnf_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "distr_forallAnd" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "distr_forallAnd" (formula "11"))
                                                                  (rule "andLeft" (formula "11"))
                                                                  (rule "shift_paren_or" (formula "12") (term "0"))
                                                                  (rule "commute_or_2" (formula "12") (term "0,0"))
                                                                  (rule "inEqSimp_or_weaken3" (formula "12") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "1,0,1,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,1,0,1,0"))
                                                                  (rule "add_zero_left" (formula "12") (term "1,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "cnf_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "distr_forallAnd" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "distr_forallAnd" (formula "11"))
                                                                  (rule "andLeft" (formula "11"))
                                                                  (rule "commute_or_2" (formula "12") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "12") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "12") (term "0,0,0,1"))
                                                                  (rule "add_zero_left" (formula "12") (term "0,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "12") (term "0,0,1,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1,1"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0,1,1"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0,1,1"))
                                                                  (rule "add_zero_right" (formula "12") (term "0,1,1"))
                                                                  (rule "leq_literals" (formula "12") (term "1,1"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "15"))
                                                                  (rule "inEqSimp_invertInEq1" (formula "12") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                                                                  (rule "times_zero_2" (formula "12") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "16"))
                                                                  (rule "qeq_literals" (formula "12") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "cnf_rightDist" (formula "11") (term "0,0"))
                                                                  (rule "distr_forallAnd" (formula "11") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "distr_forallAnd" (formula "11"))
                                                                  (rule "andLeft" (formula "11"))
                                                                  (rule "commute_or_2" (formula "12") (term "0,0"))
                                                                  (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                                  (rule "cnf_rightDist" (formula "11") (term "0"))
                                                                  (rule "distr_forallAnd" (formula "11"))
                                                                  (rule "andLeft" (formula "11"))
                                                                  (rule "commute_or" (formula "12") (term "0"))
                                                                  (rule "commute_or_2" (formula "11") (term "0"))
                                                                  (rule "commute_or" (formula "11") (term "0,0"))
                                                                  (rule "commute_or_2" (formula "13") (term "0,0,0,0"))
                                                                  (rule "shift_paren_or" (formula "13") (term "0,0,0,0,0"))
                                                                  (rule "cut_direct" (formula "31") (term "0,0"))
                                                                  (branch "CUT: self.list = null TRUE"
                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "false_right" (formula "32"))
                                                                     (rule "applyEq" (formula "13") (term "1,0,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "16") (term "1,0,1,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "11") (term "1,1,1,1,0,0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "14") (term "1,1,1,0,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "14") (term "1,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "14") (term "1,1,1,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "13") (term "1,0,1,0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "9") (term "1,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "11") (term "1,0,0,1,0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "18") (term "1,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "16") (term "1,1,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "16") (term "1,0,1,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "10") (term "1,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "12") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "10") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "9") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                                                     (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "1,3,0,0") (ifseqformula "5"))
                                                                     (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "32"))
                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "3,0,0") (ifseqformula "5"))
                                                                     (rule "allLeft" (formula "12") (inst "t=i_5_0"))
                                                                     (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "3"))
                                                                     (rule "qeq_literals" (formula "12") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "4"))
                                                                     (rule "andLeft" (formula "12"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                                                     (rule "add_literals" (formula "12") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "12") (term "1,0"))
                                                                     (rule "add_literals" (formula "12") (term "0"))
                                                                     (rule "leq_literals" (formula "12"))
                                                                     (rule "closeFalse" (formula "12"))
                                                                  )
                                                                  (branch "CUT: self.list = null FALSE"
                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "notRight" (formula "32"))
                                                                     (rule "allLeft" (formula "12") (inst "t=i_5_0"))
                                                                     (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "3"))
                                                                     (rule "qeq_literals" (formula "12") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "12"))
                                                                     (rule "andLeft" (formula "4"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                                     (rule "add_literals" (formula "4") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "4") (term "1,0"))
                                                                     (rule "add_literals" (formula "4") (term "0"))
                                                                     (rule "leq_literals" (formula "4"))
                                                                     (rule "closeFalse" (formula "4"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "14")))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "closeTrue" (formula "16"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "orRight" (formula "16"))
                                                         (rule "andRight" (formula "16"))
                                                         (branch
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "14")))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "closeTrue" (formula "18"))
                                                         )
                                                         (branch
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "14")))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "closeTrue" (formula "18"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch
                                                (rule "selectOfAnonEQ" (formula "16") (term "0,0,1,0") (ifseqformula "9") (userinteraction))
                                                (rule "ifthenelse_split" (formula "16") (term "0,0,1,0") (userinteraction))
                                                (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0"))
                                                   (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0"))
                                                   (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "9"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "eqSymm" (formula "27"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "eqSymm" (formula "14"))
                                                   (rule "eqSymm" (formula "15"))
                                                   (rule "eqSymm" (formula "12"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
                                                   (rule "eqSymm" (formula "11") (term "0,1,0,1,0,1,0"))
                                                   (rule "eqSymm" (formula "11") (term "1,1,0,1,0,1,0"))
                                                   (rule "eqSymm" (formula "11") (term "1,1,0"))
                                                   (rule "eqSymm" (formula "10"))
                                                   (rule "polySimp_elimSub" (formula "13") (term "1,0,2,0"))
                                                   (rule "mul_literals" (formula "13") (term "1,1,0,2,0"))
                                                   (rule "polySimp_elimSub" (formula "11") (term "1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "11") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                   (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,1,0"))
                                                   (rule "subsetSingletonLeft" (formula "7"))
                                                   (rule "subsetSingletonLeft" (formula "8"))
                                                   (rule "castedGetAny" (formula "27") (term "0"))
                                                   (rule "eqSymm" (formula "27"))
                                                   (rule "castedGetAny" (formula "12") (term "2,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,1,1,0,0,1,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,1,0,0,1,0"))
                                                   (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,0,1,0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "11") (term "0,0,1,0,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "castedGetAny" (formula "11") (term "1,1,1,1,0"))
                                                   (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "11") (term "2,0,1,1,0"))
                                                   (rule "castedGetAny" (formula "13") (term "2,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                   (rule "castedGetAny" (formula "27") (term "1,0"))
                                                   (rule "eqSymm" (formula "27"))
                                                   (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                   (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                   (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntIterator_list_0"))
                                                   (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "26") (term "1,0,1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "21") (ifseqformula "1") (ifseqformula "22"))
                                                   (rule "close" (formula "21") (ifseqformula "4"))
                                                )
                                                (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0") (userinteraction))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0") (userinteraction))
                                                   (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0") (userinteraction))
                                                   (rule "selectOfAnonEQ" (formula "17") (term "1,0,0,1,0") (ifseqformula "9") (userinteraction))
                                                   (rule "ifthenelse_split" (formula "17") (term "1,0,0,1,0") (userinteraction))
                                                   (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0"))
                                                      (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "eqSymm" (formula "27"))
                                                      (rule "eqSymm" (formula "14"))
                                                      (rule "eqSymm" (formula "15"))
                                                      (rule "eqSymm" (formula "13"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "eqSymm" (formula "11") (term "0,1,0,1,0,1,0"))
                                                      (rule "eqSymm" (formula "11") (term "1,1,0"))
                                                      (rule "eqSymm" (formula "11") (term "1,1,0,1,0,1,0"))
                                                      (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
                                                      (rule "eqSymm" (formula "10"))
                                                      (rule "polySimp_elimSub" (formula "13") (term "1,0,2,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,1,0,2,0"))
                                                      (rule "polySimp_elimSub" (formula "11") (term "1,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1,1,0"))
                                                      (rule "dismissNonSelectedField" (formula "26") (term "0,0,1"))
                                                      (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,1,0"))
                                                      (rule "subsetSingletonLeft" (formula "7"))
                                                      (rule "subsetSingletonLeft" (formula "8"))
                                                      (rule "castedGetAny" (formula "27") (term "0"))
                                                      (rule "eqSymm" (formula "27"))
                                                      (rule "castedGetAny" (formula "12") (term "2,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,0,1,0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "11") (term "1,0,1,0,1,0,1,0"))
                                                      (rule "castedGetAny" (formula "11") (term "1,1,1,1,0"))
                                                      (rule "castedGetAny" (formula "11") (term "1,1,1,0,0,1,0"))
                                                      (rule "castedGetAny" (formula "11") (term "0,1,0,0,1,0"))
                                                      (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
                                                      (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "castedGetAny" (formula "11") (term "2,0,1,1,0"))
                                                      (rule "castedGetAny" (formula "13") (term "2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "26") (term "0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                                      (rule "castedGetAny" (formula "27") (term "1,0"))
                                                      (rule "eqSymm" (formula "27"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "dismissNonSelectedField" (formula "26") (term "0,0,1"))
                                                      (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                                      (rule "close" (formula "22") (ifseqformula "4"))
                                                   )
                                                   (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                      (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,1,0") (userinteraction))
                                                      (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,1,0") (userinteraction))
                                                      (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,1,0") (userinteraction))
                                                      (rule "selectOfAnonEQ" (formula "18") (term "0,0,1") (ifseqformula "9") (userinteraction))
                                                      (rule "ifthenelse_split" (formula "18") (term "0,0,1") (userinteraction))
                                                      (branch " (self.list@heapAfter_valueOf, IntList::$seq) ∊ ∅ ∧ ¬IntList::$seq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntList::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")))
                                                         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
                                                         (rule "closeTrue" (formula "17"))
                                                      )
                                                      (branch " (self.list@heapAfter_valueOf, IntList::$seq) ∊ ∅ ∧ ¬IntList::$seq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntList::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                         (rule "dismissNonSelectedField" (formula "19") (term "0,0,1") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "19") (term "0,0,1") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "19") (term "0,0,1") (userinteraction))
                                                         (rule "selectOfAnonEQ" (formula "19") (term "1,0,0,1") (ifseqformula "9") (userinteraction))
                                                         (rule "ifthenelse_split" (formula "19") (term "1,0,0,1") (userinteraction))
                                                         (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                            (rule "close" (formula "18") (ifseqformula "1"))
                                                         )
                                                         (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                            (rule "dismissNonSelectedField" (formula "19") (term "1,0,0,1") (userinteraction))
                                                            (rule "dismissNonSelectedField" (formula "19") (term "1,0,0,1") (userinteraction))
                                                            (rule "dismissNonSelectedField" (formula "19") (term "1,0,0,1") (userinteraction))
                                                            (rule "selectOfAnonEQ" (formula "19") (term "0") (ifseqformula "9") (userinteraction))
                                                            (rule "selectOfAnonEQ" (formula "1") (term "1,1,0") (ifseqformula "9") (userinteraction))
                                                            (rule "ifthenelse_split" (formula "1") (term "1,1,0") (userinteraction))
                                                            (branch " (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ ∅ ∧ ¬IntLinkedList::$size = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "1")))
                                                               (rule "closeTrue" (formula "19"))
                                                            )
                                                            (branch " (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ ∅ ∧ ¬IntLinkedList::$size = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                               (rule "dismissNonSelectedField" (formula "1") (term "1,1,0") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "1,1,0") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "1,1,0") (userinteraction))
                                                               (rule "selectOfAnonEQ" (formula "1") (term "1,1,1,0") (ifseqformula "9") (userinteraction))
                                                               (rule "ifthenelse_split" (formula "1") (term "1,1,1,0") (userinteraction))
                                                               (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                                  (rule "close" (formula "19") (ifseqformula "1"))
                                                               )
                                                               (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0") (userinteraction))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0") (userinteraction))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0") (userinteraction))
                                                                  (rule "ifthenelse_split" (formula "20") (term "0") (userinteraction))
                                                                  (branch " ((IntNode)(self.list.nodeseq[i_5_0]), IntNode::$data) ∊ ∅ ∧ ¬IntNode::$data = java.lang.Object::<created> ∨ ((IntNode)(self.list.nodeseq[i_5_0]), IntNode::$data) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                                     (rule "orLeft" (formula "1") (userinteraction))
                                                                     (branch " ((IntNode)(self.list.nodeseq[i_5_0]), IntNode::$data) ∊ ∅ ∧ ¬IntNode::$data = java.lang.Object::<created>"
                                                                        (builtin "One Step Simplification" (formula "7"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch "((IntNode)(self.list.nodeseq[i_5_0]), IntNode::$data) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next])"
                                                                        (rule "orRight" (formula "20") (userinteraction))
                                                                        (rule "orRight" (formula "19") (userinteraction))
                                                                        (rule "andLeft" (formula "7") (userinteraction))
                                                                        (rule "andLeft" (formula "7") (userinteraction))
                                                                        (rule "andLeft" (formula "7") (userinteraction))
                                                                        (rule "andLeft" (formula "7") (userinteraction))
                                                                        (rule "allLeft" (formula "8") (inst "t=i_5_0") (userinteraction))
                                                                        (rule "impLeft" (formula "8") (userinteraction))
                                                                        (branch
                                                                           (rule "close" (formula "18") (ifseqformula "2"))
                                                                        )
                                                                        (branch
                                                                           (rule "andLeft" (formula "8") (userinteraction))
                                                                           (rule "andLeft" (formula "8") (userinteraction))
                                                                           (rule "andLeft" (formula "8") (userinteraction))
                                                                           (opengoal " ")
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch " ((IntNode)(self.list.nodeseq[i_5_0]), IntNode::$data) ∊ ∅ ∧ ¬IntNode::$data = java.lang.Object::<created> ∨ ((IntNode)(self.list.nodeseq[i_5_0]), IntNode::$data) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                                     (rule "dismissNonSelectedField" (formula "21") (term "0") (userinteraction))
                                                                     (rule "dismissNonSelectedField" (formula "21") (term "0") (userinteraction))
                                                                     (rule "dismissNonSelectedField" (formula "21") (term "0") (userinteraction))
                                                                     (rule "andLeft" (formula "6") (userinteraction))
                                                                     (rule "andLeft" (formula "6") (userinteraction))
                                                                     (rule "andLeft" (formula "6") (userinteraction))
                                                                     (rule "andLeft" (formula "6") (userinteraction))
                                                                     (rule "allLeft" (formula "7") (inst "t=i_5_0") (userinteraction))
                                                                     (rule "impLeft" (formula "7") (userinteraction))
                                                                     (branch
                                                                        (rule "close" (formula "17") (ifseqformula "1"))
                                                                     )
                                                                     (branch
                                                                        (rule "andLeft" (formula "7") (userinteraction))
                                                                        (rule "andLeft" (formula "7") (userinteraction))
                                                                        (rule "andLeft" (formula "7") (userinteraction))
                                                                        (rule "close" (formula "29") (ifseqformula "8") (userinteraction))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch
                                             (rule "selectOfAnonEQ" (formula "16") (term "1,1,0,0,0") (ifseqformula "9") (userinteraction))
                                             (rule "ifthenelse_split" (formula "16") (term "1,1,0,0,0") (userinteraction))
                                             (branch " (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ ∅ ∧ ¬IntLinkedList::$size = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                (builtin "One Step Simplification" (formula "7"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "allRight" (formula "27") (inst "sk=j_0"))
                                                (rule "impRight" (formula "27"))
                                                (rule "impRight" (formula "28"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "eqSymm" (formula "16"))
                                                (rule "eqSymm" (formula "18"))
                                                (rule "eqSymm" (formula "17"))
                                                (rule "eqSymm" (formula "15"))
                                                (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "eqSymm" (formula "30"))
                                                (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "25") (term "0"))
                                                (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                (rule "subsetSingletonLeft" (formula "11"))
                                                (rule "subsetSingletonLeft" (formula "10"))
                                                (rule "castedGetAny" (formula "15") (term "2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                (rule "castedGetAny" (formula "13") (term "0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "1") (term "1"))
                                                (rule "castedGetAny" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                (rule "castedGetAny" (formula "16") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "25") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "castedGetAny" (formula "14") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "25") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "4"))
                                                (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
                                                (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                (rule "elementOfUnionEQ" (formula "11") (ifseqformula "13"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "elementOfUnionEQ" (formula "10") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=IntIterator_list_0"))
                                                (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "referencedObjectIsCreatedRightEQ" (formula "24") (ifseqformula "1") (ifseqformula "25"))
                                                (rule "close" (formula "24") (ifseqformula "7"))
                                             )
                                             (branch " (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ ∅ ∧ ¬IntLinkedList::$size = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,0") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,0") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,0") (userinteraction))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "selectOfAnonEQ" (formula "17") (term "1,1,1,0,0") (ifseqformula "9") (userinteraction))
                                                (rule "ifthenelse_split" (formula "17") (term "1,1,1,0,0") (userinteraction))
                                                (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0"))
                                                   (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0"))
                                                   (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "allRight" (formula "27") (inst "sk=j_0"))
                                                   (rule "impRight" (formula "27"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "impRight" (formula "29"))
                                                   (rule "eqSymm" (formula "18"))
                                                   (rule "eqSymm" (formula "17"))
                                                   (rule "eqSymm" (formula "16"))
                                                   (rule "eqSymm" (formula "15"))
                                                   (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "eqSymm" (formula "30"))
                                                   (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                   (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "29") (term "0,0,1"))
                                                   (rule "dismissNonSelectedField" (formula "25") (term "0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                   (rule "subsetSingletonLeft" (formula "10"))
                                                   (rule "subsetSingletonLeft" (formula "11"))
                                                   (rule "castedGetAny" (formula "15") (term "2,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                   (rule "castedGetAny" (formula "13") (term "0,1,0,1,0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                   (rule "castedGetAny" (formula "16") (term "2,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "29") (term "0,0,1"))
                                                   (rule "dismissNonSelectedField" (formula "25") (term "0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "castedGetAny" (formula "1") (term "0"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "4"))
                                                   (rule "dismissNonSelectedField" (formula "29") (term "0,0,1"))
                                                   (rule "dismissNonSelectedField" (formula "25") (term "0"))
                                                   (rule "close" (formula "25") (ifseqformula "7"))
                                                )
                                                (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                   (rule "selectOfAnonEQ" (formula "18") (term "0,0,0,0,1,0") (ifseqformula "9") (userinteraction))
                                                   (rule "ifthenelse_split" (formula "18") (term "0,0,0,0,1,0") (userinteraction))
                                                   (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")))
                                                      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
                                                      (rule "closeTrue" (formula "17"))
                                                   )
                                                   (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                      (rule "selectOfAnonEQ" (formula "19") (term "0,0,1,0,1,0") (ifseqformula "9") (userinteraction))
                                                      (rule "selectOfAnonEQ" (formula "19") (term "1,0,0,0,0,1,0") (ifseqformula "9") (userinteraction))
                                                      (rule "ifthenelse_split" (formula "19") (term "1,0,0,0,0,1,0") (userinteraction))
                                                      (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                         (rule "close" (formula "18") (ifseqformula "1"))
                                                      )
                                                      (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                         (rule "ifthenelse_split" (formula "19") (term "0,0,1,0,1,0") (userinteraction))
                                                         (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                            (rule "close" (formula "19") (ifseqformula "1"))
                                                         )
                                                         (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                            (rule "dismissNonSelectedField" (formula "19") (term "1,1,1,0,0") (userinteraction))
                                                            (rule "dismissNonSelectedField" (formula "19") (term "1,1,1,0,0") (userinteraction))
                                                            (rule "dismissNonSelectedField" (formula "19") (term "1,1,1,0,0") (userinteraction))
                                                            (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,0,1,0") (userinteraction))
                                                            (rule "dismissNonSelectedField" (formula "19") (term "1,0,0,0,0,1,0") (userinteraction))
                                                            (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,0,1,0") (userinteraction))
                                                            (rule "dismissNonSelectedField" (formula "19") (term "1,0,0,0,0,1,0") (userinteraction))
                                                            (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,0,1,0") (userinteraction))
                                                            (rule "dismissNonSelectedField" (formula "19") (term "1,0,0,0,0,1,0") (userinteraction))
                                                            (rule "selectOfAnonEQ" (formula "19") (term "1,0,0,1,0,1,0") (ifseqformula "9") (userinteraction))
                                                            (rule "ifthenelse_split" (formula "19") (term "1,0,0,1,0,1,0") (userinteraction))
                                                            (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                               (rule "close" (formula "18") (ifseqformula "1"))
                                                            )
                                                            (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                               (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,0,1,0") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "19") (term "1,0,0,1,0,1,0") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,0,1,0") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "19") (term "1,0,0,1,0,1,0") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,0,1,0") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "19") (term "1,0,0,1,0,1,0") (userinteraction))
                                                               (rule "andLeft" (formula "6") (userinteraction))
                                                               (rule "andLeft" (formula "6") (userinteraction))
                                                               (rule "andLeft" (formula "6") (userinteraction))
                                                               (rule "andLeft" (formula "6") (userinteraction))
                                                               (rule "allLeft" (formula "7") (inst "t=i_5_0") (userinteraction))
                                                               (rule "impLeft" (formula "7") (userinteraction))
                                                               (branch
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "19")))
                                                                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "23")))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "false_right" (formula "21"))
                                                                  (rule "translateJavaSubInt" (formula "9") (term "1,0,2,1"))
                                                                  (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0"))
                                                                  (rule "andLeft" (formula "10"))
                                                                  (rule "andLeft" (formula "6"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "notRight" (formula "24"))
                                                                  (rule "andLeft" (formula "8"))
                                                                  (rule "andLeft" (formula "8"))
                                                                  (rule "allRight" (formula "28") (inst "sk=j_0"))
                                                                  (rule "impRight" (formula "28"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "impRight" (formula "30"))
                                                                  (rule "eqSymm" (formula "16"))
                                                                  (rule "eqSymm" (formula "15") (term "1,0,0,1,0"))
                                                                  (rule "eqSymm" (formula "15") (term "1,1,0,1,0,1,0"))
                                                                  (rule "eqSymm" (formula "15") (term "0,1,0,1,0,1,0"))
                                                                  (rule "eqSymm" (formula "17"))
                                                                  (rule "eqSymm" (formula "15") (term "1,1,0"))
                                                                  (rule "eqSymm" (formula "19"))
                                                                  (rule "eqSymm" (formula "18"))
                                                                  (rule "eqSymm" (formula "14"))
                                                                  (rule "eqSymm" (formula "1"))
                                                                  (rule "eqSymm" (formula "31"))
                                                                  (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "5"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "polySimp_elimSub" (formula "17") (term "1,0,2,0"))
                                                                  (rule "mul_literals" (formula "17") (term "1,1,0,2,0"))
                                                                  (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "15") (term "1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "1,0,2,0,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "17") (term "1,0,2,0"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,1,0"))
                                                                  (rule "castedGetAny" (formula "15") (term "0,0,0,0,0,1,0"))
                                                                  (rule "dismissNonSelectedField" (formula "30") (term "0,0,1"))
                                                                  (rule "dismissNonSelectedField" (formula "4") (term "0"))
                                                                  (rule "subsetSingletonLeft" (formula "11"))
                                                                  (rule "subsetSingletonLeft" (formula "12"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                  (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                  (rule "castedGetAny" (formula "15") (term "1,1,1,0,0,1,0"))
                                                                  (rule "castedGetAny" (formula "15") (term "0,1,0,0,1,0"))
                                                                  (rule "eqSymm" (formula "15") (term "1,0,0,1,0"))
                                                                  (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0,1,0"))
                                                                  (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0,1,0"))
                                                                  (rule "castedGetAny" (formula "15") (term "1,1,1,1,0"))
                                                                  (rule "castedGetAny" (formula "14") (term "0,1,0,1,0"))
                                                                  (rule "castedGetAny" (formula "1") (term "1"))
                                                                  (rule "castedGetAny" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                                  (rule "castedGetAny" (formula "15") (term "2,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "castedGetAny" (formula "17") (term "2,0"))
                                                                  (rule "dismissNonSelectedField" (formula "30") (term "0,0,1"))
                                                                  (rule "inEqSimp_ltRight" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                  (rule "dismissNonSelectedField" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0,1,0"))
                                                                  (rule "dismissNonSelectedField" (formula "30") (term "0,0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "6"))
                                                                  (rule "dismissNonSelectedField" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "3"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                                  (rule "pullOutSelect" (formula "29") (term "0,0,0") (inst "selectSK=IntIterator_list_0"))
                                                                  (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "30") (term "1,0,0,1") (ifseqformula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                                                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "1"))
                                                                  (rule "applyEqReverse" (formula "30") (term "1,0,0,1") (ifseqformula "1"))
                                                                  (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "elementOfUnionEQ" (formula "12") (ifseqformula "14"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "elementOfUnionEQ" (formula "11") (ifseqformula "13"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=IntLinkedList_size_0"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "21"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "dismissNonSelectedField" (formula "6") (term "2,0"))
                                                                  (rule "dismissNonSelectedField" (formula "6") (term "0,0,1,0,0"))
                                                                  (rule "dismissNonSelectedField" (formula "6") (term "2,0"))
                                                                  (rule "dismissNonSelectedField" (formula "6") (term "0,0,1,0,0"))
                                                                  (rule "dismissNonSelectedField" (formula "6") (term "2,0"))
                                                                  (rule "dismissNonSelectedField" (formula "6") (term "0,0,1,0,0"))
                                                                  (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "28"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                                                                  (rule "andLeft" (formula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0"))
                                                                  (rule "leq_literals" (formula "6"))
                                                                  (rule "closeFalse" (formula "6"))
                                                               )
                                                               (branch
                                                                  (rule "andLeft" (formula "7") (userinteraction))
                                                                  (rule "andLeft" (formula "7") (userinteraction))
                                                                  (rule "orRight" (formula "25"))
                                                                  (rule "andRight" (formula "25"))
                                                                  (branch
                                                                     (rule "orRight" (formula "24"))
                                                                     (rule "andRight" (formula "24"))
                                                                     (branch
                                                                        (rule "orRight" (formula "23"))
                                                                        (rule "andRight" (formula "23"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "29")))
                                                                           (rule "closeFalse" (formula "8"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "29")))
                                                                           (rule "closeFalse" (formula "8"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "orRight" (formula "23"))
                                                                        (rule "andRight" (formula "23"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "29")))
                                                                           (rule "closeFalse" (formula "8"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "29")))
                                                                           (rule "closeFalse" (formula "8"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "orRight" (formula "24"))
                                                                     (rule "andRight" (formula "24"))
                                                                     (branch
                                                                        (rule "orRight" (formula "23"))
                                                                        (rule "andRight" (formula "23"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "29")))
                                                                           (rule "closeFalse" (formula "8"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "29")))
                                                                           (rule "closeFalse" (formula "8"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "orRight" (formula "23"))
                                                                        (rule "andRight" (formula "23"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "29")))
                                                                           (rule "closeFalse" (formula "8"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "29")))
                                                                           (rule "closeFalse" (formula "8"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "selectOfAnonEQ" (formula "16") (term "0,0,1,0") (ifseqformula "9") (userinteraction))
                                          (rule "ifthenelse_split" (formula "16") (term "0,0,1,0") (userinteraction))
                                          (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                             (builtin "One Step Simplification" (formula "7"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
                                             (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1"))
                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0"))
                                             (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "eqSymm" (formula "27") (term "0,1"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "eqSymm" (formula "15"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "eqSymm" (formula "11") (term "1,1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
                                             (rule "eqSymm" (formula "11") (term "0,1,0,1,0,1,0"))
                                             (rule "eqSymm" (formula "11") (term "1,1,0"))
                                             (rule "eqSymm" (formula "10"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "polySimp_elimSub" (formula "13") (term "1,0,2,0"))
                                             (rule "mul_literals" (formula "13") (term "1,1,0,2,0"))
                                             (rule "polySimp_elimSub" (formula "11") (term "1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "11") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimSub" (formula "27") (term "0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                             (rule "polySimp_homoEq" (formula "27") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "1,0,2,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                             (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                             (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,1,0"))
                                             (rule "subsetSingletonLeft" (formula "8"))
                                             (rule "subsetSingletonLeft" (formula "7"))
                                             (rule "castedGetAny" (formula "12") (term "2,0"))
                                             (rule "castedGetAny" (formula "11") (term "1,1,1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "11") (term "0,1,0,0,1,0"))
                                             (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "11") (term "0,0,1,0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "11") (term "1,0,1,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "castedGetAny" (formula "11") (term "1,1,1,1,0"))
                                             (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                             (rule "castedGetAny" (formula "27") (term "1,1"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "11") (term "2,0,1,1,0"))
                                             (rule "castedGetAny" (formula "27") (term "2,0"))
                                             (rule "castedGetAny" (formula "13") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                             (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                             (rule "polySimp_sepNegMonomial" (formula "27") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=IntIterator_list_0"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "28") (term "1,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "28") (term "1,0,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,1") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                             (rule "ifthenelse_negated" (formula "1") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "referencedObjectIsCreatedRightEQ" (formula "23") (ifseqformula "1") (ifseqformula "24"))
                                             (rule "close" (formula "23") (ifseqformula "4"))
                                          )
                                          (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                             (rule "selectOfAnonEQ" (formula "17") (term "1,0,0,1,0") (ifseqformula "9") (userinteraction))
                                             (rule "ifthenelse_split" (formula "17") (term "1,0,0,1,0") (userinteraction))
                                             (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                (builtin "One Step Simplification" (formula "7"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "translateJavaSubInt" (formula "18") (term "1,0,1"))
                                                (rule "translateJavaAddInt" (formula "18") (term "1,0,2,1"))
                                                (rule "translateJavaAddInt" (formula "7") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "7") (term "1,0,1,1,1,0,1,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "7") (term "1,0,2,1,1,0"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "eqSymm" (formula "27") (term "0,1"))
                                                (rule "eqSymm" (formula "15"))
                                                (rule "eqSymm" (formula "14"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "eqSymm" (formula "12"))
                                                (rule "eqSymm" (formula "11") (term "1,1,0"))
                                                (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
                                                (rule "eqSymm" (formula "11") (term "0,1,0,1,0,1,0"))
                                                (rule "eqSymm" (formula "11") (term "1,1,0,1,0,1,0"))
                                                (rule "eqSymm" (formula "10"))
                                                (rule "eqSymm" (formula "27"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,2,0"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0,2,0"))
                                                (rule "polySimp_elimSub" (formula "11") (term "1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "11") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "27") (term "0,0,0"))
                                                (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                (rule "polySimp_homoEq" (formula "27") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0"))
                                                (rule "polySimp_addComm0" (formula "11") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "26") (term "0,0,1"))
                                                (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                                (rule "castedGetAny" (formula "11") (term "0,0,0,0,0,1,0"))
                                                (rule "subsetSingletonLeft" (formula "7"))
                                                (rule "subsetSingletonLeft" (formula "8"))
                                                (rule "castedGetAny" (formula "12") (term "2,0"))
                                                (rule "castedGetAny" (formula "11") (term "1,1,1,1,0"))
                                                (rule "castedGetAny" (formula "11") (term "1,1,1,0,0,1,0"))
                                                (rule "castedGetAny" (formula "11") (term "0,1,0,0,1,0"))
                                                (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
                                                (rule "castedGetAny" (formula "11") (term "0,0,1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "11") (term "1,0,1,0,1,0,1,0"))
                                                (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                (rule "castedGetAny" (formula "11") (term "2,0,1,1,0"))
                                                (rule "castedGetAny" (formula "27") (term "2,0"))
                                                (rule "castedGetAny" (formula "13") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "26") (term "0,0,1"))
                                                (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                (rule "castedGetAny" (formula "27") (term "1,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "1"))
                                                (rule "dismissNonSelectedField" (formula "26") (term "0,0,1"))
                                                (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                                (rule "close" (formula "22") (ifseqformula "4"))
                                             )
                                             (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,0") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,1,0") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,0") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,1,0") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "18") (term "0,0,1,0") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,1,0") (userinteraction))
                                                (rule "selectOfAnonEQ" (formula "18") (term "0") (ifseqformula "9") (userinteraction))
                                                (rule "ifthenelse_split" (formula "18") (term "0") (userinteraction))
                                                (branch " ((IntNode)(self.list.nodeseq[i_5_0]), IntNode::$next) ∊ ∅ ∧ ¬IntNode::$next = java.lang.Object::<created> ∨ ((IntNode)(self.list.nodeseq[i_5_0]), IntNode::$next) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                   (rule "orRight" (formula "17"))
                                                   (rule "andRight" (formula "17"))
                                                   (branch
                                                      (rule "orRight" (formula "19"))
                                                      (rule "andRight" (formula "19"))
                                                      (branch
                                                         (opengoal " ")
                                                      )
                                                      (branch
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "15")))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "closeTrue" (formula "19"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "orRight" (formula "19"))
                                                      (rule "andRight" (formula "19"))
                                                      (branch
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "15")))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "closeTrue" (formula "17"))
                                                      )
                                                      (branch
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "15")))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "closeTrue" (formula "19"))
                                                      )
                                                   )
                                                )
                                                (branch " ((IntNode)(self.list.nodeseq[i_5_0]), IntNode::$next) ∊ ∅ ∧ ¬IntNode::$next = java.lang.Object::<created> ∨ ((IntNode)(self.list.nodeseq[i_5_0]), IntNode::$next) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                   (rule "dismissNonSelectedField" (formula "19") (term "0") (userinteraction))
                                                   (rule "dismissNonSelectedField" (formula "19") (term "0") (userinteraction))
                                                   (rule "dismissNonSelectedField" (formula "19") (term "0") (userinteraction))
                                                   (rule "selectOfAnonEQ" (formula "19") (term "0,0,2,1") (ifseqformula "9") (userinteraction))
                                                   (rule "selectOfAnonEQ" (formula "19") (term "0,1,0,1") (ifseqformula "9") (userinteraction))
                                                   (rule "ifthenelse_split" (formula "19") (term "0,1,0,1") (userinteraction))
                                                   (branch " (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ ∅ ∧ ¬IntLinkedList::$size = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "17")))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")))
                                                      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
                                                      (rule "closeTrue" (formula "17"))
                                                   )
                                                   (branch " (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ ∅ ∧ ¬IntLinkedList::$size = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$size) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                      (rule "ifthenelse_split" (formula "20") (term "0,0,2,1") (userinteraction))
                                                      (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                         (rule "close" (formula "17") (ifseqformula "1"))
                                                      )
                                                      (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,0,2,1") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,0,2,1") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,0,2,1") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,1,0,1") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,1,0,1") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,1,0,1") (userinteraction))
                                                         (rule "selectOfAnonEQ" (formula "20") (term "1,0,0,2,1") (ifseqformula "9") (userinteraction))
                                                         (rule "selectOfAnonEQ" (formula "20") (term "1,0,1,0,1") (ifseqformula "9") (userinteraction))
                                                         (rule "ifthenelse_split" (formula "20") (term "1,0,1,0,1") (userinteraction))
                                                         (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                            (rule "close" (formula "18") (ifseqformula "1"))
                                                         )
                                                         (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                            (rule "ifthenelse_split" (formula "20") (term "1,0,0,2,1") (userinteraction))
                                                            (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                               (rule "close" (formula "18") (ifseqformula "1"))
                                                            )
                                                            (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                               (rule "dismissNonSelectedField" (formula "20") (term "1,0,0,2,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "20") (term "1,0,0,2,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "20") (term "1,0,0,2,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "20") (term "1,0,1,0,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "20") (term "1,0,1,0,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "20") (term "1,0,1,0,1") (userinteraction))
                                                               (rule "orRight" (formula "16"))
                                                               (rule "andRight" (formula "16"))
                                                               (branch
                                                                  (rule "orRight" (formula "18"))
                                                                  (rule "andRight" (formula "18"))
                                                                  (branch
                                                                     (rule "orRight" (formula "20"))
                                                                     (rule "andRight" (formula "20"))
                                                                     (branch
                                                                        (rule "orRight" (formula "22"))
                                                                        (rule "andRight" (formula "22"))
                                                                        (branch
                                                                           (opengoal " ")
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "closeTrue" (formula "22"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "orRight" (formula "22"))
                                                                        (rule "andRight" (formula "22"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                           (builtin "One Step Simplification" (formula "20"))
                                                                           (rule "closeTrue" (formula "20"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "closeTrue" (formula "22"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "orRight" (formula "20"))
                                                                     (rule "andRight" (formula "20"))
                                                                     (branch
                                                                        (rule "orRight" (formula "22"))
                                                                        (rule "andRight" (formula "22"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                           (builtin "One Step Simplification" (formula "20"))
                                                                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "14")))
                                                                           (builtin "One Step Simplification" (formula "18"))
                                                                           (rule "closeTrue" (formula "18"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "closeTrue" (formula "22"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "orRight" (formula "22"))
                                                                        (rule "andRight" (formula "22"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                           (builtin "One Step Simplification" (formula "20"))
                                                                           (rule "closeTrue" (formula "20"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "closeTrue" (formula "22"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "orRight" (formula "18"))
                                                                  (rule "andRight" (formula "18"))
                                                                  (branch
                                                                     (rule "orRight" (formula "20"))
                                                                     (rule "andRight" (formula "20"))
                                                                     (branch
                                                                        (rule "orRight" (formula "22"))
                                                                        (rule "andRight" (formula "22"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                           (builtin "One Step Simplification" (formula "20"))
                                                                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "14")))
                                                                           (builtin "One Step Simplification" (formula "18"))
                                                                           (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "21")))
                                                                           (builtin "One Step Simplification" (formula "16"))
                                                                           (rule "closeTrue" (formula "16"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "closeTrue" (formula "22"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "orRight" (formula "22"))
                                                                        (rule "andRight" (formula "22"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                           (builtin "One Step Simplification" (formula "20"))
                                                                           (rule "closeTrue" (formula "20"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "closeTrue" (formula "22"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "orRight" (formula "20"))
                                                                     (rule "andRight" (formula "20"))
                                                                     (branch
                                                                        (rule "orRight" (formula "22"))
                                                                        (rule "andRight" (formula "22"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                           (builtin "One Step Simplification" (formula "20"))
                                                                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "14")))
                                                                           (builtin "One Step Simplification" (formula "18"))
                                                                           (rule "closeTrue" (formula "18"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "closeTrue" (formula "22"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "orRight" (formula "22"))
                                                                        (rule "andRight" (formula "22"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                           (builtin "One Step Simplification" (formula "20"))
                                                                           (rule "closeTrue" (formula "20"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "closeTrue" (formula "22"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                    (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "eqSymm" (formula "23"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "eqSymm" (formula "12"))
                                    (rule "eqSymm" (formula "11"))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "eqSymm" (formula "9") (term "1,1,0"))
                                    (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                    (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                    (rule "eqSymm" (formula "8"))
                                    (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                    (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                    (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                    (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                    (rule "subsetSingletonLeft" (formula "5"))
                                    (rule "subsetSingletonLeft" (formula "6"))
                                    (rule "castedGetAny" (formula "23") (term "2,0"))
                                    (rule "castedGetAny" (formula "10") (term "2,0"))
                                    (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                    (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "9") (term "1,1,1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                    (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                    (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                    (rule "castedGetAny" (formula "11") (term "2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                    (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                    (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "pullOutSelect" (formula "21") (term "0,0,0") (inst "selectSK=IntLinkedList_size_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "pullOutSelect" (formula "22") (term "1,1") (inst "selectSK=IntIterator_list_0"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "23") (term "1,0,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "23") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "23") (term "1,0,2,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "22") (term "1") (inst "selectSK=IntLinkedList_first_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "pullOutSelect" (formula "23") (term "0,2,0") (inst "selectSK=IntLinkedList_nodeseq_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "nnf_imp2or" (formula "10") (term "0"))
                                    (rule "nnf_imp2or" (formula "8") (term "0"))
                                    (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "10") (term "0,1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "10") (term "1,0,1,0,1,0"))
                                    (rule "nnf_notAnd" (formula "10") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,0,1,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,1,0"))
                                    (rule "cnf_rightDist" (formula "8") (term "0"))
                                    (rule "distr_forallAnd" (formula "8"))
                                    (rule "andLeft" (formula "8"))
                                    (rule "commute_or_2" (formula "8") (term "0"))
                                    (rule "shift_paren_or" (formula "9") (term "0"))
                                    (rule "commute_or" (formula "8") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "21") (term "0"))
                                    (branch "result_0.<created> = TRUE TRUE"
                                       (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "ifthenelse_to_or_left" (formula "11") (term "1,1,0"))
                                       (rule "eqSymm" (formula "11") (term "1,0,1,1,0"))
                                       (rule "eqSymm" (formula "11") (term "1,1,1,1,0"))
                                       (rule "commute_or" (formula "11") (term "0,1,1,0"))
                                       (rule "commute_or" (formula "11") (term "1,1,1,0"))
                                       (rule "ifthenelse_split" (formula "12") (term "0"))
                                       (branch "self.list.size = 0 TRUE"
                                          (rule "eqSymm" (formula "13"))
                                          (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "eqSymm" (formula "14"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "10") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
                                          (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "11") (term "1,1,0,0,1,0,1,0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
                                          (rule "applyEq" (formula "11") (term "1,1,1,1,1,1,0") (ifseqformula "12"))
                                          (rule "add_zero_right" (formula "11") (term "1,1,1,1,1,0"))
                                          (rule "applyEq" (formula "11") (term "1,1,0,1,0,1,1,0") (ifseqformula "12"))
                                          (rule "add_zero_right" (formula "11") (term "1,0,1,0,1,1,0"))
                                          (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0"))
                                          (rule "add_zero_right" (formula "8") (term "1,1,0"))
                                          (rule "qeq_literals" (formula "8") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_or_tautInEq0" (formula "10") (term "0,0"))
                                          (rule "add_zero_right" (formula "10") (term "1,1,0,0"))
                                          (rule "qeq_literals" (formula "10") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0"))
                                          (rule "add_zero_right" (formula "8") (term "1,1,0"))
                                          (rule "qeq_literals" (formula "8") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "commute_and" (formula "8") (term "0,0,1,0"))
                                          (rule "inEqSimp_and_contradInEq0" (formula "8") (term "0,0,1,0"))
                                          (rule "qeq_literals" (formula "8") (term "1,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "eqSymm" (formula "8"))
                                          (rule "lenNonNegative" (formula "13") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13"))
                                          (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                          (rule "qeq_literals" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "lenNonNegative" (formula "12") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "12"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "referencedObjectIsCreatedRight" (formula "20") (ifseqformula "21"))
                                             (rule "close" (formula "20") (ifseqformula "4"))
                                          )
                                          (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "24") (term "0,2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "23") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "22"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "closeTrue" (formula "22"))
                                          )
                                       )
                                       (branch "self.list.size = 0 FALSE"
                                          (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "shift_paren_or" (formula "11") (term "0,1,0,1,0"))
                                          (rule "commute_or_2" (formula "11") (term "0,0,1,0,1,0"))
                                          (rule "commute_or" (formula "11") (term "0,0,0,1,0,1,0"))
                                          (rule "lenNonNegative" (formula "15") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15"))
                                          (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "23"))
                                          (rule "add_zero_right" (formula "15") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "15"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0"))
                                          (rule "leq_literals" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "false_right" (formula "23"))
                                          (rule "lenNonNegative" (formula "14") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "14"))
                                          (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                          (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "referencedObjectIsCreatedRight" (formula "23") (ifseqformula "24"))
                                             (rule "close" (formula "23") (ifseqformula "4"))
                                          )
                                          (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "27") (term "0,2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "orRight" (formula "24"))
                                             (rule "notRight" (formula "24"))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "applyEq" (formula "9") (term "1,1,0,0,1,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "8") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "add_zero_right" (formula "8") (term "1,1,0,0,1,0"))
                                             (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "1"))
                                             (rule "add_zero_right" (formula "11") (term "1,0"))
                                             (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "13"))
                                             (rule "closeFalse" (formula "13"))
                                          )
                                       )
                                    )
                                    (branch "result_0.<created> = TRUE FALSE"
                                       (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "ifthenelse_to_or_left" (formula "11") (term "1,1,0"))
                                       (rule "eqSymm" (formula "11") (term "1,1,1,1,0"))
                                       (rule "eqSymm" (formula "11") (term "1,0,1,1,0"))
                                       (rule "commute_or" (formula "11") (term "1,1,1,0"))
                                       (rule "commute_or" (formula "11") (term "0,1,1,0"))
                                       (rule "ifthenelse_split" (formula "12") (term "0"))
                                       (branch "self.list.size = 0 TRUE"
                                          (rule "eqSymm" (formula "13"))
                                          (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "eqSymm" (formula "14"))
                                          (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "11") (term "1,1,0,0,1,0,1,0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "10") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
                                          (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0"))
                                          (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
                                          (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
                                          (rule "applyEq" (formula "11") (term "1,1,0,1,0,1,1,0") (ifseqformula "12"))
                                          (rule "add_literals" (formula "11") (term "1,0,1,0,1,1,0"))
                                          (rule "applyEq" (formula "11") (term "1,1,1,1,1,1,0") (ifseqformula "12"))
                                          (rule "add_zero_right" (formula "11") (term "1,1,1,1,1,0"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "9") (term "0"))
                                          (rule "add_zero_right" (formula "9") (term "1,1,0"))
                                          (rule "qeq_literals" (formula "9") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "inEqSimp_or_tautInEq0" (formula "10") (term "0,0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                          (rule "qeq_literals" (formula "10") (term "1,0,0,1,0,1,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0"))
                                          (rule "add_zero_right" (formula "8") (term "1,1,0"))
                                          (rule "qeq_literals" (formula "8") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_or_tautInEq0" (formula "9") (term "0,0"))
                                          (rule "add_zero_right" (formula "9") (term "1,1,0,0"))
                                          (rule "qeq_literals" (formula "9") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "commute_and" (formula "8") (term "0,0,1,0"))
                                          (rule "inEqSimp_and_contradInEq0" (formula "8") (term "0,0,1,0"))
                                          (rule "qeq_literals" (formula "8") (term "1,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "eqSymm" (formula "8"))
                                          (rule "lenNonNegative" (formula "13") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "13"))
                                          (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                          (rule "qeq_literals" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "lenNonNegative" (formula "12") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "12"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "20"))
                                             (rule "close" (formula "21") (ifseqformula "4"))
                                          )
                                          (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "25") (term "0,2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "orRight" (formula "24"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "closeTrue" (formula "23"))
                                          )
                                       )
                                       (branch "self.list.size = 0 FALSE"
                                          (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "shift_paren_or" (formula "11") (term "0,1,0,1,0"))
                                          (rule "commute_or_2" (formula "11") (term "0,0,1,0,1,0"))
                                          (rule "commute_or" (formula "11") (term "0,0,0,1,0,1,0"))
                                          (rule "lenNonNegative" (formula "15") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15"))
                                          (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "23"))
                                          (rule "add_literals" (formula "15") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "15"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0"))
                                          (rule "leq_literals" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "false_right" (formula "23"))
                                          (rule "lenNonNegative" (formula "14") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "14"))
                                          (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                          (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "23"))
                                             (rule "close" (formula "24") (ifseqformula "4"))
                                          )
                                          (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "28") (term "0,2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "22"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "27") (term "0,0,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "applyEq" (formula "25") (term "2,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "orRight" (formula "25"))
                                             (rule "notRight" (formula "25"))
                                             (rule "eqSymm" (formula "26"))
                                             (rule "applyEq" (formula "8") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "add_zero_right" (formula "8") (term "1,1,0,0,1,0"))
                                             (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "9") (term "1,1,0,0,1,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "13"))
                                             (rule "closeFalse" (formula "13"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "translateJavaSubInt" (formula "15") (term "1,0,2,1"))
                                 (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                 (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "eqSymm" (formula "11"))
                                 (rule "eqSymm" (formula "10"))
                                 (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                 (rule "eqSymm" (formula "9") (term "1,1,0"))
                                 (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                 (rule "eqSymm" (formula "8"))
                                 (rule "polySimp_elimSub" (formula "23") (term "1,0,2,0"))
                                 (rule "mul_literals" (formula "23") (term "1,1,0,2,0"))
                                 (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                 (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                 (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "1,0,2,0"))
                                 (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                 (rule "subsetSingletonLeft" (formula "6"))
                                 (rule "subsetSingletonLeft" (formula "5"))
                                 (rule "castedGetAny" (formula "10") (term "2,0"))
                                 (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                 (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                 (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                 (rule "castedGetAny" (formula "23") (term "2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "11") (term "2,0"))
                                 (rule "castedGetAny" (formula "9") (term "1,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                 (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                 (rule "elementOfUnionEQ" (formula "5") (ifseqformula "8"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "pullOutSelect" (formula "21") (term "0,0,0") (inst "selectSK=IntLinkedList_size_0"))
                                 (rule "applyEq" (formula "22") (term "1,1,2,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "pullOutSelect" (formula "22") (term "1") (inst "selectSK=IntLinkedList_last_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "23") (term "1,0,2,0") (inst "selectSK=IntIterator_list_0"))
                                 (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "24") (term "1,0,2,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "23") (term "0,2,0") (inst "selectSK=IntLinkedList_nodeseq_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "nnf_imp2or" (formula "10") (term "0"))
                                 (rule "nnf_imp2or" (formula "8") (term "0"))
                                 (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "10") (term "0,1,0,1,0"))
                                 (rule "nnf_notAnd" (formula "10") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,0,1,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "10") (term "1,0,1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "8") (term "0"))
                                 (rule "distr_forallAnd" (formula "8"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "commute_or_2" (formula "8") (term "0"))
                                 (rule "shift_paren_or" (formula "9") (term "0"))
                                 (rule "commute_or" (formula "8") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "21") (term "0"))
                                 (branch "result_0.<created> = TRUE TRUE"
                                    (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "ifthenelse_split" (formula "12") (term "0"))
                                    (branch "self.list.size = 0 TRUE"
                                       (rule "eqSymm" (formula "13"))
                                       (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "eqSymm" (formula "14"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "11") (term "1,1,0,0,1,0,1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "10") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
                                       (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0"))
                                       (rule "applyEq" (formula "11") (term "1,1,0,0,1,1,0") (ifseqformula "12"))
                                       (rule "add_literals" (formula "11") (term "1,0,0,1,1,0"))
                                       (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
                                       (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
                                       (rule "inEqSimp_or_tautInEq0" (formula "11") (term "0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                       (rule "qeq_literals" (formula "11") (term "1,0,0,1,0,1,0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0"))
                                       (rule "add_zero_right" (formula "8") (term "1,1,0"))
                                       (rule "qeq_literals" (formula "8") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0"))
                                       (rule "add_zero_right" (formula "8") (term "1,1,0"))
                                       (rule "qeq_literals" (formula "8") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "inEqSimp_or_tautInEq0" (formula "9") (term "0,0"))
                                       (rule "add_zero_right" (formula "9") (term "1,1,0,0"))
                                       (rule "qeq_literals" (formula "9") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "commute_and" (formula "8") (term "0,0,1,0"))
                                       (rule "inEqSimp_and_contradInEq0" (formula "8") (term "0,0,1,0"))
                                       (rule "qeq_literals" (formula "8") (term "1,0,0,1,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "eqSymm" (formula "8"))
                                       (rule "lenNonNegative" (formula "13") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "lenNonNegative" (formula "12") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "12"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "referencedObjectIsCreatedRight" (formula "20") (ifseqformula "21"))
                                          (rule "close" (formula "20") (ifseqformula "4"))
                                       )
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "24") (term "0,2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "23") (term "1,1,2,0") (ifseqformula "2"))
                                          (rule "add_zero_right" (formula "23") (term "1,2,0"))
                                          (rule "applyEqReverse" (formula "23") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "18"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "closeTrue" (formula "22"))
                                       )
                                    )
                                    (branch "self.list.size = 0 FALSE"
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "ifthenelse_to_or_left" (formula "11") (term "1,1,0"))
                                       (rule "eqSymm" (formula "11") (term "1,0,1,1,0"))
                                       (rule "eqSymm" (formula "11") (term "1,1,1,1,0"))
                                       (rule "commute_or" (formula "11") (term "0,1,1,0"))
                                       (rule "commute_or" (formula "11") (term "1,1,1,0"))
                                       (rule "shift_paren_or" (formula "11") (term "0,1,0,1,0"))
                                       (rule "commute_or_2" (formula "11") (term "0,0,1,0,1,0"))
                                       (rule "commute_or" (formula "11") (term "0,0,0,1,0,1,0"))
                                       (rule "lenNonNegative" (formula "15") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                       (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "23"))
                                       (rule "add_zero_right" (formula "15") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "15"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0"))
                                       (rule "leq_literals" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "false_right" (formula "23"))
                                       (rule "lenNonNegative" (formula "14") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "23"))
                                          (rule "close" (formula "24") (ifseqformula "4"))
                                       )
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "26") (term "0,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "26") (term "1,1,2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "0,2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "orRight" (formula "24"))
                                          (rule "notRight" (formula "24"))
                                          (rule "eqSymm" (formula "25"))
                                          (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "13"))
                                          (rule "closeFalse" (formula "13"))
                                       )
                                    )
                                 )
                                 (branch "result_0.<created> = TRUE FALSE"
                                    (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "22"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "ifthenelse_split" (formula "12") (term "0"))
                                    (branch "self.list.size = 0 TRUE"
                                       (rule "eqSymm" (formula "13"))
                                       (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "eqSymm" (formula "14"))
                                       (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "10") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
                                       (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0"))
                                       (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "11") (term "1,1,0,0,1,0,1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
                                       (rule "applyEq" (formula "11") (term "1,1,0,0,1,1,0") (ifseqformula "12"))
                                       (rule "add_zero_right" (formula "11") (term "1,0,0,1,1,0"))
                                       (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
                                       (rule "inEqSimp_or_tautInEq0" (formula "11") (term "0,0"))
                                       (rule "add_zero_right" (formula "11") (term "1,1,0,0"))
                                       (rule "qeq_literals" (formula "11") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "9") (term "0"))
                                       (rule "add_zero_right" (formula "9") (term "1,1,0"))
                                       (rule "qeq_literals" (formula "9") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0"))
                                       (rule "add_zero_right" (formula "8") (term "1,1,0"))
                                       (rule "qeq_literals" (formula "8") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "commute_and" (formula "8") (term "0,0,1,0"))
                                       (rule "inEqSimp_and_contradInEq0" (formula "8") (term "0,0,1,0"))
                                       (rule "qeq_literals" (formula "8") (term "1,0,0,1,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "eqSymm" (formula "8"))
                                       (rule "lenNonNegative" (formula "13") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "lenNonNegative" (formula "12") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "12"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "20"))
                                          (rule "close" (formula "21") (ifseqformula "4"))
                                       )
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "25") (term "0,2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "orRight" (formula "24"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "18"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "closeTrue" (formula "23"))
                                       )
                                    )
                                    (branch "self.list.size = 0 FALSE"
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "22"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "ifthenelse_to_or_left" (formula "11") (term "1,1,0"))
                                       (rule "eqSymm" (formula "11") (term "1,0,1,1,0"))
                                       (rule "eqSymm" (formula "11") (term "1,1,1,1,0"))
                                       (rule "commute_or" (formula "11") (term "0,1,1,0"))
                                       (rule "commute_or" (formula "11") (term "1,1,1,0"))
                                       (rule "shift_paren_or" (formula "11") (term "0,1,0,1,0"))
                                       (rule "commute_or_2" (formula "11") (term "0,0,1,0,1,0"))
                                       (rule "commute_or" (formula "11") (term "0,0,0,1,0,1,0"))
                                       (rule "lenNonNegative" (formula "15") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                       (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "23"))
                                       (rule "add_zero_right" (formula "15") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "15"))
                                       (rule "mul_literals" (formula "23") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0"))
                                       (rule "leq_literals" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "false_right" (formula "23"))
                                       (rule "lenNonNegative" (formula "14") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                       (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "23"))
                                          (rule "close" (formula "24") (ifseqformula "4"))
                                       )
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "28") (term "0,2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "26") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "26") (term "1,1,2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "applyEq" (formula "25") (term "2,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "orRight" (formula "25"))
                                          (rule "notRight" (formula "25"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "applyEq" (formula "9") (term "1,1,0,0,1,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "13"))
                                          (rule "closeFalse" (formula "13"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch
                              (rule "andRight" (formula "15"))
                              (branch
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "eqSymm" (formula "11"))
                                 (rule "eqSymm" (formula "10"))
                                 (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                 (rule "eqSymm" (formula "9") (term "1,1,0"))
                                 (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                 (rule "eqSymm" (formula "8"))
                                 (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                 (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                 (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                 (rule "subsetSingletonLeft" (formula "5"))
                                 (rule "subsetSingletonLeft" (formula "6"))
                                 (rule "castedGetAny" (formula "10") (term "2,0"))
                                 (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                 (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                 (rule "castedGetAny" (formula "11") (term "2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "9") (term "1,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                 (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                 (rule "elementOfUnionEQ" (formula "5") (ifseqformula "8"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "pullOutSelect" (formula "21") (term "1,1") (inst "selectSK=IntIterator_list_0"))
                                 (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "22") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "21") (term "0,0") (inst "selectSK=IntList_seq_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=IntLinkedList_size_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "nnf_imp2or" (formula "9") (term "0"))
                                 (rule "nnf_imp2or" (formula "7") (term "0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "9") (term "0,1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "9") (term "1,0,1,0,1,0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "7") (term "0"))
                                 (rule "distr_forallAnd" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "commute_or_2" (formula "7") (term "0"))
                                 (rule "shift_paren_or" (formula "8") (term "0"))
                                 (rule "commute_or" (formula "7") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "20") (term "0"))
                                 (branch "result_0.<created> = TRUE TRUE"
                                    (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "ifthenelse_to_or_left" (formula "10") (term "1,1,0"))
                                    (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
                                    (rule "eqSymm" (formula "10") (term "1,1,1,1,0"))
                                    (rule "commute_or" (formula "10") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "10") (term "1,1,1,0"))
                                    (rule "shift_paren_or" (formula "10") (term "0,1,0,1,0"))
                                    (rule "ifthenelse_split" (formula "11") (term "0"))
                                    (branch "self.list.size = 0 TRUE"
                                       (rule "eqSymm" (formula "12"))
                                       (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "11"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "9") (term "1,1,1,0,0,1,0") (ifseqformula "11"))
                                       (rule "add_zero_right" (formula "9") (term "1,1,0,0,1,0"))
                                       (rule "applyEq" (formula "10") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "15") (term "1") (ifseqformula "11"))
                                       (rule "applyEq" (formula "14") (term "1") (ifseqformula "11"))
                                       (rule "applyEq" (formula "10") (term "1,1,1,1,1,1,0") (ifseqformula "11"))
                                       (rule "add_zero_right" (formula "10") (term "1,1,1,1,1,0"))
                                       (rule "applyEq" (formula "10") (term "1,1,0,1,0,1,1,0") (ifseqformula "11"))
                                       (rule "add_zero_right" (formula "10") (term "1,0,1,0,1,1,0"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0"))
                                       (rule "add_zero_right" (formula "7") (term "1,1,0"))
                                       (rule "qeq_literals" (formula "7") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_or_tautInEq0" (formula "9") (term "0,0,0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "9") (term "1,1,0,0,0,1,0,1,0"))
                                       (rule "qeq_literals" (formula "9") (term "1,0,0,0,1,0,1,0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0"))
                                       (rule "qeq_literals" (formula "7") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_or_tautInEq0" (formula "8") (term "0,0"))
                                       (rule "add_zero_right" (formula "8") (term "1,1,0,0"))
                                       (rule "qeq_literals" (formula "8") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "commute_and" (formula "7") (term "0,0,1,0"))
                                       (rule "inEqSimp_and_contradInEq0" (formula "7") (term "0,0,1,0"))
                                       (rule "qeq_literals" (formula "7") (term "1,0,0,1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "eqSymm" (formula "7"))
                                       (rule "lenNonNegative" (formula "11") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                       (rule "qeq_literals" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "lenNonNegative" (formula "12") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "12"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "referencedObjectIsCreatedRight" (formula "19") (ifseqformula "20"))
                                          (rule "close" (formula "19") (ifseqformula "3"))
                                       )
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "18"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "1"))
                                          (rule "close" (formula "22") (ifseqformula "10"))
                                       )
                                    )
                                    (branch "self.list.size = 0 FALSE"
                                       (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "commute_or_2" (formula "10") (term "0,0,1,0,1,0"))
                                       (rule "commute_or" (formula "10") (term "0,0,0,1,0,1,0"))
                                       (rule "lenNonNegative" (formula "13") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "22"))
                                       (rule "add_zero_right" (formula "13") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "13"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "false_right" (formula "22"))
                                       (rule "lenNonNegative" (formula "15") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "23"))
                                          (rule "close" (formula "22") (ifseqformula "3"))
                                       )
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "1"))
                                          (rule "close" (formula "25") (ifseqformula "13"))
                                       )
                                    )
                                 )
                                 (branch "result_0.<created> = TRUE FALSE"
                                    (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "ifthenelse_to_or_left" (formula "10") (term "1,1,0"))
                                    (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
                                    (rule "eqSymm" (formula "10") (term "1,1,1,1,0"))
                                    (rule "commute_or" (formula "10") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "10") (term "1,1,1,0"))
                                    (rule "shift_paren_or" (formula "10") (term "0,1,0,1,0"))
                                    (rule "ifthenelse_split" (formula "11") (term "0"))
                                    (branch "self.list.size = 0 TRUE"
                                       (rule "eqSymm" (formula "12"))
                                       (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "11"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "applyEq" (formula "9") (term "1,1,1,0,0,1,0") (ifseqformula "11"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                       (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "10") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "15") (term "1") (ifseqformula "11"))
                                       (rule "applyEq" (formula "10") (term "1,1,1,1,1,1,0") (ifseqformula "11"))
                                       (rule "add_literals" (formula "10") (term "1,1,1,1,1,0"))
                                       (rule "applyEq" (formula "10") (term "1,1,0,1,0,1,1,0") (ifseqformula "11"))
                                       (rule "add_zero_right" (formula "10") (term "1,0,1,0,1,1,0"))
                                       (rule "applyEq" (formula "14") (term "1") (ifseqformula "11"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0"))
                                       (rule "add_zero_right" (formula "7") (term "1,1,0"))
                                       (rule "qeq_literals" (formula "7") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_or_tautInEq0" (formula "9") (term "0,0"))
                                       (rule "add_zero_right" (formula "9") (term "1,1,0,0"))
                                       (rule "qeq_literals" (formula "9") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0"))
                                       (rule "add_zero_right" (formula "7") (term "1,1,0"))
                                       (rule "qeq_literals" (formula "7") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "commute_and" (formula "7") (term "0,0,1,0"))
                                       (rule "inEqSimp_and_contradInEq0" (formula "7") (term "0,0,1,0"))
                                       (rule "qeq_literals" (formula "7") (term "1,0,0,1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "eqSymm" (formula "7"))
                                       (rule "lenNonNegative" (formula "11") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                       (rule "qeq_literals" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "lenNonNegative" (formula "12") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "12"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "referencedObjectIsCreatedRight" (formula "20") (ifseqformula "19"))
                                          (rule "close" (formula "20") (ifseqformula "3"))
                                       )
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "18"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
                                          (rule "close" (formula "23") (ifseqformula "10"))
                                       )
                                    )
                                    (branch "self.list.size = 0 FALSE"
                                       (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "commute_or_2" (formula "10") (term "0,0,1,0,1,0"))
                                       (rule "commute_or" (formula "10") (term "0,0,0,1,0,1,0"))
                                       (rule "lenNonNegative" (formula "13") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "22"))
                                       (rule "add_zero_right" (formula "13") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "13"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "false_right" (formula "22"))
                                       (rule "lenNonNegative" (formula "15") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "23"))
                                          (rule "close" (formula "22") (ifseqformula "3"))
                                       )
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "1"))
                                          (rule "close" (formula "26") (ifseqformula "13"))
                                       )
                                    )
                                 )
                              )
                              (branch
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "translateJavaAddInt" (formula "5") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "5") (term "1,0,2,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "5") (term "1,0,1,1,1,0,1,0,0,0"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "eqSymm" (formula "11"))
                                 (rule "eqSymm" (formula "10"))
                                 (rule "eqSymm" (formula "9") (term "1,1,0,1,0,1,0"))
                                 (rule "eqSymm" (formula "9") (term "1,1,0"))
                                 (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "9") (term "0,1,0,1,0,1,0"))
                                 (rule "eqSymm" (formula "8"))
                                 (rule "polySimp_elimSub" (formula "11") (term "1,0,2,0"))
                                 (rule "mul_literals" (formula "11") (term "1,1,0,2,0"))
                                 (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,0,2,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "11") (term "1,0,2,0"))
                                 (rule "polySimp_addComm0" (formula "9") (term "1,0,0,1,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "0,0,0,0,0,1,0"))
                                 (rule "subsetSingletonLeft" (formula "5"))
                                 (rule "subsetSingletonLeft" (formula "6"))
                                 (rule "castedGetAny" (formula "10") (term "2,0"))
                                 (rule "castedGetAny" (formula "9") (term "1,1,1,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "1,1,1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "0,1,0,0,1,0"))
                                 (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "0,0,1,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "1,0,1,0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "8") (term "0,1,0,1,0"))
                                 (rule "castedGetAny" (formula "9") (term "2,0,1,1,0"))
                                 (rule "castedGetAny" (formula "11") (term "2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                 (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                 (rule "elementOfUnionEQ" (formula "5") (ifseqformula "8"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "elementOfUnionEQ" (formula "5") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "pullOutSelect" (formula "21") (term "1,0,0") (inst "selectSK=IntIterator_list_0"))
                                 (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "22") (term "1,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "21") (term "1") (inst "selectSK=IntLinkedList_size_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "pullOutSelect" (formula "22") (term "0,0") (inst "selectSK=IntLinkedList_nodeseq_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "nnf_imp2or" (formula "9") (term "0"))
                                 (rule "nnf_imp2or" (formula "7") (term "0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "9") (term "0,1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "9") (term "1,0,1,0,1,0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,1,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "7") (term "0"))
                                 (rule "distr_forallAnd" (formula "7"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "commute_or_2" (formula "7") (term "0"))
                                 (rule "shift_paren_or" (formula "8") (term "0"))
                                 (rule "commute_or" (formula "7") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "20") (term "0"))
                                 (branch "result_0.<created> = TRUE TRUE"
                                    (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "ifthenelse_to_or_left" (formula "10") (term "1,1,0"))
                                    (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
                                    (rule "eqSymm" (formula "10") (term "1,1,1,1,0"))
                                    (rule "commute_or" (formula "10") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "10") (term "1,1,1,0"))
                                    (rule "shift_paren_or" (formula "10") (term "0,1,0,1,0"))
                                    (rule "ifthenelse_split" (formula "11") (term "0"))
                                    (branch "self.list.size = 0 TRUE"
                                       (rule "eqSymm" (formula "12"))
                                       (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "11"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "9") (term "1,1,1,0,0,1,0") (ifseqformula "11"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                       (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "10") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "15") (term "1") (ifseqformula "11"))
                                       (rule "applyEq" (formula "10") (term "1,1,0,1,0,1,1,0") (ifseqformula "11"))
                                       (rule "add_zero_right" (formula "10") (term "1,0,1,0,1,1,0"))
                                       (rule "applyEq" (formula "10") (term "1,1,1,1,1,1,0") (ifseqformula "11"))
                                       (rule "add_zero_right" (formula "10") (term "1,1,1,1,1,0"))
                                       (rule "applyEq" (formula "14") (term "1") (ifseqformula "11"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0"))
                                       (rule "add_zero_right" (formula "7") (term "1,1,0"))
                                       (rule "qeq_literals" (formula "7") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0"))
                                       (rule "add_zero_right" (formula "7") (term "1,1,0"))
                                       (rule "qeq_literals" (formula "7") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_or_tautInEq0" (formula "8") (term "0,0"))
                                       (rule "add_zero_right" (formula "8") (term "1,1,0,0"))
                                       (rule "qeq_literals" (formula "8") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "commute_and" (formula "7") (term "0,0,1,0"))
                                       (rule "inEqSimp_and_contradInEq0" (formula "7") (term "0,0,1,0"))
                                       (rule "qeq_literals" (formula "7") (term "1,0,0,1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "eqSymm" (formula "7"))
                                       (rule "lenNonNegative" (formula "11") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                       (rule "qeq_literals" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "lenNonNegative" (formula "12") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "12"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "referencedObjectIsCreatedRight" (formula "19") (ifseqformula "20"))
                                          (rule "close" (formula "19") (ifseqformula "3"))
                                       )
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "18"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "1"))
                                          (rule "close" (formula "22") (ifseqformula "11"))
                                       )
                                    )
                                    (branch "self.list.size = 0 FALSE"
                                       (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "commute_or_2" (formula "10") (term "0,0,1,0,1,0"))
                                       (rule "commute_or" (formula "10") (term "0,0,0,1,0,1,0"))
                                       (rule "lenNonNegative" (formula "13") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "22"))
                                       (rule "add_zero_right" (formula "13") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "13"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "false_right" (formula "22"))
                                       (rule "lenNonNegative" (formula "15") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "23"))
                                          (rule "close" (formula "22") (ifseqformula "3"))
                                       )
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "1"))
                                          (rule "close" (formula "25") (ifseqformula "14"))
                                       )
                                    )
                                 )
                                 (branch "result_0.<created> = TRUE FALSE"
                                    (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "ifthenelse_to_or_left" (formula "10") (term "1,1,0"))
                                    (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
                                    (rule "eqSymm" (formula "10") (term "1,1,1,1,0"))
                                    (rule "commute_or" (formula "10") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "10") (term "1,1,1,0"))
                                    (rule "shift_paren_or" (formula "10") (term "0,1,0,1,0"))
                                    (rule "ifthenelse_split" (formula "11") (term "0"))
                                    (branch "self.list.size = 0 TRUE"
                                       (rule "eqSymm" (formula "12"))
                                       (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "11"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "9") (term "1,1,1,0,0,1,0") (ifseqformula "11"))
                                       (rule "add_zero_right" (formula "9") (term "1,1,0,0,1,0"))
                                       (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "10") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "10") (term "1,1,1,1,1,1,0") (ifseqformula "11"))
                                       (rule "add_literals" (formula "10") (term "1,1,1,1,1,0"))
                                       (rule "applyEq" (formula "10") (term "1,1,0,1,0,1,1,0") (ifseqformula "11"))
                                       (rule "add_zero_right" (formula "10") (term "1,0,1,0,1,1,0"))
                                       (rule "applyEq" (formula "15") (term "1") (ifseqformula "11"))
                                       (rule "applyEq" (formula "14") (term "1") (ifseqformula "11"))
                                       (rule "inEqSimp_or_tautInEq0" (formula "10") (term "0,0"))
                                       (rule "add_zero_right" (formula "10") (term "1,1,0,0"))
                                       (rule "qeq_literals" (formula "10") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0"))
                                       (rule "add_zero_right" (formula "7") (term "1,1,0"))
                                       (rule "qeq_literals" (formula "7") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "7") (term "0"))
                                       (rule "add_zero_right" (formula "7") (term "1,1,0"))
                                       (rule "qeq_literals" (formula "7") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "commute_and" (formula "7") (term "0,0,1,0"))
                                       (rule "inEqSimp_and_contradInEq0" (formula "7") (term "0,0,1,0"))
                                       (rule "qeq_literals" (formula "7") (term "1,0,0,1,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "eqSymm" (formula "7"))
                                       (rule "lenNonNegative" (formula "11") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "11"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                       (rule "qeq_literals" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "lenNonNegative" (formula "12") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "12"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "referencedObjectIsCreatedRight" (formula "20") (ifseqformula "19"))
                                          (rule "close" (formula "20") (ifseqformula "3"))
                                       )
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "18"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
                                          (rule "close" (formula "23") (ifseqformula "11"))
                                       )
                                    )
                                    (branch "self.list.size = 0 FALSE"
                                       (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "commute_or_2" (formula "10") (term "0,0,1,0,1,0"))
                                       (rule "commute_or" (formula "10") (term "0,0,0,1,0,1,0"))
                                       (rule "lenNonNegative" (formula "13") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_strengthen1" (formula "13") (ifseqformula "22"))
                                       (rule "add_zero_right" (formula "13") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "13"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "false_right" (formula "22"))
                                       (rule "lenNonNegative" (formula "15") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "23"))
                                          (rule "close" (formula "22") (ifseqformula "3"))
                                       )
                                       (branch "¬self.list = null ∧ ¬self.list.<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "1"))
                                          (rule "close" (formula "26") (ifseqformula "14"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Show Axiom Satisfiability"
                           (rule "andRight" (formula "16"))
                           (branch
                              (rule "andRight" (formula "16"))
                              (branch
                                 (rule "andRight" (formula "16"))
                                 (branch
                                    (rule "andRight" (formula "16"))
                                    (branch
                                       (rule "andRight" (formula "16"))
                                       (branch
                                          (rule "andRight" (formula "16"))
                                          (branch
                                             (rule "andRight" (formula "16"))
                                             (branch
                                                (rule "orRight" (formula "12"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "13") (term "1,0,2,1,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "13") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                                (rule "translateJavaAddInt" (formula "12") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "12") (term "1,0,2,1,1,0"))
                                                (rule "translateJavaSubInt" (formula "12") (term "1,0,1,1,1,0,1,0,0,0"))
                                                (rule "notRight" (formula "13"))
                                                (rule "close" (formula "13") (ifseqformula "1"))
                                             )
                                             (branch
                                                (rule "orRight" (formula "12"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "13") (term "1,0,2,1,1,0,0"))
                                                (rule "translateJavaAddInt" (formula "13") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "12") (term "1,0,1,1,1,0,1,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "12") (term "1,0,2,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "12") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                (rule "notRight" (formula "13"))
                                                (rule "close" (formula "13") (ifseqformula "1"))
                                             )
                                          )
                                          (branch
                                             (rule "orRight" (formula "12"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "translateJavaSubInt" (formula "13") (term "1,0,2,1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                             (rule "translateJavaAddInt" (formula "13") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "12") (term "1,0,1,1,1,0,1,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "12") (term "1,0,2,1,1,0"))
                                             (rule "translateJavaAddInt" (formula "12") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                             (rule "notRight" (formula "13"))
                                             (rule "close" (formula "13") (ifseqformula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "orRight" (formula "12"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "translateJavaAddInt" (formula "13") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                          (rule "translateJavaSubInt" (formula "13") (term "1,0,2,1,1,0,0"))
                                          (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                          (rule "translateJavaAddInt" (formula "12") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                          (rule "translateJavaSubInt" (formula "12") (term "1,0,1,1,1,0,1,0,0,0"))
                                          (rule "translateJavaSubInt" (formula "12") (term "1,0,2,1,1,0"))
                                          (rule "notRight" (formula "13"))
                                          (rule "close" (formula "13") (ifseqformula "1"))
                                       )
                                    )
                                    (branch
                                       (rule "orRight" (formula "12"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "translateJavaSubInt" (formula "17") (term "1,0,1,1,1,0"))
                                       (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "13") (term "1,0,2,1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                       (rule "translateJavaAddInt" (formula "13") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "12") (term "1,0,2,1,1,0"))
                                       (rule "translateJavaAddInt" (formula "12") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "12") (term "1,0,1,1,1,0,1,0,0,0"))
                                       (rule "notRight" (formula "13"))
                                       (rule "close" (formula "13") (ifseqformula "1"))
                                    )
                                 )
                                 (branch
                                    (rule "orRight" (formula "12"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,0,2,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                    (rule "translateJavaAddInt" (formula "13") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                    (rule "translateJavaAddInt" (formula "12") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "12") (term "1,0,1,1,1,0,1,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "12") (term "1,0,2,1,1,0"))
                                    (rule "notRight" (formula "13"))
                                    (rule "close" (formula "13") (ifseqformula "1"))
                                 )
                              )
                              (branch
                                 (rule "orRight" (formula "12"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "translateJavaSubInt" (formula "17") (term "1,0,2,1"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                 (rule "translateJavaAddInt" (formula "13") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,0,2,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "12") (term "1,0,1,1,1,0,1,0,0,0"))
                                 (rule "translateJavaAddInt" (formula "12") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "12") (term "1,0,2,1,1,0"))
                                 (rule "notRight" (formula "13"))
                                 (rule "close" (formula "13") (ifseqformula "1"))
                              )
                           )
                           (branch
                              (rule "andRight" (formula "16"))
                              (branch
                                 (rule "orRight" (formula "12"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "translateJavaAddInt" (formula "13") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,0,2,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "12") (term "1,0,1,1,1,0,1,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "12") (term "1,0,2,1,1,0"))
                                 (rule "translateJavaAddInt" (formula "12") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                 (rule "notRight" (formula "13"))
                                 (rule "close" (formula "13") (ifseqformula "1"))
                              )
                              (branch
                                 (rule "orRight" (formula "12"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "translateJavaAddInt" (formula "13") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,0,2,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "12") (term "1,0,1,1,1,0,1,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "12") (term "1,0,2,1,1,0"))
                                 (rule "translateJavaAddInt" (formula "12") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                 (rule "notRight" (formula "13"))
                                 (rule "close" (formula "13") (ifseqformula "1"))
                              )
                           )
                        )
                     )
                     (branch "Show Axiom Satisfiability"
                        (rule "orRight" (formula "15"))
                        (builtin "One Step Simplification" (formula "16"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "translateJavaSubInt" (formula "16") (term "1,0,2,1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "16") (term "1,0,1,1,1,0,1,0,0,0,0"))
                        (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                        (rule "translateJavaSubInt" (formula "15") (term "1,0,1,1,1,0,1,0,0,0"))
                        (rule "translateJavaAddInt" (formula "15") (term "1,0,2,1,1,1,0,1,0,0,0"))
                        (rule "translateJavaSubInt" (formula "15") (term "1,0,2,1,1,0"))
                        (rule "notRight" (formula "16"))
                        (rule "close" (formula "16") (ifseqformula "1"))
                     )
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "15"))
                     (branch
                        (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
                        (rule "closeTrue" (formula "15"))
                     )
                     (branch
                        (rule "andRight" (formula "15"))
                        (branch
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "selectOfAnonEQ" (formula "15") (term "0") (ifseqformula "8") (userinteraction))
                           (rule "ifthenelse_split" (formula "15") (term "0") (userinteraction))
                           (branch " (self.next, IntNode::$data) ∊ ∅ ∧ ¬IntNode::$data = java.lang.Object::<created> ∨ (self.next, IntNode::$data) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                              (rule "notLeft" (formula "1"))
                              (rule "eqSymm" (formula "16"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0"))
                              (rule "referencedObjectIsCreatedRight" (formula "12") (ifseqformula "15"))
                              (rule "close" (formula "12") (ifseqformula "1"))
                           )
                           (branch " (self.next, IntNode::$data) ∊ ∅ ∧ ¬IntNode::$data = java.lang.Object::<created> ∨ (self.next, IntNode::$data) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                              (rule "dismissNonSelectedField" (formula "16") (term "0") (userinteraction))
                              (rule "dismissNonSelectedField" (formula "16") (term "0") (userinteraction))
                              (rule "dismissNonSelectedField" (formula "16") (term "0") (userinteraction))
                              (builtin "Evaluate Query" (formula "16") (term "1") (newnames "callee,queryResult,res_intValue"))
                              (rule "notLeft" (formula "1") (userinteraction))
                              (rule "eqSymm" (formula "12") (term "0,0,1"))
                              (rule "variableDeclaration" (formula "12") (term "1") (newnames "queryResult"))
                              (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_intValue,result_2,exc_1") (contract "MyInteger[MyInteger::intValue()].JML normal_behavior operation contract.0"))
                              (branch "Post (intValue)"
                                 (builtin "One Step Simplification" (formula "12"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "replaceKnownSelect_taclet0000_0" (formula "12") (term "1,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "12") (term "1,0,0,1"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "assignment" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "methodCallEmpty" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "emptyModality" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "notRight" (formula "15") (userinteraction))
                                 (rule "replaceKnownQuery_MyInteger_intValue(heapAfter_valueOf,result_0)_1011000000_2" (formula "20") (term "1") (userinteraction))
                                 (rule "applyEq" (formula "20") (term "1") (ifseqformula "1") (userinteraction))
                                 (rule "close" (formula "20") (ifseqformula "14") (userinteraction))
                              )
                              (branch "Exceptional Post (intValue)"
                                 (builtin "One Step Simplification" (formula "12"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "8"))
                                 (rule "replaceKnownSelect_taclet0000_0" (formula "12") (term "1,0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "12") (term "1,0,0,1"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "notLeft" (formula "12"))
                                 (rule "close" (formula "15") (ifseqformula "14"))
                              )
                              (branch "Pre (intValue)"
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "andRight" (formula "12") (userinteraction))
                                 (branch
                                    (rule "Class_invariant_axiom_for_MyInteger" (formula "12") (inst "sk=sk_0") (userinteraction))
                                    (branch "Use Axiom"
                                       (rule "closeTrue" (formula "12") (userinteraction))
                                    )
                                    (branch "Show Axiom Satisfiability"
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "closeTrue" (formula "12") (userinteraction))
                                    )
                                 )
                                 (branch
                                    (rule "wellFormedAnonEQ" (formula "12") (ifseqformula "8") (userinteraction))
                                    (rule "wellFormedStoreObject" (formula "12") (term "0") (userinteraction))
                                    (rule "wellFormedStorePrimitive" (formula "12") (term "0,0,0") (userinteraction))
                                    (rule "wellFormedStorePrimitive" (formula "12") (term "0,0,0") (userinteraction))
                                    (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "1") (userinteraction))
                                    (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "7") (userinteraction))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "orRight" (formula "12") (userinteraction))
                                    (rule "selectOfStore" (formula "13") (term "0") (userinteraction))
                                    (rule "ifthenelse_split" (formula "13") (term "0") (userinteraction))
                                    (branch " self = self.next.next ∧ IntIterator::$seq = java.lang.Object::<created> ∧ ¬IntIterator::$seq = java.lang.Object::<created> TRUE"
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch " self = self.next.next ∧ IntIterator::$seq = java.lang.Object::<created> ∧ ¬IntIterator::$seq = java.lang.Object::<created> FALSE"
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "false_right" (formula "13") (userinteraction))
                                       (rule "dismissNonSelectedField" (formula "13") (term "0") (userinteraction))
                                       (rule "referencedObjectIsCreatedRight" (formula "13") (ifseqformula "12") (userinteraction))
                                       (rule "close" (formula "13") (ifseqformula "1") (userinteraction))
                                    )
                                 )
                              )
                              (branch "Null reference (callee = null)"
                                 (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")))
                                 (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "13")))
                                 (rule "closeTrue" (formula "12"))
                              )
                           )
                        )
                        (branch
                           (rule "andRight" (formula "15"))
                           (branch
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "pullOutSelect" (formula "15") (term "0,0") (inst "selectSK=IntIterator_seq_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                              (rule "polySimp_homoEq" (formula "16"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                              (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "16") (term "0,0,1,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "polySimp_addComm1" (formula "15") (term "0"))
                              (rule "lenOfSeqConcat" (formula "15") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0"))
                              (rule "add_zero_left" (formula "15") (term "0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "1,0"))
                              (rule "times_zero_1" (formula "15") (term "0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "closeTrue" (formula "15"))
                           )
                           (branch
                              (rule "andRight" (formula "15"))
                              (branch
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "Class_invariant_axiom_for_IntIterator" (formula "15") (inst "sk=sk_0") (ifseqformula "3") (userinteraction))
                                 (branch "Use Axiom"
                                    (rule "Class_invariant_axiom_for_IntIterator" (formula "6") (inst "sk=sk_1") (ifseqformula "3") (userinteraction))
                                    (branch "Use Axiom"
                                       (rule "andRight" (formula "15"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "15"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "15"))
                                             (branch
                                                (rule "andRight" (formula "15"))
                                                (branch
                                                   (rule "andRight" (formula "15"))
                                                   (branch
                                                      (rule "andRight" (formula "15"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "15"))
                                                         (branch "Case 1"
                                                            (rule "andRight" (formula "15"))
                                                            (branch
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "notRight" (formula "16"))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "notLeft" (formula "7"))
                                                               (rule "eqSymm" (formula "14") (term "0"))
                                                               (rule "eqSymm" (formula "13") (term "1"))
                                                               (rule "eqSymm" (formula "12") (term "1"))
                                                               (rule "eqSymm" (formula "8"))
                                                               (rule "eqSymm" (formula "7"))
                                                               (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "23"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "23"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "23"))
                                                               (builtin "One Step Simplification" (formula "14"))
                                                               (rule "notLeft" (formula "14"))
                                                               (rule "castedGetAny" (formula "12") (term "0"))
                                                               (rule "castedGetAny" (formula "13") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "inEqSimp_commuteLeq" (formula "9"))
                                                               (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "11"))
                                                               (rule "lenOfSeqSubEQ" (formula "11") (term "0") (ifseqformula "8"))
                                                               (rule "polySimp_elimSub" (formula "11") (term "1,0"))
                                                               (rule "times_zero_2" (formula "11") (term "1,1,0"))
                                                               (rule "add_zero_right" (formula "11") (term "1,0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "eqSymm" (formula "11") (term "1"))
                                                               (rule "lenOfSeqSubEQ" (formula "19") (term "1") (ifseqformula "8"))
                                                               (rule "eqSymm" (formula "19"))
                                                               (rule "polySimp_elimSub" (formula "19") (term "1,0"))
                                                               (rule "times_zero_2" (formula "19") (term "1,1,0"))
                                                               (rule "add_zero_right" (formula "19") (term "1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                                                               (rule "add_zero_right" (formula "11") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
                                                               (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                                               (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=IntIterator_list_0"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                               (rule "close" (formula "21") (ifseqformula "2"))
                                                            )
                                                            (branch
                                                               (rule "selectOfAnonEQ" (formula "15") (term "0") (ifseqformula "8") (userinteraction))
                                                               (rule "ifthenelse_split" (formula "15") (term "0") (userinteraction))
                                                               (branch " (self, IntIterator::$nodeseq) ∊ ∅ ∧ ¬ IntIterator::$nodeseq = java.lang.Object::<created> ∨ (self, IntIterator::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "andLeft" (formula "6"))
                                                                  (rule "andLeft" (formula "6"))
                                                                  (rule "andLeft" (formula "6"))
                                                                  (rule "andLeft" (formula "6"))
                                                                  (rule "andLeft" (formula "6"))
                                                                  (rule "andLeft" (formula "6"))
                                                                  (rule "andLeft" (formula "6"))
                                                                  (rule "notLeft" (formula "6"))
                                                                  (rule "eqSymm" (formula "24"))
                                                                  (rule "eqSymm" (formula "13") (term "0"))
                                                                  (rule "eqSymm" (formula "12") (term "1"))
                                                                  (rule "eqSymm" (formula "11") (term "1"))
                                                                  (rule "eqSymm" (formula "7"))
                                                                  (rule "eqSymm" (formula "6"))
                                                                  (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "notLeft" (formula "13"))
                                                                  (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                                  (rule "castedGetAny" (formula "12") (term "0"))
                                                                  (rule "castedGetAny" (formula "11") (term "0"))
                                                                  (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                                  (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                                  (rule "close" (formula "20") (ifseqformula "2"))
                                                               )
                                                               (branch " (self, IntIterator::$nodeseq) ∊ ∅ ∧ ¬ IntIterator::$nodeseq = java.lang.Object::<created> ∨ (self, IntIterator::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                                  (rule "selectOfAnonEQ" (formula "16") (term "0,1") (ifseqformula "8") (userinteraction))
                                                                  (rule "ifthenelse_split" (formula "16") (term "0,1") (userinteraction))
                                                                  (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")))
                                                                     (rule "andLeft" (formula "7"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notRight" (formula "18"))
                                                                     (rule "andLeft" (formula "9"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "andLeft" (formula "7"))
                                                                     (rule "andLeft" (formula "7"))
                                                                     (rule "andLeft" (formula "7"))
                                                                     (rule "andLeft" (formula "7"))
                                                                     (rule "andLeft" (formula "7"))
                                                                     (rule "andLeft" (formula "7"))
                                                                     (rule "notLeft" (formula "7"))
                                                                     (rule "eqSymm" (formula "14") (term "0"))
                                                                     (rule "eqSymm" (formula "13") (term "1"))
                                                                     (rule "eqSymm" (formula "12") (term "1"))
                                                                     (rule "eqSymm" (formula "8"))
                                                                     (rule "eqSymm" (formula "7"))
                                                                     (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "25"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "25"))
                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                     (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "25"))
                                                                     (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "notLeft" (formula "14"))
                                                                     (rule "dismissNonSelectedField" (formula "26") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                                     (rule "castedGetAny" (formula "12") (term "0"))
                                                                     (rule "castedGetAny" (formula "13") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "26") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "9"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "8"))
                                                                     (rule "applyEq" (formula "7") (term "2,0") (ifseqformula "10"))
                                                                     (rule "lenOfSeqSubEQ" (formula "10") (term "0") (ifseqformula "7"))
                                                                     (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                                                                     (rule "times_zero_2" (formula "10") (term "1,1,0"))
                                                                     (rule "add_zero_right" (formula "10") (term "1,0"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "eqSymm" (formula "10") (term "1"))
                                                                     (rule "lenOfSeqSubEQ" (formula "9") (term "1") (ifseqformula "7"))
                                                                     (rule "polySimp_elimSub" (formula "9") (term "1,1"))
                                                                     (rule "mul_literals" (formula "9") (term "1,1,1"))
                                                                     (rule "add_zero_right" (formula "9") (term "1,1"))
                                                                     (rule "lenOfSeqSubEQ" (formula "18") (term "1") (ifseqformula "7"))
                                                                     (rule "eqSymm" (formula "18"))
                                                                     (rule "polySimp_elimSub" (formula "18") (term "1,0"))
                                                                     (rule "times_zero_2" (formula "18") (term "1,1,0"))
                                                                     (rule "add_zero_right" (formula "18") (term "1,0"))
                                                                     (rule "lenOfSeqSubEQ" (formula "12") (term "1,0") (ifseqformula "7"))
                                                                     (rule "polySimp_elimSub" (formula "12") (term "1,1,0"))
                                                                     (rule "mul_literals" (formula "12") (term "1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "12") (term "1,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "10") (term "0"))
                                                                     (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1"))
                                                                     (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
                                                                     (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0"))
                                                                     (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "9"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_elimOne" (formula "10") (term "0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "12") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "0,0,0"))
                                                                     (rule "inEqSimp_strengthen0" (formula "9") (ifseqformula "18"))
                                                                     (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "9"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                                     (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "18") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "false_right" (formula "18"))
                                                                     (rule "equalityToSeqGetAndSeqLenRight" (formula "24") (inst "iv=iv"))
                                                                     (rule "lenOfSeqSub" (formula "24") (term "1,0"))
                                                                     (rule "eqSymm" (formula "24") (term "0"))
                                                                     (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                                                                     (rule "times_zero_2" (formula "24") (term "1,1,0,0"))
                                                                     (rule "add_zero_right" (formula "24") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                                                     (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1"))
                                                                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                                                     (rule "getOfSeqSub" (formula "24") (term "1,1,0,1"))
                                                                     (rule "castDel" (formula "24") (term "2,1,1,0,1"))
                                                                     (rule "add_zero_right" (formula "24") (term "1,1,1,1,0,1"))
                                                                     (rule "eqSymm" (formula "24") (term "1,0,1"))
                                                                     (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,1"))
                                                                     (rule "mul_literals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                                     (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,1"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                                     (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=IntIterator_list_0"))
                                                                     (rule "applyEq" (formula "25") (term "1,0,1,0,1,0,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "1"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "20") (ifseqformula "1") (ifseqformula "21"))
                                                                     (rule "close" (formula "20") (ifseqformula "2"))
                                                                  )
                                                                  (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                                     (rule "selectOfAnonEQ" (formula "17") (term "1,0,1") (ifseqformula "8") (userinteraction))
                                                                     (rule "ifthenelse_split" (formula "17") (term "1,0,1") (userinteraction))
                                                                     (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                                                        (builtin "One Step Simplification" (formula "17"))
                                                                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")))
                                                                        (rule "closeTrue" (formula "16"))
                                                                     )
                                                                     (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                                        (rule "dismissNonSelectedField" (formula "18") (term "0") (userinteraction))
                                                                        (rule "dismissNonSelectedField" (formula "18") (term "0") (userinteraction))
                                                                        (rule "dismissNonSelectedField" (formula "18") (term "0,1") (userinteraction))
                                                                        (rule "dismissNonSelectedField" (formula "18") (term "1,0,1") (userinteraction))
                                                                        (rule "dismissNonSelectedField" (formula "18") (term "0,1") (userinteraction))
                                                                        (rule "dismissNonSelectedField" (formula "18") (term "1,0,1") (userinteraction))
                                                                        (rule "dismissNonSelectedField" (formula "18") (term "0,1") (userinteraction))
                                                                        (rule "selectOfAnonEQ" (formula "18") (term "0,2,1") (ifseqformula "8") (userinteraction))
                                                                        (rule "ifthenelse_split" (formula "18") (term "0,2,1") (userinteraction))
                                                                        (branch " (self, IntIterator::$nodeseq) ∊ ∅ ∧ ¬ IntIterator::$nodeseq = java.lang.Object::<created> ∨ (self, IntIterator::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                                           (rule "close" (formula "16") (ifseqformula "1"))
                                                                        )
                                                                        (branch " (self, IntIterator::$nodeseq) ∊ ∅ ∧ ¬ IntIterator::$nodeseq = java.lang.Object::<created> ∨ (self, IntIterator::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                                           (rule "dismissNonSelectedField" (formula "18") (term "1,0,1") (userinteraction))
                                                                           (rule "dismissNonSelectedField" (formula "18") (term "0,2,1") (userinteraction))
                                                                           (rule "dismissNonSelectedField" (formula "18") (term "0,2,1") (userinteraction))
                                                                           (rule "selectOfStore" (formula "18") (term "0,2,1") (userinteraction))
                                                                           (rule "ifthenelse_split" (formula "18") (term "0,2,1") (userinteraction))
                                                                           (branch " self = self ∧ IntIterator::$nodeseq = IntIterator::$nodeseq ∧ ¬IntIterator::$nodeseq = java.lang.Object::<created> TRUE"
                                                                              (rule "selectOfStore" (formula "19") (term "0") (userinteraction))
                                                                              (rule "ifthenelse_split" (formula "19") (term "0") (userinteraction))
                                                                              (branch " self = self ∧ IntIterator::$nodeseq = IntIterator::$nodeseq ∧ ¬IntIterator::$nodeseq = java.lang.Object::<created> TRUE"
                                                                                 (rule "castDel" (formula "19") (term "0") (userinteraction))
                                                                                 (rule "castDel" (formula "19") (term "0,2,1") (userinteraction))
                                                                                 (rule "andLeft" (formula "7") (userinteraction))
                                                                                 (rule "andLeft" (formula "7") (userinteraction))
                                                                                 (rule "andLeft" (formula "7") (userinteraction))
                                                                                 (rule "andLeft" (formula "7") (userinteraction))
                                                                                 (rule "andLeft" (formula "7") (userinteraction))
                                                                                 (rule "andLeft" (formula "7") (userinteraction))
                                                                                 (rule "andLeft" (formula "7") (userinteraction))
                                                                                 (rule "andLeft" (formula "7") (userinteraction))
                                                                                 (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "8") (userinteraction))
                                                                                 (rule "lenOfSeqConcat" (formula "27") (term "2,1") (userinteraction))
                                                                                 (rule "defOfSeqSingleton" (formula "27") (term "0,1,2,1") (inst "uSub=uSub") (userinteraction))
                                                                                 (rule "lenOfSeqDef" (formula "27") (term "1,2,1") (userinteraction))
                                                                                 (rule "ifthenelse_split" (formula "27") (term "1,2,1") (userinteraction))
                                                                                 (branch "0 < 1 TRUE"
                                                                                    (rule "sub_literals" (formula "28") (term "1,2,1") (userinteraction))
                                                                                    (rule "orRight" (formula "25"))
                                                                                    (rule "andRight" (formula "25"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "27"))
                                                                                       (rule "andRight" (formula "27"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "29"))
                                                                                          (rule "andRight" (formula "29"))
                                                                                          (branch
                                                                                             (rule "defOfSeqSub" (formula "31") (term "1") (inst "uSub=uSub") (userinteraction))
                                                                                             (rule "seqDef_split" (formula "31") (term "1") (inst "idx=seqLen(Seq::select(heap, self, IntIterator::$nodeseq))") (inst "uSub1=uSub1") (userinteraction))
                                                                                             (rule "ifthenelse_split" (formula "31") (term "1") (userinteraction))
                                                                                             (branch " 0 ≤ self.nodeseq.length ∧ self.nodeseq.length < self.nodeseq.length + 1 TRUE"
                                                                                                (rule "defOfSeqSingleton" (formula "32") (term "1,0") (inst "uSub=uSub") (userinteraction))
                                                                                                (rule "defOfSeqSub" (formula "32") (term "0,0") (inst "uSub=uSub") (userinteraction))
                                                                                                (rule "impLeft" (formula "15") (userinteraction))
                                                                                                (branch "Case 1"
                                                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                                                   (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "24")))
                                                                                                   (builtin "One Step Simplification" (formula "30"))
                                                                                                   (builtin "One Step Simplification" (formula "29"))
                                                                                                   (builtin "One Step Simplification" (formula "28"))
                                                                                                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "24")) (ifInst ""  (formula "30")))
                                                                                                   (builtin "One Step Simplification" (formula "26"))
                                                                                                   (rule "true_left" (formula "3"))
                                                                                                   (rule "false_right" (formula "26"))
                                                                                                   (rule "less_literals" (formula "2"))
                                                                                                   (rule "true_left" (formula "2"))
                                                                                                   (rule "notRight" (formula "20"))
                                                                                                   (rule "close" (formula "23") (ifseqformula "1"))
                                                                                                )
                                                                                                (branch "Case 2"
                                                                                                   (rule "applyEq" (formula "32") (term "2,1,0") (ifseqformula "15") (userinteraction))
                                                                                                   (opengoal " ")
                                                                                                )
                                                                                             )
                                                                                             (branch " 0 ≤ self.nodeseq.length ∧ self.nodeseq.length < self.nodeseq.length + 1 FALSE"
                                                                                                (builtin "One Step Simplification" (formula "2"))
                                                                                                (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "23")))
                                                                                                (builtin "One Step Simplification" (formula "29"))
                                                                                                (builtin "One Step Simplification" (formula "28"))
                                                                                                (builtin "One Step Simplification" (formula "27"))
                                                                                                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "23")) (ifInst ""  (formula "29")))
                                                                                                (builtin "One Step Simplification" (formula "25"))
                                                                                                (rule "true_left" (formula "2"))
                                                                                                (rule "false_right" (formula "25"))
                                                                                                (rule "less_literals" (formula "1"))
                                                                                                (rule "true_left" (formula "1"))
                                                                                                (rule "notLeft" (formula "6"))
                                                                                                (rule "notRight" (formula "24"))
                                                                                                (rule "eqSymm" (formula "14") (term "0"))
                                                                                                (rule "eqSymm" (formula "12") (term "1"))
                                                                                                (rule "eqSymm" (formula "26"))
                                                                                                (rule "eqSymm" (formula "13") (term "1"))
                                                                                                (rule "eqSymm" (formula "7"))
                                                                                                (rule "eqSymm" (formula "8"))
                                                                                                (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "23"))
                                                                                                (builtin "One Step Simplification" (formula "13"))
                                                                                                (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "23"))
                                                                                                (builtin "One Step Simplification" (formula "12"))
                                                                                                (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "23"))
                                                                                                (builtin "One Step Simplification" (formula "14"))
                                                                                                (rule "notLeft" (formula "14"))
                                                                                                (rule "polySimp_addComm0" (formula "25") (term "1,1"))
                                                                                                (rule "polySimp_addComm0" (formula "26") (term "1,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "24") (term "0,0,1"))
                                                                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                                                (rule "castedGetAny" (formula "13") (term "0"))
                                                                                                (rule "castedGetAny" (formula "12") (term "0"))
                                                                                                (rule "dismissNonSelectedField" (formula "24") (term "0,0,1"))
                                                                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                                                (rule "dismissNonSelectedField" (formula "24") (term "0,0,1"))
                                                                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                                                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                                                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                                                                                (rule "add_literals" (formula "24") (term "0,0,0,1"))
                                                                                                (rule "add_zero_left" (formula "24") (term "0,0,1"))
                                                                                                (rule "polySimp_pullOutFactor2" (formula "24") (term "0,1"))
                                                                                                (rule "add_literals" (formula "24") (term "1,0,1"))
                                                                                                (rule "times_zero_1" (formula "24") (term "0,1"))
                                                                                                (rule "leq_literals" (formula "24") (term "1"))
                                                                                                (builtin "One Step Simplification" (formula "24"))
                                                                                                (rule "inEqSimp_leqRight" (formula "24"))
                                                                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "9"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "10"))
                                                                                                (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                                                                                                (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "11"))
                                                                                                (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "7"))
                                                                                                (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "11"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "19") (term "1") (ifseqformula "8"))
                                                                                                (rule "eqSymm" (formula "19"))
                                                                                                (rule "polySimp_elimSub" (formula "19") (term "1,0"))
                                                                                                (rule "times_zero_2" (formula "19") (term "1,1,0"))
                                                                                                (rule "add_zero_right" (formula "19") (term "1,0"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "11") (term "0") (ifseqformula "8"))
                                                                                                (rule "polySimp_elimSub" (formula "11") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "11") (term "1,1,0"))
                                                                                                (rule "add_zero_right" (formula "11") (term "1,0"))
                                                                                                (builtin "One Step Simplification" (formula "11"))
                                                                                                (rule "eqSymm" (formula "11") (term "1"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
                                                                                                (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                                                                                                (rule "add_zero_right" (formula "11") (term "0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "11") (term "0,0"))
                                                                                                (rule "inEqSimp_contradEq3" (formula "11") (term "1") (ifseqformula "1"))
                                                                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                                                                                (rule "add_literals" (formula "11") (term "0,0,1"))
                                                                                                (rule "qeq_literals" (formula "11") (term "0,1"))
                                                                                                (builtin "One Step Simplification" (formula "11"))
                                                                                                (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "11"))
                                                                                                (builtin "One Step Simplification" (formula "19"))
                                                                                                (rule "eqSymm" (formula "19"))
                                                                                                (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "19"))
                                                                                                (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "10"))
                                                                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                                                                (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                                                (rule "leq_literals" (formula "19") (term "0"))
                                                                                                (builtin "One Step Simplification" (formula "19"))
                                                                                                (rule "false_right" (formula "19"))
                                                                                                (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "1"))
                                                                                                (rule "qeq_literals" (formula "11") (term "0"))
                                                                                                (builtin "One Step Simplification" (formula "11"))
                                                                                                (rule "closeFalse" (formula "11"))
                                                                                             )
                                                                                          )
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "2"))
                                                                                             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "23")))
                                                                                             (builtin "One Step Simplification" (formula "29"))
                                                                                             (rule "closeTrue" (formula "29"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "29"))
                                                                                          (rule "andRight" (formula "29"))
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "2"))
                                                                                             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "23")))
                                                                                             (builtin "One Step Simplification" (formula "29"))
                                                                                             (builtin "One Step Simplification" (formula "28"))
                                                                                             (builtin "One Step Simplification" (formula "27"))
                                                                                             (rule "closeTrue" (formula "27"))
                                                                                          )
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "2"))
                                                                                             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "23")))
                                                                                             (builtin "One Step Simplification" (formula "29"))
                                                                                             (rule "closeTrue" (formula "29"))
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "27"))
                                                                                       (rule "andRight" (formula "27"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "29"))
                                                                                          (rule "andRight" (formula "29"))
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
                                                                                             (rule "closeFalse" (formula "2"))
                                                                                          )
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
                                                                                             (rule "closeFalse" (formula "2"))
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "29"))
                                                                                          (rule "andRight" (formula "29"))
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
                                                                                             (rule "closeFalse" (formula "2"))
                                                                                          )
                                                                                          (branch
                                                                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
                                                                                             (rule "closeFalse" (formula "2"))
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch "0 < 1 FALSE"
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "22")))
                                                                                    (builtin "One Step Simplification" (formula "25"))
                                                                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")) (ifInst ""  (formula "26")))
                                                                                    (rule "true_left" (formula "1"))
                                                                                    (rule "false_right" (formula "23"))
                                                                                    (rule "less_literals" (formula "25"))
                                                                                    (rule "closeTrue" (formula "25"))
                                                                                 )
                                                                              )
                                                                              (branch " self = self ∧ IntIterator::$nodeseq = IntIterator::$nodeseq ∧ ¬IntIterator::$nodeseq = java.lang.Object::<created> FALSE"
                                                                                 (rule "close" (formula "19") (ifseqformula "1"))
                                                                              )
                                                                           )
                                                                           (branch " self = self ∧ IntIterator::$nodeseq = IntIterator::$nodeseq ∧ ¬IntIterator::$nodeseq = java.lang.Object::<created> FALSE"
                                                                              (builtin "One Step Simplification" (formula "18"))
                                                                              (rule "closeTrue" (formula "18"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "selectOfAnonEQ" (formula "15") (term "0") (ifseqformula "8") (userinteraction))
                                                            (rule "ifthenelse_split" (formula "15") (term "0") (userinteraction))
                                                            (branch " (self, IntIterator::$seq) ∊ ∅ ∧ ¬IntIterator::$seq = java.lang.Object::<created> ∨ (self, IntIterator::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "notLeft" (formula "6"))
                                                               (rule "eqSymm" (formula "24"))
                                                               (rule "eqSymm" (formula "13") (term "0"))
                                                               (rule "eqSymm" (formula "12") (term "1"))
                                                               (rule "eqSymm" (formula "11") (term "1"))
                                                               (rule "eqSymm" (formula "7"))
                                                               (rule "eqSymm" (formula "6"))
                                                               (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "23"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "23"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "23"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "notLeft" (formula "13"))
                                                               (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                               (rule "castedGetAny" (formula "12") (term "0"))
                                                               (rule "castedGetAny" (formula "11") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                               (rule "close" (formula "20") (ifseqformula "2"))
                                                            )
                                                            (branch " (self, IntIterator::$seq) ∊ ∅ ∧ ¬IntIterator::$seq = java.lang.Object::<created> ∨ (self, IntIterator::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                               (rule "selectOfAnonEQ" (formula "16") (term "0,1") (ifseqformula "8") (userinteraction))
                                                               (rule "ifthenelse_split" (formula "16") (term "0,1") (userinteraction))
                                                               (branch " (self.list@heapAfter_valueOf, IntList::$seq) ∊ ∅ ∧ ¬IntList::$seq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntList::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "notRight" (formula "18"))
                                                                  (rule "andLeft" (formula "9"))
                                                                  (rule "notLeft" (formula "2"))
                                                                  (rule "notLeft" (formula "2"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "notLeft" (formula "7"))
                                                                  (rule "eqSymm" (formula "14") (term "0"))
                                                                  (rule "eqSymm" (formula "13") (term "1"))
                                                                  (rule "eqSymm" (formula "12") (term "1"))
                                                                  (rule "eqSymm" (formula "8"))
                                                                  (rule "eqSymm" (formula "7"))
                                                                  (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "25"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "25"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "25"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "notLeft" (formula "14"))
                                                                  (rule "dismissNonSelectedField" (formula "26") (term "0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                  (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                                  (rule "castedGetAny" (formula "12") (term "0"))
                                                                  (rule "castedGetAny" (formula "13") (term "0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                  (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                  (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "9"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "8"))
                                                                  (rule "applyEq" (formula "7") (term "2,0") (ifseqformula "10"))
                                                                  (rule "lenOfSeqSubEQ" (formula "12") (term "1,0") (ifseqformula "7"))
                                                                  (rule "polySimp_elimSub" (formula "12") (term "1,1,0"))
                                                                  (rule "times_zero_2" (formula "12") (term "1,1,1,0"))
                                                                  (rule "add_zero_right" (formula "12") (term "1,1,0"))
                                                                  (rule "lenOfSeqSubEQ" (formula "9") (term "1") (ifseqformula "7"))
                                                                  (rule "polySimp_elimSub" (formula "9") (term "1,1"))
                                                                  (rule "times_zero_2" (formula "9") (term "1,1,1"))
                                                                  (rule "add_zero_right" (formula "9") (term "1,1"))
                                                                  (rule "lenOfSeqSubEQ" (formula "10") (term "0") (ifseqformula "7"))
                                                                  (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                                                                  (rule "times_zero_2" (formula "10") (term "1,1,0"))
                                                                  (rule "add_zero_right" (formula "10") (term "1,0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "eqSymm" (formula "10") (term "1"))
                                                                  (rule "lenOfSeqSubEQ" (formula "18") (term "1") (ifseqformula "7"))
                                                                  (rule "eqSymm" (formula "18"))
                                                                  (rule "polySimp_elimSub" (formula "18") (term "1,0"))
                                                                  (rule "mul_literals" (formula "18") (term "1,1,0"))
                                                                  (rule "add_zero_right" (formula "18") (term "1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0"))
                                                                  (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1"))
                                                                  (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0"))
                                                                  (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
                                                                  (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "9"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "0,0,0"))
                                                                  (rule "inEqSimp_strengthen0" (formula "9") (ifseqformula "18"))
                                                                  (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                                  (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "18") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "false_right" (formula "18"))
                                                                  (rule "equalityToSeqGetAndSeqLenRight" (formula "24") (inst "iv=iv"))
                                                                  (rule "lenOfSeqSub" (formula "24") (term "1,0"))
                                                                  (rule "eqSymm" (formula "24") (term "0"))
                                                                  (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                                                                  (rule "times_zero_2" (formula "24") (term "1,1,0,0"))
                                                                  (rule "add_zero_right" (formula "24") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                                                  (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                                                  (rule "getOfSeqSub" (formula "24") (term "1,1,0,1"))
                                                                  (rule "castDel" (formula "24") (term "2,1,1,0,1"))
                                                                  (rule "add_zero_right" (formula "24") (term "1,1,1,1,0,1"))
                                                                  (rule "eqSymm" (formula "24") (term "1,0,1"))
                                                                  (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,1"))
                                                                  (rule "mul_literals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                                  (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                                  (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=IntIterator_list_0"))
                                                                  (rule "applyEq" (formula "25") (term "1,0,1,0,1,0,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "referencedObjectIsCreatedRightEQ" (formula "20") (ifseqformula "1") (ifseqformula "21"))
                                                                  (rule "close" (formula "20") (ifseqformula "2"))
                                                               )
                                                               (branch " (self.list@heapAfter_valueOf, IntList::$seq) ∊ ∅ ∧ ¬IntList::$seq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntList::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                                  (rule "selectOfAnonEQ" (formula "17") (term "0,2,1") (ifseqformula "8") (userinteraction))
                                                                  (rule "ifthenelse_split" (formula "17") (term "0,2,1") (userinteraction))
                                                                  (branch " (self, IntIterator::$seq) ∊ ∅ ∧ ¬IntIterator::$seq = java.lang.Object::<created> ∨ (self, IntIterator::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                                     (rule "close" (formula "16") (ifseqformula "1"))
                                                                  )
                                                                  (branch " (self, IntIterator::$seq) ∊ ∅ ∧ ¬IntIterator::$seq = java.lang.Object::<created> ∨ (self, IntIterator::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                                     (rule "dismissNonSelectedField" (formula "17") (term "0,2,1") (userinteraction))
                                                                     (rule "dismissNonSelectedField" (formula "17") (term "0,1") (userinteraction))
                                                                     (rule "dismissNonSelectedField" (formula "17") (term "0,1") (userinteraction))
                                                                     (rule "dismissNonSelectedField" (formula "17") (term "0,1") (userinteraction))
                                                                     (rule "dismissNonSelectedField" (formula "17") (term "0") (userinteraction))
                                                                     (rule "selectOfStore" (formula "17") (term "0") (userinteraction))
                                                                     (rule "ifthenelse_split" (formula "17") (term "0") (userinteraction))
                                                                     (branch " self = self ∧ IntIterator::$seq = IntIterator::$seq ∧ ¬IntIterator::$seq = java.lang.Object::<created> TRUE"
                                                                        (rule "castDel" (formula "18") (term "0") (userinteraction))
                                                                        (rule "selectOfAnonEQ" (formula "18") (term "1,0,1") (ifseqformula "9") (userinteraction))
                                                                        (rule "ifthenelse_split" (formula "18") (term "1,0,1") (userinteraction))
                                                                        (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                                           (builtin "One Step Simplification" (formula "2"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                                           (builtin "One Step Simplification" (formula "18"))
                                                                           (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")) (ifInst ""  (formula "1")))
                                                                           (rule "closeTrue" (formula "17"))
                                                                        )
                                                                        (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                                           (rule "dismissNonSelectedField" (formula "19") (term "1,0,1") (userinteraction))
                                                                           (rule "dismissNonSelectedField" (formula "19") (term "1,0,1") (userinteraction))
                                                                           (rule "dismissNonSelectedField" (formula "19") (term "1,0,1") (userinteraction))
                                                                           (rule "selectOfStore" (formula "19") (term "0,2,1") (userinteraction))
                                                                           (rule "ifthenelse_split" (formula "19") (term "0,2,1") (userinteraction))
                                                                           (branch " self = self ∧ IntIterator::$seq = IntIterator::$seq ∧ ¬IntIterator::$seq = java.lang.Object::<created> TRUE"
                                                                              (rule "castDel" (formula "19") (term "0,2,1") (userinteraction))
                                                                              (rule "andLeft" (formula "7") (userinteraction))
                                                                              (rule "andLeft" (formula "7") (userinteraction))
                                                                              (rule "andLeft" (formula "7") (userinteraction))
                                                                              (rule "andLeft" (formula "7") (userinteraction))
                                                                              (rule "andLeft" (formula "7") (userinteraction))
                                                                              (rule "andLeft" (formula "7") (userinteraction))
                                                                              (rule "andLeft" (formula "7") (userinteraction))
                                                                              (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "8") (userinteraction))
                                                                              (rule "orRight" (formula "23"))
                                                                              (rule "andRight" (formula "23"))
                                                                              (branch
                                                                                 (rule "orRight" (formula "25"))
                                                                                 (rule "andRight" (formula "25"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "27"))
                                                                                    (rule "andRight" (formula "27"))
                                                                                    (branch
                                                                                       (opengoal " ")
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "21")))
                                                                                       (builtin "One Step Simplification" (formula "27"))
                                                                                       (rule "closeTrue" (formula "27"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "27"))
                                                                                    (rule "andRight" (formula "27"))
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "21")))
                                                                                       (builtin "One Step Simplification" (formula "27"))
                                                                                       (builtin "One Step Simplification" (formula "26"))
                                                                                       (builtin "One Step Simplification" (formula "25"))
                                                                                       (rule "closeTrue" (formula "25"))
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "1"))
                                                                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "21")))
                                                                                       (builtin "One Step Simplification" (formula "27"))
                                                                                       (rule "closeTrue" (formula "27"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "orRight" (formula "25"))
                                                                                 (rule "andRight" (formula "25"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "27"))
                                                                                    (rule "andRight" (formula "27"))
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                                                                       (rule "closeFalse" (formula "1"))
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                                                                       (rule "closeFalse" (formula "1"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "27"))
                                                                                    (rule "andRight" (formula "27"))
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                                                                       (rule "closeFalse" (formula "1"))
                                                                                    )
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                                                                       (rule "closeFalse" (formula "1"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch " self = self ∧ IntIterator::$seq = IntIterator::$seq ∧ ¬IntIterator::$seq = java.lang.Object::<created> FALSE"
                                                                              (rule "close" (formula "19") (ifseqformula "1"))
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch " self = self ∧ IntIterator::$seq = IntIterator::$seq ∧ ¬IntIterator::$seq = java.lang.Object::<created> FALSE"
                                                                        (builtin "One Step Simplification" (formula "17"))
                                                                        (rule "closeTrue" (formula "17"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "selectOfAnonEQ" (formula "15") (term "0,0") (ifseqformula "8") (userinteraction))
                                                         (rule "ifthenelse_split" (formula "15") (term "0,0") (userinteraction))
                                                         (branch " (self, IntIterator::$nodeseq) ∊ ∅ ∧ ¬ IntIterator::$nodeseq = java.lang.Object::<created> ∨ (self, IntIterator::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                                            (rule "andLeft" (formula "7"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "notLeft" (formula "6"))
                                                            (rule "eqSymm" (formula "13") (term "0"))
                                                            (rule "eqSymm" (formula "12") (term "1"))
                                                            (rule "eqSymm" (formula "11") (term "1"))
                                                            (rule "eqSymm" (formula "7"))
                                                            (rule "eqSymm" (formula "6"))
                                                            (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "23"))
                                                            (builtin "One Step Simplification" (formula "11"))
                                                            (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "23"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "23"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "notLeft" (formula "13"))
                                                            (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "24"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "castedGetAny" (formula "12") (term "0"))
                                                            (rule "castedGetAny" (formula "13") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                            (rule "close" (formula "21") (ifseqformula "3"))
                                                         )
                                                         (branch " (self, IntIterator::$nodeseq) ∊ ∅ ∧ ¬ IntIterator::$nodeseq = java.lang.Object::<created> ∨ (self, IntIterator::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                            (rule "dismissNonSelectedField" (formula "16") (term "0,0") (userinteraction))
                                                            (rule "dismissNonSelectedField" (formula "16") (term "0,0") (userinteraction))
                                                            (rule "selectOfAnonEQ" (formula "16") (term "0,1") (ifseqformula "8") (userinteraction))
                                                            (rule "ifthenelse_split" (formula "16") (term "0,1") (userinteraction))
                                                            (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "notRight" (formula "18"))
                                                               (rule "andLeft" (formula "9"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "andLeft" (formula "7"))
                                                               (rule "notLeft" (formula "7"))
                                                               (rule "eqSymm" (formula "14") (term "0"))
                                                               (rule "eqSymm" (formula "13") (term "1"))
                                                               (rule "eqSymm" (formula "12") (term "1"))
                                                               (rule "eqSymm" (formula "8"))
                                                               (rule "eqSymm" (formula "7"))
                                                               (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "25"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "25"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "25"))
                                                               (builtin "One Step Simplification" (formula "14"))
                                                               (rule "notLeft" (formula "14"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "26"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "castedGetAny" (formula "14") (term "0"))
                                                               (rule "castedGetAny" (formula "13") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "2") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "2") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "10"))
                                                               (rule "inEqSimp_commuteLeq" (formula "9"))
                                                               (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                                                               (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "11"))
                                                               (rule "lenOfSeqSubEQ" (formula "19") (term "1") (ifseqformula "8"))
                                                               (rule "eqSymm" (formula "19"))
                                                               (rule "polySimp_elimSub" (formula "19") (term "1,0"))
                                                               (rule "times_zero_2" (formula "19") (term "1,1,0"))
                                                               (rule "add_zero_right" (formula "19") (term "1,0"))
                                                               (rule "lenOfSeqSubEQ" (formula "13") (term "1,0") (ifseqformula "8"))
                                                               (rule "polySimp_elimSub" (formula "13") (term "1,1,0"))
                                                               (rule "mul_literals" (formula "13") (term "1,1,1,0"))
                                                               (rule "add_zero_right" (formula "13") (term "1,1,0"))
                                                               (rule "lenOfSeqSubEQ" (formula "11") (term "0") (ifseqformula "8"))
                                                               (rule "polySimp_elimSub" (formula "11") (term "1,0"))
                                                               (rule "times_zero_2" (formula "11") (term "1,1,0"))
                                                               (rule "add_zero_right" (formula "11") (term "1,0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "eqSymm" (formula "11") (term "1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
                                                               (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
                                                               (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                                                               (rule "add_zero_right" (formula "11") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                               (rule "mul_literals" (formula "1") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "13") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "0,0"))
                                                               (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=IntIterator_list_0"))
                                                               (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "2") (term "1,0,1,1") (ifseqformula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "referencedObjectIsCreatedRightEQ" (formula "22") (ifseqformula "1") (ifseqformula "23"))
                                                               (rule "close" (formula "22") (ifseqformula "3"))
                                                            )
                                                            (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                               (rule "dismissNonSelectedField" (formula "17") (term "0,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "17") (term "0,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "17") (term "0,1") (userinteraction))
                                                               (rule "selectOfAnonEQ" (formula "17") (term "1,0,1") (ifseqformula "8") (userinteraction))
                                                               (rule "ifthenelse_split" (formula "17") (term "1,0,1") (userinteraction))
                                                               (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")))
                                                                  (rule "closeTrue" (formula "16"))
                                                               )
                                                               (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                                  (rule "dismissNonSelectedField" (formula "18") (term "1,0,1") (userinteraction))
                                                                  (rule "dismissNonSelectedField" (formula "18") (term "1,0,1") (userinteraction))
                                                                  (rule "dismissNonSelectedField" (formula "18") (term "1,0,1") (userinteraction))
                                                                  (rule "selectOfStore" (formula "18") (term "0,0") (userinteraction))
                                                                  (rule "ifthenelse_split" (formula "18") (term "0,0") (userinteraction))
                                                                  (branch " self = self ∧ IntIterator::$nodeseq = IntIterator::$nodeseq ∧ ¬IntIterator::$nodeseq = java.lang.Object::<created> TRUE"
                                                                     (rule "castDel" (formula "19") (term "0,0") (userinteraction))
                                                                     (rule "lenOfSeqConcat" (formula "19") (term "0") (userinteraction))
                                                                     (rule "defOfSeqSingleton" (formula "19") (term "0,1,0") (inst "uSub=uSub") (userinteraction))
                                                                     (rule "lenOfSeqDef" (formula "19") (term "1,0") (userinteraction))
                                                                     (rule "ifthenelse_split" (formula "19") (term "1,0") (userinteraction))
                                                                     (branch "0 < 1 TRUE"
                                                                        (rule "sub_literals" (formula "20") (term "1,0") (userinteraction))
                                                                        (rule "orRight" (formula "19"))
                                                                        (rule "andRight" (formula "19"))
                                                                        (branch
                                                                           (rule "orRight" (formula "18"))
                                                                           (rule "andRight" (formula "18"))
                                                                           (branch
                                                                              (rule "orRight" (formula "17"))
                                                                              (rule "andRight" (formula "17"))
                                                                              (branch
                                                                                 (opengoal " ")
                                                                              )
                                                                              (branch
                                                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "17")))
                                                                                 (rule "closeFalse" (formula "2"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "orRight" (formula "17"))
                                                                              (rule "andRight" (formula "17"))
                                                                              (branch
                                                                                 (builtin "One Step Simplification" (formula "2"))
                                                                                 (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "15")))
                                                                                 (builtin "One Step Simplification" (formula "21"))
                                                                                 (builtin "One Step Simplification" (formula "20"))
                                                                                 (builtin "One Step Simplification" (formula "19"))
                                                                                 (rule "closeTrue" (formula "19"))
                                                                              )
                                                                              (branch
                                                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "17")))
                                                                                 (rule "closeFalse" (formula "2"))
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "orRight" (formula "18"))
                                                                           (rule "andRight" (formula "18"))
                                                                           (branch
                                                                              (rule "orRight" (formula "17"))
                                                                              (rule "andRight" (formula "17"))
                                                                              (branch
                                                                                 (builtin "One Step Simplification" (formula "2"))
                                                                                 (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "15")))
                                                                                 (builtin "One Step Simplification" (formula "21"))
                                                                                 (rule "closeTrue" (formula "21"))
                                                                              )
                                                                              (branch
                                                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "17")))
                                                                                 (rule "closeFalse" (formula "2"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "orRight" (formula "17"))
                                                                              (rule "andRight" (formula "17"))
                                                                              (branch
                                                                                 (builtin "One Step Simplification" (formula "2"))
                                                                                 (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "15")))
                                                                                 (builtin "One Step Simplification" (formula "21"))
                                                                                 (rule "closeTrue" (formula "21"))
                                                                              )
                                                                              (branch
                                                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "17")))
                                                                                 (rule "closeFalse" (formula "2"))
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch "0 < 1 FALSE"
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "14")))
                                                                        (builtin "One Step Simplification" (formula "17"))
                                                                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")) (ifInst ""  (formula "18")))
                                                                        (rule "true_left" (formula "1"))
                                                                        (rule "false_right" (formula "15"))
                                                                        (rule "add_zero_right" (formula "18") (term "0"))
                                                                        (rule "less_literals" (formula "17"))
                                                                        (rule "closeTrue" (formula "17"))
                                                                     )
                                                                  )
                                                                  (branch " self = self ∧ IntIterator::$nodeseq = IntIterator::$nodeseq ∧ ¬IntIterator::$nodeseq = java.lang.Object::<created> FALSE"
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "closeTrue" (formula "18"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "notLeft" (formula "6"))
                                                      (rule "eqSymm" (formula "13") (term "0"))
                                                      (rule "eqSymm" (formula "12") (term "1"))
                                                      (rule "eqSymm" (formula "11") (term "1"))
                                                      (rule "eqSymm" (formula "7"))
                                                      (rule "eqSymm" (formula "6"))
                                                      (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "22"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "22"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "22"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "notLeft" (formula "13"))
                                                      (rule "inEqSimp_leqRight" (formula "23"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "castedGetAny" (formula "12") (term "0"))
                                                      (rule "castedGetAny" (formula "13") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "10"))
                                                      (rule "inEqSimp_commuteLeq" (formula "9"))
                                                      (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "11"))
                                                      (rule "lenOfSeqSubEQ" (formula "11") (term "0") (ifseqformula "8"))
                                                      (rule "polySimp_elimSub" (formula "11") (term "1,0"))
                                                      (rule "times_zero_2" (formula "11") (term "1,1,0"))
                                                      (rule "add_zero_right" (formula "11") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "eqSymm" (formula "11") (term "1"))
                                                      (rule "lenOfSeqSubEQ" (formula "19") (term "1") (ifseqformula "8"))
                                                      (rule "eqSymm" (formula "19"))
                                                      (rule "polySimp_elimSub" (formula "19") (term "1,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,1,0"))
                                                      (rule "add_zero_right" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                                                      (rule "add_zero_right" (formula "11") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=IntIterator_seq_0"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "lenOfSeqConcat" (formula "1") (term "1,1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "1,1"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                      (rule "add_literals" (formula "1") (term "0,1"))
                                                      (rule "add_zero_left" (formula "1") (term "1"))
                                                      (rule "lenOfSeqSubEQ" (formula "1") (term "1") (ifseqformula "8"))
                                                      (rule "polySimp_elimSub" (formula "1") (term "1,1"))
                                                      (rule "times_zero_2" (formula "1") (term "1,1,1"))
                                                      (rule "add_zero_right" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "0,1") (inst "selectSK=IntList_seq_0"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "0,0,0,0,0") (inst "selectSK=IntIterator_list_0"))
                                                      (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "21"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "commute_or" (formula "12"))
                                                      (rule "inEqSimp_or_weaken1" (formula "12"))
                                                      (rule "add_zero_right" (formula "12") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "ifthenelse_split" (formula "19") (term "0"))
                                                      (branch "result_0.<created> = TRUE TRUE"
                                                         (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "19"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "ifthenelse_split" (formula "20") (term "0"))
                                                         (branch "self.nodeseq.length ≥ 1 TRUE"
                                                            (rule "eqSymm" (formula "21"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "inEqSimp_strengthen1" (formula "12") (ifseqformula "21"))
                                                            (rule "inEqSimp_contradEq7" (formula "21") (ifseqformula "12"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0"))
                                                            (rule "leq_literals" (formula "21") (term "0"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "false_right" (formula "21"))
                                                            (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "13") (term "0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "lenOfSeqSub" (formula "9") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "9") (term "1,0"))
                                                            (rule "mul_literals" (formula "9") (term "1,1,0"))
                                                            (rule "add_zero_right" (formula "9") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "eqSymm" (formula "9") (term "1"))
                                                            (rule "lenOfSeqSub" (formula "10") (term "1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "10") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "1,1,1,1,0,0"))
                                                            (rule "add_zero_right" (formula "10") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "9") (term "0"))
                                                            (rule "add_zero_right" (formula "9") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,1,0,0"))
                                                            (rule "add_zero_right" (formula "10") (term "0,0,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                            (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0,0"))
                                                            (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "lenNonNegative" (formula "9") (term "2,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "9"))
                                                            (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "9") (term "0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                                            (rule "castedGetAny" (formula "13") (term "0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "lenNonNegative" (formula "11") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "11"))
                                                            (rule "seqGetAlphaCast" (formula "15") (term "0"))
                                                            (rule "castedGetAny" (formula "15") (term "0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "lenOfSeqSub" (formula "11") (term "1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "11") (term "1,1,1,0,0"))
                                                            (rule "times_zero_2" (formula "11") (term "1,1,1,1,0,0"))
                                                            (rule "add_zero_right" (formula "11") (term "1,1,1,0,0"))
                                                            (rule "lenOfSeqSub" (formula "10") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                                                            (rule "times_zero_2" (formula "10") (term "1,1,0"))
                                                            (rule "add_zero_right" (formula "10") (term "1,0"))
                                                            (rule "lenOfSeqSubEQ" (formula "10") (term "1") (ifseqformula "12"))
                                                            (rule "eqSymm" (formula "10"))
                                                            (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                                                            (rule "times_zero_2" (formula "10") (term "1,1,0"))
                                                            (rule "add_zero_right" (formula "10") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,1,0,0"))
                                                            (rule "add_zero_right" (formula "10") (term "0,0,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                            (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "self.list.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "inEqSimp_commuteGeq" (formula "3"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "13"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0"))
                                                               (rule "leq_literals" (formula "3"))
                                                               (rule "closeFalse" (formula "3"))
                                                            )
                                                            (branch "self.list.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "22"))
                                                               (rule "close" (formula "21") (ifseqformula "4"))
                                                            )
                                                         )
                                                         (branch "self.nodeseq.length ≥ 1 FALSE"
                                                            (rule "eqSymm" (formula "21"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "20"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "inEqSimp_geqRight" (formula "20"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "3"))
                                                            (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "10") (term "2,0") (ifseqformula "13"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "eqSymm" (formula "10"))
                                                            (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "12"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "lenOfSeqEmptyEQ" (formula "12") (term "0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "lenOfSeqEmptyEQ" (formula "12") (term "0") (ifseqformula "8"))
                                                            (rule "lenOfSeqEmptyEQ" (formula "10") (term "1") (ifseqformula "8"))
                                                            (rule "lenOfSeqEmptyEQ" (formula "13") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "eqSymm" (formula "8"))
                                                            (rule "applyEq" (formula "15") (term "0,3,0,0,0,0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "applyEq" (formula "15") (term "0,3,0,0,0") (ifseqformula "9"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "inEqSimp_strengthen1" (formula "11") (ifseqformula "19"))
                                                            (rule "add_zero_right" (formula "11") (term "1"))
                                                            (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "11"))
                                                            (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "19") (term "0,0"))
                                                            (rule "leq_literals" (formula "19") (term "0"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "false_right" (formula "19"))
                                                            (rule "lenNonNegative" (formula "10") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "10"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0"))
                                                            (branch "self.list.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "closeFalse" (formula "11"))
                                                            )
                                                            (branch "self.list.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "19") (ifseqformula "20"))
                                                               (rule "close" (formula "19") (ifseqformula "3"))
                                                            )
                                                         )
                                                      )
                                                      (branch "result_0.<created> = TRUE FALSE"
                                                         (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "20"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "ifthenelse_split" (formula "21") (term "0"))
                                                         (branch "self.nodeseq.length ≥ 1 TRUE"
                                                            (rule "eqSymm" (formula "22"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "inEqSimp_strengthen1" (formula "12") (ifseqformula "22"))
                                                            (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "12"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                            (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "22") (term "0,0"))
                                                            (rule "leq_literals" (formula "22") (term "0"))
                                                            (builtin "One Step Simplification" (formula "22"))
                                                            (rule "false_right" (formula "22"))
                                                            (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "13") (term "0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "equalityToSeqGetAndSeqLenLeft" (formula "9") (inst "iv=iv"))
                                                            (rule "andLeft" (formula "9"))
                                                            (rule "lenOfSeqSub" (formula "10") (term "1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "10") (term "1,1,1,0,0"))
                                                            (rule "times_zero_2" (formula "10") (term "1,1,1,1,0,0"))
                                                            (rule "add_zero_right" (formula "10") (term "1,1,1,0,0"))
                                                            (rule "lenOfSeqSub" (formula "9") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "9") (term "1,0"))
                                                            (rule "times_zero_2" (formula "9") (term "1,1,0"))
                                                            (rule "add_zero_right" (formula "9") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "eqSymm" (formula "9") (term "1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,1,0,0"))
                                                            (rule "add_zero_right" (formula "10") (term "0,0,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "9") (term "0"))
                                                            (rule "add_zero_right" (formula "9") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                            (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0,0"))
                                                            (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "lenNonNegative" (formula "9") (term "2,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "9"))
                                                            (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "9") (term "0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                                            (rule "castedGetAny" (formula "13") (term "0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "lenNonNegative" (formula "11") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "11"))
                                                            (rule "seqGetAlphaCast" (formula "15") (term "0"))
                                                            (rule "castedGetAny" (formula "15") (term "0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "equalityToSeqGetAndSeqLenLeft" (formula "10") (inst "iv=iv"))
                                                            (rule "andLeft" (formula "10"))
                                                            (rule "lenOfSeqSub" (formula "11") (term "1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "11") (term "1,1,1,0,0"))
                                                            (rule "times_zero_2" (formula "11") (term "1,1,1,1,0,0"))
                                                            (rule "add_zero_right" (formula "11") (term "1,1,1,0,0"))
                                                            (rule "lenOfSeqSub" (formula "10") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                                                            (rule "times_zero_2" (formula "10") (term "1,1,0"))
                                                            (rule "add_zero_right" (formula "10") (term "1,0"))
                                                            (rule "lenOfSeqSubEQ" (formula "10") (term "1") (ifseqformula "12"))
                                                            (rule "eqSymm" (formula "10"))
                                                            (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                                                            (rule "times_zero_2" (formula "10") (term "1,1,0"))
                                                            (rule "add_zero_right" (formula "10") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,1,0,0"))
                                                            (rule "add_zero_right" (formula "10") (term "0,0,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                            (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "11"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "self.list.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "inEqSimp_commuteGeq" (formula "3"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "13"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0"))
                                                               (rule "add_literals" (formula "3") (term "0"))
                                                               (rule "leq_literals" (formula "3"))
                                                               (rule "closeFalse" (formula "3"))
                                                            )
                                                            (branch "self.list.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "23"))
                                                               (rule "close" (formula "21") (ifseqformula "4"))
                                                            )
                                                         )
                                                         (branch "self.nodeseq.length ≥ 1 FALSE"
                                                            (rule "eqSymm" (formula "22"))
                                                            (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "21"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "inEqSimp_geqRight" (formula "21"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "3"))
                                                            (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "10") (term "2,0") (ifseqformula "13"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "eqSymm" (formula "10"))
                                                            (rule "applyEq" (formula "11") (term "1") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "applyEq" (formula "11") (term "1") (ifseqformula "12"))
                                                            (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "12"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "lenOfSeqEmptyEQ" (formula "13") (term "0") (ifseqformula "8"))
                                                            (rule "lenOfSeqEmptyEQ" (formula "12") (term "0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "lenOfSeqEmptyEQ" (formula "14") (term "1,0") (ifseqformula "8"))
                                                            (rule "qeq_literals" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "eqSymm" (formula "8"))
                                                            (rule "applyEq" (formula "15") (term "0,3,0,0,0") (ifseqformula "9"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "applyEq" (formula "15") (term "0,3,0,0,0,0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "inEqSimp_strengthen1" (formula "11") (ifseqformula "20"))
                                                            (rule "add_zero_right" (formula "11") (term "1"))
                                                            (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "11"))
                                                            (rule "mul_literals" (formula "20") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "20") (term "0,0"))
                                                            (rule "leq_literals" (formula "20") (term "0"))
                                                            (builtin "One Step Simplification" (formula "20"))
                                                            (rule "false_right" (formula "20"))
                                                            (rule "lenNonNegative" (formula "10") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "10"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0"))
                                                            (branch "self.list.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "11"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                            (branch "self.list.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "19") (ifseqformula "21"))
                                                               (rule "close" (formula "19") (ifseqformula "3"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "notLeft" (formula "6"))
                                                   (rule "eqSymm" (formula "13") (term "0"))
                                                   (rule "eqSymm" (formula "12") (term "1"))
                                                   (rule "eqSymm" (formula "11") (term "1"))
                                                   (rule "eqSymm" (formula "7"))
                                                   (rule "eqSymm" (formula "6"))
                                                   (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "castedGetAny" (formula "12") (term "0"))
                                                   (rule "castedGetAny" (formula "11") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "9"))
                                                   (rule "inEqSimp_commuteLeq" (formula "8"))
                                                   (rule "applyEq" (formula "7") (term "2,0") (ifseqformula "10"))
                                                   (rule "lenOfSeqSubEQ" (formula "10") (term "0") (ifseqformula "7"))
                                                   (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                                                   (rule "times_zero_2" (formula "10") (term "1,1,0"))
                                                   (rule "add_zero_right" (formula "10") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "eqSymm" (formula "10") (term "1"))
                                                   (rule "lenOfSeqSubEQ" (formula "18") (term "1") (ifseqformula "7"))
                                                   (rule "eqSymm" (formula "18"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,0"))
                                                   (rule "mul_literals" (formula "18") (term "1,1,0"))
                                                   (rule "add_zero_right" (formula "18") (term "1,0"))
                                                   (rule "lenOfSeqSubEQ" (formula "9") (term "1") (ifseqformula "7"))
                                                   (rule "polySimp_elimSub" (formula "9") (term "1,1"))
                                                   (rule "times_zero_2" (formula "9") (term "1,1,1"))
                                                   (rule "add_zero_right" (formula "9") (term "1,1"))
                                                   (rule "lenOfSeqSubEQ" (formula "12") (term "1,0") (ifseqformula "7"))
                                                   (rule "polySimp_elimSub" (formula "12") (term "1,1,0"))
                                                   (rule "times_zero_2" (formula "12") (term "1,1,1,0"))
                                                   (rule "add_zero_right" (formula "12") (term "1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "10") (term "0"))
                                                   (rule "add_zero_right" (formula "10") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1"))
                                                   (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0"))
                                                   (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "9"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "0,0,0"))
                                                   (rule "inEqSimp_strengthen0" (formula "9") (ifseqformula "18"))
                                                   (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "9"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0"))
                                                   (rule "qeq_literals" (formula "18") (term "0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "false_right" (formula "18"))
                                                   (rule "pullOutSelect" (formula "22") (term "0,1") (inst "selectSK=IntIterator_nodeseq_0"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "23") (term "0,1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "lenOfSeqConcat" (formula "22") (term "1"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "polySimp_addComm0" (formula "22") (term "1"))
                                                   (rule "pullOutSelect" (formula "22") (term "0,0") (inst "selectSK=IntIterator_seq_0"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                                   (rule "polySimp_homoEq" (formula "23"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "23") (term "0,0,1,0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                   (rule "lenOfSeqConcat" (formula "22") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "22") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                   (rule "add_literals" (formula "22") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "22") (term "0,0"))
                                                   (rule "lenOfSeqSubEQ" (formula "22") (term "0,1,0") (ifseqformula "7"))
                                                   (rule "polySimp_elimSub" (formula "22") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "22") (term "1,1,0,1,0"))
                                                   (rule "add_zero_right" (formula "22") (term "1,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1,0"))
                                                   (rule "add_zero_right" (formula "22") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "22"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "orRight" (formula "22"))
                                                   (rule "eqSymm" (formula "23"))
                                                   (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "23"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "replace_known_left" (formula "12") (term "0,1,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "inEqSimp_leqRight" (formula "22"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "10"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                   (rule "inEqSimp_invertInEq1" (formula "1"))
                                                   (rule "times_zero_2" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                   (rule "mul_literals" (formula "10") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                   (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "11"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0"))
                                                   (rule "leq_literals" (formula "23") (term "0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "false_right" (formula "23"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "11"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch
                                                (rule "impRight" (formula "15"))
                                                (rule "selectOfAnonEQ" (formula "16") (term "0") (ifseqformula "9") (userinteraction))
                                                (rule "ifthenelse_split" (formula "16") (term "0") (userinteraction))
                                                (branch " (self, IntIterator::$next) ∊ ∅ ∧ ¬IntIterator::$next = java.lang.Object::<created> ∨ (self, IntIterator::$next) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "notLeft" (formula "6"))
                                                   (rule "eqSymm" (formula "25"))
                                                   (rule "eqSymm" (formula "13") (term "0"))
                                                   (rule "eqSymm" (formula "12") (term "1"))
                                                   (rule "eqSymm" (formula "11") (term "1"))
                                                   (rule "eqSymm" (formula "7"))
                                                   (rule "eqSymm" (formula "6"))
                                                   (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "24"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "24"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "24"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "notLeft" (formula "13"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "castedGetAny" (formula "25") (term "0"))
                                                   (rule "castedGetAny" (formula "12") (term "0"))
                                                   (rule "castedGetAny" (formula "11") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                   (rule "close" (formula "20") (ifseqformula "2"))
                                                )
                                                (branch " (self, IntIterator::$next) ∊ ∅ ∧ ¬IntIterator::$next = java.lang.Object::<created> ∨ (self, IntIterator::$next) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                   (rule "selectOfAnonEQ" (formula "17") (term "0,0,1") (ifseqformula "9") (userinteraction))
                                                   (rule "ifthenelse_split" (formula "17") (term "0,0,1") (userinteraction))
                                                   (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notRight" (formula "19"))
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "andLeft" (formula "7"))
                                                      (rule "notLeft" (formula "7"))
                                                      (rule "eqSymm" (formula "27"))
                                                      (rule "eqSymm" (formula "14") (term "0"))
                                                      (rule "eqSymm" (formula "13") (term "1"))
                                                      (rule "eqSymm" (formula "12") (term "1"))
                                                      (rule "eqSymm" (formula "8"))
                                                      (rule "eqSymm" (formula "7"))
                                                      (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "26"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "26"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "26"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "castedGetAny" (formula "27") (term "0"))
                                                      (rule "eqSymm" (formula "27"))
                                                      (rule "castedGetAny" (formula "12") (term "0"))
                                                      (rule "castedGetAny" (formula "13") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "9"))
                                                      (rule "inEqSimp_commuteLeq" (formula "8"))
                                                      (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "7") (term "2,0") (ifseqformula "10"))
                                                      (rule "lenOfSeqSubEQ" (formula "10") (term "0") (ifseqformula "7"))
                                                      (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                                                      (rule "times_zero_2" (formula "10") (term "1,1,0"))
                                                      (rule "add_zero_right" (formula "10") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "eqSymm" (formula "10") (term "1"))
                                                      (rule "lenOfSeqSubEQ" (formula "18") (term "1") (ifseqformula "7"))
                                                      (rule "eqSymm" (formula "18"))
                                                      (rule "polySimp_elimSub" (formula "18") (term "1,0"))
                                                      (rule "times_zero_2" (formula "18") (term "1,1,0"))
                                                      (rule "add_zero_right" (formula "18") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10") (term "0"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                                      (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=IntIterator_next_0"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "26"))
                                                      (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntIterator_list_0"))
                                                      (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "21") (ifseqformula "1") (ifseqformula "22"))
                                                      (rule "close" (formula "21") (ifseqformula "2"))
                                                   )
                                                   (branch " (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ ∅ ∧ ¬ IntLinkedList::$nodeseq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntLinkedList::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                      (rule "selectOfAnonEQ" (formula "18") (term "0,1,0,1") (ifseqformula "9") (userinteraction))
                                                      (rule "ifthenelse_split" (formula "18") (term "0,1,0,1") (userinteraction))
                                                      (branch " (self, IntIterator::$nodeseq) ∊ ∅ ∧ ¬ IntIterator::$nodeseq = java.lang.Object::<created> ∨ (self, IntIterator::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")) (ifInst ""  (formula "1")))
                                                         (rule "closeTrue" (formula "17"))
                                                      )
                                                      (branch " (self, IntIterator::$nodeseq) ∊ ∅ ∧ ¬ IntIterator::$nodeseq = java.lang.Object::<created> ∨ (self, IntIterator::$nodeseq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                         (rule "selectOfStore" (formula "19") (term "0") (userinteraction))
                                                         (rule "ifthenelse_split" (formula "19") (term "0") (userinteraction))
                                                         (branch " self = self ∧ IntIterator::$next = IntIterator::$next ∧ ¬IntIterator::$next = java.lang.Object::<created> TRUE"
                                                            (rule "castDel" (formula "20") (term "0") (userinteraction))
                                                            (rule "selectOfAnonEQ" (formula "20") (term "1,0,0,1") (ifseqformula "10") (userinteraction))
                                                            (rule "ifthenelse_split" (formula "20") (term "1,0,0,1") (userinteraction))
                                                            (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                                                               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "16")) (ifInst ""  (formula "1")))
                                                               (rule "closeTrue" (formula "20"))
                                                            )
                                                            (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                               (rule "dismissNonSelectedField" (formula "21") (term "0,0,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "21") (term "0,0,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "21") (term "0,0,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1") (userinteraction))
                                                               (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1") (userinteraction))
                                                               (rule "selectOfStore" (formula "21") (term "0,1,0,1") (userinteraction))
                                                               (rule "ifthenelse_split" (formula "21") (term "0,1,0,1") (userinteraction))
                                                               (branch " self = self ∧ IntIterator::$nodeseq = IntIterator::$nodeseq ∧ ¬IntIterator::$nodeseq = java.lang.Object::<created> TRUE"
                                                                  (rule "castDel" (formula "22") (term "0,1,0,1") (userinteraction))
                                                                  (rule "lenOfSeqConcat" (formula "22") (term "1,0,1") (userinteraction))
                                                                  (rule "defOfSeqSingleton" (formula "22") (term "0,1,1,0,1") (inst "uSub=uSub") (userinteraction))
                                                                  (rule "lenOfSeqDef" (formula "22") (term "1,1,0,1") (userinteraction))
                                                                  (rule "ifthenelse_split" (formula "22") (term "1,1,0,1") (userinteraction))
                                                                  (branch "0 < 1 TRUE"
                                                                     (rule "sub_literals" (formula "23") (term "1,1,0,1") (userinteraction))
                                                                     (rule "andLeft" (formula "10") (userinteraction))
                                                                     (rule "andLeft" (formula "10") (userinteraction))
                                                                     (rule "andLeft" (formula "10") (userinteraction))
                                                                     (rule "impLeft" (formula "11") (userinteraction))
                                                                     (branch
                                                                        (builtin "One Step Simplification" (formula "3"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "19")))
                                                                        (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "19")) (ifInst ""  (formula "24")))
                                                                        (builtin "One Step Simplification" (formula "22"))
                                                                        (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "19")) (ifInst ""  (formula "24")))
                                                                        (rule "true_left" (formula "2"))
                                                                        (rule "false_right" (formula "21"))
                                                                        (rule "less_literals" (formula "1"))
                                                                        (rule "true_left" (formula "1"))
                                                                        (rule "andLeft" (formula "7"))
                                                                        (rule "notRight" (formula "16"))
                                                                        (rule "close" (formula "19") (ifseqformula "1"))
                                                                     )
                                                                     (branch
                                                                        (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "11") (userinteraction))
                                                                        (rule "Class_invariant_axiom_for_IntLinkedList" (formula "9") (inst "sk=sk_2") (inst "i=i_5") (inst "j=j") (inst "i_0=i_0") (inst "i_1=i_1_1") (userinteraction))
                                                                        (branch "Use Axiom"
                                                                           (rule "andLeft" (formula "9") (userinteraction))
                                                                           (rule "andLeft" (formula "9") (userinteraction))
                                                                           (rule "andLeft" (formula "9") (userinteraction))
                                                                           (rule "andLeft" (formula "9") (userinteraction))
                                                                           (rule "allLeft" (formula "10") (inst "t=seqLen(Seq::select(heap, self, IntIterator::$nodeseq))") (userinteraction))
                                                                           (rule "impLeft" (formula "10") (userinteraction))
                                                                           (branch
                                                                              (builtin "One Step Simplification" (formula "10"))
                                                                              (builtin "One Step Simplification" (formula "9"))
                                                                              (builtin "One Step Simplification" (formula "3"))
                                                                              (builtin "One Step Simplification" (formula "2"))
                                                                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "24")))
                                                                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "24")) (ifInst ""  (formula "29")))
                                                                              (builtin "One Step Simplification" (formula "27"))
                                                                              (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "24")) (ifInst ""  (formula "29")))
                                                                              (builtin "One Step Simplification" (formula "22"))
                                                                              (rule "true_left" (formula "2"))
                                                                              (rule "false_right" (formula "26"))
                                                                              (rule "translateJavaSubInt" (formula "10") (term "1,0,2,1"))
                                                                              (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1,1,0"))
                                                                              (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,0"))
                                                                              (rule "less_literals" (formula "1"))
                                                                              (rule "true_left" (formula "1"))
                                                                              (rule "andLeft" (formula "10"))
                                                                              (rule "notLeft" (formula "1"))
                                                                              (rule "andLeft" (formula "11"))
                                                                              (rule "andLeft" (formula "5"))
                                                                              (rule "notRight" (formula "28"))
                                                                              (rule "andLeft" (formula "13"))
                                                                              (rule "andLeft" (formula "6"))
                                                                              (rule "andLeft" (formula "14"))
                                                                              (rule "andLeft" (formula "6"))
                                                                              (rule "andLeft" (formula "15"))
                                                                              (rule "andLeft" (formula "15"))
                                                                              (rule "notLeft" (formula "15"))
                                                                              (rule "eqSymm" (formula "11"))
                                                                              (rule "eqSymm" (formula "22") (term "0"))
                                                                              (rule "eqSymm" (formula "20"))
                                                                              (rule "eqSymm" (formula "21") (term "1"))
                                                                              (rule "eqSymm" (formula "35"))
                                                                              (rule "eqSymm" (formula "10") (term "1,0,0,1,0"))
                                                                              (rule "eqSymm" (formula "10") (term "0,1,0,1,0,1,0"))
                                                                              (rule "eqSymm" (formula "10") (term "1,1,0,1,0,1,0"))
                                                                              (rule "eqSymm" (formula "12"))
                                                                              (rule "eqSymm" (formula "10") (term "1,1,0"))
                                                                              (rule "eqSymm" (formula "14"))
                                                                              (rule "eqSymm" (formula "13"))
                                                                              (rule "eqSymm" (formula "9"))
                                                                              (rule "eqSymm" (formula "16"))
                                                                              (rule "eqSymm" (formula "15"))
                                                                              (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "33"))
                                                                              (builtin "One Step Simplification" (formula "21"))
                                                                              (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "33"))
                                                                              (builtin "One Step Simplification" (formula "22"))
                                                                              (rule "notLeft" (formula "22"))
                                                                              (rule "polySimp_elimSub" (formula "12") (term "1,0,2,0"))
                                                                              (rule "mul_literals" (formula "12") (term "1,1,0,2,0"))
                                                                              (rule "polySimp_elimSub" (formula "10") (term "1,0,0,1,1,0"))
                                                                              (rule "mul_literals" (formula "10") (term "1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "35") (term "1,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "10") (term "1,0,2,0,1,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "12") (term "1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "10") (term "1,0,0,1,1,0"))
                                                                              (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,1,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                                              (rule "subsetSingletonLeft" (formula "7"))
                                                                              (rule "subsetSingletonLeft" (formula "6"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1"))
                                                                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                                                              (rule "castedGetAny" (formula "11") (term "2,0"))
                                                                              (rule "castedGetAny" (formula "20") (term "0"))
                                                                              (rule "castedGetAny" (formula "35") (term "1,1"))
                                                                              (rule "castedGetAny" (formula "10") (term "0,1,0,0,1,0"))
                                                                              (rule "eqSymm" (formula "10") (term "1,0,0,1,0"))
                                                                              (rule "castedGetAny" (formula "10") (term "1,0,1,0,1,0,1,0"))
                                                                              (rule "castedGetAny" (formula "10") (term "0,0,1,0,1,0,1,0"))
                                                                              (rule "castedGetAny" (formula "10") (term "1,1,1,1,0"))
                                                                              (rule "castedGetAny" (formula "9") (term "0,1,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                                                              (rule "castedGetAny" (formula "21") (term "0"))
                                                                              (rule "castedGetAny" (formula "35") (term "0"))
                                                                              (rule "eqSymm" (formula "35"))
                                                                              (rule "castedGetAny" (formula "10") (term "2,0,1,1,0"))
                                                                              (rule "castedGetAny" (formula "12") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "30") (term "0"))
                                                                              (rule "castedGetAny" (formula "10") (term "1,0,1,0,0,1,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "18"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "17"))
                                                                              (rule "dismissNonSelectedField" (formula "34") (term "0,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
                                                                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "13"))
                                                                              (rule "inEqSimp_commuteGeq" (formula "16"))
                                                                              (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
                                                                              (rule "applyEq" (formula "15") (term "2,0") (ifseqformula "18"))
                                                                              (rule "lenOfSeqSubEQ" (formula "18") (term "0") (ifseqformula "15"))
                                                                              (rule "polySimp_elimSub" (formula "18") (term "1,0"))
                                                                              (rule "times_zero_2" (formula "18") (term "1,1,0"))
                                                                              (rule "add_zero_right" (formula "18") (term "1,0"))
                                                                              (builtin "One Step Simplification" (formula "18"))
                                                                              (rule "eqSymm" (formula "18") (term "1"))
                                                                              (rule "lenOfSeqSubEQ" (formula "26") (term "1") (ifseqformula "15"))
                                                                              (rule "eqSymm" (formula "26"))
                                                                              (rule "polySimp_elimSub" (formula "26") (term "1,0"))
                                                                              (rule "times_zero_2" (formula "26") (term "1,1,0"))
                                                                              (rule "add_zero_right" (formula "26") (term "1,0"))
                                                                              (rule "lenOfSeqSubEQ" (formula "20") (term "1,0") (ifseqformula "15"))
                                                                              (rule "polySimp_elimSub" (formula "20") (term "1,1,0"))
                                                                              (rule "times_zero_2" (formula "20") (term "1,1,1,0"))
                                                                              (rule "add_zero_right" (formula "20") (term "1,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0"))
                                                                              (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                                                                              (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,0"))
                                                                              (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                                                                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "12"))
                                                                              (rule "inEqSimp_commuteGeq" (formula "17"))
                                                                              (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "18"))
                                                                              (rule "eqSymm" (formula "33"))
                                                                              (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                                                              (rule "applyEq" (formula "25") (term "1") (ifseqformula "12"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                                                              (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                              (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1"))
                                                                              (rule "polySimp_mulComm0" (formula "28") (term "1,1"))
                                                                              (rule "polySimp_rightDist" (formula "28") (term "1,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1"))
                                                                              (rule "mul_literals" (formula "28") (term "0,1,1"))
                                                                              (rule "polySimp_elimOne" (formula "28") (term "1,1,1"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                                                              (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0"))
                                                                              (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                                                              (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "19") (term "0,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                                                              (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                                                              (rule "pullOutSelect" (formula "32") (term "0,0,0") (inst "selectSK=IntIterator_list_0"))
                                                                              (rule "applyEq" (formula "33") (term "1,0,0,1") (ifseqformula "1"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                              (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "1"))
                                                                              (rule "applyEqReverse" (formula "33") (term "1,0,0,1") (ifseqformula "1"))
                                                                              (rule "hideAuxiliaryEq" (formula "1"))
                                                                              (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "26"))
                                                                              (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "notRight" (formula "32"))
                                                                              (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=IntIterator_next_0"))
                                                                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                              (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                              (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "simplifySelectOfStore" (formula "1"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "castDel" (formula "1") (term "0"))
                                                                              (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
                                                                              (rule "hideAuxiliaryEq" (formula "1"))
                                                                              (rule "elementOfUnionEQ" (formula "6") (ifseqformula "9"))
                                                                              (builtin "One Step Simplification" (formula "6"))
                                                                              (rule "true_left" (formula "6"))
                                                                              (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                                                                              (builtin "One Step Simplification" (formula "6"))
                                                                              (rule "true_left" (formula "6"))
                                                                              (rule "nnf_imp2or" (formula "8") (term "1,0,1,0,1,0"))
                                                                              (rule "nnf_imp2or" (formula "6") (term "0"))
                                                                              (rule "nnf_imp2or" (formula "8") (term "0"))
                                                                              (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                                              (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                                                              (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                                                              (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                                              (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                                                              (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                                                                              (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                                              (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                                              (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                                              (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                                                              (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                                                              (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                                              (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                                                              (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                                              (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                                                              (rule "nnf_imp2or" (formula "8") (term "0,1,0,1,0"))
                                                                              (rule "nnf_notAnd" (formula "8") (term "0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,1,0,1,0"))
                                                                              (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0,1,0,1,0"))
                                                                              (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0,1,0"))
                                                                              (rule "mul_literals" (formula "8") (term "1,0,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                              (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,1,0,1,0"))
                                                                              (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,0,1,0"))
                                                                              (rule "commute_or" (formula "16"))
                                                                              (rule "inEqSimp_or_weaken1" (formula "16"))
                                                                              (rule "add_zero_right" (formula "16") (term "1,0"))
                                                                              (builtin "One Step Simplification" (formula "16"))
                                                                              (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "16"))
                                                                              (builtin "One Step Simplification" (formula "27"))
                                                                              (rule "inEqSimp_leqRight" (formula "27"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                              (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                              (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "16"))
                                                                              (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
                                                                              (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "1"))
                                                                              (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "1"))
                                                                              (rule "applyEq" (formula "15") (term "2,0") (ifseqformula "1"))
                                                                              (rule "lenOfSeqSubEQ" (formula "16") (term "2,0") (ifseqformula "15"))
                                                                              (rule "polySimp_elimSub" (formula "16") (term "1,2,0"))
                                                                              (rule "times_zero_2" (formula "16") (term "1,1,2,0"))
                                                                              (rule "add_zero_right" (formula "16") (term "1,2,0"))
                                                                              (rule "lenOfSeqSubEQ" (formula "18") (term "0") (ifseqformula "15"))
                                                                              (rule "polySimp_elimSub" (formula "18") (term "1,0"))
                                                                              (rule "mul_literals" (formula "18") (term "1,1,0"))
                                                                              (rule "add_zero_right" (formula "18") (term "1,0"))
                                                                              (rule "lenOfSeqSubEQ" (formula "20") (term "0,0,1,0") (ifseqformula "15"))
                                                                              (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1,0"))
                                                                              (rule "mul_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                                              (rule "add_zero_right" (formula "20") (term "1,0,0,1,0"))
                                                                              (rule "lenOfSeqSubEQ" (formula "32") (term "1,1,0") (ifseqformula "15"))
                                                                              (rule "polySimp_elimSub" (formula "32") (term "1,1,1,0"))
                                                                              (rule "mul_literals" (formula "32") (term "1,1,1,1,0"))
                                                                              (rule "add_zero_right" (formula "32") (term "1,1,1,0"))
                                                                              (rule "lenOfSeqSubEQ" (formula "1") (term "0") (ifseqformula "15"))
                                                                              (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                                                                              (rule "times_zero_2" (formula "1") (term "1,1,0"))
                                                                              (rule "add_zero_right" (formula "1") (term "1,0"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1") (term "1"))
                                                                              (rule "lenOfSeqSubEQ" (formula "26") (term "1,0") (ifseqformula "15"))
                                                                              (rule "polySimp_elimSub" (formula "26") (term "1,1,0"))
                                                                              (rule "times_zero_2" (formula "26") (term "1,1,1,0"))
                                                                              (rule "add_zero_right" (formula "26") (term "1,1,0"))
                                                                              (rule "lenOfSeqSubEQ" (formula "2") (term "0") (ifseqformula "15"))
                                                                              (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                                                                              (rule "times_zero_2" (formula "2") (term "1,1,0"))
                                                                              (rule "add_zero_right" (formula "2") (term "1,0"))
                                                                              (rule "lenOfSeqSubEQ" (formula "17") (term "0") (ifseqformula "15"))
                                                                              (rule "polySimp_elimSub" (formula "17") (term "1,0"))
                                                                              (rule "times_zero_2" (formula "17") (term "1,1,0"))
                                                                              (rule "add_zero_right" (formula "17") (term "1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "16") (term "0,2,0"))
                                                                              (rule "add_zero_right" (formula "16") (term "0,0,2,0"))
                                                                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,2,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
                                                                              (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,0"))
                                                                              (rule "add_zero_right" (formula "20") (term "0,0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "32") (term "0,1,1,0"))
                                                                              (rule "add_zero_right" (formula "32") (term "0,0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "1") (term "0"))
                                                                              (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0"))
                                                                              (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                                                              (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
                                                                              (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,2,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "16") (term "0,0,2,0"))
                                                                              (rule "polySimp_elimOne" (formula "16") (term "0,0,2,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,1,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "32") (term "0,0,1,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                                                              (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "26") (term "0,0,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                                                              (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "17"))
                                                                              (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "eqSymm" (formula "2") (term "1"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "17"))
                                                                              (rule "times_zero_1" (formula "18") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "18") (term "0"))
                                                                              (rule "ifthenelse_split" (formula "26") (term "0"))
                                                                              (branch "result_0.<created> = TRUE TRUE"
                                                                                 (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "26"))
                                                                                 (builtin "One Step Simplification" (formula "25"))
                                                                                 (rule "true_left" (formula "25"))
                                                                                 (rule "cnf_rightDist" (formula "8") (term "0"))
                                                                                 (rule "distr_forallAnd" (formula "8"))
                                                                                 (rule "andLeft" (formula "8"))
                                                                                 (rule "ifthenelse_split" (formula "12") (term "0"))
                                                                                 (branch "self.list.size = 0 TRUE"
                                                                                    (rule "eqSymm" (formula "13"))
                                                                                    (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                                                                    (builtin "One Step Simplification" (formula "14"))
                                                                                    (rule "eqSymm" (formula "14"))
                                                                                    (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "12"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "true_left" (formula "1"))
                                                                                    (rule "applyEq" (formula "34") (term "0,0,1,1,0") (ifseqformula "11"))
                                                                                    (rule "qeq_literals" (formula "34") (term "0,1,1,0"))
                                                                                    (builtin "One Step Simplification" (formula "34"))
                                                                                    (rule "add_literals" (formula "34") (term "1,0"))
                                                                                    (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "11"))
                                                                                    (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "11"))
                                                                                    (builtin "One Step Simplification" (formula "28"))
                                                                                    (rule "eqSymm" (formula "28"))
                                                                                    (rule "close" (formula "28") (ifseqformula "11"))
                                                                                 )
                                                                                 (branch "self.list.size = 0 FALSE"
                                                                                    (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "28"))
                                                                                    (builtin "One Step Simplification" (formula "13"))
                                                                                    (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "28"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "replace_known_left" (formula "17") (term "0,2,0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "18"))
                                                                                    (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
                                                                                    (rule "true_left" (formula "20"))
                                                                                    (rule "replace_known_left" (formula "21") (term "0,0,0,1,0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")))
                                                                                    (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "1")))
                                                                                    (rule "closeTrue" (formula "28"))
                                                                                 )
                                                                              )
                                                                              (branch "result_0.<created> = TRUE FALSE"
                                                                                 (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "27"))
                                                                                 (builtin "One Step Simplification" (formula "25"))
                                                                                 (rule "cnf_rightDist" (formula "8") (term "0"))
                                                                                 (rule "distr_forallAnd" (formula "8"))
                                                                                 (rule "andLeft" (formula "8"))
                                                                                 (rule "ifthenelse_split" (formula "12") (term "0"))
                                                                                 (branch "self.list.size = 0 TRUE"
                                                                                    (rule "eqSymm" (formula "13"))
                                                                                    (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                                                                    (builtin "One Step Simplification" (formula "14"))
                                                                                    (rule "eqSymm" (formula "14"))
                                                                                    (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "12"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "true_left" (formula "1"))
                                                                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "11"))
                                                                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "10"))
                                                                                    (rule "qeq_literals" (formula "18"))
                                                                                    (rule "true_left" (formula "18"))
                                                                                    (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "10"))
                                                                                    (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "17"))
                                                                                    (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "10"))
                                                                                    (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "eqSymm" (formula "16"))
                                                                                    (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "10"))
                                                                                    (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "10"))
                                                                                    (rule "qeq_literals" (formula "18") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "18"))
                                                                                    (rule "qeq_literals" (formula "18"))
                                                                                    (rule "true_left" (formula "18"))
                                                                                    (rule "applyEq" (formula "6") (term "1,1,0,0") (ifseqformula "10"))
                                                                                    (rule "applyEq" (formula "19") (term "0,0,0,0,1,0") (ifseqformula "10"))
                                                                                    (rule "qeq_literals" (formula "19") (term "0,0,0,1,0"))
                                                                                    (builtin "One Step Simplification" (formula "19"))
                                                                                    (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                                                                    (builtin "One Step Simplification" (formula "19"))
                                                                                    (rule "applyEq" (formula "32") (term "1,1,1,0") (ifseqformula "10"))
                                                                                    (builtin "One Step Simplification" (formula "32"))
                                                                                    (rule "add_literals" (formula "32") (term "1,0"))
                                                                                    (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "10"))
                                                                                    (rule "applyEq" (formula "7") (term "1,1,1,0") (ifseqformula "10"))
                                                                                    (rule "applyEq" (formula "26") (term "0,0,1,0") (ifseqformula "10"))
                                                                                    (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                                    (builtin "One Step Simplification" (formula "26"))
                                                                                    (rule "eqSymm" (formula "26"))
                                                                                    (rule "close" (formula "26") (ifseqformula "10"))
                                                                                 )
                                                                                 (branch "self.list.size = 0 FALSE"
                                                                                    (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "28"))
                                                                                    (builtin "One Step Simplification" (formula "13"))
                                                                                    (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "28"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
                                                                                    (rule "true_left" (formula "20"))
                                                                                    (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "replace_known_left" (formula "21") (term "0,0,0,1,0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")))
                                                                                    (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "18"))
                                                                                    (rule "replace_known_left" (formula "17") (term "0,2,0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "1"))
                                                                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "1")))
                                                                                    (rule "closeTrue" (formula "29"))
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "orRight" (formula "27"))
                                                                              (rule "andRight" (formula "27"))
                                                                              (branch
                                                                                 (rule "orRight" (formula "29"))
                                                                                 (rule "andRight" (formula "29"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "31"))
                                                                                    (rule "andRight" (formula "31"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "33"))
                                                                                       (rule "andRight" (formula "33"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "24")))
                                                                                          (builtin "One Step Simplification" (formula "32"))
                                                                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "24")) (ifInst ""  (formula "33")))
                                                                                          (builtin "One Step Simplification" (formula "30"))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (builtin "One Step Simplification" (formula "28"))
                                                                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "24")) (ifInst ""  (formula "30")))
                                                                                          (builtin "One Step Simplification" (formula "26"))
                                                                                          (rule "true_left" (formula "2"))
                                                                                          (rule "false_right" (formula "26"))
                                                                                          (rule "translateJavaSubInt" (formula "11") (term "1,0,2,1"))
                                                                                          (rule "translateJavaAddInt" (formula "9") (term "1,0,2,1,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,0"))
                                                                                          (rule "translateJavaAddInt" (formula "8") (term "1,0,2,1,1"))
                                                                                          (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1"))
                                                                                          (rule "less_literals" (formula "1"))
                                                                                          (rule "true_left" (formula "1"))
                                                                                          (rule "andLeft" (formula "11"))
                                                                                          (rule "andLeft" (formula "13"))
                                                                                          (rule "notLeft" (formula "1"))
                                                                                          (rule "andLeft" (formula "5"))
                                                                                          (rule "notRight" (formula "28"))
                                                                                          (rule "andLeft" (formula "8"))
                                                                                          (rule "andLeft" (formula "15"))
                                                                                          (rule "andLeft" (formula "6"))
                                                                                          (rule "andLeft" (formula "9"))
                                                                                          (rule "andLeft" (formula "17"))
                                                                                          (rule "andLeft" (formula "6"))
                                                                                          (rule "andLeft" (formula "10"))
                                                                                          (rule "andLeft" (formula "19"))
                                                                                          (rule "notLeft" (formula "10"))
                                                                                          (rule "andLeft" (formula "18"))
                                                                                          (rule "notLeft" (formula "18"))
                                                                                          (rule "eqSymm" (formula "25") (term "0"))
                                                                                          (rule "eqSymm" (formula "38"))
                                                                                          (rule "eqSymm" (formula "24") (term "1"))
                                                                                          (rule "eqSymm" (formula "14"))
                                                                                          (rule "eqSymm" (formula "23"))
                                                                                          (rule "eqSymm" (formula "13") (term "1,1,0,1,0,1,0"))
                                                                                          (rule "eqSymm" (formula "13") (term "0,1,0,1,0,1,0"))
                                                                                          (rule "eqSymm" (formula "13") (term "1,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "15"))
                                                                                          (rule "eqSymm" (formula "13") (term "1,1,0"))
                                                                                          (rule "eqSymm" (formula "16"))
                                                                                          (rule "eqSymm" (formula "17"))
                                                                                          (rule "eqSymm" (formula "9"))
                                                                                          (rule "eqSymm" (formula "12"))
                                                                                          (rule "eqSymm" (formula "11") (term "0,1,0"))
                                                                                          (rule "eqSymm" (formula "11") (term "1,1,0"))
                                                                                          (rule "eqSymm" (formula "10"))
                                                                                          (rule "eqSymm" (formula "19"))
                                                                                          (rule "eqSymm" (formula "18"))
                                                                                          (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "36"))
                                                                                          (builtin "One Step Simplification" (formula "24"))
                                                                                          (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "36"))
                                                                                          (builtin "One Step Simplification" (formula "25"))
                                                                                          (rule "notLeft" (formula "25"))
                                                                                          (rule "polySimp_elimSub" (formula "15") (term "1,0,2,0"))
                                                                                          (rule "mul_literals" (formula "15") (term "1,1,0,2,0"))
                                                                                          (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
                                                                                          (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "38") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0,1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "12") (term "1,0,2,0"))
                                                                                          (rule "castedGetAny" (formula "13") (term "0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "15") (term "1,0,2,0"))
                                                                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "12") (term "1,0,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "37") (term "0,0,1"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                                          (rule "subsetSingletonLeft" (formula "6"))
                                                                                          (rule "subsetSingletonLeft" (formula "7"))
                                                                                          (rule "castedGetAny" (formula "32") (term "0"))
                                                                                          (rule "castedGetAny" (formula "38") (term "1,1"))
                                                                                          (rule "castedGetAny" (formula "14") (term "2,0"))
                                                                                          (rule "castedGetAny" (formula "23") (term "0"))
                                                                                          (rule "castedGetAny" (formula "13") (term "0,0,1,0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "13") (term "1,0,1,0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "13") (term "0,1,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "13") (term "1,0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "13") (term "1,1,1,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                                                                          (rule "castedGetAny" (formula "9") (term "0,1,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                                                          (rule "castedGetAny" (formula "12") (term "1,1"))
                                                                                          (rule "castedGetAny" (formula "11") (term "0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "11") (term "1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "10") (term "0"))
                                                                                          (rule "eqSymm" (formula "10"))
                                                                                          (rule "castedGetAny" (formula "24") (term "0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                                                          (rule "castedGetAny" (formula "38") (term "0"))
                                                                                          (rule "eqSymm" (formula "38"))
                                                                                          (rule "castedGetAny" (formula "13") (term "2,0,1,1,0"))
                                                                                          (rule "castedGetAny" (formula "12") (term "2,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "37") (term "0,0,1"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "21"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                                                          (rule "castedGetAny" (formula "13") (term "1,0,1,0,0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "20"))
                                                                                          (rule "castedGetAny" (formula "10") (term "1,0"))
                                                                                          (rule "eqSymm" (formula "10"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "37") (term "0,0,1"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                                          (rule "applyEq" (formula "10") (term "1,0,1,0") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "15"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "20"))
                                                                                          (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "21"))
                                                                                          (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "21"))
                                                                                          (rule "eqSymm" (formula "36"))
                                                                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "21"))
                                                                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "15"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "18"))
                                                                                          (rule "applyEq" (formula "17") (term "2,0") (ifseqformula "20"))
                                                                                          (rule "lenOfSeqSubEQ" (formula "20") (term "0") (ifseqformula "17"))
                                                                                          (rule "polySimp_elimSub" (formula "20") (term "1,0"))
                                                                                          (rule "mul_literals" (formula "20") (term "1,1,0"))
                                                                                          (rule "add_zero_right" (formula "20") (term "1,0"))
                                                                                          (builtin "One Step Simplification" (formula "20"))
                                                                                          (rule "eqSymm" (formula "20") (term "1"))
                                                                                          (rule "lenOfSeqSubEQ" (formula "28") (term "1") (ifseqformula "17"))
                                                                                          (rule "eqSymm" (formula "28"))
                                                                                          (rule "polySimp_elimSub" (formula "28") (term "1,0"))
                                                                                          (rule "times_zero_2" (formula "28") (term "1,1,0"))
                                                                                          (rule "add_zero_right" (formula "28") (term "1,0"))
                                                                                          (rule "lenOfSeqSubEQ" (formula "19") (term "0") (ifseqformula "17"))
                                                                                          (rule "polySimp_elimSub" (formula "19") (term "1,0"))
                                                                                          (rule "times_zero_2" (formula "19") (term "1,1,0"))
                                                                                          (rule "add_zero_right" (formula "19") (term "1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "0"))
                                                                                          (rule "add_zero_right" (formula "20") (term "0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                                                                                          (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
                                                                                          (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                                                          (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                                                                          (rule "applyEq" (formula "28") (term "1") (ifseqformula "14"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                                                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                                                                          (rule "inEqSimp_strengthen0" (formula "19") (ifseqformula "28"))
                                                                                          (rule "inEqSimp_contradEq3" (formula "28") (ifseqformula "19"))
                                                                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                                                          (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                                                          (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                                                          (rule "add_zero_right" (formula "28") (term "0,0"))
                                                                                          (rule "qeq_literals" (formula "28") (term "0"))
                                                                                          (builtin "One Step Simplification" (formula "28"))
                                                                                          (rule "false_right" (formula "28"))
                                                                                          (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=IntIterator_list_0"))
                                                                                          (rule "applyEq" (formula "34") (term "1,0,0,1") (ifseqformula "1"))
                                                                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                                                          (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "simplifySelectOfStore" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "applyEqReverse" (formula "34") (term "1,0,0,1") (ifseqformula "1"))
                                                                                          (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "1"))
                                                                                          (rule "hideAuxiliaryEq" (formula "1"))
                                                                                          (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "28"))
                                                                                          (builtin "One Step Simplification" (formula "33"))
                                                                                          (rule "notRight" (formula "33"))
                                                                                          (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=IntIterator_next_0"))
                                                                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                                          (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "simplifySelectOfStore" (formula "1"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "castDel" (formula "1") (term "0"))
                                                                                          (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "1"))
                                                                                          (rule "hideAuxiliaryEq" (formula "1"))
                                                                                          (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                          (builtin "One Step Simplification" (formula "7"))
                                                                                          (rule "true_left" (formula "7"))
                                                                                          (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (rule "true_left" (formula "6"))
                                                                                          (rule "nnf_imp2or" (formula "8") (term "1,0"))
                                                                                          (rule "nnf_imp2or" (formula "10") (term "1,0,1,0,1,0"))
                                                                                          (rule "nnf_imp2or" (formula "6") (term "0"))
                                                                                          (rule "nnf_imp2or" (formula "8") (term "0"))
                                                                                          (rule "nnf_imp2or" (formula "10") (term "0"))
                                                                                          (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                                                          (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                                                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                                                          (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                                                          (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                                                                          (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                                                          (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                                                          (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                                                                          (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                                                          (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                                                                          (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                                                                          (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                                                          (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                                                                          (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                                                                          (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                                                                          (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                                                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                                                          (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                                                                          (rule "nnf_imp2or" (formula "10") (term "0,1,0,1,0"))
                                                                                          (rule "nnf_notAnd" (formula "10") (term "0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,0,1,0"))
                                                                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1,0,1,0"))
                                                                                          (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0,1,0"))
                                                                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                                                                          (rule "commute_or" (formula "19"))
                                                                                          (rule "inEqSimp_or_weaken1" (formula "19"))
                                                                                          (rule "add_zero_right" (formula "19") (term "1,0"))
                                                                                          (builtin "One Step Simplification" (formula "19"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "17"))
                                                                                          (rule "mul_literals" (formula "19") (term "0,0"))
                                                                                          (rule "add_zero_left" (formula "19") (term "0"))
                                                                                          (rule "ifthenelse_split" (formula "27") (term "0"))
                                                                                          (branch "result_0.<created> = TRUE TRUE"
                                                                                             (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "27"))
                                                                                             (builtin "One Step Simplification" (formula "26"))
                                                                                             (rule "true_left" (formula "26"))
                                                                                             (rule "shift_paren_or" (formula "8") (term "0"))
                                                                                             (rule "cnf_rightDist" (formula "6") (term "0"))
                                                                                             (rule "distr_forallAnd" (formula "6"))
                                                                                             (rule "andLeft" (formula "6"))
                                                                                             (rule "ifthenelse_split" (formula "12") (term "0"))
                                                                                             (branch "self.list.size = 0 TRUE"
                                                                                                (rule "eqSymm" (formula "13"))
                                                                                                (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                                                                                (builtin "One Step Simplification" (formula "14"))
                                                                                                (rule "eqSymm" (formula "14"))
                                                                                                (rule "applyEq" (formula "19") (term "1") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "8") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
                                                                                                (rule "add_zero_right" (formula "8") (term "1,1,0,0,1,0"))
                                                                                                (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "12"))
                                                                                                (rule "add_zero_right" (formula "20") (term "1"))
                                                                                                (rule "applyEq" (formula "6") (term "1,1,0,0") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "9") (term "1,1,0,0,0") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "11") (term "1,1,0,0,1,0,1,0") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "7") (term "1,1,1,0") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "12"))
                                                                                                (rule "qeq_literals" (formula "21"))
                                                                                                (rule "true_left" (formula "21"))
                                                                                                (rule "applyEq" (formula "11") (term "1,1,0,0,1,1,0") (ifseqformula "12"))
                                                                                                (rule "add_literals" (formula "11") (term "1,0,0,1,1,0"))
                                                                                                (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "12"))
                                                                                                (rule "add_literals" (formula "10") (term "1,0,0"))
                                                                                                (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "21"))
                                                                                                (rule "add_zero_left" (formula "10") (term "0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                                                                                                (rule "leq_literals" (formula "10") (term "0,0,0"))
                                                                                                (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "34")))
                                                                                                (rule "closeFalse" (formula "10"))
                                                                                             )
                                                                                             (branch "self.list.size = 0 FALSE"
                                                                                                (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "29"))
                                                                                                (builtin "One Step Simplification" (formula "13"))
                                                                                                (rule "inEqSimp_strengthen1" (formula "20") (ifseqformula "29"))
                                                                                                (rule "add_zero_right" (formula "20") (term "1"))
                                                                                                (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "20"))
                                                                                                (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "29") (term "0,0"))
                                                                                                (rule "leq_literals" (formula "29") (term "0"))
                                                                                                (builtin "One Step Simplification" (formula "29"))
                                                                                                (rule "false_right" (formula "29"))
                                                                                                (rule "commute_or_2" (formula "6") (term "0"))
                                                                                                (rule "commute_or_2" (formula "9") (term "0,0"))
                                                                                                (rule "shift_paren_or" (formula "7") (term "0"))
                                                                                                (rule "commute_or" (formula "6") (term "0,0"))
                                                                                                (rule "ifthenelse_split" (formula "10") (term "0"))
                                                                                                (branch "self.nodeseq.length = -1 + self.list.size TRUE"
                                                                                                   (rule "eqSymm" (formula "11"))
                                                                                                   (rule "close" (formula "31") (ifseqformula "11"))
                                                                                                )
                                                                                                (branch "self.nodeseq.length = -1 + self.list.size FALSE"
                                                                                                   (rule "close" (formula "35") (ifseqformula "10"))
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                          (branch "result_0.<created> = TRUE FALSE"
                                                                                             (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "28"))
                                                                                             (builtin "One Step Simplification" (formula "26"))
                                                                                             (rule "shift_paren_or" (formula "8") (term "0"))
                                                                                             (rule "cnf_rightDist" (formula "6") (term "0"))
                                                                                             (rule "distr_forallAnd" (formula "6"))
                                                                                             (rule "andLeft" (formula "6"))
                                                                                             (rule "commute_or_2" (formula "6") (term "0"))
                                                                                             (rule "ifthenelse_split" (formula "12") (term "0"))
                                                                                             (branch "self.list.size = 0 TRUE"
                                                                                                (rule "eqSymm" (formula "13"))
                                                                                                (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "12"))
                                                                                                (builtin "One Step Simplification" (formula "14"))
                                                                                                (rule "eqSymm" (formula "14"))
                                                                                                (rule "applyEq" (formula "9") (term "1,1,0,0,0") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "12"))
                                                                                                (rule "qeq_literals" (formula "21"))
                                                                                                (rule "true_left" (formula "21"))
                                                                                                (rule "applyEq" (formula "7") (term "1,1,1,0") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "11") (term "1,1,0,0,1,0,1,0") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "8") (term "1,1,1,0,0,1,0") (ifseqformula "12"))
                                                                                                (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                                                                (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "12"))
                                                                                                (rule "add_zero_right" (formula "20") (term "1"))
                                                                                                (rule "applyEq" (formula "19") (term "1") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
                                                                                                (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "12"))
                                                                                                (rule "add_zero_right" (formula "10") (term "1,0,0"))
                                                                                                (rule "applyEq" (formula "11") (term "1,1,0,0,1,1,0") (ifseqformula "12"))
                                                                                                (rule "add_literals" (formula "11") (term "1,0,0,1,1,0"))
                                                                                                (rule "applyEq" (formula "15") (term "1") (ifseqformula "12"))
                                                                                                (rule "inEqSimp_contradEq7" (formula "10") (term "0,0") (ifseqformula "21"))
                                                                                                (rule "add_zero_left" (formula "10") (term "0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "10") (term "0,0,0,0"))
                                                                                                (rule "leq_literals" (formula "10") (term "0,0,0"))
                                                                                                (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "35")))
                                                                                                (rule "closeFalse" (formula "10"))
                                                                                             )
                                                                                             (branch "self.list.size = 0 FALSE"
                                                                                                (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "29"))
                                                                                                (builtin "One Step Simplification" (formula "13"))
                                                                                                (rule "inEqSimp_strengthen1" (formula "20") (ifseqformula "29"))
                                                                                                (rule "add_zero_right" (formula "20") (term "1"))
                                                                                                (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "20"))
                                                                                                (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "29") (term "0,0"))
                                                                                                (rule "leq_literals" (formula "29") (term "0"))
                                                                                                (builtin "One Step Simplification" (formula "29"))
                                                                                                (rule "false_right" (formula "29"))
                                                                                                (rule "commute_or_2" (formula "9") (term "0,0"))
                                                                                                (rule "shift_paren_or" (formula "7") (term "0"))
                                                                                                (rule "commute_or" (formula "6") (term "0,0"))
                                                                                                (rule "ifthenelse_split" (formula "10") (term "0"))
                                                                                                (branch "self.nodeseq.length = -1 + self.list.size TRUE"
                                                                                                   (rule "eqSymm" (formula "11"))
                                                                                                   (rule "close" (formula "32") (ifseqformula "11"))
                                                                                                )
                                                                                                (branch "self.nodeseq.length = -1 + self.list.size FALSE"
                                                                                                   (rule "close" (formula "36") (ifseqformula "10"))
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "24")))
                                                                                          (builtin "One Step Simplification" (formula "32"))
                                                                                          (rule "closeTrue" (formula "32"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "33"))
                                                                                       (rule "andRight" (formula "33"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "31"))
                                                                                    (rule "andRight" (formula "31"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "33"))
                                                                                       (rule "andRight" (formula "33"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "24")))
                                                                                          (builtin "One Step Simplification" (formula "32"))
                                                                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "24")) (ifInst ""  (formula "33")))
                                                                                          (builtin "One Step Simplification" (formula "30"))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (builtin "One Step Simplification" (formula "28"))
                                                                                          (rule "closeTrue" (formula "28"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "24")))
                                                                                          (builtin "One Step Simplification" (formula "32"))
                                                                                          (rule "closeTrue" (formula "32"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "33"))
                                                                                       (rule "andRight" (formula "33"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "orRight" (formula "29"))
                                                                                 (rule "andRight" (formula "29"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "31"))
                                                                                    (rule "andRight" (formula "31"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "33"))
                                                                                       (rule "andRight" (formula "33"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "33"))
                                                                                       (rule "andRight" (formula "33"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "31"))
                                                                                    (rule "andRight" (formula "31"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "33"))
                                                                                       (rule "andRight" (formula "33"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "33"))
                                                                                       (rule "andRight" (formula "33"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch "Show Axiom Satisfiability"
                                                                           (rule "orRight" (formula "23"))
                                                                           (rule "andRight" (formula "23"))
                                                                           (branch
                                                                              (rule "orRight" (formula "25"))
                                                                              (rule "andRight" (formula "25"))
                                                                              (branch
                                                                                 (rule "orRight" (formula "27"))
                                                                                 (rule "andRight" (formula "27"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3"))
                                                                                       (builtin "One Step Simplification" (formula "2"))
                                                                                       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")))
                                                                                       (builtin "One Step Simplification" (formula "29"))
                                                                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "21")) (ifInst ""  (formula "30")))
                                                                                       (builtin "One Step Simplification" (formula "27"))
                                                                                       (builtin "One Step Simplification" (formula "26"))
                                                                                       (builtin "One Step Simplification" (formula "25"))
                                                                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "21")) (ifInst ""  (formula "27")))
                                                                                       (builtin "One Step Simplification" (formula "23"))
                                                                                       (builtin "One Step Simplification" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "18"))
                                                                                       (rule "true_left" (formula "2"))
                                                                                       (rule "false_right" (formula "23"))
                                                                                       (rule "translateJavaAddInt" (formula "18") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                                                                       (rule "translateJavaSubInt" (formula "18") (term "1,0,2,1,1,0,0"))
                                                                                       (rule "translateJavaSubInt" (formula "18") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                                                                       (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                                                       (rule "translateJavaSubInt" (formula "17") (term "1,0,2,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "17") (term "1,0,1,1,1,0,1,0,0,0"))
                                                                                       (rule "less_literals" (formula "1"))
                                                                                       (rule "true_left" (formula "1"))
                                                                                       (rule "andLeft" (formula "7"))
                                                                                       (rule "notLeft" (formula "1"))
                                                                                       (rule "notRight" (formula "23"))
                                                                                       (rule "notRight" (formula "19"))
                                                                                       (rule "close" (formula "19") (ifseqformula "1"))
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3"))
                                                                                       (builtin "One Step Simplification" (formula "2"))
                                                                                       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")))
                                                                                       (builtin "One Step Simplification" (formula "29"))
                                                                                       (rule "closeTrue" (formula "29"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3"))
                                                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")))
                                                                                       (rule "closeFalse" (formula "2"))
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3"))
                                                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")))
                                                                                       (rule "closeFalse" (formula "2"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "orRight" (formula "27"))
                                                                                 (rule "andRight" (formula "27"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3"))
                                                                                       (builtin "One Step Simplification" (formula "2"))
                                                                                       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")))
                                                                                       (builtin "One Step Simplification" (formula "29"))
                                                                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "21")) (ifInst ""  (formula "30")))
                                                                                       (builtin "One Step Simplification" (formula "27"))
                                                                                       (builtin "One Step Simplification" (formula "26"))
                                                                                       (builtin "One Step Simplification" (formula "25"))
                                                                                       (rule "closeTrue" (formula "25"))
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3"))
                                                                                       (builtin "One Step Simplification" (formula "2"))
                                                                                       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")))
                                                                                       (builtin "One Step Simplification" (formula "29"))
                                                                                       (rule "closeTrue" (formula "29"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3"))
                                                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")))
                                                                                       (rule "closeFalse" (formula "2"))
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3"))
                                                                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")))
                                                                                       (rule "closeFalse" (formula "2"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "orRight" (formula "25"))
                                                                              (rule "andRight" (formula "25"))
                                                                              (branch
                                                                                 (rule "orRight" (formula "27"))
                                                                                 (rule "andRight" (formula "27"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                                                                       (rule "closeFalse" (formula "3"))
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                                                                       (rule "closeFalse" (formula "3"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                                                                       (rule "closeFalse" (formula "3"))
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                                                                       (rule "closeFalse" (formula "3"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "orRight" (formula "27"))
                                                                                 (rule "andRight" (formula "27"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                                                                       (rule "closeFalse" (formula "3"))
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                                                                       (rule "closeFalse" (formula "3"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                                                                       (rule "closeFalse" (formula "3"))
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "19"))
                                                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                                                                                       (rule "closeFalse" (formula "3"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "0 < 1 FALSE"
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "15")))
                                                                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "15")) (ifInst ""  (formula "20")))
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")) (ifInst ""  (formula "20")))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "false_right" (formula "17"))
                                                                     (rule "less_literals" (formula "18"))
                                                                     (rule "closeTrue" (formula "18"))
                                                                  )
                                                               )
                                                               (branch " self = self ∧ IntIterator::$nodeseq = IntIterator::$nodeseq ∧ ¬IntIterator::$nodeseq = java.lang.Object::<created> FALSE"
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "closeTrue" (formula "21"))
                                                               )
                                                            )
                                                         )
                                                         (branch " self = self ∧ IntIterator::$next = IntIterator::$next ∧ ¬IntIterator::$next = java.lang.Object::<created> FALSE"
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "closeTrue" (formula "19"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "impRight" (formula "15"))
                                             (rule "selectOfAnonEQ" (formula "16") (term "0") (ifseqformula "9") (userinteraction))
                                             (rule "ifthenelse_split" (formula "16") (term "0") (userinteraction))
                                             (branch " (self.next@heapAfter_valueOf, IntNode::$data) ∊ ∅ ∧ ¬IntNode::$data = java.lang.Object::<created> ∨ (self.next@heapAfter_valueOf, IntNode::$data) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                                (rule "andLeft" (formula "8"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "andLeft" (formula "6"))
                                                (rule "notLeft" (formula "6"))
                                                (rule "eqSymm" (formula "25"))
                                                (rule "eqSymm" (formula "13") (term "0"))
                                                (rule "eqSymm" (formula "12") (term "1"))
                                                (rule "eqSymm" (formula "11") (term "1"))
                                                (rule "eqSymm" (formula "7"))
                                                (rule "eqSymm" (formula "6"))
                                                (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "castedGetAny" (formula "25") (term "0"))
                                                (rule "castedGetAny" (formula "12") (term "0"))
                                                (rule "castedGetAny" (formula "11") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "9"))
                                                (rule "inEqSimp_commuteLeq" (formula "8"))
                                                (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
                                                (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "10"))
                                                (rule "applyEq" (formula "7") (term "2,0") (ifseqformula "10"))
                                                (rule "lenOfSeqSubEQ" (formula "18") (term "1") (ifseqformula "7"))
                                                (rule "eqSymm" (formula "18"))
                                                (rule "polySimp_elimSub" (formula "18") (term "1,0"))
                                                (rule "times_zero_2" (formula "18") (term "1,1,0"))
                                                (rule "add_zero_right" (formula "18") (term "1,0"))
                                                (rule "lenOfSeqSubEQ" (formula "10") (term "0") (ifseqformula "7"))
                                                (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                                                (rule "times_zero_2" (formula "10") (term "1,1,0"))
                                                (rule "add_zero_right" (formula "10") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "eqSymm" (formula "10") (term "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
                                                (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0,0"))
                                                (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntIterator_next_0"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "referencedObjectIsCreatedRightEQ" (formula "21") (ifseqformula "1") (ifseqformula "22"))
                                                (rule "close" (formula "21") (ifseqformula "2"))
                                             )
                                             (branch " (self.next@heapAfter_valueOf, IntNode::$data) ∊ ∅ ∧ ¬IntNode::$data = java.lang.Object::<created> ∨ (self.next@heapAfter_valueOf, IntNode::$data) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                (rule "dismissNonSelectedField" (formula "17") (term "0") (userinteraction))
                                                (rule "dismissNonSelectedField" (formula "17") (term "0") (userinteraction))
                                                (rule "selectOfAnonEQ" (formula "17") (term "0,0,1") (ifseqformula "9") (userinteraction))
                                                (rule "selectOfAnonEQ" (formula "17") (term "1,0") (ifseqformula "9") (userinteraction))
                                                (rule "ifthenelse_split" (formula "17") (term "1,0") (userinteraction))
                                                (branch " (self, IntIterator::$next) ∊ ∅ ∧ ¬IntIterator::$next = java.lang.Object::<created> ∨ (self, IntIterator::$next) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "2")))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "notRight" (formula "18"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "notLeft" (formula "7"))
                                                   (rule "eqSymm" (formula "26"))
                                                   (rule "eqSymm" (formula "14") (term "0"))
                                                   (rule "eqSymm" (formula "13") (term "1"))
                                                   (rule "eqSymm" (formula "12") (term "1"))
                                                   (rule "eqSymm" (formula "8"))
                                                   (rule "eqSymm" (formula "7"))
                                                   (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "25"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "25"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "25"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "notLeft" (formula "14"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "26") (term "2,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "26") (term "1"))
                                                   (rule "castedGetAny" (formula "12") (term "0"))
                                                   (rule "castedGetAny" (formula "13") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "26") (term "2,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,0,0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                   (rule "close" (formula "21") (ifseqformula "3"))
                                                )
                                                (branch " (self, IntIterator::$next) ∊ ∅ ∧ ¬IntIterator::$next = java.lang.Object::<created> ∨ (self, IntIterator::$next) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                   (rule "ifthenelse_split" (formula "18") (term "0,0,1") (userinteraction))
                                                   (branch " (self.list@heapAfter_valueOf, IntList::$seq) ∊ ∅ ∧ ¬IntList::$seq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntList::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")))
                                                      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "2")))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notRight" (formula "20"))
                                                      (rule "notRight" (formula "20"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "notLeft" (formula "4"))
                                                      (rule "notLeft" (formula "3"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "andLeft" (formula "8"))
                                                      (rule "notLeft" (formula "8"))
                                                      (rule "eqSymm" (formula "28"))
                                                      (rule "eqSymm" (formula "15") (term "0"))
                                                      (rule "eqSymm" (formula "14") (term "1"))
                                                      (rule "eqSymm" (formula "13") (term "1"))
                                                      (rule "eqSymm" (formula "9"))
                                                      (rule "eqSymm" (formula "8"))
                                                      (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "27"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "notLeft" (formula "15"))
                                                      (rule "dismissNonSelectedField" (formula "2") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "23") (term "0"))
                                                      (rule "castedGetAny" (formula "28") (term "0"))
                                                      (rule "eqSymm" (formula "28"))
                                                      (rule "castedGetAny" (formula "13") (term "0"))
                                                      (rule "castedGetAny" (formula "14") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "2") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "23") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "2") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "22") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "10"))
                                                      (rule "inEqSimp_commuteLeq" (formula "9"))
                                                      (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "11"))
                                                      (rule "lenOfSeqSubEQ" (formula "11") (term "0") (ifseqformula "8"))
                                                      (rule "polySimp_elimSub" (formula "11") (term "1,0"))
                                                      (rule "times_zero_2" (formula "11") (term "1,1,0"))
                                                      (rule "add_zero_right" (formula "11") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "eqSymm" (formula "11") (term "1"))
                                                      (rule "lenOfSeqSubEQ" (formula "19") (term "1") (ifseqformula "8"))
                                                      (rule "eqSymm" (formula "19"))
                                                      (rule "polySimp_elimSub" (formula "19") (term "1,0"))
                                                      (rule "times_zero_2" (formula "19") (term "1,1,0"))
                                                      (rule "add_zero_right" (formula "19") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                                                      (rule "add_zero_right" (formula "11") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                                      (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=IntIterator_next_0"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "28") (term "1,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "27"))
                                                      (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=IntIterator_list_0"))
                                                      (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "23") (ifseqformula "1") (ifseqformula "22"))
                                                      (rule "close" (formula "23") (ifseqformula "3"))
                                                   )
                                                   (branch " (self.list@heapAfter_valueOf, IntList::$seq) ∊ ∅ ∧ ¬IntList::$seq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntList::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                      (rule "selectOfAnonEQ" (formula "19") (term "1,0,0,1") (ifseqformula "9") (userinteraction))
                                                      (rule "ifthenelse_split" (formula "19") (term "1,0,0,1") (userinteraction))
                                                      (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")) (ifInst ""  (formula "1")))
                                                         (rule "closeTrue" (formula "18"))
                                                      )
                                                      (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,0,1") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "1,0,0,1") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,0,1") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "1,0,0,1") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,0,1") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "1,0,0,1") (userinteraction))
                                                         (rule "selectOfAnonEQ" (formula "20") (term "0,1,0,1") (ifseqformula "9") (userinteraction))
                                                         (rule "ifthenelse_split" (formula "20") (term "0,1,0,1") (userinteraction))
                                                         (branch " (self, IntIterator::$seq) ∊ ∅ ∧ ¬IntIterator::$seq = java.lang.Object::<created> ∨ (self, IntIterator::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "15")) (ifInst ""  (formula "1")))
                                                            (rule "closeTrue" (formula "20"))
                                                         )
                                                         (branch " (self, IntIterator::$seq) ∊ ∅ ∧ ¬IntIterator::$seq = java.lang.Object::<created> ∨ (self, IntIterator::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                            (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1") (userinteraction))
                                                            (rule "selectOfStore" (formula "21") (term "0,1,0,1") (userinteraction))
                                                            (rule "ifthenelse_split" (formula "21") (term "0,1,0,1") (userinteraction))
                                                            (branch " self = self ∧ IntIterator::$seq = IntIterator::$seq ∧ ¬IntIterator::$seq = java.lang.Object::<created> TRUE"
                                                               (rule "castDel" (formula "22") (term "0,1,0,1") (userinteraction))
                                                               (rule "selectOfStore" (formula "22") (term "1,0") (userinteraction))
                                                               (rule "ifthenelse_split" (formula "22") (term "1,0") (userinteraction))
                                                               (branch " self = self ∧ IntIterator::$next = IntIterator::$next ∧ ¬IntIterator::$next = java.lang.Object::<created> TRUE"
                                                                  (rule "dismissNonSelectedField" (formula "23") (term "0") (userinteraction))
                                                                  (rule "castDel" (formula "23") (term "1,0") (userinteraction))
                                                                  (rule "lenOfSeqConcat" (formula "23") (term "1,0,1") (userinteraction))
                                                                  (rule "defOfSeqSingleton" (formula "23") (term "0,1,1,0,1") (inst "uSub=uSub") (userinteraction))
                                                                  (rule "lenOfSeqDef" (formula "23") (term "1,1,0,1") (userinteraction))
                                                                  (rule "ifthenelse_split" (formula "23") (term "1,1,0,1") (userinteraction))
                                                                  (branch "0 < 1 TRUE"
                                                                     (rule "sub_literals" (formula "24") (term "1,1,0,1") (userinteraction))
                                                                     (rule "andLeft" (formula "10") (userinteraction))
                                                                     (rule "andLeft" (formula "10") (userinteraction))
                                                                     (rule "andLeft" (formula "10") (userinteraction))
                                                                     (rule "impLeft" (formula "11") (userinteraction))
                                                                     (branch
                                                                        (builtin "One Step Simplification" (formula "3"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "19")))
                                                                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "19")) (ifInst ""  (formula "25")))
                                                                        (builtin "One Step Simplification" (formula "23"))
                                                                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "19")) (ifInst ""  (formula "25")))
                                                                        (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "3")))
                                                                        (rule "true_left" (formula "2"))
                                                                        (rule "false_right" (formula "22"))
                                                                        (rule "less_literals" (formula "1"))
                                                                        (rule "true_left" (formula "1"))
                                                                        (rule "andLeft" (formula "7"))
                                                                        (rule "notRight" (formula "16"))
                                                                        (rule "close" (formula "19") (ifseqformula "1"))
                                                                     )
                                                                     (branch
                                                                        (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "11") (userinteraction))
                                                                        (rule "Class_invariant_axiom_for_IntLinkedList" (formula "9") (inst "sk=sk_2") (inst "i=i_5") (inst "j=j") (inst "i_0=i_0") (inst "i_1=i_1_1") (userinteraction))
                                                                        (branch "Use Axiom"
                                                                           (rule "orRight" (formula "22"))
                                                                           (rule "andRight" (formula "22"))
                                                                           (branch
                                                                              (rule "orRight" (formula "24"))
                                                                              (rule "andRight" (formula "24"))
                                                                              (branch
                                                                                 (rule "orRight" (formula "26"))
                                                                                 (rule "andRight" (formula "26"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "28"))
                                                                                    (rule "andRight" (formula "28"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (opengoal " ")
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "19")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "19")) (ifInst ""  (formula "30")))
                                                                                          (builtin "One Step Simplification" (formula "27"))
                                                                                          (rule "closeTrue" (formula "27"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "28"))
                                                                                    (rule "andRight" (formula "28"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "19")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "19")) (ifInst ""  (formula "30")))
                                                                                          (builtin "One Step Simplification" (formula "27"))
                                                                                          (builtin "One Step Simplification" (formula "26"))
                                                                                          (builtin "One Step Simplification" (formula "25"))
                                                                                          (rule "closeTrue" (formula "25"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "19")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "19")) (ifInst ""  (formula "30")))
                                                                                          (builtin "One Step Simplification" (formula "27"))
                                                                                          (rule "closeTrue" (formula "27"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "orRight" (formula "26"))
                                                                                 (rule "andRight" (formula "26"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "28"))
                                                                                    (rule "andRight" (formula "28"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "28"))
                                                                                    (rule "andRight" (formula "28"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "orRight" (formula "24"))
                                                                              (rule "andRight" (formula "24"))
                                                                              (branch
                                                                                 (rule "orRight" (formula "26"))
                                                                                 (rule "andRight" (formula "26"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "28"))
                                                                                    (rule "andRight" (formula "28"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "19")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "19")) (ifInst ""  (formula "30")))
                                                                                          (builtin "One Step Simplification" (formula "27"))
                                                                                          (builtin "One Step Simplification" (formula "26"))
                                                                                          (builtin "One Step Simplification" (formula "25"))
                                                                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "19")) (ifInst ""  (formula "27")))
                                                                                          (builtin "One Step Simplification" (formula "23"))
                                                                                          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "3")))
                                                                                          (builtin "One Step Simplification" (formula "21"))
                                                                                          (rule "closeTrue" (formula "21"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "19")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "19")) (ifInst ""  (formula "30")))
                                                                                          (builtin "One Step Simplification" (formula "27"))
                                                                                          (rule "closeTrue" (formula "27"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "28"))
                                                                                    (rule "andRight" (formula "28"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "19")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "19")) (ifInst ""  (formula "30")))
                                                                                          (builtin "One Step Simplification" (formula "27"))
                                                                                          (builtin "One Step Simplification" (formula "26"))
                                                                                          (builtin "One Step Simplification" (formula "25"))
                                                                                          (rule "closeTrue" (formula "25"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "19")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "19")) (ifInst ""  (formula "30")))
                                                                                          (builtin "One Step Simplification" (formula "27"))
                                                                                          (rule "closeTrue" (formula "27"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "orRight" (formula "26"))
                                                                                 (rule "andRight" (formula "26"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "28"))
                                                                                    (rule "andRight" (formula "28"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "28"))
                                                                                    (rule "andRight" (formula "28"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "30"))
                                                                                       (rule "andRight" (formula "30"))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "9"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                        (branch "Show Axiom Satisfiability"
                                                                           (rule "orRight" (formula "23"))
                                                                           (rule "andRight" (formula "23"))
                                                                           (branch
                                                                              (rule "orRight" (formula "25"))
                                                                              (rule "andRight" (formula "25"))
                                                                              (branch
                                                                                 (rule "orRight" (formula "27"))
                                                                                 (rule "andRight" (formula "27"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "21")))
                                                                                          (builtin "One Step Simplification" (formula "31"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")) (ifInst ""  (formula "32")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (builtin "One Step Simplification" (formula "28"))
                                                                                          (builtin "One Step Simplification" (formula "27"))
                                                                                          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "21")) (ifInst ""  (formula "29")))
                                                                                          (builtin "One Step Simplification" (formula "25"))
                                                                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "3")))
                                                                                          (builtin "One Step Simplification" (formula "23"))
                                                                                          (builtin "One Step Simplification" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "18"))
                                                                                          (rule "true_left" (formula "2"))
                                                                                          (rule "false_right" (formula "24"))
                                                                                          (rule "translateJavaSubInt" (formula "18") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                                                                          (rule "translateJavaAddInt" (formula "18") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                                                                          (rule "translateJavaSubInt" (formula "18") (term "1,0,2,1,1,0,0"))
                                                                                          (rule "translateJavaSubInt" (formula "17") (term "1,0,2,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "17") (term "1,0,1,1,1,0,1,0,0,0"))
                                                                                          (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                                                          (rule "less_literals" (formula "1"))
                                                                                          (rule "true_left" (formula "1"))
                                                                                          (rule "andLeft" (formula "7"))
                                                                                          (rule "notLeft" (formula "1"))
                                                                                          (rule "notRight" (formula "24"))
                                                                                          (rule "notRight" (formula "23"))
                                                                                          (rule "notRight" (formula "20"))
                                                                                          (rule "close" (formula "20") (ifseqformula "1"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "21")))
                                                                                          (builtin "One Step Simplification" (formula "31"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")) (ifInst ""  (formula "32")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (rule "closeTrue" (formula "29"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "21")))
                                                                                          (builtin "One Step Simplification" (formula "31"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")) (ifInst ""  (formula "32")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (builtin "One Step Simplification" (formula "28"))
                                                                                          (builtin "One Step Simplification" (formula "27"))
                                                                                          (rule "closeTrue" (formula "27"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "21")))
                                                                                          (builtin "One Step Simplification" (formula "31"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")) (ifInst ""  (formula "32")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (rule "closeTrue" (formula "29"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "orRight" (formula "27"))
                                                                                 (rule "andRight" (formula "27"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "orRight" (formula "25"))
                                                                              (rule "andRight" (formula "25"))
                                                                              (branch
                                                                                 (rule "orRight" (formula "27"))
                                                                                 (rule "andRight" (formula "27"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "21")))
                                                                                          (builtin "One Step Simplification" (formula "31"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")) (ifInst ""  (formula "32")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (builtin "One Step Simplification" (formula "28"))
                                                                                          (builtin "One Step Simplification" (formula "27"))
                                                                                          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "21")) (ifInst ""  (formula "29")))
                                                                                          (builtin "One Step Simplification" (formula "25"))
                                                                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "3")))
                                                                                          (builtin "One Step Simplification" (formula "23"))
                                                                                          (rule "closeTrue" (formula "23"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "21")))
                                                                                          (builtin "One Step Simplification" (formula "31"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")) (ifInst ""  (formula "32")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (rule "closeTrue" (formula "29"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "21")))
                                                                                          (builtin "One Step Simplification" (formula "31"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")) (ifInst ""  (formula "32")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (builtin "One Step Simplification" (formula "28"))
                                                                                          (builtin "One Step Simplification" (formula "27"))
                                                                                          (rule "closeTrue" (formula "27"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2"))
                                                                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "21")))
                                                                                          (builtin "One Step Simplification" (formula "31"))
                                                                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")) (ifInst ""  (formula "32")))
                                                                                          (builtin "One Step Simplification" (formula "29"))
                                                                                          (rule "closeTrue" (formula "29"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "orRight" (formula "27"))
                                                                                 (rule "andRight" (formula "27"))
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "orRight" (formula "29"))
                                                                                    (rule "andRight" (formula "29"))
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                    (branch
                                                                                       (rule "orRight" (formula "31"))
                                                                                       (rule "andRight" (formula "31"))
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                                                                                          (rule "closeFalse" (formula "2"))
                                                                                       )
                                                                                       (branch
                                                                                          (rule "orRight" (formula "19"))
                                                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                                                          (rule "closeFalse" (formula "3"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "0 < 1 FALSE"
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "15")))
                                                                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "15")) (ifInst ""  (formula "21")))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")) (ifInst ""  (formula "21")))
                                                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "2")))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "false_right" (formula "18"))
                                                                     (rule "add_zero_right" (formula "20") (term "1,0,1"))
                                                                     (rule "less_literals" (formula "19"))
                                                                     (rule "closeTrue" (formula "19"))
                                                                  )
                                                               )
                                                               (branch " self = self ∧ IntIterator::$next = IntIterator::$next ∧ ¬IntIterator::$next = java.lang.Object::<created> FALSE"
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "closeTrue" (formula "22"))
                                                               )
                                                            )
                                                            (branch " self = self ∧ IntIterator::$seq = IntIterator::$seq ∧ ¬IntIterator::$seq = java.lang.Object::<created> FALSE"
                                                               (builtin "One Step Simplification" (formula "21"))
                                                               (rule "closeTrue" (formula "21"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "selectOfAnonEQ" (formula "15") (term "0,0,0") (ifseqformula "8") (userinteraction))
                                          (rule "ifthenelse_split" (formula "15") (term "0,0,0") (userinteraction))
                                          (branch " (self, IntIterator::$seq) ∊ ∅ ∧ ¬IntIterator::$seq = java.lang.Object::<created> ∨ (self, IntIterator::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                             (rule "andLeft" (formula "7"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "andLeft" (formula "6"))
                                             (rule "notLeft" (formula "6"))
                                             (rule "eqSymm" (formula "24") (term "0"))
                                             (rule "eqSymm" (formula "13") (term "0"))
                                             (rule "eqSymm" (formula "12") (term "1"))
                                             (rule "eqSymm" (formula "11") (term "1"))
                                             (rule "eqSymm" (formula "7"))
                                             (rule "eqSymm" (formula "6"))
                                             (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "notLeft" (formula "13"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "castedGetAny" (formula "11") (term "0"))
                                             (rule "castedGetAny" (formula "12") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                             (rule "close" (formula "20") (ifseqformula "2"))
                                          )
                                          (branch " (self, IntIterator::$seq) ∊ ∅ ∧ ¬IntIterator::$seq = java.lang.Object::<created> ∨ (self, IntIterator::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                             (rule "selectOfAnonEQ" (formula "16") (term "0,1,0") (ifseqformula "8") (userinteraction))
                                             (rule "ifthenelse_split" (formula "16") (term "0,1,0") (userinteraction))
                                             (branch " (self.list@heapAfter_valueOf, IntList::$seq) ∊ ∅ ∧ ¬IntList::$seq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntList::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                (builtin "One Step Simplification" (formula "1"))
                                                (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notRight" (formula "18"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "notLeft" (formula "7"))
                                                (rule "eqSymm" (formula "14") (term "0"))
                                                (rule "eqSymm" (formula "13") (term "1"))
                                                (rule "eqSymm" (formula "12") (term "1"))
                                                (rule "eqSymm" (formula "8"))
                                                (rule "eqSymm" (formula "7"))
                                                (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "25"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "25"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "25"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "notLeft" (formula "14"))
                                                (rule "dismissNonSelectedField" (formula "26") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                (rule "castedGetAny" (formula "12") (term "0"))
                                                (rule "castedGetAny" (formula "13") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "21") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "20") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "9"))
                                                (rule "inEqSimp_commuteLeq" (formula "8"))
                                                (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "10"))
                                                (rule "applyEq" (formula "7") (term "2,0") (ifseqformula "10"))
                                                (rule "lenOfSeqSubEQ" (formula "9") (term "1") (ifseqformula "7"))
                                                (rule "polySimp_elimSub" (formula "9") (term "1,1"))
                                                (rule "times_zero_2" (formula "9") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "9") (term "1,1"))
                                                (rule "lenOfSeqSubEQ" (formula "18") (term "1") (ifseqformula "7"))
                                                (rule "eqSymm" (formula "18"))
                                                (rule "polySimp_elimSub" (formula "18") (term "1,0"))
                                                (rule "mul_literals" (formula "18") (term "1,1,0"))
                                                (rule "add_zero_right" (formula "18") (term "1,0"))
                                                (rule "lenOfSeqSubEQ" (formula "10") (term "0") (ifseqformula "7"))
                                                (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                                                (rule "mul_literals" (formula "10") (term "1,1,0"))
                                                (rule "add_zero_right" (formula "10") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "eqSymm" (formula "10") (term "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
                                                (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "9"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "0,0,0"))
                                                (rule "inEqSimp_strengthen0" (formula "9") (ifseqformula "18"))
                                                (rule "inEqSimp_contradEq3" (formula "18") (ifseqformula "9"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "18") (term "0,0"))
                                                (rule "qeq_literals" (formula "18") (term "0"))
                                                (builtin "One Step Simplification" (formula "18"))
                                                (rule "false_right" (formula "18"))
                                                (rule "pullOutSelect" (formula "24") (term "1,0,1,0") (inst "selectSK=IntIterator_list_0"))
                                                (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "referencedObjectIsCreatedRightEQ" (formula "20") (ifseqformula "1") (ifseqformula "21"))
                                                (rule "close" (formula "20") (ifseqformula "2"))
                                             )
                                             (branch " (self.list@heapAfter_valueOf, IntList::$seq) ∊ ∅ ∧ ¬IntList::$seq = java.lang.Object::<created> ∨ (self.list@heapAfter_valueOf, IntList::$seq) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                (rule "selectOfAnonEQ" (formula "17") (term "1,0,1,0") (ifseqformula "8") (userinteraction))
                                                (rule "ifthenelse_split" (formula "17") (term "1,0,1,0") (userinteraction))
                                                (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")))
                                                   (rule "closeTrue" (formula "16"))
                                                )
                                                (branch " (self, IntIterator::$list) ∊ ∅ ∧ ¬IntIterator::$list = java.lang.Object::<created> ∨ (self, IntIterator::$list) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                   (rule "selectOfAnonEQ" (formula "18") (term "0,1") (ifseqformula "8") (userinteraction))
                                                   (rule "ifthenelse_split" (formula "18") (term "0,1") (userinteraction))
                                                   (branch " (self, IntIterator::$next) ∊ ∅ ∧ ¬IntIterator::$next = java.lang.Object::<created> ∨ (self, IntIterator::$next) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) TRUE"
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                                                      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")))
                                                      (rule "closeTrue" (formula "18"))
                                                   )
                                                   (branch " (self, IntIterator::$next) ∊ ∅ ∧ ¬IntIterator::$next = java.lang.Object::<created> ∨ (self, IntIterator::$next) ∊ freshLocs(heap[self.nodeseq := self.nodeseq ∘ 〈self.next〉] [self.seq := self.seq ∘ 〈self.next.data〉] [self.next := self.next.next]) FALSE"
                                                      (rule "selectOfStore" (formula "19") (term "0,1") (userinteraction))
                                                      (rule "ifthenelse_split" (formula "19") (term "0,1") (userinteraction))
                                                      (branch " self = self ∧ IntIterator::$next = IntIterator::$next ∧ ¬IntIterator::$next = java.lang.Object::<created> TRUE"
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "1,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "1,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "1,0,1,0") (userinteraction))
                                                         (rule "dismissNonSelectedField" (formula "20") (term "0,0,0") (userinteraction))
                                                         (rule "selectOfStore" (formula "20") (term "0,0,0") (userinteraction))
                                                         (rule "ifthenelse_split" (formula "20") (term "0,0,0") (userinteraction))
                                                         (branch " self = self ∧ IntIterator::$seq = IntIterator::$seq ∧ ¬IntIterator::$seq = java.lang.Object::<created> TRUE"
                                                            (rule "castDel" (formula "21") (term "0,0,0") (userinteraction))
                                                            (rule "lenOfSeqConcat" (formula "21") (term "0,0") (userinteraction))
                                                            (rule "defOfSeqSingleton" (formula "21") (term "0,1,0,0") (inst "uSub=uSub") (userinteraction))
                                                            (rule "lenOfSeqDef" (formula "21") (term "1,0,0") (userinteraction))
                                                            (rule "ifthenelse_split" (formula "21") (term "1,0,0") (userinteraction))
                                                            (branch "0 < 1 TRUE"
                                                               (rule "sub_literals" (formula "22") (term "1,0,0") (userinteraction))
                                                               (rule "andLeft" (formula "9") (userinteraction))
                                                               (rule "castDel" (formula "23") (term "0,1") (userinteraction))
                                                               (rule "orRight" (formula "19"))
                                                               (rule "andRight" (formula "19"))
                                                               (branch
                                                                  (rule "orRight" (formula "21"))
                                                                  (rule "andRight" (formula "21"))
                                                                  (branch
                                                                     (rule "orRight" (formula "23"))
                                                                     (rule "andRight" (formula "23"))
                                                                     (branch
                                                                        (rule "orRight" (formula "25"))
                                                                        (rule "andRight" (formula "25"))
                                                                        (branch
                                                                           (rule "andLeft" (formula "9") (userinteraction))
                                                                           (rule "andLeft" (formula "9") (userinteraction))
                                                                           (rule "andLeft" (formula "9") (userinteraction))
                                                                           (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "10") (userinteraction))
                                                                           (rule "Class_invariant_axiom_for_IntLinkedList" (formula "8") (inst "sk=sk_2") (inst "i=i_5") (inst "j=j") (inst "i_0=i_0") (inst "i_1=i_1_1") (userinteraction))
                                                                           (branch "Use Axiom"
                                                                              (rule "andLeft" (formula "8") (userinteraction))
                                                                              (rule "andLeft" (formula "9") (userinteraction))
                                                                              (rule "andLeft" (formula "8") (userinteraction))
                                                                              (rule "andLeft" (formula "8") (userinteraction))
                                                                              (rule "andLeft" (formula "8") (userinteraction))
                                                                              (rule "andLeft" (formula "8") (userinteraction))
                                                                              (rule "andLeft" (formula "8") (userinteraction))
                                                                              (builtin "One Step Simplification" (formula "11"))
                                                                              (rule "allLeft" (formula "11") (inst "t=sub(int::select(heap,
                IntLinkedList::select(heap,
                                      self,
                                      IntIterator::$list),
                IntLinkedList::$size),
    Z(1(#)))") (userinteraction))
                                                                              (rule "impLeft" (formula "11") (userinteraction))
                                                                              (branch
                                                                                 (rule "andRight" (formula "26"))
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (builtin "One Step Simplification" (formula "9"))
                                                                                    (builtin "One Step Simplification" (formula "3"))
                                                                                    (builtin "One Step Simplification" (formula "2"))
                                                                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "27")))
                                                                                    (builtin "One Step Simplification" (formula "35"))
                                                                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "27")) (ifInst ""  (formula "36")))
                                                                                    (builtin "One Step Simplification" (formula "33"))
                                                                                    (builtin "One Step Simplification" (formula "32"))
                                                                                    (builtin "One Step Simplification" (formula "31"))
                                                                                    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "27")) (ifInst ""  (formula "33")))
                                                                                    (builtin "One Step Simplification" (formula "29"))
                                                                                    (rule "true_left" (formula "2"))
                                                                                    (rule "false_right" (formula "29"))
                                                                                    (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "9") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "11") (term "1,0,2,1"))
                                                                                    (rule "less_literals" (formula "1"))
                                                                                    (rule "true_left" (formula "1"))
                                                                                    (rule "andLeft" (formula "5"))
                                                                                    (rule "andLeft" (formula "14"))
                                                                                    (rule "notRight" (formula "30"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "notLeft" (formula "15"))
                                                                                    (rule "eqSymm" (formula "21") (term "1"))
                                                                                    (rule "eqSymm" (formula "13"))
                                                                                    (rule "eqSymm" (formula "10") (term "0,1,0,1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "22") (term "0"))
                                                                                    (rule "eqSymm" (formula "11"))
                                                                                    (rule "eqSymm" (formula "14"))
                                                                                    (rule "eqSymm" (formula "34") (term "0"))
                                                                                    (rule "eqSymm" (formula "10") (term "1,1,0,1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "10") (term "1,0,0,1,0"))
                                                                                    (rule "eqSymm" (formula "20") (term "1"))
                                                                                    (rule "eqSymm" (formula "9"))
                                                                                    (rule "eqSymm" (formula "10") (term "1,1,0"))
                                                                                    (rule "eqSymm" (formula "12"))
                                                                                    (rule "eqSymm" (formula "16"))
                                                                                    (rule "eqSymm" (formula "15"))
                                                                                    (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "32"))
                                                                                    (builtin "One Step Simplification" (formula "20"))
                                                                                    (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "32"))
                                                                                    (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "32"))
                                                                                    (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "notLeft" (formula "22"))
                                                                                    (rule "polySimp_elimSub" (formula "29") (term "1"))
                                                                                    (rule "mul_literals" (formula "29") (term "1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "10") (term "1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "10") (term "1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "12") (term "1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "12") (term "1,1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "34") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "10") (term "1,0,2,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "29") (term "1"))
                                                                                    (rule "polySimp_addComm0" (formula "10") (term "1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "12") (term "1,0,2,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,1,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "33") (term "0,0,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                                                    (rule "subsetSingletonLeft" (formula "7"))
                                                                                    (rule "subsetSingletonLeft" (formula "6"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "0,0,1,0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "1,0,1,0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "11") (term "2,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "0,1,0,0,1,0"))
                                                                                    (rule "eqSymm" (formula "10") (term "1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "9") (term "0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "1,1,1,1,0"))
                                                                                    (rule "castedGetAny" (formula "20") (term "0"))
                                                                                    (rule "castedGetAny" (formula "21") (term "0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "2,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "12") (term "2,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "33") (term "0,0,1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                                                                    (rule "inEqSimp_leqRight" (formula "29"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "19"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "18"))
                                                                                    (rule "dismissNonSelectedField" (formula "33") (term "0,0,1"))
                                                                                    (rule "dismissNonSelectedField" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "18") (term "1") (ifseqformula "19"))
                                                                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "13"))
                                                                                    (rule "eqSymm" (formula "27"))
                                                                                    (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "19"))
                                                                                    (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "13"))
                                                                                    (rule "polySimp_homoEq" (formula "33") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                                                    (rule "applyEq" (formula "16") (term "2,0") (ifseqformula "19"))
                                                                                    (rule "lenOfSeqSubEQ" (formula "19") (term "0") (ifseqformula "16"))
                                                                                    (rule "polySimp_elimSub" (formula "19") (term "1,0"))
                                                                                    (rule "times_zero_2" (formula "19") (term "1,1,0"))
                                                                                    (rule "add_zero_right" (formula "19") (term "1,0"))
                                                                                    (builtin "One Step Simplification" (formula "19"))
                                                                                    (rule "eqSymm" (formula "19") (term "1"))
                                                                                    (rule "lenOfSeqSubEQ" (formula "27") (term "0") (ifseqformula "16"))
                                                                                    (rule "polySimp_elimSub" (formula "27") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "1,1,0"))
                                                                                    (rule "add_zero_right" (formula "27") (term "1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "0"))
                                                                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0"))
                                                                                    (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "13"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "18"))
                                                                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "14"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "17"))
                                                                                    (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "32") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "32") (term "1,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_invertInEq1" (formula "1"))
                                                                                    (rule "times_zero_2" (formula "1") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                                                                    (rule "pullOutSelect" (formula "31") (term "0,0,0") (inst "selectSK=IntIterator_list_0"))
                                                                                    (rule "applyEq" (formula "32") (term "1,0,0,1") (ifseqformula "1"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                                                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "applyEqReverse" (formula "32") (term "1,0,0,1") (ifseqformula "1"))
                                                                                    (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "1"))
                                                                                    (rule "hideAuxiliaryEq" (formula "1"))
                                                                                    (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "27"))
                                                                                    (builtin "One Step Simplification" (formula "31"))
                                                                                    (rule "notRight" (formula "31"))
                                                                                    (rule "elementOfUnionEQ" (formula "7") (ifseqformula "10"))
                                                                                    (builtin "One Step Simplification" (formula "7"))
                                                                                    (rule "true_left" (formula "7"))
                                                                                    (rule "elementOfUnionEQ" (formula "7") (ifseqformula "9"))
                                                                                    (builtin "One Step Simplification" (formula "7"))
                                                                                    (rule "true_left" (formula "7"))
                                                                                    (rule "nnf_imp2or" (formula "9") (term "1,0,1,0,1,0"))
                                                                                    (rule "nnf_imp2or" (formula "7") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "9") (term "0"))
                                                                                    (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                                                                    (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                                                                    (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                                                                    (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "nnf_imp2or" (formula "9") (term "0,1,0,1,0"))
                                                                                    (rule "nnf_notAnd" (formula "9") (term "0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,1,0,1,0"))
                                                                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "9") (term "1,0,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,0,1,0"))
                                                                                    (rule "commute_or" (formula "17"))
                                                                                    (rule "inEqSimp_or_weaken1" (formula "17"))
                                                                                    (rule "add_zero_right" (formula "17") (term "1,0"))
                                                                                    (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
                                                                                    (rule "times_zero_1" (formula "17") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "17") (term "0"))
                                                                                    (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "2"))
                                                                                    (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "17"))
                                                                                    (builtin "One Step Simplification" (formula "11"))
                                                                                    (rule "eqSymm" (formula "11"))
                                                                                    (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "17"))
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "eqSymm" (formula "10"))
                                                                                    (rule "applyEq" (formula "8") (term "1,1,1,0,0,1,0") (ifseqformula "17"))
                                                                                    (rule "add_zero_right" (formula "8") (term "1,1,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                                                                                    (rule "qeq_literals" (formula "18"))
                                                                                    (rule "true_left" (formula "18"))
                                                                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "17"))
                                                                                    (rule "leq_literals" (formula "2"))
                                                                                    (rule "true_left" (formula "2"))
                                                                                    (rule "applyEq" (formula "15") (term "1") (ifseqformula "16"))
                                                                                    (rule "applyEq" (formula "8") (term "1,1,0,0,1,0,1,0") (ifseqformula "16"))
                                                                                    (rule "applyEq" (formula "6") (term "1,1,0,0") (ifseqformula "16"))
                                                                                    (rule "applyEq" (formula "8") (term "1,1,0,0") (ifseqformula "16"))
                                                                                    (rule "applyEq" (formula "25") (term "1") (ifseqformula "16"))
                                                                                    (builtin "One Step Simplification" (formula "25"))
                                                                                    (rule "orRight" (formula "25"))
                                                                                    (rule "notRight" (formula "25"))
                                                                                    (rule "applyEq" (formula "12") (term "1") (ifseqformula "17"))
                                                                                    (rule "applyEq" (formula "9") (term "1,1,0,0,1,1,0") (ifseqformula "17"))
                                                                                    (rule "add_zero_right" (formula "9") (term "1,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "13") (term "1") (ifseqformula "17"))
                                                                                    (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "17"))
                                                                                    (rule "add_literals" (formula "31") (term "1,0"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "26") (ifseqformula "1"))
                                                                                    (rule "mul_literals" (formula "26") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "26") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "26") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "26"))
                                                                                    (rule "false_right" (formula "26"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "30") (term "0") (ifseqformula "1"))
                                                                                    (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                                                    (rule "add_literals" (formula "30") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "30") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "30"))
                                                                                    (rule "notRight" (formula "30"))
                                                                                    (rule "applyEq" (formula "23") (term "3,0,0") (ifseqformula "1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "2"))
                                                                                    (rule "leq_literals" (formula "19") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "19"))
                                                                                    (rule "true_left" (formula "19"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "2"))
                                                                                    (rule "qeq_literals" (formula "17") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "closeFalse" (formula "17"))
                                                                                 )
                                                                                 (branch
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (builtin "One Step Simplification" (formula "9"))
                                                                                    (builtin "One Step Simplification" (formula "3"))
                                                                                    (builtin "One Step Simplification" (formula "2"))
                                                                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "27")))
                                                                                    (builtin "One Step Simplification" (formula "35"))
                                                                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "27")) (ifInst ""  (formula "36")))
                                                                                    (builtin "One Step Simplification" (formula "33"))
                                                                                    (builtin "One Step Simplification" (formula "32"))
                                                                                    (builtin "One Step Simplification" (formula "31"))
                                                                                    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "27")) (ifInst ""  (formula "33")))
                                                                                    (builtin "One Step Simplification" (formula "29"))
                                                                                    (rule "true_left" (formula "2"))
                                                                                    (rule "false_right" (formula "29"))
                                                                                    (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "11") (term "1,0,2,1"))
                                                                                    (rule "translateJavaAddInt" (formula "9") (term "1,0,2,1,1,1,0"))
                                                                                    (rule "less_literals" (formula "1"))
                                                                                    (rule "true_left" (formula "1"))
                                                                                    (rule "andLeft" (formula "5"))
                                                                                    (rule "andLeft" (formula "14"))
                                                                                    (rule "notRight" (formula "30"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "notLeft" (formula "15"))
                                                                                    (rule "eqSymm" (formula "21") (term "1"))
                                                                                    (rule "eqSymm" (formula "14"))
                                                                                    (rule "eqSymm" (formula "10") (term "1,0,0,1,0"))
                                                                                    (rule "eqSymm" (formula "11"))
                                                                                    (rule "eqSymm" (formula "20") (term "1"))
                                                                                    (rule "eqSymm" (formula "10") (term "0,1,0,1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "10") (term "1,1,0,1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "13"))
                                                                                    (rule "eqSymm" (formula "22") (term "0"))
                                                                                    (rule "eqSymm" (formula "34") (term "0"))
                                                                                    (rule "eqSymm" (formula "9"))
                                                                                    (rule "eqSymm" (formula "12"))
                                                                                    (rule "eqSymm" (formula "10") (term "1,1,0"))
                                                                                    (rule "eqSymm" (formula "16"))
                                                                                    (rule "eqSymm" (formula "15"))
                                                                                    (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "32"))
                                                                                    (builtin "One Step Simplification" (formula "20"))
                                                                                    (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "32"))
                                                                                    (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "32"))
                                                                                    (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "notLeft" (formula "22"))
                                                                                    (rule "polySimp_elimSub" (formula "29") (term "0"))
                                                                                    (rule "mul_literals" (formula "29") (term "1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "12") (term "1,0,2,0"))
                                                                                    (rule "mul_literals" (formula "12") (term "1,1,0,2,0"))
                                                                                    (rule "polySimp_elimSub" (formula "10") (term "1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "10") (term "1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "34") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "10") (term "1,0,2,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "29") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "12") (term "1,0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "10") (term "1,0,0,1,1,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "0,0,0,0,0,1,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "33") (term "0,0,1"))
                                                                                    (rule "subsetSingletonLeft" (formula "7"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                    (rule "subsetSingletonLeft" (formula "6"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "0,1,0,0,1,0"))
                                                                                    (rule "eqSymm" (formula "10") (term "1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "11") (term "2,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "0,0,1,0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "1,0,1,0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "9") (term "0,1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "1,1,1,1,0"))
                                                                                    (rule "castedGetAny" (formula "20") (term "0"))
                                                                                    (rule "castedGetAny" (formula "21") (term "0"))
                                                                                    (rule "castedGetAny" (formula "10") (term "2,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "12") (term "2,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "33") (term "0,0,1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                                                                    (rule "inEqSimp_ltRight" (formula "29"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "dismissNonSelectedField" (formula "2") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0"))
                                                                                    (rule "qeq_literals" (formula "1"))
                                                                                    (rule "closeFalse" (formula "1"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "andLeft" (formula "11") (userinteraction))
                                                                                 (rule "andLeft" (formula "11") (userinteraction))
                                                                                 (rule "andLeft" (formula "11") (userinteraction))
                                                                                 (rule "ifthenelse_split" (formula "14") (term "1") (userinteraction))
                                                                                 (branch "self.list.size - 1 = javaSubInt(self.list.size, 1) TRUE"
                                                                                    (rule "impLeft" (formula "23") (userinteraction))
                                                                                    (branch
                                                                                       (builtin "One Step Simplification" (formula "10"))
                                                                                       (builtin "One Step Simplification" (formula "9"))
                                                                                       (builtin "One Step Simplification" (formula "3"))
                                                                                       (builtin "One Step Simplification" (formula "2"))
                                                                                       (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "31")))
                                                                                       (builtin "One Step Simplification" (formula "39"))
                                                                                       (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "31")) (ifInst ""  (formula "40")))
                                                                                       (builtin "One Step Simplification" (formula "37"))
                                                                                       (builtin "One Step Simplification" (formula "36"))
                                                                                       (builtin "One Step Simplification" (formula "35"))
                                                                                       (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")) (ifInst ""  (formula "37")))
                                                                                       (builtin "One Step Simplification" (formula "33"))
                                                                                       (rule "true_left" (formula "2"))
                                                                                       (rule "false_right" (formula "33"))
                                                                                       (rule "translateJavaSubInt" (formula "14") (term "1,0,1,1,1,0"))
                                                                                       (rule "translateJavaAddInt" (formula "14") (term "1,0,2,1,1,1,0"))
                                                                                       (rule "translateJavaSubInt" (formula "12") (term "1"))
                                                                                       (builtin "One Step Simplification" (formula "12"))
                                                                                       (rule "true_left" (formula "12"))
                                                                                       (rule "translateJavaSubInt" (formula "15") (term "1,0,2,1"))
                                                                                       (rule "less_literals" (formula "1"))
                                                                                       (rule "true_left" (formula "1"))
                                                                                       (rule "andLeft" (formula "5"))
                                                                                       (rule "notLeft" (formula "9"))
                                                                                       (rule "andLeft" (formula "17"))
                                                                                       (rule "notRight" (formula "28"))
                                                                                       (rule "close" (formula "31") (ifseqformula "1"))
                                                                                    )
                                                                                    (branch
                                                                                       (rule "applyEq" (formula "42") (term "1,0,1") (ifseqformula "23") (userinteraction))
                                                                                       (rule "applyEqReverse" (formula "42") (term "1,0") (ifseqformula "19") (userinteraction))
                                                                                       (rule "equiv_right" (formula "42") (userinteraction))
                                                                                       (branch
                                                                                          (builtin "One Step Simplification" (formula "11"))
                                                                                          (builtin "One Step Simplification" (formula "10"))
                                                                                          (builtin "One Step Simplification" (formula "4"))
                                                                                          (builtin "One Step Simplification" (formula "3"))
                                                                                          (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "32")))
                                                                                          (builtin "One Step Simplification" (formula "40"))
                                                                                          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "32")) (ifInst ""  (formula "41")))
                                                                                          (builtin "One Step Simplification" (formula "38"))
                                                                                          (builtin "One Step Simplification" (formula "37"))
                                                                                          (builtin "One Step Simplification" (formula "36"))
                                                                                          (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "32")) (ifInst ""  (formula "38")))
                                                                                          (builtin "One Step Simplification" (formula "34"))
                                                                                          (rule "true_left" (formula "3"))
                                                                                          (rule "false_right" (formula "34"))
                                                                                          (rule "translateJavaSubInt" (formula "17") (term "1,0,2,1"))
                                                                                          (rule "translateJavaSubInt" (formula "13") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "13"))
                                                                                          (rule "true_left" (formula "13"))
                                                                                          (rule "translateJavaSubInt" (formula "14") (term "1,0,1,1,1,0"))
                                                                                          (rule "translateJavaAddInt" (formula "14") (term "1,0,2,1,1,1,0"))
                                                                                          (rule "less_literals" (formula "2"))
                                                                                          (rule "true_left" (formula "2"))
                                                                                          (rule "notLeft" (formula "9"))
                                                                                          (rule "andLeft" (formula "6"))
                                                                                          (rule "andLeft" (formula "18"))
                                                                                          (rule "notRight" (formula "34"))
                                                                                          (rule "andLeft" (formula "19"))
                                                                                          (rule "andLeft" (formula "19"))
                                                                                          (rule "andLeft" (formula "19"))
                                                                                          (rule "notLeft" (formula "19"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                          (rule "eqSymm" (formula "18"))
                                                                                          (rule "eqSymm" (formula "26") (term "0"))
                                                                                          (rule "eqSymm" (formula "24"))
                                                                                          (rule "eqSymm" (formula "11"))
                                                                                          (rule "eqSymm" (formula "25") (term "1"))
                                                                                          (rule "eqSymm" (formula "17"))
                                                                                          (rule "eqSymm" (formula "15"))
                                                                                          (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                          (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                          (rule "eqSymm" (formula "10"))
                                                                                          (rule "eqSymm" (formula "16"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                          (rule "eqSymm" (formula "20"))
                                                                                          (rule "eqSymm" (formula "19"))
                                                                                          (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "36"))
                                                                                          (builtin "One Step Simplification" (formula "25"))
                                                                                          (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "36"))
                                                                                          (builtin "One Step Simplification" (formula "26"))
                                                                                          (rule "notLeft" (formula "26"))
                                                                                          (rule "polySimp_homoEq" (formula "2"))
                                                                                          (rule "polySimp_elimSub" (formula "13") (term "1,0,1,0"))
                                                                                          (rule "mul_literals" (formula "13") (term "1,1,0,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "33") (term "1,0,0"))
                                                                                          (rule "mul_literals" (formula "33") (term "1,1,0,0"))
                                                                                          (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
                                                                                          (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                                                          (rule "polySimp_elimSub" (formula "11") (term "1,0,1,1"))
                                                                                          (rule "mul_literals" (formula "11") (term "1,1,0,1,1"))
                                                                                          (rule "polySimp_elimSub" (formula "12") (term "1,0,1,0,1,0"))
                                                                                          (rule "mul_literals" (formula "12") (term "1,1,0,1,0,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "12") (term "1,1,1,0"))
                                                                                          (rule "mul_literals" (formula "12") (term "1,1,1,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                          (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                          (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "33") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "11") (term "1,0,0"))
                                                                                          (rule "castedGetAny" (formula "38") (term "1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "11") (term "1,0,1,1"))
                                                                                          (rule "polySimp_addComm0" (formula "12") (term "1,0,1,0,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "12") (term "1,1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "37") (term "0,0,1"))
                                                                                          (rule "polySimp_addComm0" (formula "2") (term "1,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                          (rule "subsetSingletonLeft" (formula "8"))
                                                                                          (rule "subsetSingletonLeft" (formula "7"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "0,1,0,0,1,0"))
                                                                                          (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "1,0,1,0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "0,0,1,0,1,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                          (rule "castedGetAny" (formula "24") (term "0"))
                                                                                          (rule "castedGetAny" (formula "15") (term "2,0"))
                                                                                          (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "1,1,1,1,0"))
                                                                                          (rule "castedGetAny" (formula "25") (term "0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "2,0,1,1,0"))
                                                                                          (rule "castedGetAny" (formula "13") (term "1,0"))
                                                                                          (rule "castedGetAny" (formula "33") (term "0"))
                                                                                          (rule "castedGetAny" (formula "11") (term "0"))
                                                                                          (rule "eqSymm" (formula "11"))
                                                                                          (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "37") (term "0,0,1"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "22"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "21"))
                                                                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                          (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                                          (rule "castedGetAny" (formula "14") (term "1,0,1,0,0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                          (rule "castedGetAny" (formula "11") (term "1,0"))
                                                                                          (rule "eqSymm" (formula "11"))
                                                                                          (rule "dismissNonSelectedField" (formula "37") (term "0,0,1"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                                          (rule "applyEq" (formula "21") (term "1") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "17"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "20"))
                                                                                          (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "16"))
                                                                                          (rule "eqSymm" (formula "30"))
                                                                                          (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "22"))
                                                                                          (rule "lenOfSeqSubEQ" (formula "30") (term "0") (ifseqformula "19"))
                                                                                          (rule "polySimp_elimSub" (formula "30") (term "1,0"))
                                                                                          (rule "mul_literals" (formula "30") (term "1,1,0"))
                                                                                          (rule "add_zero_right" (formula "30") (term "1,0"))
                                                                                          (rule "lenOfSeqSubEQ" (formula "22") (term "0") (ifseqformula "19"))
                                                                                          (rule "polySimp_elimSub" (formula "22") (term "1,0"))
                                                                                          (rule "times_zero_2" (formula "22") (term "1,1,0"))
                                                                                          (rule "add_zero_right" (formula "22") (term "1,0"))
                                                                                          (builtin "One Step Simplification" (formula "22"))
                                                                                          (rule "eqSymm" (formula "22") (term "1"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0"))
                                                                                          (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0"))
                                                                                          (rule "add_zero_right" (formula "22") (term "0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                                                          (rule "applyEq" (formula "21") (term "0") (ifseqformula "16"))
                                                                                          (rule "inEqSimp_commuteGeq" (formula "21"))
                                                                                          (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                                                                                          (rule "polySimp_sepNegMonomial" (formula "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                          (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "1"))
                                                                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "20"))
                                                                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                                          (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                                          (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                                                          (rule "add_literals" (formula "20") (term "1,1,0"))
                                                                                          (rule "times_zero_1" (formula "20") (term "1,0"))
                                                                                          (rule "add_zero_right" (formula "20") (term "0"))
                                                                                          (rule "qeq_literals" (formula "20"))
                                                                                          (rule "true_left" (formula "20"))
                                                                                          (rule "applyEq" (formula "20") (term "0,1,0,0") (ifseqformula "1"))
                                                                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                                                                          (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                                                          (rule "add_literals" (formula "20") (term "0,0,0"))
                                                                                          (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "1"))
                                                                                          (rule "applyEq" (formula "28") (term "0,1,0,0,0") (ifseqformula "1"))
                                                                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                                                          (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                                                          (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "1"))
                                                                                          (rule "applyEq" (formula "18") (term "2,0") (ifseqformula "1"))
                                                                                          (rule "lenOfSeqSubEQ" (formula "21") (term "1,0") (ifseqformula "18"))
                                                                                          (rule "polySimp_elimSub" (formula "21") (term "1,1,0"))
                                                                                          (rule "times_zero_2" (formula "21") (term "1,1,1,0"))
                                                                                          (rule "add_zero_right" (formula "21") (term "1,1,0"))
                                                                                          (rule "lenOfSeqSubEQ" (formula "19") (term "2,0") (ifseqformula "18"))
                                                                                          (rule "polySimp_elimSub" (formula "19") (term "1,2,0"))
                                                                                          (rule "times_zero_2" (formula "19") (term "1,1,2,0"))
                                                                                          (rule "add_zero_right" (formula "19") (term "1,2,0"))
                                                                                          (rule "lenOfSeqSubEQ" (formula "1") (term "0") (ifseqformula "18"))
                                                                                          (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                                                                                          (rule "times_zero_2" (formula "1") (term "1,1,0"))
                                                                                          (rule "add_zero_right" (formula "1") (term "1,0"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "polySimp_homoEq" (formula "1") (term "1"))
                                                                                          (rule "mul_literals" (formula "1") (term "1,0,1"))
                                                                                          (rule "add_zero_right" (formula "1") (term "0,1"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,0"))
                                                                                          (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                                                                          (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "0,2,0"))
                                                                                          (rule "add_zero_right" (formula "19") (term "0,0,2,0"))
                                                                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,2,0"))
                                                                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,2,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,2,0"))
                                                                                          (rule "add_literals" (formula "19") (term "0,0,0,2,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "0"))
                                                                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                          (rule "applyEq" (formula "21") (term "0") (ifseqformula "9"))
                                                                                          (rule "applyEq" (formula "9") (term "1") (ifseqformula "21"))
                                                                                          (rule "polySimp_sepPosMonomial" (formula "19") (term "1"))
                                                                                          (rule "mul_literals" (formula "19") (term "1,1"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0,1,0"))
                                                                                          (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "20") (term "0,0,1,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,2,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,0,2,0"))
                                                                                          (rule "polySimp_elimOne" (formula "18") (term "0,0,2,0"))
                                                                                          (rule "pullOutSelect" (formula "33") (term "0,0,0") (inst "selectSK=IntIterator_list_0"))
                                                                                          (rule "applyEq" (formula "34") (term "1,0,0,1") (ifseqformula "1"))
                                                                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                                                          (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
                                                                                          (builtin "One Step Simplification" (formula "1"))
                                                                                          (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "1"))
                                                                                          (rule "applyEqReverse" (formula "34") (term "1,0,0,1") (ifseqformula "1"))
                                                                                          (rule "hideAuxiliaryEq" (formula "1"))
                                                                                          (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "28"))
                                                                                          (builtin "One Step Simplification" (formula "33"))
                                                                                          (rule "notRight" (formula "33"))
                                                                                          (rule "elementOfUnionEQ" (formula "6") (ifseqformula "9"))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (rule "true_left" (formula "6"))
                                                                                          (rule "elementOfUnionEQ" (formula "6") (ifseqformula "8"))
                                                                                          (builtin "One Step Simplification" (formula "6"))
                                                                                          (rule "true_left" (formula "6"))
                                                                                          (rule "nnf_imp2or" (formula "9") (term "1,0"))
                                                                                          (rule "nnf_imp2or" (formula "11") (term "1,0,1,0,1,0"))
                                                                                          (rule "nnf_imp2or" (formula "6") (term "0"))
                                                                                          (rule "nnf_imp2or" (formula "9") (term "0"))
                                                                                          (rule "nnf_imp2or" (formula "11") (term "0"))
                                                                                          (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                                                          (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                                                                          (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                                                          (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                                                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                                                          (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                                                          (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                                                                          (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                                                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                                                                          (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                                                                          (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                                                                          (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                                                                          (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                                                          (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                                                                          (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                                                                          (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                                                                          (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                                                          (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                                                                          (rule "nnf_imp2or" (formula "11") (term "0,1,0,1,0"))
                                                                                          (rule "nnf_notAnd" (formula "11") (term "0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,0,1,0"))
                                                                                          (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1,0,1,0"))
                                                                                          (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0,1,0"))
                                                                                          (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,1,0"))
                                                                                          (rule "commute_or" (formula "18"))
                                                                                          (rule "inEqSimp_or_weaken1" (formula "18"))
                                                                                          (rule "add_literals" (formula "18") (term "1,0"))
                                                                                          (builtin "One Step Simplification" (formula "18"))
                                                                                          (rule "inEqSimp_contradEq7" (formula "12") (term "0,0") (ifseqformula "18"))
                                                                                          (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                                                                                          (rule "leq_literals" (formula "12") (term "0,0,0"))
                                                                                          (builtin "One Step Simplification" (formula "12"))
                                                                                          (rule "inEqSimp_contradEq7" (formula "13") (term "0,0") (ifseqformula "18"))
                                                                                          (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                                                          (rule "leq_literals" (formula "13") (term "0,0,0"))
                                                                                          (builtin "One Step Simplification" (formula "13"))
                                                                                          (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "13"))
                                                                                          (rule "applyEq" (formula "28") (term "0") (ifseqformula "13"))
                                                                                          (rule "applyEq" (formula "9") (term "1,0,0,1,0") (ifseqformula "13"))
                                                                                          (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "13"))
                                                                                          (rule "ifthenelse_split" (formula "25") (term "0"))
                                                                                          (branch "result_0.<created> = TRUE TRUE"
                                                                                             (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "25"))
                                                                                             (builtin "One Step Simplification" (formula "24"))
                                                                                             (rule "true_left" (formula "24"))
                                                                                             (rule "lenNonNegative" (formula "15") (term "0"))
                                                                                             (rule "inEqSimp_commuteLeq" (formula "15"))
                                                                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                                                                             (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "19"))
                                                                                             (rule "leq_literals" (formula "15") (term "0"))
                                                                                             (builtin "One Step Simplification" (formula "15"))
                                                                                             (rule "true_left" (formula "15"))
                                                                                             (rule "cnf_rightDist" (formula "6") (term "0"))
                                                                                             (rule "distr_forallAnd" (formula "6"))
                                                                                             (rule "andLeft" (formula "6"))
                                                                                             (rule "lenNonNegative" (formula "15") (term "0"))
                                                                                             (rule "inEqSimp_commuteLeq" (formula "15"))
                                                                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                                                                             (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "20"))
                                                                                             (rule "leq_literals" (formula "15") (term "0"))
                                                                                             (builtin "One Step Simplification" (formula "15"))
                                                                                             (rule "true_left" (formula "15"))
                                                                                             (rule "commute_or_2" (formula "10") (term "0"))
                                                                                             (rule "commute_or_2" (formula "6") (term "0"))
                                                                                             (rule "shift_paren_or" (formula "7") (term "0"))
                                                                                             (rule "commute_or" (formula "6") (term "0,0"))
                                                                                             (rule "ifthenelse_to_or_left" (formula "12") (term "1,1,0"))
                                                                                             (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
                                                                                             (rule "eqSymm" (formula "12") (term "1,1,1,1,0"))
                                                                                             (rule "shift_paren_or" (formula "10") (term "0,0"))
                                                                                             (rule "inEqSimp_or_weaken3" (formula "10") (term "0"))
                                                                                             (rule "polySimp_addAssoc" (formula "10") (term "1,0,1,0"))
                                                                                             (rule "add_literals" (formula "10") (term "0,1,0,1,0"))
                                                                                             (rule "add_zero_left" (formula "10") (term "1,0,1,0"))
                                                                                             (builtin "One Step Simplification" (formula "10"))
                                                                                             (rule "commute_or" (formula "10") (term "0,0"))
                                                                                             (rule "seqGetAlphaCast" (formula "9") (term "0"))
                                                                                             (rule "castedGetAny" (formula "9") (term "0"))
                                                                                             (builtin "One Step Simplification" (formula "9"))
                                                                                             (rule "true_left" (formula "9"))
                                                                                             (rule "shift_paren_or" (formula "12") (term "0,1,0,1,0"))
                                                                                             (rule "commute_or" (formula "12") (term "0,1,1,0"))
                                                                                             (rule "commute_or" (formula "12") (term "1,1,1,0"))
                                                                                             (rule "ifthenelse_split" (formula "18") (term "2,0"))
                                                                                             (branch "self.list.size ≥ 2 TRUE"
                                                                                                (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "18"))
                                                                                                (builtin "One Step Simplification" (formula "21"))
                                                                                                (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "18"))
                                                                                                (builtin "One Step Simplification" (formula "28"))
                                                                                                (rule "polySimp_homoEq" (formula "28"))
                                                                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                                                (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                                                                (rule "add_literals" (formula "28") (term "1,1,0"))
                                                                                                (rule "times_zero_1" (formula "28") (term "1,0"))
                                                                                                (rule "add_literals" (formula "28") (term "0"))
                                                                                                (rule "equal_literals" (formula "28"))
                                                                                                (rule "false_right" (formula "28"))
                                                                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "14"))
                                                                                                (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "21"))
                                                                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "21"))
                                                                                                (rule "applyEq" (formula "14") (term "1") (ifseqformula "21"))
                                                                                                (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "21"))
                                                                                                (rule "close" (formula "32") (ifseqformula "11"))
                                                                                             )
                                                                                             (branch "self.list.size ≥ 2 FALSE"
                                                                                                (builtin "One Step Simplification" (formula "18"))
                                                                                                (rule "eqSymm" (formula "18"))
                                                                                                (rule "replace_known_right" (formula "20") (term "0,1,0") (ifseqformula "27"))
                                                                                                (builtin "One Step Simplification" (formula "20"))
                                                                                                (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "27"))
                                                                                                (builtin "One Step Simplification" (formula "28"))
                                                                                                (rule "eqSymm" (formula "28"))
                                                                                                (rule "inEqSimp_geqRight" (formula "27"))
                                                                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "21"))
                                                                                                (rule "eqSymm" (formula "14"))
                                                                                                (rule "applyEq" (formula "24") (term "0,3,0,0,0") (ifseqformula "19"))
                                                                                                (builtin "One Step Simplification" (formula "24"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                                (rule "mul_literals" (formula "1") (term "1"))
                                                                                                (rule "inEqSimp_contradEq7" (formula "28") (ifseqformula "20"))
                                                                                                (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "28") (term "0,0"))
                                                                                                (rule "leq_literals" (formula "28") (term "0"))
                                                                                                (builtin "One Step Simplification" (formula "28"))
                                                                                                (rule "false_right" (formula "28"))
                                                                                                (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
                                                                                                (rule "applyEq" (formula "18") (term "1,2,0") (ifseqformula "20"))
                                                                                                (rule "add_literals" (formula "18") (term "2,0"))
                                                                                                (builtin "One Step Simplification" (formula "18"))
                                                                                                (rule "eqSymm" (formula "18"))
                                                                                                (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "20"))
                                                                                                (rule "applyEq" (formula "9") (term "1,1,1,0,0,1,0") (ifseqformula "20"))
                                                                                                (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                                                                (rule "applyEq" (formula "13") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "20"))
                                                                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                                                                                                (rule "leq_literals" (formula "1"))
                                                                                                (rule "true_left" (formula "1"))
                                                                                                (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "19"))
                                                                                                (rule "add_literals" (formula "14") (term "1,0"))
                                                                                                (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "19"))
                                                                                                (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "19"))
                                                                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                                                                                (rule "qeq_literals" (formula "20"))
                                                                                                (rule "true_left" (formula "20"))
                                                                                                (rule "applyEq" (formula "10") (term "1,1,1,0") (ifseqformula "19"))
                                                                                                (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                                                (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "19"))
                                                                                                (rule "add_literals" (formula "9") (term "1,0"))
                                                                                                (rule "applyEq" (formula "23") (term "0,3,0,0,0,0") (ifseqformula "17"))
                                                                                                (builtin "One Step Simplification" (formula "23"))
                                                                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "14"))
                                                                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "20"))
                                                                                                (builtin "One Step Simplification" (formula "21"))
                                                                                                (rule "true_left" (formula "21"))
                                                                                                (rule "applyEq" (formula "27") (term "0") (ifseqformula "20"))
                                                                                                (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "20"))
                                                                                                (rule "applyEq" (formula "14") (term "1") (ifseqformula "20"))
                                                                                                (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "20"))
                                                                                                (rule "close" (formula "30") (ifseqformula "11"))
                                                                                             )
                                                                                          )
                                                                                          (branch "result_0.<created> = TRUE FALSE"
                                                                                             (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "26"))
                                                                                             (builtin "One Step Simplification" (formula "24"))
                                                                                             (rule "lenNonNegative" (formula "15") (term "0"))
                                                                                             (rule "inEqSimp_commuteLeq" (formula "15"))
                                                                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                                                                             (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "19"))
                                                                                             (rule "leq_literals" (formula "15") (term "0"))
                                                                                             (builtin "One Step Simplification" (formula "15"))
                                                                                             (rule "true_left" (formula "15"))
                                                                                             (rule "cnf_rightDist" (formula "6") (term "0"))
                                                                                             (rule "distr_forallAnd" (formula "6"))
                                                                                             (rule "andLeft" (formula "6"))
                                                                                             (rule "lenNonNegative" (formula "15") (term "0"))
                                                                                             (rule "inEqSimp_commuteLeq" (formula "15"))
                                                                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                                                                             (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "20"))
                                                                                             (rule "leq_literals" (formula "15") (term "0"))
                                                                                             (builtin "One Step Simplification" (formula "15"))
                                                                                             (rule "true_left" (formula "15"))
                                                                                             (rule "commute_or_2" (formula "10") (term "0"))
                                                                                             (rule "commute_or_2" (formula "6") (term "0"))
                                                                                             (rule "shift_paren_or" (formula "7") (term "0"))
                                                                                             (rule "commute_or" (formula "6") (term "0,0"))
                                                                                             (rule "ifthenelse_to_or_left" (formula "12") (term "1,1,0"))
                                                                                             (rule "eqSymm" (formula "12") (term "1,1,1,1,0"))
                                                                                             (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
                                                                                             (rule "shift_paren_or" (formula "10") (term "0,0"))
                                                                                             (rule "inEqSimp_or_weaken3" (formula "10") (term "0"))
                                                                                             (rule "polySimp_addAssoc" (formula "10") (term "1,0,1,0"))
                                                                                             (rule "add_literals" (formula "10") (term "0,1,0,1,0"))
                                                                                             (rule "add_zero_left" (formula "10") (term "1,0,1,0"))
                                                                                             (builtin "One Step Simplification" (formula "10"))
                                                                                             (rule "commute_or" (formula "10") (term "0,0"))
                                                                                             (rule "seqGetAlphaCast" (formula "9") (term "0"))
                                                                                             (rule "castedGetAny" (formula "9") (term "0"))
                                                                                             (builtin "One Step Simplification" (formula "9"))
                                                                                             (rule "true_left" (formula "9"))
                                                                                             (rule "shift_paren_or" (formula "12") (term "0,1,0,1,0"))
                                                                                             (rule "commute_or" (formula "12") (term "1,1,1,0"))
                                                                                             (rule "commute_or" (formula "12") (term "0,1,1,0"))
                                                                                             (rule "ifthenelse_split" (formula "18") (term "2,0"))
                                                                                             (branch "self.list.size ≥ 2 TRUE"
                                                                                                (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "18"))
                                                                                                (builtin "One Step Simplification" (formula "21"))
                                                                                                (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "18"))
                                                                                                (builtin "One Step Simplification" (formula "29"))
                                                                                                (rule "polySimp_homoEq" (formula "29"))
                                                                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                                                (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                                                                (rule "add_literals" (formula "29") (term "1,1,0"))
                                                                                                (rule "times_zero_1" (formula "29") (term "1,0"))
                                                                                                (rule "add_literals" (formula "29") (term "0"))
                                                                                                (rule "equal_literals" (formula "29"))
                                                                                                (rule "false_right" (formula "29"))
                                                                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "14"))
                                                                                                (rule "applyEq" (formula "14") (term "1") (ifseqformula "21"))
                                                                                                (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "21"))
                                                                                                (rule "close" (formula "34") (ifseqformula "11"))
                                                                                             )
                                                                                             (branch "self.list.size ≥ 2 FALSE"
                                                                                                (builtin "One Step Simplification" (formula "18"))
                                                                                                (rule "eqSymm" (formula "18"))
                                                                                                (rule "replace_known_right" (formula "20") (term "0,1,0") (ifseqformula "27"))
                                                                                                (builtin "One Step Simplification" (formula "20"))
                                                                                                (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "27"))
                                                                                                (builtin "One Step Simplification" (formula "29"))
                                                                                                (rule "eqSymm" (formula "29"))
                                                                                                (rule "inEqSimp_geqRight" (formula "27"))
                                                                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "14"))
                                                                                                (rule "applyEq" (formula "24") (term "0,3,0,0,0") (ifseqformula "19"))
                                                                                                (builtin "One Step Simplification" (formula "24"))
                                                                                                (rule "applyEq" (formula "14") (term "1") (ifseqformula "21"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                                (rule "mul_literals" (formula "1") (term "1"))
                                                                                                (rule "inEqSimp_contradEq7" (formula "29") (ifseqformula "20"))
                                                                                                (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "29") (term "0,0"))
                                                                                                (rule "leq_literals" (formula "29") (term "0"))
                                                                                                (builtin "One Step Simplification" (formula "29"))
                                                                                                (rule "false_right" (formula "29"))
                                                                                                (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
                                                                                                (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "20"))
                                                                                                (rule "add_literals" (formula "10") (term "1,0"))
                                                                                                (rule "applyEq" (formula "18") (term "1,2,0") (ifseqformula "20"))
                                                                                                (rule "add_literals" (formula "18") (term "2,0"))
                                                                                                (builtin "One Step Simplification" (formula "18"))
                                                                                                (rule "eqSymm" (formula "18"))
                                                                                                (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "20"))
                                                                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                                                                                (rule "qeq_literals" (formula "21"))
                                                                                                (rule "true_left" (formula "21"))
                                                                                                (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "20"))
                                                                                                (rule "applyEq" (formula "11") (term "1,1,1,0") (ifseqformula "20"))
                                                                                                (rule "add_literals" (formula "11") (term "1,1,0"))
                                                                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                                                                                                (rule "leq_literals" (formula "1"))
                                                                                                (rule "true_left" (formula "1"))
                                                                                                (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "19"))
                                                                                                (rule "applyEq" (formula "8") (term "1,1,1,0,0,1,0") (ifseqformula "19"))
                                                                                                (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                                                                (rule "applyEq" (formula "12") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "19"))
                                                                                                (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "19"))
                                                                                                (rule "add_literals" (formula "14") (term "1,0"))
                                                                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                                                                                (rule "eqSymm" (formula "14"))
                                                                                                (rule "applyEq" (formula "23") (term "0,3,0,0,0,0") (ifseqformula "17"))
                                                                                                (builtin "One Step Simplification" (formula "23"))
                                                                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "14"))
                                                                                                (rule "applyEq" (formula "10") (term "1,0,0,0,0") (ifseqformula "14"))
                                                                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "14"))
                                                                                                (builtin "One Step Simplification" (formula "21"))
                                                                                                (rule "true_left" (formula "21"))
                                                                                                (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "14"))
                                                                                                (rule "close" (formula "31") (ifseqformula "11"))
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                       (branch
                                                                                          (rule "allLeft" (formula "17") (inst "t=seqLen(Seq::select(heap, self, IntIterator::$nodeseq))") (userinteraction))
                                                                                          (rule "impLeft" (formula "17") (userinteraction))
                                                                                          (branch
                                                                                             (rule "andRight" (formula "32"))
                                                                                             (branch
                                                                                                (builtin "One Step Simplification" (formula "11"))
                                                                                                (builtin "One Step Simplification" (formula "10"))
                                                                                                (builtin "One Step Simplification" (formula "4"))
                                                                                                (builtin "One Step Simplification" (formula "3"))
                                                                                                (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "33")))
                                                                                                (builtin "One Step Simplification" (formula "41"))
                                                                                                (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "33")) (ifInst ""  (formula "42")))
                                                                                                (builtin "One Step Simplification" (formula "39"))
                                                                                                (builtin "One Step Simplification" (formula "38"))
                                                                                                (builtin "One Step Simplification" (formula "37"))
                                                                                                (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "33")) (ifInst ""  (formula "39")))
                                                                                                (builtin "One Step Simplification" (formula "35"))
                                                                                                (rule "true_left" (formula "3"))
                                                                                                (rule "false_right" (formula "35"))
                                                                                                (rule "translateJavaSubInt" (formula "13") (term "1"))
                                                                                                (builtin "One Step Simplification" (formula "13"))
                                                                                                (rule "true_left" (formula "13"))
                                                                                                (rule "translateJavaSubInt" (formula "14") (term "1,0,1,1,1,0"))
                                                                                                (rule "translateJavaAddInt" (formula "14") (term "1,0,2,1,1,1,0"))
                                                                                                (rule "translateJavaSubInt" (formula "16") (term "1,0,2,1"))
                                                                                                (rule "less_literals" (formula "2"))
                                                                                                (rule "true_left" (formula "2"))
                                                                                                (rule "notLeft" (formula "9"))
                                                                                                (rule "andLeft" (formula "17"))
                                                                                                (rule "andLeft" (formula "6"))
                                                                                                (rule "notRight" (formula "35"))
                                                                                                (rule "andLeft" (formula "19"))
                                                                                                (rule "andLeft" (formula "19"))
                                                                                                (rule "andLeft" (formula "19"))
                                                                                                (rule "notLeft" (formula "19"))
                                                                                                (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                                (rule "eqSymm" (formula "25") (term "1"))
                                                                                                (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                                (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                                (rule "eqSymm" (formula "18"))
                                                                                                (rule "eqSymm" (formula "11"))
                                                                                                (rule "eqSymm" (formula "17"))
                                                                                                (rule "eqSymm" (formula "24"))
                                                                                                (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                                (rule "eqSymm" (formula "26") (term "0"))
                                                                                                (rule "eqSymm" (formula "15"))
                                                                                                (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                                (rule "eqSymm" (formula "10"))
                                                                                                (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                                (rule "eqSymm" (formula "16"))
                                                                                                (rule "eqSymm" (formula "20"))
                                                                                                (rule "eqSymm" (formula "19"))
                                                                                                (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "37"))
                                                                                                (builtin "One Step Simplification" (formula "25"))
                                                                                                (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "37"))
                                                                                                (builtin "One Step Simplification" (formula "26"))
                                                                                                (rule "notLeft" (formula "26"))
                                                                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,1,0"))
                                                                                                (rule "mul_literals" (formula "13") (term "1,1,0,1,0"))
                                                                                                (rule "polySimp_homoEq" (formula "39"))
                                                                                                (rule "polySimp_elimSub" (formula "33") (term "1,0,0"))
                                                                                                (rule "mul_literals" (formula "33") (term "1,1,0,0"))
                                                                                                (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
                                                                                                (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                                                                (rule "polySimp_elimSub" (formula "11") (term "1,0,1,1"))
                                                                                                (rule "mul_literals" (formula "11") (term "1,1,0,1,1"))
                                                                                                (rule "polySimp_elimSub" (formula "12") (term "1,0,1,0,1,0"))
                                                                                                (rule "mul_literals" (formula "12") (term "1,1,0,1,0,1,0"))
                                                                                                (rule "polySimp_elimSub" (formula "12") (term "1,1,1,0"))
                                                                                                (rule "mul_literals" (formula "12") (term "1,1,1,1,0"))
                                                                                                (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                                (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                                (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                                (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "33") (term "1,0,0"))
                                                                                                (rule "polySimp_addComm0" (formula "11") (term "1,0,0"))
                                                                                                (rule "castedGetAny" (formula "2") (term "1,0"))
                                                                                                (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "11") (term "1,0,1,1"))
                                                                                                (rule "polySimp_addComm0" (formula "12") (term "1,0,1,0,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "12") (term "1,1,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "38") (term "0,0,1"))
                                                                                                (rule "polySimp_addComm0" (formula "39") (term "1,1,0"))
                                                                                                (rule "inEqSimp_leqRight" (formula "34"))
                                                                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                                                                (rule "subsetSingletonLeft" (formula "8"))
                                                                                                (rule "subsetSingletonLeft" (formula "9"))
                                                                                                (rule "dismissNonSelectedField" (formula "2") (term "0"))
                                                                                                (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "39") (term "0,1,0"))
                                                                                                (rule "castedGetAny" (formula "15") (term "0,1,0,0,1,0"))
                                                                                                (rule "eqSymm" (formula "15") (term "1,0,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "25") (term "0"))
                                                                                                (rule "castedGetAny" (formula "13") (term "0,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                                (rule "castedGetAny" (formula "11") (term "0,1,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "15") (term "1,1,1,1,0"))
                                                                                                (rule "castedGetAny" (formula "26") (term "0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,1,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "15") (term "2,0,1,1,0"))
                                                                                                (rule "castedGetAny" (formula "14") (term "1,0"))
                                                                                                (rule "castedGetAny" (formula "34") (term "0"))
                                                                                                (rule "castedGetAny" (formula "12") (term "0"))
                                                                                                (rule "eqSymm" (formula "12"))
                                                                                                (rule "castedGetAny" (formula "13") (term "1,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "17") (term "2,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "38") (term "0,0,1"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "23"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "22"))
                                                                                                (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                                                                (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "2") (term "0"))
                                                                                                (rule "castedGetAny" (formula "15") (term "1,0,1,0,0,1,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "12") (term "1,0"))
                                                                                                (rule "eqSymm" (formula "12"))
                                                                                                (rule "dismissNonSelectedField" (formula "38") (term "0,0,1"))
                                                                                                (rule "dismissNonSelectedField" (formula "2") (term "0"))
                                                                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "17"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "22"))
                                                                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "18"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "21"))
                                                                                                (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "23"))
                                                                                                (rule "applyEq" (formula "20") (term "2,0") (ifseqformula "23"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "22") (term "0") (ifseqformula "20"))
                                                                                                (rule "polySimp_elimSub" (formula "22") (term "1,0"))
                                                                                                (rule "times_zero_2" (formula "22") (term "1,1,0"))
                                                                                                (rule "add_zero_right" (formula "22") (term "1,0"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "31") (term "1") (ifseqformula "20"))
                                                                                                (rule "eqSymm" (formula "31"))
                                                                                                (rule "polySimp_elimSub" (formula "31") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "31") (term "1,1,0"))
                                                                                                (rule "add_zero_right" (formula "31") (term "1,0"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "23") (term "0") (ifseqformula "20"))
                                                                                                (rule "polySimp_elimSub" (formula "23") (term "1,0"))
                                                                                                (rule "times_zero_2" (formula "23") (term "1,1,0"))
                                                                                                (rule "add_zero_right" (formula "23") (term "1,0"))
                                                                                                (builtin "One Step Simplification" (formula "23"))
                                                                                                (rule "eqSymm" (formula "23") (term "1"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0"))
                                                                                                (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                                                                                                (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "0"))
                                                                                                (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "24"))
                                                                                                (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                                (rule "applyEq" (formula "27") (term "3,0,0") (ifseqformula "2"))
                                                                                                (rule "applyEq" (formula "31") (term "1") (ifseqformula "17"))
                                                                                                (rule "polySimp_sepNegMonomial" (formula "38"))
                                                                                                (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                                (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                                (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                                (rule "inEqSimp_contradEq3" (formula "23") (term "1") (ifseqformula "1"))
                                                                                                (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                                                                (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                                                                (rule "qeq_literals" (formula "23") (term "0,1"))
                                                                                                (builtin "One Step Simplification" (formula "23"))
                                                                                                (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "23"))
                                                                                                (builtin "One Step Simplification" (formula "31"))
                                                                                                (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "23"))
                                                                                                (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "21")))
                                                                                                (rule "true_left" (formula "22"))
                                                                                                (rule "inEqSimp_strengthen0" (formula "21") (ifseqformula "30"))
                                                                                                (rule "inEqSimp_contradEq3" (formula "30") (ifseqformula "21"))
                                                                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                                                                                (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "30") (term "0,0"))
                                                                                                (rule "qeq_literals" (formula "30") (term "0"))
                                                                                                (builtin "One Step Simplification" (formula "30"))
                                                                                                (rule "false_right" (formula "30"))
                                                                                                (rule "inEqSimp_strengthen0" (formula "21") (ifseqformula "36"))
                                                                                                (rule "polySimp_addAssoc" (formula "21") (term "1"))
                                                                                                (rule "add_literals" (formula "21") (term "0,1"))
                                                                                                (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "21"))
                                                                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                                                                                (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                                                                                (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                                                                (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "36") (term "0,0"))
                                                                                                (rule "qeq_literals" (formula "36") (term "0"))
                                                                                                (builtin "One Step Simplification" (formula "36"))
                                                                                                (rule "false_right" (formula "36"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "22"))
                                                                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                (rule "closeFalse" (formula "1"))
                                                                                             )
                                                                                             (branch
                                                                                                (builtin "One Step Simplification" (formula "11"))
                                                                                                (builtin "One Step Simplification" (formula "10"))
                                                                                                (builtin "One Step Simplification" (formula "4"))
                                                                                                (builtin "One Step Simplification" (formula "3"))
                                                                                                (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "33")))
                                                                                                (builtin "One Step Simplification" (formula "41"))
                                                                                                (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "33")) (ifInst ""  (formula "42")))
                                                                                                (builtin "One Step Simplification" (formula "39"))
                                                                                                (builtin "One Step Simplification" (formula "38"))
                                                                                                (builtin "One Step Simplification" (formula "37"))
                                                                                                (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "33")) (ifInst ""  (formula "39")))
                                                                                                (builtin "One Step Simplification" (formula "35"))
                                                                                                (rule "true_left" (formula "3"))
                                                                                                (rule "false_right" (formula "35"))
                                                                                                (rule "translateJavaSubInt" (formula "13") (term "1"))
                                                                                                (builtin "One Step Simplification" (formula "13"))
                                                                                                (rule "true_left" (formula "13"))
                                                                                                (rule "translateJavaSubInt" (formula "16") (term "1,0,2,1"))
                                                                                                (rule "translateJavaSubInt" (formula "14") (term "1,0,1,1,1,0"))
                                                                                                (rule "translateJavaAddInt" (formula "14") (term "1,0,2,1,1,1,0"))
                                                                                                (rule "less_literals" (formula "2"))
                                                                                                (rule "true_left" (formula "2"))
                                                                                                (rule "andLeft" (formula "18"))
                                                                                                (rule "andLeft" (formula "6"))
                                                                                                (rule "notLeft" (formula "10"))
                                                                                                (rule "notRight" (formula "35"))
                                                                                                (rule "andLeft" (formula "19"))
                                                                                                (rule "andLeft" (formula "19"))
                                                                                                (rule "andLeft" (formula "19"))
                                                                                                (rule "notLeft" (formula "19"))
                                                                                                (rule "eqSymm" (formula "11"))
                                                                                                (rule "eqSymm" (formula "17"))
                                                                                                (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
                                                                                                (rule "eqSymm" (formula "14") (term "0,1,0,1,0,1,0"))
                                                                                                (rule "eqSymm" (formula "14") (term "1,1,0,1,0,1,0"))
                                                                                                (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                                (rule "eqSymm" (formula "26") (term "0"))
                                                                                                (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                                (rule "eqSymm" (formula "18"))
                                                                                                (rule "eqSymm" (formula "15"))
                                                                                                (rule "eqSymm" (formula "24"))
                                                                                                (rule "eqSymm" (formula "25") (term "1"))
                                                                                                (rule "eqSymm" (formula "10"))
                                                                                                (rule "eqSymm" (formula "16"))
                                                                                                (rule "eqSymm" (formula "14") (term "1,1,0"))
                                                                                                (rule "eqSymm" (formula "20"))
                                                                                                (rule "eqSymm" (formula "19"))
                                                                                                (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "37"))
                                                                                                (builtin "One Step Simplification" (formula "25"))
                                                                                                (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "37"))
                                                                                                (builtin "One Step Simplification" (formula "26"))
                                                                                                (rule "notLeft" (formula "26"))
                                                                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,1,0"))
                                                                                                (rule "mul_literals" (formula "13") (term "1,1,0,1,0"))
                                                                                                (rule "polySimp_homoEq" (formula "39"))
                                                                                                (rule "polySimp_elimSub" (formula "33") (term "1,0,0"))
                                                                                                (rule "mul_literals" (formula "33") (term "1,1,0,0"))
                                                                                                (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
                                                                                                (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                                                                (rule "polySimp_elimSub" (formula "11") (term "1,0,1,1"))
                                                                                                (rule "mul_literals" (formula "11") (term "1,1,0,1,1"))
                                                                                                (rule "polySimp_elimSub" (formula "12") (term "1,0,1,0,1,0"))
                                                                                                (rule "mul_literals" (formula "12") (term "1,1,0,1,0,1,0"))
                                                                                                (rule "polySimp_elimSub" (formula "12") (term "1,1,1,0"))
                                                                                                (rule "mul_literals" (formula "12") (term "1,1,1,1,0"))
                                                                                                (rule "polySimp_elimSub" (formula "16") (term "1,0,2,0"))
                                                                                                (rule "mul_literals" (formula "16") (term "1,1,0,2,0"))
                                                                                                (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1,0"))
                                                                                                (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,2,0,1,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "33") (term "1,0,0"))
                                                                                                (rule "polySimp_addComm0" (formula "11") (term "1,0,0"))
                                                                                                (rule "castedGetAny" (formula "2") (term "1,0"))
                                                                                                (rule "castedGetAny" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "11") (term "1,0,1,1"))
                                                                                                (rule "polySimp_addComm0" (formula "12") (term "1,0,1,0,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "12") (term "1,1,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "16") (term "1,0,2,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "38") (term "0,0,1"))
                                                                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "39") (term "1,1,0"))
                                                                                                (rule "inEqSimp_ltRight" (formula "34"))
                                                                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                                                                (rule "subsetSingletonLeft" (formula "8"))
                                                                                                (rule "subsetSingletonLeft" (formula "9"))
                                                                                                (rule "dismissNonSelectedField" (formula "2") (term "0"))
                                                                                                (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "39") (term "0,1,0"))
                                                                                                (rule "castedGetAny" (formula "15") (term "0,1,0,0,1,0"))
                                                                                                (rule "eqSymm" (formula "15") (term "1,0,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "15") (term "1,0,1,0,1,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "15") (term "0,0,1,0,1,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "13") (term "0,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "16") (term "2,0"))
                                                                                                (rule "castedGetAny" (formula "25") (term "0"))
                                                                                                (rule "castedGetAny" (formula "11") (term "0,1,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "15") (term "1,1,1,1,0"))
                                                                                                (rule "castedGetAny" (formula "26") (term "0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,1,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "15") (term "2,0,1,1,0"))
                                                                                                (rule "castedGetAny" (formula "14") (term "1,0"))
                                                                                                (rule "castedGetAny" (formula "34") (term "0"))
                                                                                                (rule "castedGetAny" (formula "12") (term "0"))
                                                                                                (rule "eqSymm" (formula "12"))
                                                                                                (rule "castedGetAny" (formula "13") (term "1,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "17") (term "2,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "38") (term "0,0,1"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "23"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "22"))
                                                                                                (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                                                                (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "2") (term "0"))
                                                                                                (rule "castedGetAny" (formula "15") (term "1,0,1,0,0,1,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "12") (term "1,0"))
                                                                                                (rule "eqSymm" (formula "12"))
                                                                                                (rule "dismissNonSelectedField" (formula "38") (term "0,0,1"))
                                                                                                (rule "dismissNonSelectedField" (formula "2") (term "0"))
                                                                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "18"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "21"))
                                                                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "17"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "22"))
                                                                                                (rule "applyEq" (formula "20") (term "2,0") (ifseqformula "23"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "22") (term "0") (ifseqformula "20"))
                                                                                                (rule "polySimp_elimSub" (formula "22") (term "1,0"))
                                                                                                (rule "times_zero_2" (formula "22") (term "1,1,0"))
                                                                                                (rule "add_zero_right" (formula "22") (term "1,0"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "25") (term "1,0") (ifseqformula "20"))
                                                                                                (rule "polySimp_elimSub" (formula "25") (term "1,1,0"))
                                                                                                (rule "times_zero_2" (formula "25") (term "1,1,1,0"))
                                                                                                (rule "add_zero_right" (formula "25") (term "1,1,0"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "31") (term "1") (ifseqformula "20"))
                                                                                                (rule "eqSymm" (formula "31"))
                                                                                                (rule "polySimp_elimSub" (formula "31") (term "1,0"))
                                                                                                (rule "times_zero_2" (formula "31") (term "1,1,0"))
                                                                                                (rule "add_zero_right" (formula "31") (term "1,0"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "23") (term "0") (ifseqformula "20"))
                                                                                                (rule "polySimp_elimSub" (formula "23") (term "1,0"))
                                                                                                (rule "times_zero_2" (formula "23") (term "1,1,0"))
                                                                                                (rule "add_zero_right" (formula "23") (term "1,0"))
                                                                                                (builtin "One Step Simplification" (formula "23"))
                                                                                                (rule "eqSymm" (formula "23") (term "1"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0"))
                                                                                                (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0"))
                                                                                                (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0"))
                                                                                                (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "23") (term "0"))
                                                                                                (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "24"))
                                                                                                (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                                                                                (rule "applyEq" (formula "27") (term "3,0,0") (ifseqformula "2"))
                                                                                                (rule "applyEq" (formula "31") (term "1") (ifseqformula "17"))
                                                                                                (rule "polySimp_sepNegMonomial" (formula "38"))
                                                                                                (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                                                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                                                                (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "25") (term "0,0,1,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                                                                                (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                                                                                (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "1"))
                                                                                                (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                                                                                                (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                                                                (rule "polySimp_addComm0" (formula "38") (term "0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                                                                (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "38") (term "0,0"))
                                                                                                (rule "leq_literals" (formula "38") (term "0"))
                                                                                                (builtin "One Step Simplification" (formula "38"))
                                                                                                (rule "false_right" (formula "38"))
                                                                                                (rule "inEqSimp_strengthen0" (formula "22") (ifseqformula "31"))
                                                                                                (rule "inEqSimp_contradEq3" (formula "31") (ifseqformula "22"))
                                                                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                                                                (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "31") (term "0,0"))
                                                                                                (rule "qeq_literals" (formula "31") (term "0"))
                                                                                                (builtin "One Step Simplification" (formula "31"))
                                                                                                (rule "false_right" (formula "31"))
                                                                                                (rule "pullOutSelect" (formula "36") (term "0,0,0") (inst "selectSK=IntIterator_list_0"))
                                                                                                (rule "applyEq" (formula "37") (term "1,0,0,1") (ifseqformula "1"))
                                                                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                                                                                (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                                                                (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "5"))
                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                (rule "simplifySelectOfStore" (formula "1"))
                                                                                                (builtin "One Step Simplification" (formula "1"))
                                                                                                (rule "applyEqReverse" (formula "37") (term "1,0,0,1") (ifseqformula "1"))
                                                                                                (rule "applyEqReverse" (formula "37") (term "0,0,0") (ifseqformula "1"))
                                                                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                                                                (rule "replace_known_right" (formula "36") (term "0,0") (ifseqformula "31"))
                                                                                                (builtin "One Step Simplification" (formula "36"))
                                                                                                (rule "notRight" (formula "36"))
                                                                                                (rule "elementOfUnionEQ" (formula "9") (ifseqformula "11"))
                                                                                                (builtin "One Step Simplification" (formula "9"))
                                                                                                (rule "true_left" (formula "9"))
                                                                                                (rule "elementOfUnionEQ" (formula "8") (ifseqformula "10"))
                                                                                                (builtin "One Step Simplification" (formula "8"))
                                                                                                (rule "true_left" (formula "8"))
                                                                                                (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "20"))
                                                                                                (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "2"))
                                                                                                (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "2"))
                                                                                                (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "2"))
                                                                                                (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "2"))
                                                                                                (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "2"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "20") (term "2,0") (ifseqformula "19"))
                                                                                                (rule "polySimp_elimSub" (formula "20") (term "1,2,0"))
                                                                                                (rule "times_zero_2" (formula "20") (term "1,1,2,0"))
                                                                                                (rule "add_zero_right" (formula "20") (term "1,2,0"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "2") (term "0") (ifseqformula "19"))
                                                                                                (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                                                                                                (rule "times_zero_2" (formula "2") (term "1,1,0"))
                                                                                                (rule "add_zero_right" (formula "2") (term "1,0"))
                                                                                                (builtin "One Step Simplification" (formula "2"))
                                                                                                (rule "eqSymm" (formula "2") (term "1"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "3") (term "0") (ifseqformula "19"))
                                                                                                (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                                                                                (rule "times_zero_2" (formula "3") (term "1,1,0"))
                                                                                                (rule "add_zero_right" (formula "3") (term "1,0"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "22") (term "1,0") (ifseqformula "19"))
                                                                                                (rule "polySimp_elimSub" (formula "22") (term "1,1,0"))
                                                                                                (rule "times_zero_2" (formula "22") (term "1,1,1,0"))
                                                                                                (rule "add_zero_right" (formula "22") (term "1,1,0"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "24") (term "1,0") (ifseqformula "19"))
                                                                                                (rule "polySimp_elimSub" (formula "24") (term "1,1,0"))
                                                                                                (rule "times_zero_2" (formula "24") (term "1,1,1,0"))
                                                                                                (rule "add_zero_right" (formula "24") (term "1,1,0"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "25") (term "1,1,0") (ifseqformula "19"))
                                                                                                (rule "polySimp_elimSub" (formula "25") (term "1,1,1,0"))
                                                                                                (rule "mul_literals" (formula "25") (term "1,1,1,1,0"))
                                                                                                (rule "add_zero_right" (formula "25") (term "1,1,1,0"))
                                                                                                (rule "lenOfSeqSubEQ" (formula "21") (term "0") (ifseqformula "19"))
                                                                                                (rule "polySimp_elimSub" (formula "21") (term "1,0"))
                                                                                                (rule "times_zero_2" (formula "21") (term "1,1,0"))
                                                                                                (rule "add_zero_right" (formula "21") (term "1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,2,0"))
                                                                                                (rule "add_zero_right" (formula "20") (term "0,0,2,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,2,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "2") (term "0"))
                                                                                                (rule "add_zero_right" (formula "2") (term "0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                                                                                (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0"))
                                                                                                (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0"))
                                                                                                (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,1,0"))
                                                                                                (rule "add_zero_right" (formula "25") (term "0,0,1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0"))
                                                                                                (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,2,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,0,2,0"))
                                                                                                (rule "polySimp_elimOne" (formula "20") (term "0,0,2,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "2") (term "0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "21") (term "0,0,1,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "24") (term "0,0,1,1,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                                                                                (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "20"))
                                                                                                (builtin "One Step Simplification" (formula "2"))
                                                                                                (rule "eqSymm" (formula "2") (term "1"))
                                                                                                (rule "nnf_imp2or" (formula "11") (term "1,0"))
                                                                                                (rule "nnf_imp2or" (formula "13") (term "1,0,1,0,1,0"))
                                                                                                (rule "nnf_imp2or" (formula "8") (term "0"))
                                                                                                (rule "nnf_imp2or" (formula "11") (term "0"))
                                                                                                (rule "nnf_imp2or" (formula "13") (term "0"))
                                                                                                (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                                                                (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                                                                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                                                                                                (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                                                                                (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                                                                                                (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                                                                                                (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                                                                                (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                                                                (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                                                                                (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                                                                (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                                                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                                                                                (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                                                                                (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                                                                                (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                                                                                (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                                                                (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                                                                (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                                                                                (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                                                                                (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                                                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                                                                                (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                                                                                (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                                                                                (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                                                                                (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                                                                                (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                                                                (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                                                                (rule "nnf_imp2or" (formula "13") (term "0,1,0,1,0"))
                                                                                                (rule "nnf_notAnd" (formula "13") (term "0,0,1,0,1,0"))
                                                                                                (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0,1,0"))
                                                                                                (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,1,0"))
                                                                                                (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,1,0"))
                                                                                                (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0,1,0"))
                                                                                                (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1,0,1,0"))
                                                                                                (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0,1,0"))
                                                                                                (rule "mul_literals" (formula "13") (term "1,0,0,0,1,0,1,0"))
                                                                                                (rule "ifthenelse_split" (formula "29") (term "0"))
                                                                                                (branch "result_0.<created> = TRUE TRUE"
                                                                                                   (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "29"))
                                                                                                   (builtin "One Step Simplification" (formula "28"))
                                                                                                   (rule "true_left" (formula "28"))
                                                                                                   (rule "commute_or" (formula "22"))
                                                                                                   (rule "inEqSimp_or_weaken1" (formula "22"))
                                                                                                   (rule "add_zero_right" (formula "22") (term "1,0"))
                                                                                                   (builtin "One Step Simplification" (formula "22"))
                                                                                                   (rule "ifthenelse_split" (formula "14") (term "0"))
                                                                                                   (branch "self.list.size = 0 TRUE"
                                                                                                      (rule "eqSymm" (formula "15"))
                                                                                                      (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "14"))
                                                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                                                      (rule "eqSymm" (formula "16"))
                                                                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "14"))
                                                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                                                      (rule "inEqSimp_commuteGeq" (formula "2"))
                                                                                                      (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "14"))
                                                                                                      (builtin "One Step Simplification" (formula "24"))
                                                                                                      (rule "applyEq" (formula "21") (term "1") (ifseqformula "14"))
                                                                                                      (rule "applyEq" (formula "32") (term "1,1,0") (ifseqformula "14"))
                                                                                                      (rule "add_zero_right" (formula "32") (term "1,0"))
                                                                                                      (rule "applyEq" (formula "8") (term "1,1,0,0") (ifseqformula "14"))
                                                                                                      (rule "applyEq" (formula "23") (term "0") (ifseqformula "14"))
                                                                                                      (rule "qeq_literals" (formula "23"))
                                                                                                      (rule "true_left" (formula "23"))
                                                                                                      (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "14"))
                                                                                                      (rule "add_zero_right" (formula "10") (term "1,0"))
                                                                                                      (rule "applyEq" (formula "24") (term "0,0,1,1,0") (ifseqformula "14"))
                                                                                                      (rule "qeq_literals" (formula "24") (term "0,1,1,0"))
                                                                                                      (builtin "One Step Simplification" (formula "24"))
                                                                                                      (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "14"))
                                                                                                      (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "14"))
                                                                                                      (builtin "One Step Simplification" (formula "21"))
                                                                                                      (rule "leq_literals" (formula "21"))
                                                                                                      (rule "true_left" (formula "21"))
                                                                                                      (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "14"))
                                                                                                      (rule "qeq_literals" (formula "21") (term "0,0"))
                                                                                                      (builtin "One Step Simplification" (formula "21"))
                                                                                                      (rule "inEqSimp_homoInEq0" (formula "21"))
                                                                                                      (rule "times_zero_2" (formula "21") (term "1,0"))
                                                                                                      (rule "add_zero_right" (formula "21") (term "0"))
                                                                                                      (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "14"))
                                                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                                                      (rule "eqSymm" (formula "19"))
                                                                                                      (rule "applyEq" (formula "13") (term "1,1,0,0,1,0,1,0") (ifseqformula "14"))
                                                                                                      (rule "applyEq" (formula "9") (term "1,1,1,0,0,1,0") (ifseqformula "14"))
                                                                                                      (rule "add_zero_right" (formula "9") (term "1,1,0,0,1,0"))
                                                                                                      (rule "applyEq" (formula "20") (term "1,2,0") (ifseqformula "14"))
                                                                                                      (builtin "One Step Simplification" (formula "20"))
                                                                                                      (rule "eqSymm" (formula "20"))
                                                                                                      (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "14"))
                                                                                                      (rule "add_zero_right" (formula "12") (term "1,1,0"))
                                                                                                      (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "14"))
                                                                                                      (rule "applyEq" (formula "13") (term "1,1,0,0,1,1,0") (ifseqformula "14"))
                                                                                                      (rule "add_zero_right" (formula "13") (term "1,0,0,1,1,0"))
                                                                                                      (rule "applyEq" (formula "11") (term "1,1,1,0,0,1,0") (ifseqformula "14"))
                                                                                                      (rule "add_zero_right" (formula "11") (term "1,1,0,0,1,0"))
                                                                                                      (rule "applyEq" (formula "18") (term "1") (ifseqformula "14"))
                                                                                                      (rule "applyEq" (formula "17") (term "1") (ifseqformula "14"))
                                                                                                      (rule "applyEq" (formula "10") (term "1,1,1,1") (ifseqformula "14"))
                                                                                                      (rule "add_zero_right" (formula "10") (term "1,1,1"))
                                                                                                      (rule "applyEq" (formula "11") (term "1,1,1,1,0") (ifseqformula "14"))
                                                                                                      (rule "add_zero_right" (formula "11") (term "1,1,1,0"))
                                                                                                      (rule "applyEq" (formula "25") (term "0,3,0,0,0,0") (ifseqformula "19"))
                                                                                                      (builtin "One Step Simplification" (formula "25"))
                                                                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "14"))
                                                                                                      (rule "leq_literals" (formula "2"))
                                                                                                      (rule "true_left" (formula "2"))
                                                                                                      (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "13"))
                                                                                                      (rule "add_zero_right" (formula "20") (term "0"))
                                                                                                      (rule "qeq_literals" (formula "20"))
                                                                                                      (rule "closeFalse" (formula "20"))
                                                                                                   )
                                                                                                   (branch "self.list.size = 0 FALSE"
                                                                                                      (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "30"))
                                                                                                      (builtin "One Step Simplification" (formula "15"))
                                                                                                      (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "15"))
                                                                                                      (rule "applyEq" (formula "11") (term "1,0,0,1,0") (ifseqformula "15"))
                                                                                                      (rule "applyEq" (formula "32") (term "0") (ifseqformula "15"))
                                                                                                      (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "15"))
                                                                                                      (rule "inEqSimp_strengthen1" (formula "22") (ifseqformula "30"))
                                                                                                      (rule "add_zero_right" (formula "22") (term "1"))
                                                                                                      (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "22"))
                                                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                                                      (rule "replace_known_left" (formula "24") (term "0,1,1,0") (ifseqformula "22"))
                                                                                                      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")))
                                                                                                      (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "22"))
                                                                                                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "22")))
                                                                                                      (rule "replace_known_left" (formula "19") (term "0,2,0") (ifseqformula "22"))
                                                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                                                      (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "22"))
                                                                                                      (builtin "One Step Simplification" (formula "20"))
                                                                                                      (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "22"))
                                                                                                      (builtin "One Step Simplification" (formula "23"))
                                                                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                                                      (rule "add_literals" (formula "2") (term "1,0"))
                                                                                                      (rule "times_zero_1" (formula "2") (term "0"))
                                                                                                      (rule "leq_literals" (formula "2"))
                                                                                                      (rule "true_left" (formula "2"))
                                                                                                      (rule "inEqSimp_homoInEq0" (formula "20"))
                                                                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                                                                      (rule "add_literals" (formula "20") (term "1,1,0"))
                                                                                                      (rule "times_zero_1" (formula "20") (term "1,0"))
                                                                                                      (rule "add_literals" (formula "20") (term "0"))
                                                                                                      (rule "qeq_literals" (formula "20"))
                                                                                                      (rule "closeFalse" (formula "20"))
                                                                                                   )
                                                                                                )
                                                                                                (branch "result_0.<created> = TRUE FALSE"
                                                                                                   (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "30"))
                                                                                                   (builtin "One Step Simplification" (formula "28"))
                                                                                                   (rule "commute_or" (formula "22"))
                                                                                                   (rule "inEqSimp_or_weaken1" (formula "22"))
                                                                                                   (rule "add_zero_right" (formula "22") (term "1,0"))
                                                                                                   (builtin "One Step Simplification" (formula "22"))
                                                                                                   (rule "ifthenelse_split" (formula "14") (term "0"))
                                                                                                   (branch "self.list.size = 0 TRUE"
                                                                                                      (rule "eqSymm" (formula "15"))
                                                                                                      (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "14"))
                                                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                                                      (rule "eqSymm" (formula "16"))
                                                                                                      (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "14"))
                                                                                                      (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                                                                                      (builtin "One Step Simplification" (formula "24"))
                                                                                                      (rule "applyEq" (formula "25") (term "1,1,1,0") (ifseqformula "14"))
                                                                                                      (builtin "One Step Simplification" (formula "25"))
                                                                                                      (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "14"))
                                                                                                      (rule "applyEq" (formula "13") (term "1,1,0,0,1,0,1,0") (ifseqformula "14"))
                                                                                                      (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "14"))
                                                                                                      (rule "qeq_literals" (formula "2") (term "0,0"))
                                                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                                                      (rule "inEqSimp_commuteGeq" (formula "2"))
                                                                                                      (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "14"))
                                                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                                                      (rule "eqSymm" (formula "19"))
                                                                                                      (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "14"))
                                                                                                      (rule "add_zero_right" (formula "10") (term "1,0"))
                                                                                                      (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "14"))
                                                                                                      (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "14"))
                                                                                                      (rule "add_zero_right" (formula "22") (term "1"))
                                                                                                      (rule "applyEq" (formula "8") (term "1,1,0,0") (ifseqformula "14"))
                                                                                                      (rule "applyEq" (formula "20") (term "1,2,0") (ifseqformula "14"))
                                                                                                      (builtin "One Step Simplification" (formula "20"))
                                                                                                      (rule "eqSymm" (formula "20"))
                                                                                                      (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "14"))
                                                                                                      (rule "add_literals" (formula "33") (term "1,0"))
                                                                                                      (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "14"))
                                                                                                      (builtin "One Step Simplification" (formula "22"))
                                                                                                      (rule "leq_literals" (formula "22"))
                                                                                                      (rule "closeFalse" (formula "22"))
                                                                                                   )
                                                                                                   (branch "self.list.size = 0 FALSE"
                                                                                                      (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "30"))
                                                                                                      (builtin "One Step Simplification" (formula "15"))
                                                                                                      (rule "applyEq" (formula "33") (term "0") (ifseqformula "15"))
                                                                                                      (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "15"))
                                                                                                      (rule "applyEq" (formula "11") (term "1,0,0,1,0") (ifseqformula "15"))
                                                                                                      (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "15"))
                                                                                                      (rule "inEqSimp_strengthen1" (formula "22") (ifseqformula "30"))
                                                                                                      (rule "add_literals" (formula "22") (term "1"))
                                                                                                      (rule "replace_known_left" (formula "24") (term "0,1,1,0") (ifseqformula "22"))
                                                                                                      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")))
                                                                                                      (rule "replace_known_left" (formula "19") (term "0,2,0") (ifseqformula "22"))
                                                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                                                      (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "22"))
                                                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                                                      (rule "replace_known_left" (formula "21") (term "0,1,0") (ifseqformula "22"))
                                                                                                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "22")))
                                                                                                      (rule "replace_known_left" (formula "23") (term "0,1,0") (ifseqformula "22"))
                                                                                                      (builtin "One Step Simplification" (formula "23"))
                                                                                                      (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "22"))
                                                                                                      (builtin "One Step Simplification" (formula "20"))
                                                                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                                                      (rule "add_literals" (formula "2") (term "1,0"))
                                                                                                      (rule "times_zero_1" (formula "2") (term "0"))
                                                                                                      (rule "leq_literals" (formula "2"))
                                                                                                      (rule "true_left" (formula "2"))
                                                                                                      (rule "inEqSimp_homoInEq0" (formula "20"))
                                                                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                                                                      (rule "add_literals" (formula "20") (term "1,1,0"))
                                                                                                      (rule "times_zero_1" (formula "20") (term "1,0"))
                                                                                                      (rule "add_zero_right" (formula "20") (term "0"))
                                                                                                      (rule "qeq_literals" (formula "20"))
                                                                                                      (rule "closeFalse" (formula "20"))
                                                                                                   )
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                          (branch
                                                                                             (rule "andLeft" (formula "17") (userinteraction))
                                                                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "18") (userinteraction))
                                                                                             (rule "ifthenelse_split" (formula "1") (term "0") (userinteraction))
                                                                                             (branch "self.nodeseq.length = javaSubInt(self.list.size, 1) TRUE"
                                                                                                (builtin "One Step Simplification" (formula "12"))
                                                                                                (builtin "One Step Simplification" (formula "11"))
                                                                                                (builtin "One Step Simplification" (formula "5"))
                                                                                                (builtin "One Step Simplification" (formula "4"))
                                                                                                (builtin "One Step Simplification" (formula "2"))
                                                                                                (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "34")))
                                                                                                (builtin "One Step Simplification" (formula "42"))
                                                                                                (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "34")) (ifInst ""  (formula "43")))
                                                                                                (builtin "One Step Simplification" (formula "40"))
                                                                                                (builtin "One Step Simplification" (formula "39"))
                                                                                                (builtin "One Step Simplification" (formula "38"))
                                                                                                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "34")) (ifInst ""  (formula "40")))
                                                                                                (builtin "One Step Simplification" (formula "36"))
                                                                                                (rule "true_left" (formula "3"))
                                                                                                (rule "false_right" (formula "36"))
                                                                                                (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                                                                                (rule "translateJavaAddInt" (formula "16") (term "1,0,2,1"))
                                                                                                (rule "translateJavaSubInt" (formula "17") (term "1,0,1,1,1,0"))
                                                                                                (rule "translateJavaSubInt" (formula "1") (term "1"))
                                                                                                (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1,1,1,0"))
                                                                                                (rule "translateJavaSubInt" (formula "13") (term "1"))
                                                                                                (builtin "One Step Simplification" (formula "13"))
                                                                                                (rule "true_left" (formula "13"))
                                                                                                (rule "translateJavaSubInt" (formula "18") (term "1,0,2,1"))
                                                                                                (rule "less_literals" (formula "2"))
                                                                                                (rule "true_left" (formula "2"))
                                                                                                (rule "notLeft" (formula "9"))
                                                                                                (rule "andLeft" (formula "12"))
                                                                                                (rule "andLeft" (formula "20"))
                                                                                                (rule "andLeft" (formula "6"))
                                                                                                (rule "notRight" (formula "37"))
                                                                                                (rule "andLeft" (formula "14"))
                                                                                                (rule "andLeft" (formula "23"))
                                                                                                (rule "notLeft" (formula "14"))
                                                                                                (rule "andLeft" (formula "22"))
                                                                                                (rule "andLeft" (formula "22"))
                                                                                                (rule "notLeft" (formula "22"))
                                                                                                (rule "eqSymm" (formula "20"))
                                                                                                (rule "eqSymm" (formula "11"))
                                                                                                (rule "eqSymm" (formula "17") (term "1,0,0,1,0"))
                                                                                                (rule "eqSymm" (formula "12") (term "0,1,0"))
                                                                                                (rule "eqSymm" (formula "12") (term "1,1,0"))
                                                                                                (rule "eqSymm" (formula "29") (term "0"))
                                                                                                (rule "eqSymm" (formula "18"))
                                                                                                (rule "eqSymm" (formula "17") (term "1,1,0,1,0,1,0"))
                                                                                                (rule "eqSymm" (formula "28") (term "1"))
                                                                                                (rule "eqSymm" (formula "21"))
                                                                                                (rule "eqSymm" (formula "27"))
                                                                                                (rule "eqSymm" (formula "17") (term "0,1,0,1,0,1,0"))
                                                                                                (rule "eqSymm" (formula "10"))
                                                                                                (rule "eqSymm" (formula "16"))
                                                                                                (rule "eqSymm" (formula "17") (term "1,1,0"))
                                                                                                (rule "eqSymm" (formula "19"))
                                                                                                (rule "eqSymm" (formula "15") (term "0,1,0"))
                                                                                                (rule "eqSymm" (formula "15") (term "1,1,0"))
                                                                                                (rule "eqSymm" (formula "14"))
                                                                                                (rule "eqSymm" (formula "23"))
                                                                                                (rule "eqSymm" (formula "22"))
                                                                                                (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "2"))
                                                                                                (builtin "One Step Simplification" (formula "16"))
                                                                                                (rule "eqSymm" (formula "16"))
                                                                                                (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "40"))
                                                                                                (builtin "One Step Simplification" (formula "28"))
                                                                                                (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "40"))
                                                                                                (builtin "One Step Simplification" (formula "29"))
                                                                                                (rule "notLeft" (formula "29"))
                                                                                                (rule "polySimp_homoEq" (formula "42"))
                                                                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,1,0"))
                                                                                                (rule "mul_literals" (formula "13") (term "1,1,0,1,0"))
                                                                                                (rule "polySimp_elimSub" (formula "2") (term "1"))
                                                                                                (rule "mul_literals" (formula "2") (term "1,1"))
                                                                                                (rule "polySimp_elimSub" (formula "37") (term "1,0,0"))
                                                                                                (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                                                                                (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
                                                                                                (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                                                                (rule "polySimp_elimSub" (formula "11") (term "1,0,1,1"))
                                                                                                (rule "mul_literals" (formula "11") (term "1,1,0,1,1"))
                                                                                                (rule "polySimp_elimSub" (formula "12") (term "1,0,1,0,1,0"))
                                                                                                (rule "mul_literals" (formula "12") (term "1,1,0,1,0,1,0"))
                                                                                                (rule "polySimp_elimSub" (formula "12") (term "1,1,1,0"))
                                                                                                (rule "mul_literals" (formula "12") (term "1,1,1,1,0"))
                                                                                                (rule "polySimp_elimSub" (formula "17") (term "1,0,0,1,1,0"))
                                                                                                (rule "mul_literals" (formula "17") (term "1,1,0,0,1,1,0"))
                                                                                                (rule "polySimp_elimSub" (formula "19") (term "1,0,2,0"))
                                                                                                (rule "mul_literals" (formula "19") (term "1,1,0,2,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "17") (term "1,0,2,0,1,1,0"))
                                                                                                (rule "castedGetAny" (formula "17") (term "0,0,0,0,0,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,1,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "41") (term "0,0,1"))
                                                                                                (rule "polySimp_addComm0" (formula "2") (term "1"))
                                                                                                (rule "polySimp_addComm0" (formula "37") (term "1,0,0"))
                                                                                                (rule "polySimp_addComm0" (formula "11") (term "1,0,0"))
                                                                                                (rule "polySimp_addComm0" (formula "11") (term "1,0,1,1"))
                                                                                                (rule "polySimp_addComm0" (formula "12") (term "1,0,1,0,1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "12") (term "1,1,1,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                                                                (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "19") (term "1,0,2,0"))
                                                                                                (rule "polySimp_addComm0" (formula "42") (term "1,1,0"))
                                                                                                (rule "subsetSingletonLeft" (formula "7"))
                                                                                                (rule "subsetSingletonLeft" (formula "8"))
                                                                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                                                (rule "castedGetAny" (formula "36") (term "0"))
                                                                                                (rule "castedGetAny" (formula "17") (term "0,1,0,0,1,0"))
                                                                                                (rule "eqSymm" (formula "17") (term "1,0,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "12") (term "0,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "18") (term "2,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                                                                (rule "castedGetAny" (formula "27") (term "0"))
                                                                                                (rule "castedGetAny" (formula "17") (term "0,0,1,0,1,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "17") (term "1,0,1,0,1,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "10") (term "0,1,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "17") (term "1,1,1,1,0"))
                                                                                                (rule "castedGetAny" (formula "15") (term "1,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "15") (term "0,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "14") (term "1,1"))
                                                                                                (rule "castedGetAny" (formula "14") (term "0"))
                                                                                                (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "0,1,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "16") (term "1,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                                                                                (rule "castedGetAny" (formula "28") (term "0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "17") (term "2,0,1,1,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "25"))
                                                                                                (rule "castedGetAny" (formula "13") (term "1,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "41") (term "0,0,1"))
                                                                                                (rule "castedGetAny" (formula "37") (term "0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "24"))
                                                                                                (rule "castedGetAny" (formula "11") (term "0"))
                                                                                                (rule "eqSymm" (formula "11"))
                                                                                                (rule "castedGetAny" (formula "12") (term "1,0,1,0"))
                                                                                                (rule "castedGetAny" (formula "19") (term "2,0"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                                                (rule "castedGetAny" (formula "17") (term "1,0,1,0,0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                                                                (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                                                                (rule "dismissNonSelectedField" (formula "41") (term "0,0,1"))
                                                                                                (rule "castedGetAny" (formula "11") (term "1,0"))
                                                                                                (rule "eqSymm" (formula "11"))
                                                                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                                                (rule "applyEq" (formula "41") (term "0,1,0") (ifseqformula "1"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "41") (term "0"))
                                                                                                (rule "add_literals" (formula "41") (term "1,0"))
                                                                                                (rule "times_zero_1" (formula "41") (term "0"))
                                                                                                (builtin "One Step Simplification" (formula "41"))
                                                                                                (rule "closeTrue" (formula "41"))
                                                                                             )
                                                                                             (branch "self.nodeseq.length = javaSubInt(self.list.size, 1) FALSE"
                                                                                                (rule "equiv_left" (formula "28") (userinteraction))
                                                                                                (branch
                                                                                                   (rule "close" (formula "38") (ifseqformula "29") (userinteraction))
                                                                                                )
                                                                                                (branch
                                                                                                   (rule "applyEq" (formula "33") (term "0") (ifseqformula "25") (userinteraction))
                                                                                                   (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "22") (userinteraction))
                                                                                                   (rule "translateJavaAddInt" (formula "1") (term "1,0,0") (userinteraction))
                                                                                                   (rule "hide_left" (formula "15") (userinteraction))
                                                                                                   (rule "hide_right" (formula "37") (userinteraction))
                                                                                                   (rule "hide_right" (formula "37") (userinteraction))
                                                                                                   (rule "hide_right" (formula "37") (userinteraction))
                                                                                                   (rule "hide_right" (formula "37") (userinteraction))
                                                                                                   (rule "hide_right" (formula "37") (userinteraction))
                                                                                                   (rule "hide_right" (formula "37") (userinteraction))
                                                                                                   (rule "hide_right" (formula "38") (userinteraction))
                                                                                                   (rule "hide_right" (formula "37") (userinteraction))
                                                                                                   (rule "hide_left" (formula "2") (userinteraction))
                                                                                                   (rule "hide_left" (formula "7") (userinteraction))
                                                                                                   (rule "hide_left" (formula "26") (userinteraction))
                                                                                                   (opengoal " ")
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch "self.list.size - 1 = javaSubInt(self.list.size, 1) FALSE"
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (builtin "One Step Simplification" (formula "9"))
                                                                                    (builtin "One Step Simplification" (formula "3"))
                                                                                    (builtin "One Step Simplification" (formula "2"))
                                                                                    (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "31")))
                                                                                    (builtin "One Step Simplification" (formula "39"))
                                                                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "31")) (ifInst ""  (formula "40")))
                                                                                    (builtin "One Step Simplification" (formula "37"))
                                                                                    (builtin "One Step Simplification" (formula "36"))
                                                                                    (builtin "One Step Simplification" (formula "35"))
                                                                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")) (ifInst ""  (formula "37")))
                                                                                    (builtin "One Step Simplification" (formula "33"))
                                                                                    (rule "true_left" (formula "2"))
                                                                                    (rule "false_right" (formula "33"))
                                                                                    (rule "translateJavaSubInt" (formula "15") (term "1,0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "28") (term "1"))
                                                                                    (builtin "One Step Simplification" (formula "28"))
                                                                                    (rule "closeTrue" (formula "28"))
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch "Show Axiom Satisfiability"
                                                                              (rule "orRight" (formula "19"))
                                                                              (builtin "One Step Simplification" (formula "3"))
                                                                              (builtin "One Step Simplification" (formula "2"))
                                                                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "21")))
                                                                              (builtin "One Step Simplification" (formula "29"))
                                                                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "21")) (ifInst ""  (formula "30")))
                                                                              (builtin "One Step Simplification" (formula "27"))
                                                                              (builtin "One Step Simplification" (formula "26"))
                                                                              (builtin "One Step Simplification" (formula "25"))
                                                                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "21")) (ifInst ""  (formula "27")))
                                                                              (builtin "One Step Simplification" (formula "23"))
                                                                              (builtin "One Step Simplification" (formula "19"))
                                                                              (builtin "One Step Simplification" (formula "18"))
                                                                              (rule "true_left" (formula "2"))
                                                                              (rule "false_right" (formula "23"))
                                                                              (rule "translateJavaAddInt" (formula "18") (term "1,0,2,1,1,1,0,1,0,0,0,0"))
                                                                              (rule "translateJavaSubInt" (formula "18") (term "1,0,1,1,1,0,1,0,0,0,0"))
                                                                              (rule "translateJavaSubInt" (formula "18") (term "1,0,2,1,1,0,0"))
                                                                              (rule "translateJavaAddInt" (formula "17") (term "1,0,2,1,1,1,0,1,0,0,0"))
                                                                              (rule "translateJavaSubInt" (formula "17") (term "1,0,2,1,1,0"))
                                                                              (rule "translateJavaSubInt" (formula "17") (term "1,0,1,1,1,0,1,0,0,0"))
                                                                              (rule "less_literals" (formula "1"))
                                                                              (rule "true_left" (formula "1"))
                                                                              (rule "andLeft" (formula "6"))
                                                                              (rule "notRight" (formula "23"))
                                                                              (rule "notRight" (formula "19"))
                                                                              (rule "close" (formula "19") (ifseqformula "1"))
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                                                                           (rule "closeFalse" (formula "3"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "orRight" (formula "25"))
                                                                        (rule "andRight" (formula "25"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3"))
                                                                           (builtin "One Step Simplification" (formula "2"))
                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "16")) (ifInst ""  (formula "25")))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "closeTrue" (formula "22"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                                                                           (rule "closeFalse" (formula "3"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "orRight" (formula "23"))
                                                                     (rule "andRight" (formula "23"))
                                                                     (branch
                                                                        (rule "orRight" (formula "25"))
                                                                        (rule "andRight" (formula "25"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3"))
                                                                           (builtin "One Step Simplification" (formula "2"))
                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "16")) (ifInst ""  (formula "25")))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                           (builtin "One Step Simplification" (formula "20"))
                                                                           (rule "closeTrue" (formula "20"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                                                                           (rule "closeFalse" (formula "3"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "orRight" (formula "25"))
                                                                        (rule "andRight" (formula "25"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3"))
                                                                           (builtin "One Step Simplification" (formula "2"))
                                                                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "16")))
                                                                           (builtin "One Step Simplification" (formula "24"))
                                                                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "16")) (ifInst ""  (formula "25")))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "closeTrue" (formula "22"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                                                                           (rule "closeFalse" (formula "3"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "orRight" (formula "21"))
                                                                  (rule "andRight" (formula "21"))
                                                                  (branch
                                                                     (rule "orRight" (formula "23"))
                                                                     (rule "andRight" (formula "23"))
                                                                     (branch
                                                                        (rule "orRight" (formula "25"))
                                                                        (rule "andRight" (formula "25"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3"))
                                                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                                                                           (rule "closeFalse" (formula "3"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "orRight" (formula "25"))
                                                                        (rule "andRight" (formula "25"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3"))
                                                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                                                                           (rule "closeFalse" (formula "3"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "orRight" (formula "23"))
                                                                     (rule "andRight" (formula "23"))
                                                                     (branch
                                                                        (rule "orRight" (formula "25"))
                                                                        (rule "andRight" (formula "25"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3"))
                                                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                                                                           (rule "closeFalse" (formula "3"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "orRight" (formula "25"))
                                                                        (rule "andRight" (formula "25"))
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3"))
                                                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch
                                                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                                                                           (rule "closeFalse" (formula "3"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch "0 < 1 FALSE"
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "14")))
                                                               (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "14")) (ifInst ""  (formula "19")))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")) (ifInst ""  (formula "19")))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "false_right" (formula "16"))
                                                               (rule "castDel" (formula "18") (term "0,1"))
                                                               (rule "add_zero_right" (formula "18") (term "0,0"))
                                                               (rule "less_literals" (formula "17"))
                                                               (rule "closeTrue" (formula "17"))
                                                            )
                                                         )
                                                         (branch " self = self ∧ IntIterator::$seq = IntIterator::$seq ∧ ¬IntIterator::$seq = java.lang.Object::<created> FALSE"
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "20"))
                                                            (rule "closeTrue" (formula "20"))
                                                         )
                                                      )
                                                      (branch " self = self ∧ IntIterator::$next = IntIterator::$next ∧ ¬IntIterator::$next = java.lang.Object::<created> FALSE"
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "closeTrue" (formula "19"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "Show Axiom Satisfiability"
                                       (rule "andRight" (formula "16"))
                                       (branch
                                          (rule "andRight" (formula "16"))
                                          (branch
                                             (rule "andRight" (formula "16"))
                                             (branch
                                                (rule "andRight" (formula "16"))
                                                (branch
                                                   (rule "andRight" (formula "16"))
                                                   (branch
                                                      (rule "andRight" (formula "16"))
                                                      (branch
                                                         (rule "andRight" (formula "16"))
                                                         (branch
                                                            (rule "andRight" (formula "16"))
                                                            (branch
                                                               (rule "orRight" (formula "12"))
                                                               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                               (rule "notRight" (formula "17"))
                                                               (rule "notRight" (formula "14"))
                                                               (rule "close" (formula "14") (ifseqformula "1"))
                                                            )
                                                            (branch
                                                               (rule "orRight" (formula "12"))
                                                               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                               (rule "notRight" (formula "13"))
                                                               (rule "close" (formula "13") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch
                                                            (rule "orRight" (formula "12"))
                                                            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                            (rule "notRight" (formula "13"))
                                                            (rule "close" (formula "13") (ifseqformula "1"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "orRight" (formula "12"))
                                                         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                         (rule "notRight" (formula "13"))
                                                         (rule "close" (formula "13") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "orRight" (formula "12"))
                                                      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                      (rule "notRight" (formula "13"))
                                                      (rule "close" (formula "13") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch
                                                   (rule "orRight" (formula "12"))
                                                   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                                   (rule "notRight" (formula "13"))
                                                   (rule "close" (formula "13") (ifseqformula "1"))
                                                )
                                             )
                                             (branch
                                                (rule "impRight" (formula "16"))
                                                (rule "orRight" (formula "13"))
                                                (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
                                                (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notRight" (formula "14"))
                                                (rule "close" (formula "14") (ifseqformula "1"))
                                             )
                                          )
                                          (branch
                                             (rule "impRight" (formula "16"))
                                             (rule "orRight" (formula "13"))
                                             (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
                                             (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notRight" (formula "14"))
                                             (rule "close" (formula "14") (ifseqformula "1"))
                                          )
                                       )
                                       (branch
                                          (rule "orRight" (formula "12"))
                                          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                          (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                                          (rule "notRight" (formula "13"))
                                          (rule "close" (formula "13") (ifseqformula "1"))
                                       )
                                    )
                                 )
                                 (branch "Show Axiom Satisfiability"
                                    (rule "orRight" (formula "15"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "notRight" (formula "16"))
                                    (rule "close" (formula "16") (ifseqformula "1"))
                                 )
                              )
                              (branch
                                 (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
                                 (rule "closeTrue" (formula "15"))
                              )
                           )
                        )
                     )
                  )
               )
               (branch
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "closeTrue" (formula "15"))
               )
            )
            (branch
               (builtin "One Step Simplification" (formula "15"))
               (rule "allRight" (formula "15") (inst "sk=f_0"))
               (rule "allRight" (formula "15") (inst "sk=o_0"))
               (rule "orRight" (formula "15"))
               (rule "orRight" (formula "15"))
               (rule "orRight" (formula "15"))
               (rule "orRight" (formula "15"))
               (rule "eqSymm" (formula "19"))
               (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "eqSymm" (formula "20"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (valueOf)"
            (builtin "One Step Simplification" (formula "11"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,0") (ifseqformula "8"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "11"))
            (rule "notLeft" (formula "9"))
            (rule "close" (formula "13") (ifseqformula "12"))
         )
         (branch "Pre (valueOf)"
            (builtin "One Step Simplification" (formula "9"))
            (rule "wellFormedStoreObject" (formula "9"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "wellFormedStorePrimitive" (formula "9") (term "0,0"))
            (rule "wellFormedStorePrimitive" (formula "9") (term "0,0"))
            (rule "orRight" (formula "9"))
            (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "dismissNonSelectedField" (formula "10") (term "0"))
            (rule "dismissNonSelectedField" (formula "10") (term "0"))
            (rule "referencedObjectIsCreatedRight" (formula "10") (ifseqformula "9"))
            (rule "close" (formula "10") (ifseqformula "1"))
         )
      )
      (branch "Null Reference (i_4 = null)"
         (builtin "One Step Simplification" (formula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (i_2 = null)"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Null Reference (i = null)"
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
   (rule "closeFalse" (formula "1"))
)
)
}
