//--------------- loops ------------------------------------------------------//
\schemaVariables {
 \modalOperator { diamond, box, diamond_transaction, box_transaction } #allmodal;
 \formula post;
 \program LeftHandSide #lhs, #lhs1;
 \program SimpleExpression #se;
 \program Statement #s;
 \program[list] Statement #slist, #slist1, #slist2;
 \program Label #innerLabel, #outerLabel;
 \program Expression #e, #e0, #e1, #e2 ;
 \program NonSimpleExpression #nse;
 \program ForLoop #forloop ;
 \program ProgramMethod #pm ; 
 \program Type #t;
 \program Variable #v, #a;
 \program NonStringLiteral #lit ;
 \program ArrayLength #length ;
 \program Label #lb, #lb1;
 \program[list] Catch #cs ;
}

\rules(programRules:Java) {

    execReturn {
        \find (
            \modality{#allmodal}{.. 
                exec { return; #slist }
                ccat ( \Return ) { #slist1 } 
            ...}\endmodality(post))
        \replacewith (\modality{#allmodal}{..
            { #slist1 } 
        ...}\endmodality(post))
        \heuristics(simplify_prog)
    };
    
    execTest {
        \find (
            \modality{#allmodal}{.. 
                exec { return; #slist }
                ccat ( #t #v ) { #slist1 } 
            ...}\endmodality(post))
        \replacewith (\modality{#allmodal}{..
            { #slist1 } 
        ...}\endmodality(post))
        \heuristics(simplify_prog)
    };

}