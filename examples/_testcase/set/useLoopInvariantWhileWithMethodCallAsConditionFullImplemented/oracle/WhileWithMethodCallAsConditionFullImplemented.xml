<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="WhileWithMethodCallAsConditionFullImplemented.size(array);" pathCondition="true" pathConditionChanged="false">
      <statement name="int result = 0;" pathCondition="true" pathConditionChanged="false">
         <statement name="int i = 0;" pathCondition="true" pathConditionChanged="false">
            <loopInvariant name="
invariant: i &gt;= 0 &amp; (i &lt;= array.length &amp; result_1 = i);
variant: javaSubInt(array.length, i)
mod: false" pathCondition="true" pathConditionChanged="false" initiallyValid="true">
               <branchCondition name="not(or(or(or(or(and(and(geq(i_0,Z(1(#))),geq(length(array),Z(0(#)))),lt(length(array),i_0)),and(and(leq(i_0,Z(neglit(1(#)))),geq(length(array),Z(0(#)))),geq(length(array),i_0))),not(imp(and(and(geq(i_0,Z(0(#))),geq(length(array),Z(0(#)))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(and(equals(array,null),geq(i,Z(0(#)))),equals(result_1_0,i_0)),geq(i_0,Z(0(#)))),geq(length(null),Z(0(#)))),geq(length(null),i_0)),wellFormed(heap)))),not(imp(and(and(and(and(and(and(leq(length(array),i),geq(i,Z(0(#)))),equals(result_1_0,i_0)),geq(i_0,Z(0(#)))),leq(i_0,i)),geq(length(array),Z(0(#)))),geq(length(array),i_0)),equals(array,null)))))" pathCondition="not(and(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),leq(i_0,i)),equals(result_1_0,i_0)),leq(length(array),i)),geq(length(array),i_0)),equals(array,null))))))" pathConditionChanged="true" branchCondition="not(or(or(or(or(and(and(geq(i_0,Z(1(#))),geq(length(array),Z(0(#)))),lt(length(array),i_0)),and(and(leq(i_0,Z(neglit(1(#)))),geq(length(array),Z(0(#)))),geq(length(array),i_0))),not(imp(and(and(geq(i_0,Z(0(#))),geq(length(array),Z(0(#)))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(and(equals(array,null),geq(i,Z(0(#)))),equals(result_1_0,i_0)),geq(i_0,Z(0(#)))),geq(length(null),Z(0(#)))),geq(length(null),i_0)),wellFormed(heap)))),not(imp(and(and(and(and(and(and(leq(length(array),i),geq(i,Z(0(#)))),equals(result_1_0,i_0)),geq(i_0,Z(0(#)))),leq(i_0,i)),geq(length(array),Z(0(#)))),geq(length(array),i_0)),equals(array,null)))))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Body Preserves Invariant">
                  <branchCondition name="not(equals(array,null))" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),leq(i_0,i)),equals(result_1_0,i_0)),leq(length(array),i)),geq(length(array),i_0)),equals(array,null))))),not(equals(array,null))))" pathConditionChanged="true" branchCondition="not(equals(array,null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <methodCall name="WhileWithMethodCallAsConditionFullImplemented.goOnNice(array_4,i_4);" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),leq(i_0,i)),equals(result_1_0,i_0)),leq(length(array),i)),geq(length(array),i_0)),equals(array,null))))),not(equals(array,null))))" pathConditionChanged="false">
                        <branchStatement name="if (i_4&lt;0) {throw new RuntimeException (); }else  {return    i_4&lt;array_4.length; }" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),leq(i_0,i)),equals(result_1_0,i_0)),leq(length(array),i)),geq(length(array),i_0)),equals(array,null))))),not(equals(array,null))))" pathConditionChanged="false">
                           <statement name="return i_4&lt;array_4.length;" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),leq(i_0,i)),equals(result_1_0,i_0)),leq(length(array),i)),geq(length(array),i_0)),equals(array,null))))),not(equals(array,null))))" pathConditionChanged="false">
                              <methodReturn name="&lt;return of WhileWithMethodCallAsConditionFullImplemented.goOnNice(array_4,i_4);&gt;" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),leq(i_0,i)),equals(result_1_0,i_0)),leq(length(array),i)),geq(length(array),i_0)),equals(array,null))))),not(equals(array,null))))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return TRUE as result of WhileWithMethodCallAsConditionFullImplemented.goOnNice(array_4,i_4);&gt;" isReturnValueComputed="true">
                                 <methodReturnValue name="TRUE" returnValueString="TRUE" hasCondition="false">
                                 </methodReturnValue>
                                 <statement name="result_1++;" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),leq(i_0,i)),equals(result_1_0,i_0)),leq(length(array),i)),geq(length(array),i_0)),equals(array,null))))),not(equals(array,null))))" pathConditionChanged="false">
                                    <statement name="i++;" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),leq(i_0,i)),equals(result_1_0,i_0)),leq(length(array),i)),geq(length(array),i_0)),equals(array,null))))),not(equals(array,null))))" pathConditionChanged="false">
                                       <termination name="&lt;loop body end&gt;" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),leq(i_0,i)),equals(result_1_0,i_0)),leq(length(array),i)),geq(length(array),i_0)),equals(array,null))))),not(equals(array,null))))" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="true">
                                       </termination>
                                    </statement>
                                 </statement>
                              </methodReturn>
                           </statement>
                        </branchStatement>
                     </methodCall>
                  </branchCondition>
                  <branchCondition name="equals(array,null)" pathCondition="imp(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),leq(i_0,i)),equals(result_1_0,i_0)),leq(length(array),i)),geq(length(array),i_0)),equals(array,null))))),equals(array,null)))" pathConditionChanged="true" branchCondition="equals(array,null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <methodCall name="WhileWithMethodCallAsConditionFullImplemented.goOnNice(array_3,i_3);" pathCondition="imp(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),leq(i_0,i)),equals(result_1_0,i_0)),leq(length(array),i)),geq(length(array),i_0)),equals(array,null))))),equals(array,null)))" pathConditionChanged="false">
                        <branchStatement name="if (i_3&lt;0) {throw new RuntimeException (); }else  {return    i_3&lt;array_3.length; }" pathCondition="imp(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),leq(i_0,i)),equals(result_1_0,i_0)),leq(length(array),i)),geq(length(array),i_0)),equals(array,null))))),equals(array,null)))" pathConditionChanged="false">
                           <statement name="return i_3&lt;array_3.length;" pathCondition="imp(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),leq(i_0,i)),equals(result_1_0,i_0)),leq(length(array),i)),geq(length(array),i_0)),equals(array,null))))),equals(array,null)))" pathConditionChanged="false">
                              <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="imp(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),leq(i_0,i)),equals(result_1_0,i_0)),leq(length(array),i)),geq(length(array),i_0)),equals(array,null))))),equals(array,null)))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                              </termination>
                           </statement>
                        </branchStatement>
                     </methodCall>
                  </branchCondition>
               </branchCondition>
               <branchCondition name="not(or(or(or(or(and(and(geq(i_0,Z(1(#))),geq(length(array),Z(0(#)))),lt(length(array),i_0)),and(and(leq(i_0,Z(neglit(1(#)))),geq(length(array),Z(0(#)))),geq(length(array),i_0))),not(imp(and(and(geq(i_0,Z(0(#))),geq(length(array),Z(0(#)))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(and(equals(array,null),geq(i,Z(0(#)))),equals(result_1_0,i_0)),geq(i_0,Z(0(#)))),geq(length(null),Z(0(#)))),geq(length(null),i_0)),wellFormed(heap)))),not(imp(and(and(and(and(and(gt(length(array),i),geq(i,Z(0(#)))),equals(result_1_0,i_0)),geq(i_0,Z(0(#)))),geq(length(array),Z(0(#)))),geq(length(array),i_0)),equals(array,null)))))" pathCondition="not(and(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),gt(length(array),i)),geq(length(array),i_0)),equals(array,null))))))" pathConditionChanged="true" branchCondition="not(or(or(or(or(and(and(geq(i_0,Z(1(#))),geq(length(array),Z(0(#)))),lt(length(array),i_0)),and(and(leq(i_0,Z(neglit(1(#)))),geq(length(array),Z(0(#)))),geq(length(array),i_0))),not(imp(and(and(geq(i_0,Z(0(#))),geq(length(array),Z(0(#)))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(and(equals(array,null),geq(i,Z(0(#)))),equals(result_1_0,i_0)),geq(i_0,Z(0(#)))),geq(length(null),Z(0(#)))),geq(length(null),i_0)),wellFormed(heap)))),not(imp(and(and(and(and(and(gt(length(array),i),geq(i,Z(0(#)))),equals(result_1_0,i_0)),geq(i_0,Z(0(#)))),geq(length(array),Z(0(#)))),geq(length(array),i_0)),equals(array,null)))))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Use Case">
                  <statement name="return result_1;" pathCondition="not(and(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),gt(length(array),i)),geq(length(array),i_0)),equals(array,null))))))" pathConditionChanged="false">
                     <methodReturn name="&lt;return of WhileWithMethodCallAsConditionFullImplemented.size(array);&gt;" pathCondition="not(and(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),gt(length(array),i)),geq(length(array),i_0)),equals(array,null))))))" pathConditionChanged="false" nameIncludingReturnValue="&lt;return i_0 as result of WhileWithMethodCallAsConditionFullImplemented.size(array);&gt;" isReturnValueComputed="true">
                        <methodReturnValue name="i_0" returnValueString="i_0" hasCondition="false">
                        </methodReturnValue>
                        <termination name="&lt;end&gt;" pathCondition="not(and(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(geq(i_0,Z(0(#))),geq(length(array),i_0)),equals(result_1_0,i_0)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(geq(i,Z(0(#))),geq(i_0,Z(0(#)))),equals(result_1_0,i_0)),gt(length(array),i)),geq(length(array),i_0)),equals(array,null))))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                        </termination>
                     </methodReturn>
                  </statement>
               </branchCondition>
            </loopInvariant>
         </statement>
      </statement>
   </methodCall>
</start>
