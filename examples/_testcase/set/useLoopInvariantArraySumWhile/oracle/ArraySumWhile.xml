<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="ArraySumWhile.sum(array);" pathCondition="true" pathConditionChanged="false">
      <statement name="int result = 0;" pathCondition="true" pathConditionChanged="false">
         <callStackEntry path="/0"/>
         <statement name="int i = 0;" pathCondition="true" pathConditionChanged="false">
            <callStackEntry path="/0"/>
            <loopInvariant name="
invariant: i &gt;= 0
&amp; (  i &lt;= array.length
   &amp; result_1 = bsum{int j;}(0, i, array[j]));
variant: javaSubInt(array.length, i)
mod: false" pathCondition="true" pathConditionChanged="false" initiallyValid="true">
               <callStackEntry path="/0"/>
               <branchCondition name="   array.length &gt;= 0
-&gt;   i_0 &gt;= 0
   &amp; array.length &gt;  i
   &amp; array.length &gt;= i_0
   &amp; bsum{int j;}(0, i_0, array[j]) = result_1_0" pathCondition="   array.length &gt;= 0
-&gt;   i_0 &gt;= 0
   &amp; array.length &gt;  i
   &amp; array.length &gt;= i_0
   &amp; bsum{int j;}(0, i_0, array[j]) = result_1_0" pathConditionChanged="true" branchCondition="   array.length &gt;= 0
-&gt;   i_0 &gt;= 0
   &amp; array.length &gt;  i
   &amp; array.length &gt;= i_0
   &amp; bsum{int j;}(0, i_0, array[j]) = result_1_0" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Body Preserves Invariant">
                  <callStackEntry path="/0"/>
                  <statement name="result_1+=array[i];" pathCondition="   array.length &gt;= 0
-&gt;   i_0 &gt;= 0
   &amp; array.length &gt;  i
   &amp; array.length &gt;= i_0
   &amp; bsum{int j;}(0, i_0, array[j]) = result_1_0" pathConditionChanged="false">
                     <callStackEntry path="/0"/>
                     <statement name="i++;" pathCondition="   array.length &gt;= 0
-&gt;   i_0 &gt;= 0
   &amp; array.length &gt;  i
   &amp; array.length &gt;= i_0
   &amp; bsum{int j;}(0, i_0, array[j]) = result_1_0" pathConditionChanged="false">
                        <callStackEntry path="/0"/>
                        <termination name="&lt;loop body end&gt;" pathCondition="   array.length &gt;= 0
-&gt;   i_0 &gt;= 0
   &amp; array.length &gt;  i
   &amp; array.length &gt;= i_0
   &amp; bsum{int j;}(0, i_0, array[j]) = result_1_0" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="true">
                        </termination>
                     </statement>
                  </statement>
               </branchCondition>
               <branchCondition name="   array.length &gt;= 0
-&gt;   i_0 &gt;= 0
   &amp; array.length &lt;= i
   &amp; array.length &gt;= i_0
   &amp; bsum{int j;}(0, i_0, array[j]) = result_1_0" pathCondition="   array.length &gt;= 0
-&gt;   i_0 &gt;= 0
   &amp; array.length &lt;= i
   &amp; array.length &gt;= i_0
   &amp; bsum{int j;}(0, i_0, array[j]) = result_1_0" pathConditionChanged="true" branchCondition="   array.length &gt;= 0
-&gt;   i_0 &gt;= 0
   &amp; array.length &lt;= i
   &amp; array.length &gt;= i_0
   &amp; bsum{int j;}(0, i_0, array[j]) = result_1_0" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Use Case">
                  <callStackEntry path="/0"/>
                  <statement name="return result_1;" pathCondition="   array.length &gt;= 0
-&gt;   i_0 &gt;= 0
   &amp; array.length &lt;= i
   &amp; array.length &gt;= i_0
   &amp; bsum{int j;}(0, i_0, array[j]) = result_1_0" pathConditionChanged="false">
                     <callStackEntry path="/0"/>
                     <methodReturn name="&lt;return of ArraySumWhile.sum(array);&gt;" pathCondition="   array.length &gt;= 0
-&gt;   i_0 &gt;= 0
   &amp; array.length &lt;= i
   &amp; array.length &gt;= i_0
   &amp; bsum{int j;}(0, i_0, array[j]) = result_1_0" pathConditionChanged="false" isReturnValueComputed="false">
                        <callStackEntry path="/0"/>
                        <termination name="&lt;end&gt;" pathCondition="   array.length &gt;= 0
-&gt;   i_0 &gt;= 0
   &amp; array.length &lt;= i
   &amp; array.length &gt;= i_0
   &amp; bsum{int j;}(0, i_0, array[j]) = result_1_0" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                        </termination>
                     </methodReturn>
                  </statement>
               </branchCondition>
            </loopInvariant>
         </statement>
      </statement>
   </methodCall>
</start>
