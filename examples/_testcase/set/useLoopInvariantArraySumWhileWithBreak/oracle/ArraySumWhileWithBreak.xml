<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="ArraySumWhileWithBreak.sum(array);" pathCondition="true" pathConditionChanged="false">
      <statement name="int result = 0;" pathCondition="true" pathConditionChanged="false">
         <callStackEntry path="/0"/>
         <statement name="int i = 0;" pathCondition="true" pathConditionChanged="false">
            <callStackEntry path="/0"/>
            <loopInvariant name="invariant: i &gt;= 0
&amp; (  i &lt;= array.length
   &amp;   result_1
     = javaCastInt(bsum{int j;}(0, i, array[j])));
variant: javaSubInt(array.length, i)
mod: false" pathCondition="true" pathConditionChanged="false" initiallyValid="true">
               <callStackEntry path="/0"/>
               <branchStatement name="if (array==null)" pathCondition="true" pathConditionChanged="false">
                  <callStackEntry path="/0"/>
                  <branchCondition name="equals(array,null)" pathCondition="equals(array,null)" pathConditionChanged="true" branchCondition="equals(array,null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <callStackEntry path="/0"/>
                     <statement name="break_0=true;" pathCondition="equals(array,null)" pathConditionChanged="false">
                        <callStackEntry path="/0"/>
                        <statement name="return result_1;" pathCondition="equals(array,null)" pathConditionChanged="false">
                           <callStackEntry path="/0"/>
                           <methodReturn name="&lt;return of sum&gt;" signature="&lt;return of ArraySumWhileWithBreak.sum(array);&gt;" pathCondition="equals(array,null)" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="equals(array,null)">
                              <callStackEntry path="/0"/>
                              <termination name="&lt;end&gt;" pathCondition="equals(array,null)" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                              </termination>
                           </methodReturn>
                        </statement>
                     </statement>
                  </branchCondition>
                  <branchCondition name="not(equals(array,null))" pathCondition="not(equals(array,null))" pathConditionChanged="true" branchCondition="not(equals(array,null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <callStackEntry path="/0"/>
                     <branchStatement name="if (i==array.length)" pathCondition="not(equals(array,null))" pathConditionChanged="false">
                        <callStackEntry path="/0"/>
                        <branchCondition name="equals(length(array),i_0)" pathCondition="imp(geq(length(array),Z(0(#))),and(not(equals(array,null)),equals(length(array),i_0)))" pathConditionChanged="true" branchCondition="equals(length(array),i_0)" mergedBranchCondition="false" isBranchConditionComputed="true">
                           <callStackEntry path="/0"/>
                           <statement name="break_1=true;" pathCondition="imp(geq(length(array),Z(0(#))),and(not(equals(array,null)),equals(length(array),i_0)))" pathConditionChanged="false">
                              <callStackEntry path="/0"/>
                              <statement name="return result_1;" pathCondition="imp(geq(length(array),Z(0(#))),and(not(equals(array,null)),equals(length(array),i_0)))" pathConditionChanged="false">
                                 <callStackEntry path="/0"/>
                                 <methodReturn name="&lt;return of sum&gt;" signature="&lt;return of ArraySumWhileWithBreak.sum(array);&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(not(equals(array,null)),equals(length(array),i_0)))" pathConditionChanged="false" isReturnValueComputed="false" methodReturnCondition="imp(geq(length(array),Z(0(#))),and(not(equals(array,null)),equals(length(array),i_0)))">
                                    <callStackEntry path="/0"/>
                                    <termination name="&lt;end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(not(equals(array,null)),equals(length(array),i_0)))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                                    </termination>
                                 </methodReturn>
                              </statement>
                           </statement>
                        </branchCondition>
                        <branchCondition name="not(equals(length(array),i_0))" pathCondition="imp(geq(length(array),Z(0(#))),and(not(equals(array,null)),not(equals(length(array),i_0))))" pathConditionChanged="true" branchCondition="not(equals(length(array),i_0))" mergedBranchCondition="false" isBranchConditionComputed="true">
                           <callStackEntry path="/0"/>
                           <statement name="result_1+=array[i];" pathCondition="imp(geq(length(array),Z(0(#))),and(not(equals(array,null)),not(equals(length(array),i_0))))" pathConditionChanged="false">
                              <callStackEntry path="/0"/>
                              <statement name="i++;" pathCondition="imp(geq(length(array),Z(0(#))),and(not(equals(array,null)),not(equals(length(array),i_0))))" pathConditionChanged="false">
                                 <callStackEntry path="/0"/>
                                 <termination name="&lt;loop body end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(not(equals(array,null)),not(equals(length(array),i_0))))" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="true">
                                 </termination>
                              </statement>
                           </statement>
                        </branchCondition>
                     </branchStatement>
                  </branchCondition>
               </branchStatement>
            </loopInvariant>
         </statement>
      </statement>
      <methodReturnEntry path="/0/0/0/0/0/0/0/0/0"/>
      <methodReturnEntry path="/0/0/0/0/0/1/0/0/0/0/0"/>
   </methodCall>
   <terminationEntry path="/0/0/0/0/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/0/1/0/0/0/0/0/0"/>
   <terminationEntry path="/0/0/0/0/0/1/0/1/0/0/0"/>
</start>
