<?xml version="1.0" encoding="UTF-8"?>
<startNode name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="VoidWhileWithReturn.sum(array);" pathCondition="true" pathConditionChanged="false">
      <statement name="int result = 0;" pathCondition="true" pathConditionChanged="false">
         <callStackEntry path="/0"/>
         <statement name="int i = 0;" pathCondition="true" pathConditionChanged="false">
            <callStackEntry path="/0"/>
            <useLoopInvariant name="invariants: {heap=and(geq(i,Z(0(#))),and(leq(i,length(array)),equals(result,bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j))))))};
modifies: {heap=false};
variant: javaSubInt(length(array),i)" pathCondition="true" pathConditionChanged="false" initiallyValid="true">
               <callStackEntry path="/0"/>
               <branchNode name="if (array==null) { {     rtrn=true;break inner_label;   } }else if (i==array.length) { {       rtrn=true;break inner_label;     }   }" pathCondition="true" pathConditionChanged="false">
                  <callStackEntry path="/0"/>
                  <branchCondition name="array = null" pathCondition="array = null" pathConditionChanged="true" branchCondition="array = null" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <callStackEntry path="/0"/>
                     <statement name="break inner_label;" pathCondition="array = null" pathConditionChanged="false">
                        <callStackEntry path="/0"/>
                        <termination name="&lt;end&gt;" pathCondition="array = null" pathConditionChanged="false" terminationKind="NORMAL">
                        </termination>
                     </statement>
                  </branchCondition>
                  <branchCondition name="!array = null" pathCondition="!array = null" pathConditionChanged="true" branchCondition="!array = null" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <callStackEntry path="/0"/>
                     <branchNode name="if (i==array.length) { {     rtrn=true;break inner_label;   } }" pathCondition="!array = null" pathConditionChanged="false">
                        <callStackEntry path="/0"/>
                        <branchCondition name="array.length &gt;= 0 -&gt; array.length = i_0" pathCondition="array.length &gt;= 0 -&gt; !array = null &amp; array.length = i_0" pathConditionChanged="true" branchCondition="array.length &gt;= 0 -&gt; array.length = i_0" mergedBranchCondition="false" isBranchConditionComputed="true">
                           <callStackEntry path="/0"/>
                           <statement name="break inner_label;" pathCondition="array.length &gt;= 0 -&gt; !array = null &amp; array.length = i_0" pathConditionChanged="false">
                              <callStackEntry path="/0"/>
                              <termination name="&lt;end&gt;" pathCondition="array.length &gt;= 0 -&gt; !array = null &amp; array.length = i_0" pathConditionChanged="false" terminationKind="NORMAL">
                              </termination>
                           </statement>
                        </branchCondition>
                        <branchCondition name="!(i_0 &gt;= 0 &amp; array.length = i_0)" pathCondition="   array.length &gt;= 0
-&gt; !array = null &amp; !(i_0 &gt;= 0 &amp; array.length = i_0)" pathConditionChanged="true" branchCondition="!(i_0 &gt;= 0 &amp; array.length = i_0)" mergedBranchCondition="false" isBranchConditionComputed="true">
                           <callStackEntry path="/0"/>
                           <statement name="result+=array[i];" pathCondition="   array.length &gt;= 0
-&gt; !array = null &amp; !(i_0 &gt;= 0 &amp; array.length = i_0)" pathConditionChanged="false">
                              <callStackEntry path="/0"/>
                              <statement name="result+=array[i];" pathCondition="   array.length &gt;= 0
-&gt; !array = null &amp; !(i_0 &gt;= 0 &amp; array.length = i_0)" pathConditionChanged="false">
                                 <callStackEntry path="/0"/>
                                 <statement name="i++;" pathCondition="   array.length &gt;= 0
-&gt; !array = null &amp; !(i_0 &gt;= 0 &amp; array.length = i_0)" pathConditionChanged="false">
                                    <callStackEntry path="/0"/>
                                    <termination name="&lt;loop body end&gt;" pathCondition="   array.length &gt;= 0
-&gt; !array = null &amp; !(i_0 &gt;= 0 &amp; array.length = i_0)" pathConditionChanged="false" terminationKind="LOOP_BODY">
                                    </termination>
                                 </statement>
                              </statement>
                           </statement>
                        </branchCondition>
                     </branchNode>
                  </branchCondition>
               </branchNode>
            </useLoopInvariant>
         </statement>
      </statement>
   </methodCall>
</startNode>
