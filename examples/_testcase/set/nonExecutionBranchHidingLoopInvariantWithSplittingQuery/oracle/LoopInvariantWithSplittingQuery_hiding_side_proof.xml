<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="LoopInvariantWithSplittingQuery.main(x);" pathCondition="true" pathConditionChanged="false">
      <loopInvariant name="
invariant: magic(x) &gt;= 0;
variant: magic(x)
mod: false" pathCondition="true" pathConditionChanged="false" initiallyValid="true">
         <branchCondition name="!(  x_0 = res_magic_0 * -1 &amp; res_magic_0 &gt;= 1 &amp; x = 0
  | x_0 = res_magic_0
  &amp; res_magic_0 &gt;= 1
  &amp; x = 0
  | res_magic_0 = 0
  &amp; x_0 = 0
  &amp; x = 0)" pathCondition="!(  res_magic_0 &gt;= 0
  &amp; (  res_magic_0 = 0
     | x_0 = res_magic_0
     | x_0 = res_magic_0 * -1)
  &amp; x = 0
  &amp; (res_magic_0 &gt;= 1 | x_0 = 0)
  &amp; (  x_0 = 0
     | x_0 = res_magic_0
     | x_0 = res_magic_0 * -1))" pathConditionChanged="true" branchCondition="!(  x_0 = res_magic_0 * -1 &amp; res_magic_0 &gt;= 1 &amp; x = 0
  | x_0 = res_magic_0
  &amp; res_magic_0 &gt;= 1
  &amp; x = 0
  | res_magic_0 = 0
  &amp; x_0 = 0
  &amp; x = 0)" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Body Preserves Invariant">
            <methodCall name="LoopInvariantWithSplittingQuery.magic(x_10);" pathCondition="!(  res_magic_0 &gt;= 0
  &amp; (  res_magic_0 = 0
     | x_0 = res_magic_0
     | x_0 = res_magic_0 * -1)
  &amp; x = 0
  &amp; (res_magic_0 &gt;= 1 | x_0 = 0)
  &amp; (  x_0 = 0
     | x_0 = res_magic_0
     | x_0 = res_magic_0 * -1))" pathConditionChanged="false">
               <branchStatement name="if (x_10==0) {return 0; }else if (x_10&gt;=0) {return x_10;   }else  {return      -x_10;   }" pathCondition="!(  res_magic_0 &gt;= 0
  &amp; (  res_magic_0 = 0
     | x_0 = res_magic_0
     | x_0 = res_magic_0 * -1)
  &amp; x = 0
  &amp; (res_magic_0 &gt;= 1 | x_0 = 0)
  &amp; (  x_0 = 0
     | x_0 = res_magic_0
     | x_0 = res_magic_0 * -1))" pathConditionChanged="false">
                  <branchStatement name="if (x_10&gt;=0) {return x_10; }else  {return    -x_10; }" pathCondition="!(  res_magic_0 &gt;= 0
  &amp; (  res_magic_0 = 0
     | x_0 = res_magic_0
     | x_0 = res_magic_0 * -1)
  &amp; x = 0
  &amp; (res_magic_0 &gt;= 1 | x_0 = 0)
  &amp; (  x_0 = 0
     | x_0 = res_magic_0
     | x_0 = res_magic_0 * -1))" pathConditionChanged="false">
                     <branchCondition name="x_0 &gt;  -1" pathCondition="  !(  res_magic_0 &gt;= 0
    &amp; x = 0
    &amp; (res_magic_0 &gt;= 1 | x_0 = 0)
    &amp; (  res_magic_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1)
    &amp; (  x_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1))
&amp; x_0 &gt;= 0" pathConditionChanged="true" branchCondition="x_0 &gt;  -1" mergedBranchCondition="false" isBranchConditionComputed="true">
                        <statement name="return x_10;" pathCondition="  !(  res_magic_0 &gt;= 0
    &amp; x = 0
    &amp; (res_magic_0 &gt;= 1 | x_0 = 0)
    &amp; (  res_magic_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1)
    &amp; (  x_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1))
&amp; x_0 &gt;= 0" pathConditionChanged="false">
                           <methodReturn name="&lt;return of LoopInvariantWithSplittingQuery.magic(x_10);&gt;" pathCondition="  !(  res_magic_0 &gt;= 0
    &amp; x = 0
    &amp; (res_magic_0 &gt;= 1 | x_0 = 0)
    &amp; (  res_magic_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1)
    &amp; (  x_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1))
&amp; x_0 &gt;= 0" pathConditionChanged="false" nameIncludingReturnValue="&lt;return magic_sk_1 as result of LoopInvariantWithSplittingQuery.magic(x_10);&gt;" isReturnValueComputed="true">
                              <methodReturnValue name="magic_sk_1" returnValueString="magic_sk_1" hasCondition="false">
                              </methodReturnValue>
                              <statement name="x--;" pathCondition="  !(  res_magic_0 &gt;= 0
    &amp; x = 0
    &amp; (res_magic_0 &gt;= 1 | x_0 = 0)
    &amp; (  res_magic_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1)
    &amp; (  x_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1))
&amp; x_0 &gt;= 0" pathConditionChanged="false">
                                 <termination name="&lt;loop body end&gt;" pathCondition="  !(  res_magic_0 &gt;= 0
    &amp; x = 0
    &amp; (res_magic_0 &gt;= 1 | x_0 = 0)
    &amp; (  res_magic_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1)
    &amp; (  x_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1))
&amp; x_0 &gt;= 0" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="false">
                                 </termination>
                              </statement>
                           </methodReturn>
                        </statement>
                     </branchCondition>
                     <branchCondition name="x_0 &lt; 0" pathCondition="  !(  res_magic_0 &gt;= 0
    &amp; x = 0
    &amp; (res_magic_0 &gt;= 1 | x_0 = 0)
    &amp; (  res_magic_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1)
    &amp; (  x_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1))
&amp; x_0 &lt;= -1" pathConditionChanged="true" branchCondition="x_0 &lt; 0" mergedBranchCondition="false" isBranchConditionComputed="true">
                        <statement name="return -x_10;" pathCondition="  !(  res_magic_0 &gt;= 0
    &amp; x = 0
    &amp; (res_magic_0 &gt;= 1 | x_0 = 0)
    &amp; (  res_magic_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1)
    &amp; (  x_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1))
&amp; x_0 &lt;= -1" pathConditionChanged="false">
                           <methodReturn name="&lt;return of LoopInvariantWithSplittingQuery.magic(x_10);&gt;" pathCondition="  !(  res_magic_0 &gt;= 0
    &amp; x = 0
    &amp; (res_magic_0 &gt;= 1 | x_0 = 0)
    &amp; (  res_magic_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1)
    &amp; (  x_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1))
&amp; x_0 &lt;= -1" pathConditionChanged="false" nameIncludingReturnValue="&lt;return magic_sk_1 as result of LoopInvariantWithSplittingQuery.magic(x_10);&gt;" isReturnValueComputed="true">
                              <methodReturnValue name="magic_sk_1" returnValueString="magic_sk_1" hasCondition="false">
                              </methodReturnValue>
                              <statement name="x--;" pathCondition="  !(  res_magic_0 &gt;= 0
    &amp; x = 0
    &amp; (res_magic_0 &gt;= 1 | x_0 = 0)
    &amp; (  res_magic_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1)
    &amp; (  x_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1))
&amp; x_0 &lt;= -1" pathConditionChanged="false">
                                 <termination name="&lt;loop body end&gt;" pathCondition="  !(  res_magic_0 &gt;= 0
    &amp; x = 0
    &amp; (res_magic_0 &gt;= 1 | x_0 = 0)
    &amp; (  res_magic_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1)
    &amp; (  x_0 = 0
       | x_0 = res_magic_0
       | x_0 = res_magic_0 * -1))
&amp; x_0 &lt;= -1" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="false">
                                 </termination>
                              </statement>
                           </methodReturn>
                        </statement>
                     </branchCondition>
                  </branchStatement>
               </branchStatement>
            </methodCall>
         </branchCondition>
         <branchCondition name="!(  x_0 = res_magic_0 * -1 &amp; res_magic_0 &gt;= 1 &amp; x &lt;= -1
  | x_0 = res_magic_0
  &amp; res_magic_0 &gt;= 1
  &amp; x &lt;= -1
  | res_magic_0 = 0
  &amp; x_0 = 0
  &amp; x &lt;= -1
  | x_0 = res_magic_1 * -1
  &amp; res_magic_1 &gt;= 1
  &amp; x &gt;= 1
  | x_0 = res_magic_1
  &amp; res_magic_1 &gt;= 1
  &amp; x &gt;= 1
  | res_magic_1 = 0
  &amp; x_0 = 0
  &amp; x &gt;= 1)" pathCondition="     (res_magic_0 &gt;= 0 | res_magic_1 &gt;= 0)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 = 0 | res_magic_1 &gt;= 0 | x &lt;= -1)
   &amp; (res_magic_1 &gt;= 0 | x &lt;= -1)
   &amp; (res_magic_0 &gt;= 1 | res_magic_1 &gt;= 0 | x &lt;= -1)
   &amp; (res_magic_0 &gt;= 1 | res_magic_1 &gt;= 0 | x_0 = 0)
   &amp; (  res_magic_1 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 &gt;= 0 | res_magic_1 = 0 | x &gt;= 1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 0
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (res_magic_0 &gt;= 0 | res_magic_1 &gt;= 1 | x &gt;= 1)
   &amp; (res_magic_0 &gt;= 0 | x &gt;= 1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 = 0
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 &gt;= 0 | res_magic_1 &gt;= 1 | x_0 = 0)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x &lt;= -1
      | x_0 = 0)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 &gt;= 1
      | x &lt;= -1
      | x_0 = 0)
   &amp; (res_magic_0 &gt;= 1 | res_magic_1 &gt;= 1 | x_0 = 0)
   &amp; (  res_magic_1 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_1 &gt;= 1 | x &lt;= -1 | x_0 = 0)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 &gt;= 1
      | x &lt;= -1
      | x_0 = 0)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 &gt;= 1 | x &gt;= 1 | x_0 = 0)
   &amp; (  res_magic_0 = 0
      | x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = 0)
   &amp; (  x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
-&gt; x = 0" pathConditionChanged="true" branchCondition="!(  x_0 = res_magic_0 * -1 &amp; res_magic_0 &gt;= 1 &amp; x &lt;= -1
  | x_0 = res_magic_0
  &amp; res_magic_0 &gt;= 1
  &amp; x &lt;= -1
  | res_magic_0 = 0
  &amp; x_0 = 0
  &amp; x &lt;= -1
  | x_0 = res_magic_1 * -1
  &amp; res_magic_1 &gt;= 1
  &amp; x &gt;= 1
  | x_0 = res_magic_1
  &amp; res_magic_1 &gt;= 1
  &amp; x &gt;= 1
  | res_magic_1 = 0
  &amp; x_0 = 0
  &amp; x &gt;= 1)" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Use Case">
            <statement name="return x;" pathCondition="     (res_magic_0 &gt;= 0 | res_magic_1 &gt;= 0)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 = 0 | res_magic_1 &gt;= 0 | x &lt;= -1)
   &amp; (res_magic_1 &gt;= 0 | x &lt;= -1)
   &amp; (res_magic_0 &gt;= 1 | res_magic_1 &gt;= 0 | x &lt;= -1)
   &amp; (res_magic_0 &gt;= 1 | res_magic_1 &gt;= 0 | x_0 = 0)
   &amp; (  res_magic_1 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 &gt;= 0 | res_magic_1 = 0 | x &gt;= 1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 0
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (res_magic_0 &gt;= 0 | res_magic_1 &gt;= 1 | x &gt;= 1)
   &amp; (res_magic_0 &gt;= 0 | x &gt;= 1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 = 0
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 &gt;= 0 | res_magic_1 &gt;= 1 | x_0 = 0)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x &lt;= -1
      | x_0 = 0)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 &gt;= 1
      | x &lt;= -1
      | x_0 = 0)
   &amp; (res_magic_0 &gt;= 1 | res_magic_1 &gt;= 1 | x_0 = 0)
   &amp; (  res_magic_1 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_1 &gt;= 1 | x &lt;= -1 | x_0 = 0)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 &gt;= 1
      | x &lt;= -1
      | x_0 = 0)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 &gt;= 1 | x &gt;= 1 | x_0 = 0)
   &amp; (  res_magic_0 = 0
      | x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = 0)
   &amp; (  x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
-&gt; x = 0" pathConditionChanged="false">
               <methodReturn name="&lt;return of LoopInvariantWithSplittingQuery.main(x);&gt;" pathCondition="     (res_magic_0 &gt;= 0 | res_magic_1 &gt;= 0)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 = 0 | res_magic_1 &gt;= 0 | x &lt;= -1)
   &amp; (res_magic_1 &gt;= 0 | x &lt;= -1)
   &amp; (res_magic_0 &gt;= 1 | res_magic_1 &gt;= 0 | x &lt;= -1)
   &amp; (res_magic_0 &gt;= 1 | res_magic_1 &gt;= 0 | x_0 = 0)
   &amp; (  res_magic_1 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 &gt;= 0 | res_magic_1 = 0 | x &gt;= 1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 0
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (res_magic_0 &gt;= 0 | res_magic_1 &gt;= 1 | x &gt;= 1)
   &amp; (res_magic_0 &gt;= 0 | x &gt;= 1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 = 0
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 &gt;= 0 | res_magic_1 &gt;= 1 | x_0 = 0)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x &lt;= -1
      | x_0 = 0)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 &gt;= 1
      | x &lt;= -1
      | x_0 = 0)
   &amp; (res_magic_0 &gt;= 1 | res_magic_1 &gt;= 1 | x_0 = 0)
   &amp; (  res_magic_1 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_1 &gt;= 1 | x &lt;= -1 | x_0 = 0)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 &gt;= 1
      | x &lt;= -1
      | x_0 = 0)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 &gt;= 1 | x &gt;= 1 | x_0 = 0)
   &amp; (  res_magic_0 = 0
      | x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = 0)
   &amp; (  x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
-&gt; x = 0" pathConditionChanged="false" nameIncludingReturnValue="&lt;return 0 as result of LoopInvariantWithSplittingQuery.main(x);&gt;" isReturnValueComputed="true">
                  <methodReturnValue name="0" returnValueString="0" hasCondition="false">
                  </methodReturnValue>
                  <termination name="&lt;end&gt;" pathCondition="     (res_magic_0 &gt;= 0 | res_magic_1 &gt;= 0)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 = 0 | res_magic_1 &gt;= 0 | x &lt;= -1)
   &amp; (res_magic_1 &gt;= 0 | x &lt;= -1)
   &amp; (res_magic_0 &gt;= 1 | res_magic_1 &gt;= 0 | x &lt;= -1)
   &amp; (res_magic_0 &gt;= 1 | res_magic_1 &gt;= 0 | x_0 = 0)
   &amp; (  res_magic_1 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 &gt;= 0 | res_magic_1 = 0 | x &gt;= 1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 0
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_1 = 0
      | x &lt;= -1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (res_magic_0 &gt;= 0 | res_magic_1 &gt;= 1 | x &gt;= 1)
   &amp; (res_magic_0 &gt;= 0 | x &gt;= 1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 = 0
      | x &gt;= 1
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 &gt;= 0 | res_magic_1 &gt;= 1 | x_0 = 0)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x &lt;= -1
      | x_0 = 0)
   &amp; (  res_magic_0 &gt;= 0
      | res_magic_1 &gt;= 1
      | x &lt;= -1
      | x_0 = 0)
   &amp; (res_magic_0 &gt;= 1 | res_magic_1 &gt;= 1 | x_0 = 0)
   &amp; (  res_magic_1 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_1 &gt;= 1 | x &lt;= -1 | x_0 = 0)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 &gt;= 1
      | x &lt;= -1
      | x_0 = 0)
   &amp; (  res_magic_0 = 0
      | res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (res_magic_0 &gt;= 1 | x &gt;= 1 | x_0 = 0)
   &amp; (  res_magic_0 = 0
      | x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = 0)
   &amp; (  x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_1 &gt;= 1
      | x &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 = 0
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  res_magic_0 &gt;= 1
      | x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
   &amp; (  x &lt;= -1
      | x_0 = 0
      | x_0 = res_magic_0
      | x_0 = res_magic_0 * -1
      | x_0 = res_magic_1
      | x_0 = res_magic_1 * -1)
-&gt; x = 0" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                  </termination>
               </methodReturn>
            </statement>
         </branchCondition>
      </loopInvariant>
   </methodCall>
</start>
