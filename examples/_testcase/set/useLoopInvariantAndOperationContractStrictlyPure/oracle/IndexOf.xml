<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="IndexOf.indexOf(array,toSearch,comperator);" pathCondition="true" pathConditionChanged="false">
      <statement name="int index = -1;" pathCondition="true" pathConditionChanged="false">
         <statement name="int i = 0;" pathCondition="true" pathConditionChanged="false">
            <loopInvariant name="
invariant: i &gt;= 0 &amp; i &lt;= array.length;
variant: javaSubInt(array.length, i)
mod: false" pathCondition="true" pathConditionChanged="false" initiallyValid="true">
               <branchCondition name="not(or(or(or(or(and(and(geq(i_0,Z(1(#))),geq(length(array),Z(0(#)))),lt(length(array),i_0)),and(and(leq(i_0,Z(neglit(1(#)))),geq(length(array),Z(0(#)))),geq(length(array),i_0))),not(imp(and(and(and(and(equals(array,null),leq(index_1,Z(neglit(1(#))))),geq(i_0,Z(0(#)))),geq(length(null),Z(0(#)))),geq(length(null),i_0)),wellFormed(heap)))),not(imp(and(and(and(and(and(and(lt(length(array),i),leq(index_1,Z(neglit(1(#))))),geq(i,Z(1(#)))),geq(i_0,Z(0(#)))),lt(i_0,i)),geq(length(array),Z(0(#)))),geq(length(array),i_0)),equals(array,null)))),and(and(and(geq(index_1,Z(0(#))),geq(i_0,Z(0(#)))),geq(length(array),Z(0(#)))),geq(length(array),i_0))))" pathCondition="not(and(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))))" pathConditionChanged="true" branchCondition="not(or(or(or(or(and(and(geq(i_0,Z(1(#))),geq(length(array),Z(0(#)))),lt(length(array),i_0)),and(and(leq(i_0,Z(neglit(1(#)))),geq(length(array),Z(0(#)))),geq(length(array),i_0))),not(imp(and(and(and(and(equals(array,null),leq(index_1,Z(neglit(1(#))))),geq(i_0,Z(0(#)))),geq(length(null),Z(0(#)))),geq(length(null),i_0)),wellFormed(heap)))),not(imp(and(and(and(and(and(and(lt(length(array),i),leq(index_1,Z(neglit(1(#))))),geq(i,Z(1(#)))),geq(i_0,Z(0(#)))),lt(i_0,i)),geq(length(array),Z(0(#)))),geq(length(array),i_0)),equals(array,null)))),and(and(and(geq(index_1,Z(0(#))),geq(i_0,Z(0(#)))),geq(length(array),Z(0(#)))),geq(length(array),i_0))))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Body Preserves Invariant">
                  <branchCondition name="not(equals(array,null))" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),not(equals(array,null))))" pathConditionChanged="true" branchCondition="not(equals(array,null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <branchStatement name="if (!comperator.equals(array[i],toSearch))" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),not(equals(array,null))))" pathConditionChanged="false">
                        <branchCondition name="not(and(geq(length(array),Z(0(#))),or(or(leq(i_0,Z(neglit(1(#)))),equals(array,null)),leq(length(array),i_0))))" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),not(equals(array,null))),not(or(or(leq(i_0,Z(neglit(1(#)))),equals(array,null)),leq(length(array),i_0)))))" pathConditionChanged="true" branchCondition="not(and(geq(length(array),Z(0(#))),or(or(leq(i_0,Z(neglit(1(#)))),equals(array,null)),leq(length(array),i_0))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                           <operationContract name="result_0 = var.equals(var_1, var_2) catch(exc_5)
pre: var.&lt;inv&gt; &amp; (!var_1 = null &amp; !var_2 = null)
post: var.&lt;inv&gt; &amp; exc_5 = null
mod: empty, creates no new objects
termination: diamond" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),not(equals(array,null))),not(or(or(leq(i_0,Z(neglit(1(#)))),equals(array,null)),leq(length(array),i_0)))))" pathConditionChanged="false" preconditionComplied="false" hasNotNullCheck="true" notNullCheckComplied="false">
                              <branchCondition name="not(equals(var,null))" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(and(and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),not(equals(array,null))),not(or(or(leq(i_0,Z(neglit(1(#)))),equals(array,null)),leq(length(array),i_0)))),not(equals(var,null))))" pathConditionChanged="true" branchCondition="not(equals(var,null))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Post (equals)">
                                 <branchCondition name="not(equals(result_0,TRUE))" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(and(and(and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),not(equals(array,null))),not(or(or(leq(i_0,Z(neglit(1(#)))),equals(array,null)),leq(length(array),i_0)))),not(equals(var,null))),not(equals(result_0,TRUE))))" pathConditionChanged="true" branchCondition="not(equals(result_0,TRUE))" mergedBranchCondition="false" isBranchConditionComputed="true">
                                    <statement name="index_1=i;" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(and(and(and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),not(equals(array,null))),not(or(or(leq(i_0,Z(neglit(1(#)))),equals(array,null)),leq(length(array),i_0)))),not(equals(var,null))),not(equals(result_0,TRUE))))" pathConditionChanged="false">
                                       <statement name="i++;" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(and(and(and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),not(equals(array,null))),not(or(or(leq(i_0,Z(neglit(1(#)))),equals(array,null)),leq(length(array),i_0)))),not(equals(var,null))),not(equals(result_0,TRUE))))" pathConditionChanged="false">
                                          <termination name="&lt;loop body end&gt;" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(and(and(and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),not(equals(array,null))),not(or(or(leq(i_0,Z(neglit(1(#)))),equals(array,null)),leq(length(array),i_0)))),not(equals(var,null))),not(equals(result_0,TRUE))))" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="true">
                                          </termination>
                                       </statement>
                                    </statement>
                                 </branchCondition>
                                 <branchCondition name="equals(result_0,TRUE)" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(and(and(and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),not(equals(array,null))),not(or(or(leq(i_0,Z(neglit(1(#)))),equals(array,null)),leq(length(array),i_0)))),not(equals(var,null))),equals(result_0,TRUE)))" pathConditionChanged="true" branchCondition="equals(result_0,TRUE)" mergedBranchCondition="false" isBranchConditionComputed="true">
                                    <statement name="i++;" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(and(and(and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),not(equals(array,null))),not(or(or(leq(i_0,Z(neglit(1(#)))),equals(array,null)),leq(length(array),i_0)))),not(equals(var,null))),equals(result_0,TRUE)))" pathConditionChanged="false">
                                       <termination name="&lt;loop body end&gt;" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(and(and(and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),not(equals(array,null))),not(or(or(leq(i_0,Z(neglit(1(#)))),equals(array,null)),leq(length(array),i_0)))),not(equals(var,null))),equals(result_0,TRUE)))" pathConditionChanged="false" terminationKind="LOOP_BODY" branchVerified="true">
                                       </termination>
                                    </statement>
                                 </branchCondition>
                              </branchCondition>
                           </operationContract>
                        </branchCondition>
                        <branchCondition name="imp(geq(length(array),Z(0(#))),and(not(equals(array,null)),or(leq(i_0,Z(neglit(1(#)))),leq(length(array),i_0))))" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),not(equals(array,null))),and(not(equals(array,null)),or(leq(i_0,Z(neglit(1(#)))),leq(length(array),i_0)))))" pathConditionChanged="true" branchCondition="imp(geq(length(array),Z(0(#))),and(not(equals(array,null)),or(leq(i_0,Z(neglit(1(#)))),leq(length(array),i_0))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                           <termination name="&lt;uncaught java.lang.ArrayIndexOutOfBoundsException&gt;" pathCondition="imp(and(geq(length(null),Z(0(#))),geq(length(array),Z(0(#)))),and(and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),not(equals(array,null))),and(not(equals(array,null)),or(leq(i_0,Z(neglit(1(#)))),leq(length(array),i_0)))))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                           </termination>
                        </branchCondition>
                     </branchStatement>
                  </branchCondition>
                  <branchCondition name="equals(array,null)" pathCondition="imp(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),equals(array,null)))" pathConditionChanged="true" branchCondition="equals(array,null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <operationContract name="self_1 = new NullPointerException() catch(exc_4)
pre: true
post: self_1.message = null
&amp; self_1.cause = null
&amp; self_1.&lt;inv&gt;
&amp; exc_4 = null
mod: {(self_1, message)} \cup {(self_1, cause)}
termination: diamond" pathCondition="imp(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),equals(array,null)))" pathConditionChanged="false" preconditionComplied="true" hasNotNullCheck="false" notNullCheckComplied="false">
                        <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="imp(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),and(not(or(or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(and(and(geq(i,Z(1(#))),geq(i_0,Z(0(#)))),lt(i_0,i)),leq(index_1,Z(neglit(1(#))))),lt(length(array),i)),geq(length(array),i_0)),equals(array,null)))),and(and(geq(i_0,Z(0(#))),geq(index_1,Z(0(#)))),geq(length(array),i_0)))),equals(array,null)))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                        </termination>
                     </operationContract>
                  </branchCondition>
               </branchCondition>
               <branchCondition name="not(or(or(or(and(and(geq(i_0,Z(1(#))),geq(length(array),Z(0(#)))),lt(length(array),i_0)),and(and(leq(i_0,Z(neglit(1(#)))),geq(length(array),Z(0(#)))),geq(length(array),i_0))),not(imp(and(and(and(and(equals(array,null),leq(index_1,Z(neglit(1(#))))),geq(i_0,Z(0(#)))),geq(length(null),Z(0(#)))),geq(length(null),i_0)),wellFormed(heap)))),not(imp(and(and(and(and(geq(length(array),i),leq(index_1,Z(neglit(1(#))))),geq(i_0,Z(0(#)))),geq(length(array),Z(0(#)))),geq(length(array),i_0)),equals(array,null)))))" pathCondition="not(and(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(array),i)),geq(length(array),i_0)),equals(array,null))))))" pathConditionChanged="true" branchCondition="not(or(or(or(and(and(geq(i_0,Z(1(#))),geq(length(array),Z(0(#)))),lt(length(array),i_0)),and(and(leq(i_0,Z(neglit(1(#)))),geq(length(array),Z(0(#)))),geq(length(array),i_0))),not(imp(and(and(and(and(equals(array,null),leq(index_1,Z(neglit(1(#))))),geq(i_0,Z(0(#)))),geq(length(null),Z(0(#)))),geq(length(null),i_0)),wellFormed(heap)))),not(imp(and(and(and(and(geq(length(array),i),leq(index_1,Z(neglit(1(#))))),geq(i_0,Z(0(#)))),geq(length(array),Z(0(#)))),geq(length(array),i_0)),equals(array,null)))))" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Use Case">
                  <statement name="return i;" pathCondition="not(and(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(array),i)),geq(length(array),i_0)),equals(array,null))))))" pathConditionChanged="false">
                     <methodReturn name="&lt;return of IndexOf.indexOf(array,toSearch,comperator);&gt;" pathCondition="not(and(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(array),i)),geq(length(array),i_0)),equals(array,null))))))" pathConditionChanged="false" isReturnValueComputed="false">
                        <termination name="&lt;end&gt;" pathCondition="not(and(and(geq(length(array),Z(0(#))),geq(length(null),Z(0(#)))),or(or(and(and(not(equals(i_0,Z(0(#)))),or(geq(i_0,Z(1(#))),geq(length(array),i_0))),or(leq(i_0,Z(neglit(1(#)))),lt(length(array),i_0))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(null),i_0)),equals(array,null)),wellFormed(heap)))),not(imp(and(and(and(geq(i_0,Z(0(#))),leq(index_1,Z(neglit(1(#))))),geq(length(array),i)),geq(length(array),i_0)),equals(array,null))))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                        </termination>
                     </methodReturn>
                  </statement>
               </branchCondition>
            </loopInvariant>
         </statement>
      </statement>
   </methodCall>
</start>
