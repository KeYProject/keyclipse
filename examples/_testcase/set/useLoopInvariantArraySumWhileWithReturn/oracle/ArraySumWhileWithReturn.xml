<?xml version="1.0" encoding="UTF-8"?>
<startNode name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="ArraySumWhileWithReturn.sum(array);" pathCondition="true" pathConditionChanged="false">
      <statement name="int result = 0;" pathCondition="true" pathConditionChanged="false">
         <callStackEntry path="/0"/>
         <statement name="int i = 0;" pathCondition="true" pathConditionChanged="false">
            <callStackEntry path="/0"/>
            <useLoopInvariant name="invariants: {heap=and(geq(i,Z(0(#))),and(leq(i,length(array)),equals(result_1,bsum{j:int}(Z(0(#)),i,int::select(heap,array,arr(j)))))), savedHeap=null};
modifies: {heap=false, savedHeap=null};
variant: javaSubInt(length(array),i)" pathCondition="true" pathConditionChanged="false" initiallyValid="true">
               <callStackEntry path="/0"/>
               <branchNode name="if (array==null) { {     rtrn=true;     returnExpr=0;break inner_label;   } }else if (i==array.length) { {       rtrn=true;       returnExpr=result_1;break inner_label;     }   }" pathCondition="true" pathConditionChanged="false">
                  <callStackEntry path="/0"/>
                  <branchCondition name="array = null" pathCondition="array = null" pathConditionChanged="true" branchCondition="array = null" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <callStackEntry path="/0"/>
                     <statement name="returnExpr=0;" pathCondition="array = null" pathConditionChanged="false">
                        <callStackEntry path="/0"/>
                        <methodReturn name="&lt;return of ArraySumWhileWithReturn.sum(array);&gt;" pathCondition="array = null" pathConditionChanged="false" nameIncludingReturnValue="&lt;return &apos;0&apos; as result of ArraySumWhileWithReturn.sum(array);&gt;" isReturnValueComputed="true">
                           <callStackEntry path="/0"/>
                           <termination name="&lt;end&gt;" pathCondition="array = null" pathConditionChanged="false" exceptionalTermination="false">
                           </termination>
                        </methodReturn>
                     </statement>
                  </branchCondition>
                  <branchCondition name="!array = null" pathCondition="!array = null" pathConditionChanged="true" branchCondition="!array = null" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <callStackEntry path="/0"/>
                     <branchNode name="if (i==array.length) { {     rtrn=true;     returnExpr=result_1;break inner_label;   } }" pathCondition="!array = null" pathConditionChanged="false">
                        <callStackEntry path="/0"/>
                        <statement name="returnExpr=result_1;" pathCondition="!array = null" pathConditionChanged="false">
                           <callStackEntry path="/0"/>
                           <methodReturn name="&lt;return of ArraySumWhileWithReturn.sum(array);&gt;" pathCondition="!array = null" pathConditionChanged="false" nameIncludingReturnValue="&lt;return &apos;result_1_0&apos; as result of ArraySumWhileWithReturn.sum(array);&gt;" isReturnValueComputed="true">
                              <callStackEntry path="/0"/>
                              <termination name="&lt;end&gt;" pathCondition="!array = null" pathConditionChanged="false" exceptionalTermination="false">
                              </termination>
                           </methodReturn>
                        </statement>
                     </branchNode>
                  </branchCondition>
               </branchNode>
            </useLoopInvariant>
         </statement>
      </statement>
   </methodCall>
</startNode>
