<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="self.main();" pathCondition="true" pathConditionChanged="false">
      <statement name="ClassCastInherit castInto = (ClassCastInherit)this.castable;" pathCondition="true" pathConditionChanged="false">
         <branchCondition name="  self.castable = null
| ClassCastInherit::instance(self.castable) = TRUE" pathCondition="  self.castable = null
| ClassCastInherit::instance(self.castable) = TRUE" pathConditionChanged="true" branchCondition="  self.castable = null
| ClassCastInherit::instance(self.castable) = TRUE" mergedBranchCondition="false" isBranchConditionComputed="true">
            <branchStatement name="if (this.x&gt;0) {try {return this.next.x;   }catch (NullPointerException e) {return this.x;   } }" pathCondition="  self.castable = null
| ClassCastInherit::instance(self.castable) = TRUE" pathConditionChanged="false">
               <branchCondition name="!self.x &lt;= 0" pathCondition="  self.x &gt;= 1
&amp; (  self.castable = null
   | ClassCastInherit::instance(self.castable) = TRUE)" pathConditionChanged="true" branchCondition="!self.x &lt;= 0" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <statement name="return this.next.x;" pathCondition="  self.x &gt;= 1
&amp; (  self.castable = null
   | ClassCastInherit::instance(self.castable) = TRUE)" pathConditionChanged="false">
                     <branchCondition name="!self.next = null" pathCondition="  !self.next = null
&amp; self.x &gt;= 1
&amp; (  self.castable = null
   | ClassCastInherit::instance(self.castable) = TRUE)" pathConditionChanged="true" branchCondition="!self.next = null" mergedBranchCondition="false" isBranchConditionComputed="true">
                        <methodReturn name="&lt;return of self.main();&gt;" pathCondition="  !self.next = null
&amp; self.x &gt;= 1
&amp; (  self.castable = null
   | ClassCastInherit::instance(self.castable) = TRUE)" pathConditionChanged="false" isReturnValueComputed="false">
                        </methodReturn>
                     </branchCondition>
                     <branchCondition name="self.next = null" pathCondition="  self.next = null
&amp; self.x &gt;= 1
&amp; (  self.castable = null
   | ClassCastInherit::instance(self.castable) = TRUE)" pathConditionChanged="true" branchCondition="self.next = null" mergedBranchCondition="false" isBranchConditionComputed="true">
                        <statement name="return this.x;" pathCondition="  self.next = null
&amp; self.x &gt;= 1
&amp; (  self.castable = null
   | ClassCastInherit::instance(self.castable) = TRUE)" pathConditionChanged="false">
                        </statement>
                     </branchCondition>
                  </statement>
               </branchCondition>
               <branchCondition name="!self.x &gt;= 1" pathCondition="  self.x &lt;= 0
&amp; (  self.castable = null
   | ClassCastInherit::instance(self.castable) = TRUE)" pathConditionChanged="true" branchCondition="!self.x &gt;= 1" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <statement name="this.next.next.x=0;" pathCondition="  self.x &lt;= 0
&amp; (  self.castable = null
   | ClassCastInherit::instance(self.castable) = TRUE)" pathConditionChanged="false">
                  </statement>
               </branchCondition>
            </branchStatement>
         </branchCondition>
         <branchCondition name="!(  self.castable = null
  | ClassCastInherit::instance(self.castable) = TRUE)" pathCondition="!(  self.castable = null
  | ClassCastInherit::instance(self.castable) = TRUE)" pathConditionChanged="true" branchCondition="!(  self.castable = null
  | ClassCastInherit::instance(self.castable) = TRUE)" mergedBranchCondition="false" isBranchConditionComputed="true">
            <termination name="&lt;uncaught java.lang.ClassCastException&gt;" pathCondition="!(  self.castable = null
  | ClassCastInherit::instance(self.castable) = TRUE)" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
            </termination>
         </branchCondition>
      </statement>
   </methodCall>
</start>
