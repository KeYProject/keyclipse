<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="UseOperationContractAllBranchesOpenTest.main(x,obj);" pathCondition="true" pathConditionChanged="false">
      <statement name="int magicNumber = obj.magic(x);" pathCondition="true" pathConditionChanged="false">
         <operationContract name="result = self.magic(x) catch(exc)
pre: x &lt; javaUnaryMinusInt(10) &amp; self.&lt;inv&gt;
| x &gt;= 10
&amp; self.&lt;inv&gt;
post: (   x &lt; javaUnaryMinusInt(10) &amp; heapAtPre[self.&lt;inv&gt;]
   -&gt;   !exc = null
      &amp; (  (     java.lang.Exception::instance(exc)
               = TRUE
            -&gt; self.&lt;inv&gt;)
         &amp; (    java.lang.RuntimeException::instance(exc)
              = TRUE
            | java.lang.Exception::instance(exc) = TRUE)))
&amp; (   x &gt;= 10 &amp; heapAtPre[self.&lt;inv&gt;]
   -&gt; result = 42 &amp; self.&lt;inv&gt; &amp; exc = null)
mod: allLocs \cup allLocs
termination: diamond" pathCondition="true" pathConditionChanged="false" preconditionComplied="false" hasNotNullCheck="true" notNullCheckComplied="false">
            <branchCondition name="obj.&lt;inv&gt; &amp; x &gt;= 10 &amp; !obj = null" pathCondition="obj.&lt;inv&gt; &amp; x &gt;= 10 &amp; !obj = null" pathConditionChanged="true" branchCondition="obj.&lt;inv&gt; &amp; x &gt;= 10 &amp; !obj = null" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Post (magic)">
               <statement name="int magicNumberCopy = magicNumber;" pathCondition="obj.&lt;inv&gt; &amp; x &gt;= 10 &amp; !obj = null" pathConditionChanged="false">
                  <statement name="return magicNumber+magicNumberCopy;" pathCondition="obj.&lt;inv&gt; &amp; x &gt;= 10 &amp; !obj = null" pathConditionChanged="false">
                     <methodReturn name="&lt;return of UseOperationContractAllBranchesOpenTest.main(x,obj);&gt;" pathCondition="obj.&lt;inv&gt; &amp; x &gt;= 10 &amp; !obj = null" pathConditionChanged="false" isReturnValueComputed="false">
                        <termination name="&lt;end&gt;" pathCondition="obj.&lt;inv&gt; &amp; x &gt;= 10 &amp; !obj = null" pathConditionChanged="false" terminationKind="NORMAL">
                        </termination>
                     </methodReturn>
                  </statement>
               </statement>
            </branchCondition>
            <branchCondition name="obj.&lt;inv&gt; &amp; x &lt;= -11 &amp; !obj = null" pathCondition="obj.&lt;inv&gt; &amp; x &lt;= -11 &amp; !obj = null" pathConditionChanged="true" branchCondition="obj.&lt;inv&gt; &amp; x &lt;= -11 &amp; !obj = null" mergedBranchCondition="false" isBranchConditionComputed="true" additionalBranchLabel="Exceptional Post (magic)">
               <statement name="return -1;" pathCondition="obj.&lt;inv&gt; &amp; x &lt;= -11 &amp; !obj = null" pathConditionChanged="false">
                  <methodReturn name="&lt;return of UseOperationContractAllBranchesOpenTest.main(x,obj);&gt;" pathCondition="obj.&lt;inv&gt; &amp; x &lt;= -11 &amp; !obj = null" pathConditionChanged="false" isReturnValueComputed="false">
                     <termination name="&lt;end&gt;" pathCondition="obj.&lt;inv&gt; &amp; x &lt;= -11 &amp; !obj = null" pathConditionChanged="false" terminationKind="NORMAL">
                     </termination>
                  </methodReturn>
               </statement>
            </branchCondition>
         </operationContract>
      </statement>
   </methodCall>
</start>
