<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="SimpleLinkedArrays.compute(x);" pathCondition="true" pathConditionChanged="false">
      <statement name="x.value=1;" pathCondition="true" pathConditionChanged="false">
         <branchCondition name="not(equals(x,null))" pathCondition="not(equals(x,null))" pathConditionChanged="true" branchCondition="not(equals(x,null))" mergedBranchCondition="false" isBranchConditionComputed="true">
            <statement name="x.next[0].value=2;" pathCondition="not(equals(x,null))" pathConditionChanged="false">
               <branchCondition name="not(and(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))))))" pathCondition="imp(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))))" pathConditionChanged="true" branchCondition="not(and(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <branchCondition name="not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))" pathCondition="imp(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))))" pathConditionChanged="true" branchCondition="not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <statement name="x.next[0].next[0].value=3;" pathCondition="imp(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))))" pathConditionChanged="false">
                        <branchCondition name="not(and(geq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#))),or(equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#))))))" pathCondition="imp(and(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),geq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#)))),and(and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))),not(or(equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#)))))))" pathConditionChanged="true" branchCondition="not(and(geq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#))),or(equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#))))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                           <branchCondition name="not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),arr(Z(0(#)))),null))" pathCondition="imp(and(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),geq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#)))),and(and(and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))),not(or(equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),arr(Z(0(#)))),null))))" pathConditionChanged="true" branchCondition="not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),arr(Z(0(#)))),null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                              <statement name="return x.value+x.next[0].value+x.next[0].next[0].value+x.next.length;" pathCondition="imp(and(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),geq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#)))),and(and(and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))),not(or(equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),arr(Z(0(#)))),null))))" pathConditionChanged="false">
                                 <methodReturn name="&lt;return of SimpleLinkedArrays.compute(x);&gt;" pathCondition="imp(and(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),geq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#)))),and(and(and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))),not(or(equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),arr(Z(0(#)))),null))))" pathConditionChanged="false" isReturnValueComputed="false">
                                    <termination name="&lt;end&gt;" pathCondition="imp(and(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),geq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#)))),and(and(and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))),not(or(equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),arr(Z(0(#)))),null))))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                                    </termination>
                                 </methodReturn>
                              </statement>
                           </branchCondition>
                           <branchCondition name="equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),arr(Z(0(#)))),null)" pathCondition="imp(and(geq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#))),geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))),and(and(and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))),not(or(equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#)))))),equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),arr(Z(0(#)))),null)))" pathConditionChanged="true" branchCondition="equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),arr(Z(0(#)))),null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                              <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="imp(and(geq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#))),geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))),and(and(and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))),not(or(equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#)))))),equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),arr(Z(0(#)))),null)))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                              </termination>
                           </branchCondition>
                        </branchCondition>
                        <branchCondition name="equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null)" pathCondition="imp(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),and(and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))),equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null)))" pathConditionChanged="true" branchCondition="equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                           <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="imp(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),and(and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))),equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null)))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                           </termination>
                        </branchCondition>
                        <branchCondition name="imp(geq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#))),and(not(equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null)),leq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#)))))" pathCondition="imp(and(geq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#))),geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))),and(and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))),and(not(equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null)),leq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#))))))" pathConditionChanged="true" branchCondition="imp(geq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#))),and(not(equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null)),leq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#)))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                           <termination name="&lt;uncaught java.lang.ArrayIndexOutOfBoundsException&gt;" pathCondition="imp(and(geq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#))),geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))),and(and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),not(equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null))),and(not(equals(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next),null)),leq(length(SimpleLinkedArrays[]::select(heap,SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),SimpleLinkedArrays::$next)),Z(0(#))))))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                           </termination>
                        </branchCondition>
                     </statement>
                  </branchCondition>
                  <branchCondition name="equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null)" pathCondition="imp(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null)))" pathConditionChanged="true" branchCondition="equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                     <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="imp(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),and(and(not(equals(x,null)),not(or(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))),equals(SimpleLinkedArrays::select(heap,SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),arr(Z(0(#)))),null)))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                     </termination>
                  </branchCondition>
               </branchCondition>
               <branchCondition name="equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null)" pathCondition="and(not(equals(x,null)),equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null))" pathConditionChanged="true" branchCondition="equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(not(equals(x,null)),equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                  </termination>
               </branchCondition>
               <branchCondition name="imp(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),and(not(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null)),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))" pathCondition="imp(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),and(and(not(equals(x,null)),not(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null))),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))" pathConditionChanged="true" branchCondition="imp(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),and(not(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null)),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <termination name="&lt;uncaught java.lang.ArrayIndexOutOfBoundsException&gt;" pathCondition="imp(geq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#))),and(and(not(equals(x,null)),not(equals(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next),null))),leq(length(SimpleLinkedArrays[]::select(heap,x,SimpleLinkedArrays::$next)),Z(0(#)))))" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
                  </termination>
               </branchCondition>
            </statement>
         </branchCondition>
         <branchCondition name="equals(x,null)" pathCondition="equals(x,null)" pathConditionChanged="true" branchCondition="equals(x,null)" mergedBranchCondition="false" isBranchConditionComputed="true">
            <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="equals(x,null)" pathConditionChanged="false" terminationKind="EXCEPTIONAL" branchVerified="true">
            </termination>
         </branchCondition>
      </statement>
   </methodCall>
</start>
