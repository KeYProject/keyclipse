<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="self.compute();" pathCondition="true" pathConditionChanged="false">
      <statement name="ArrayInstanceCreationTest.classArray=new int[]{1 };" pathCondition="true" pathConditionChanged="false">
         <statement name="this.instanceArray=new int[]{2 };" pathCondition="true" pathConditionChanged="false">
            <branchStatement name="if (this.next!=null)" pathCondition="true" pathConditionChanged="false">
               <branchCondition name="not(equals(ArrayInstanceCreationTest::select(heap,self,ArrayInstanceCreationTest::$next),null))" pathCondition="not(equals(ArrayInstanceCreationTest::select(heap,self,ArrayInstanceCreationTest::$next),null))" pathConditionChanged="true" branchCondition="not(equals(ArrayInstanceCreationTest::select(heap,self,ArrayInstanceCreationTest::$next),null))" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <statement name="this.next.instanceArray=new int[]{3 };" pathCondition="not(equals(ArrayInstanceCreationTest::select(heap,self,ArrayInstanceCreationTest::$next),null))" pathConditionChanged="false">
                     <statement name="int[] localArray = {4,5 };" pathCondition="not(equals(ArrayInstanceCreationTest::select(heap,self,ArrayInstanceCreationTest::$next),null))" pathConditionChanged="false">
                        <statement name="return localArray[0]+localArray[1];" pathCondition="not(equals(ArrayInstanceCreationTest::select(heap,self,ArrayInstanceCreationTest::$next),null))" pathConditionChanged="false">
                           <methodReturn name="&lt;return of compute&gt;" signature="&lt;return of self.compute();&gt;" pathCondition="not(equals(ArrayInstanceCreationTest::select(heap,self,ArrayInstanceCreationTest::$next),null))" pathConditionChanged="false" isReturnValueComputed="false">
                              <termination name="&lt;end&gt;" pathCondition="not(equals(ArrayInstanceCreationTest::select(heap,self,ArrayInstanceCreationTest::$next),null))" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                              </termination>
                           </methodReturn>
                        </statement>
                     </statement>
                  </statement>
               </branchCondition>
               <branchCondition name="equals(ArrayInstanceCreationTest::select(heap,self,ArrayInstanceCreationTest::$next),null)" pathCondition="equals(ArrayInstanceCreationTest::select(heap,self,ArrayInstanceCreationTest::$next),null)" pathConditionChanged="true" branchCondition="equals(ArrayInstanceCreationTest::select(heap,self,ArrayInstanceCreationTest::$next),null)" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <statement name="return -100;" pathCondition="equals(ArrayInstanceCreationTest::select(heap,self,ArrayInstanceCreationTest::$next),null)" pathConditionChanged="false">
                     <methodReturn name="&lt;return of compute&gt;" signature="&lt;return of self.compute();&gt;" pathCondition="equals(ArrayInstanceCreationTest::select(heap,self,ArrayInstanceCreationTest::$next),null)" pathConditionChanged="false" isReturnValueComputed="false">
                        <termination name="&lt;end&gt;" pathCondition="equals(ArrayInstanceCreationTest::select(heap,self,ArrayInstanceCreationTest::$next),null)" pathConditionChanged="false" terminationKind="NORMAL" branchVerified="true">
                        </termination>
                     </methodReturn>
                  </statement>
               </branchCondition>
            </branchStatement>
         </statement>
      </statement>
   </methodCall>
</start>
