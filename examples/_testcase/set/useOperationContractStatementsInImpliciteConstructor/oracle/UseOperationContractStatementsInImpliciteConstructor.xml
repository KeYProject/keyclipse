<?xml version="1.0" encoding="UTF-8"?>
<startNode name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="self.average(array);" pathCondition="true" pathConditionChanged="false">
      <variable name="exc" arrayIndex="-1" isArrayIndex="false">
         <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
         </value>
      </variable>
      <branchNode name="if (array!=null) {int sum = sum(array);return    sum/array.length; }else  {throw new IllegalArgumentException (&quot;Array can&apos;t be null.&quot;); }" pathCondition="true" pathConditionChanged="false">
         <variable name="self" arrayIndex="-1" isArrayIndex="false">
            <value name="self {true}" typeString="UseOperationContractStatementsInImpliciteConstructor" valueString="self" isValueAnObject="true" isValueUnknown="false" conditionString="true">
            </value>
         </variable>
         <variable name="array" arrayIndex="-1" isArrayIndex="false">
            <value name="array {array = null}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="array = null">
            </value>
            <value name="array {!array = null}" typeString="int[]" valueString="array" isValueAnObject="true" isValueUnknown="false" conditionString="!array = null">
               <variable name="length" arrayIndex="-1" isArrayIndex="false">
                  <value name="length {true}" typeString="int" valueString="array.length" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
            </value>
         </variable>
         <variable name="exc" arrayIndex="-1" isArrayIndex="false">
            <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
            </value>
         </variable>
         <callStackEntry path="/0"/>
         <branchCondition name="!array = null" pathCondition="!array = null" pathConditionChanged="true" branchCondition="!array = null" mergedBranchCondition="false" isBranchConditionComputed="true">
            <callStackEntry path="/0"/>
            <statement name="int sum = sum(array);" pathCondition="!array = null" pathConditionChanged="false">
               <variable name="self" arrayIndex="-1" isArrayIndex="false">
                  <value name="self {true}" typeString="UseOperationContractStatementsInImpliciteConstructor" valueString="self" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <variable name="array" arrayIndex="-1" isArrayIndex="false">
                  <value name="array {true}" typeString="int[]" valueString="array" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                     <variable name="length" arrayIndex="-1" isArrayIndex="false">
                        <value name="length {true}" typeString="int" valueString="array.length" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                  </value>
               </variable>
               <variable name="exc" arrayIndex="-1" isArrayIndex="false">
                  <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <callStackEntry path="/0"/>
               <useOperationContract name="result = self.sum(array) catch(exc)
pre: !array = null &amp; (self.&lt;inv&gt; &amp; !array = null)
post: result = bsum{int i;}(0, array.length, array[i])
&amp; self.&lt;inv&gt;
&amp; exc = null
mod: allLocs
termination: diamond" pathCondition="!array = null" pathConditionChanged="false" preconditionComplied="true" hasNotNullCheck="false" notNullCheckComplied="false">
                  <variable name="self" arrayIndex="-1" isArrayIndex="false">
                     <value name="self {true}" typeString="UseOperationContractStatementsInImpliciteConstructor" valueString="self" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <variable name="array" arrayIndex="-1" isArrayIndex="false">
                     <value name="array {true}" typeString="int[]" valueString="array" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                        <variable name="length" arrayIndex="-1" isArrayIndex="false">
                           <value name="length {true}" typeString="int" valueString="array.length" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                           </value>
                        </variable>
                     </value>
                  </variable>
                  <variable name="exc" arrayIndex="-1" isArrayIndex="false">
                     <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                     </value>
                  </variable>
                  <callStackEntry path="/0"/>
                  <statement name="return sum/array.length;" pathCondition="!array = null" pathConditionChanged="false">
                     <variable name="self" arrayIndex="-1" isArrayIndex="false">
                        <value name="self {true}" typeString="UseOperationContractStatementsInImpliciteConstructor" valueString="self" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <variable name="array" arrayIndex="-1" isArrayIndex="false">
                        <value name="array {true}" typeString="int[]" valueString="array" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                           <variable name="length" arrayIndex="-1" isArrayIndex="false">
                              <value name="length {true}" typeString="int" valueString="array.length" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                              </value>
                           </variable>
                        </value>
                     </variable>
                     <variable name="exc" arrayIndex="-1" isArrayIndex="false">
                        <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <variable name="heap" arrayIndex="-1" isArrayIndex="false">
                        <value name="heap {true}" typeString="Heap" valueString="heapAfter_sum" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <variable name="sum" arrayIndex="-1" isArrayIndex="false">
                        <value name="sum {true}" typeString="int" valueString="result_0" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                        </value>
                     </variable>
                     <callStackEntry path="/0"/>
                     <branchCondition name="!array.length &gt;= 1" pathCondition="array.length &gt;= 0 -&gt; !array = null &amp; array.length &lt;= 0" pathConditionChanged="true" branchCondition="!array.length &gt;= 1" mergedBranchCondition="false" isBranchConditionComputed="true">
                        <termination name="&lt;uncaught java.lang.ArithmeticException&gt;" pathCondition="array.length &gt;= 0 -&gt; !array = null &amp; array.length &lt;= 0" pathConditionChanged="false" terminationKind="EXCEPTIONAL">
                        </termination>
                     </branchCondition>
                     <branchCondition name="!array.length = 0" pathCondition="array.length &gt;= 0 -&gt; !array = null &amp; !array.length = 0" pathConditionChanged="true" branchCondition="!array.length = 0" mergedBranchCondition="false" isBranchConditionComputed="true">
                        <methodReturn name="&lt;return of self.average(array);&gt;" pathCondition="array.length &gt;= 0 -&gt; !array = null &amp; !array.length = 0" pathConditionChanged="false" nameIncludingReturnValue="&lt;return 
	quotient_0 {!result_0 &lt;= -1}, 
	quotient_1 * -1 {!result_0 &gt;= 0}
as result of self.average(array);&gt;" isReturnValueComputed="true">
                           <methodReturnValue name="quotient_0 {!result_0 &lt;= -1}" returnValueString="quotient_0" hasCondition="true" conditionString="!result_0 &lt;= -1">
                           </methodReturnValue>
                           <methodReturnValue name="quotient_1 * -1 {!result_0 &gt;= 0}" returnValueString="quotient_1 * -1" hasCondition="true" conditionString="!result_0 &gt;= 0">
                           </methodReturnValue>
                           <variable name="self" arrayIndex="-1" isArrayIndex="false">
                              <value name="self {true}" typeString="UseOperationContractStatementsInImpliciteConstructor" valueString="self" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                              </value>
                           </variable>
                           <variable name="array" arrayIndex="-1" isArrayIndex="false">
                              <value name="array {true}" typeString="int[]" valueString="array" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                                 <variable name="length" arrayIndex="-1" isArrayIndex="false">
                                    <value name="length {true}" typeString="int" valueString="array.length" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                                    </value>
                                 </variable>
                              </value>
                           </variable>
                           <variable name="exc" arrayIndex="-1" isArrayIndex="false">
                              <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                              </value>
                           </variable>
                           <variable name="heap" arrayIndex="-1" isArrayIndex="false">
                              <value name="heap {true}" typeString="Heap" valueString="heapAfter_sum" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                              </value>
                           </variable>
                           <callStackEntry path="/0"/>
                           <termination name="&lt;end&gt;" pathCondition="array.length &gt;= 0 -&gt; !array = null &amp; !array.length = 0" pathConditionChanged="false" terminationKind="NORMAL">
                           </termination>
                        </methodReturn>
                     </branchCondition>
                  </statement>
               </useOperationContract>
            </statement>
         </branchCondition>
         <branchCondition name="array = null" pathCondition="array = null" pathConditionChanged="true" branchCondition="array = null" mergedBranchCondition="false" isBranchConditionComputed="true">
            <callStackEntry path="/0"/>
            <statement name="throw new IllegalArgumentException (&quot;Array can&apos;t be null.&quot;);" pathCondition="array = null" pathConditionChanged="false">
               <variable name="self" arrayIndex="-1" isArrayIndex="false">
                  <value name="self {true}" typeString="UseOperationContractStatementsInImpliciteConstructor" valueString="self" isValueAnObject="true" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <variable name="array" arrayIndex="-1" isArrayIndex="false">
                  <value name="array {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <variable name="exc" arrayIndex="-1" isArrayIndex="false">
                  <value name="exc {true}" typeString="Null" valueString="null" isValueAnObject="false" isValueUnknown="false" conditionString="true">
                  </value>
               </variable>
               <callStackEntry path="/0"/>
               <termination name="&lt;uncaught java.lang.IllegalArgumentException&gt;" pathCondition="array = null" pathConditionChanged="false" terminationKind="EXCEPTIONAL">
               </termination>
            </statement>
         </branchCondition>
      </branchNode>
   </methodCall>
</startNode>
