<?xml version="1.0" encoding="UTF-8"?>
<start name="&lt;start&gt;" pathCondition="true" pathConditionChanged="false">
   <methodCall name="self.compute(current);" pathCondition="true" pathConditionChanged="false">
      <statement name="Node newParent = current.right;" pathCondition="true" pathConditionChanged="false">
         <branchCondition name="!current = null" pathCondition="!current = null" pathConditionChanged="true" branchCondition="!current = null" mergedBranchCondition="false" isBranchConditionComputed="true">
            <statement name="Node oldLeft = newParent.left;" pathCondition="!current = null" pathConditionChanged="false">
               <branchCondition name="!current.right = null" pathCondition="!current = null &amp; !current.right = null" pathConditionChanged="true" branchCondition="!current.right = null" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <statement name="newParent.left=current;" pathCondition="!current = null &amp; !current.right = null" pathConditionChanged="false">
                     <statement name="newParent.height=0;" pathCondition="!current = null &amp; !current.right = null" pathConditionChanged="false">
                        <statement name="current.height=0;" pathCondition="!current = null &amp; !current.right = null" pathConditionChanged="false">
                           <statement name="current.right=oldLeft;" pathCondition="!current = null &amp; !current.right = null" pathConditionChanged="false">
                              <branchStatement name="if (oldLeft!=null) {   oldLeft.parent=current.right; }" pathCondition="!current = null &amp; !current.right = null" pathConditionChanged="false">
                                 <branchCondition name="!current.right.left = null" pathCondition="  !current = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="true" branchCondition="!current.right.left = null" mergedBranchCondition="false" isBranchConditionComputed="true">
                                    <statement name="oldLeft.parent=current.right;" pathCondition="  !current = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="false">
                                       <branchStatement name="if (current.parent==null) {   this.root=newParent;   newParent.parent=null; }else  {   current.parent.right=newParent;   newParent.parent=current.parent; }" pathCondition="  !current = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="false">
                                          <branchCondition name="selectSK_2&lt;&lt;selectSK&gt;&gt; = null" pathCondition="  !current = null
&amp; selectSK_2&lt;&lt;selectSK&gt;&gt; = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="true" branchCondition="selectSK_2&lt;&lt;selectSK&gt;&gt; = null" mergedBranchCondition="false" isBranchConditionComputed="true">
                                             <statement name="this.root=newParent;" pathCondition="  !current = null
&amp; selectSK_2&lt;&lt;selectSK&gt;&gt; = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="false">
                                                <statement name="newParent.parent=null;" pathCondition="  !current = null
&amp; selectSK_2&lt;&lt;selectSK&gt;&gt; = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="false">
                                                   <statement name="current.parent=newParent;" pathCondition="  !current = null
&amp; selectSK_2&lt;&lt;selectSK&gt;&gt; = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="false">
                                                      <statement name="return current;" pathCondition="  !current = null
&amp; selectSK_2&lt;&lt;selectSK&gt;&gt; = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="false">
                                                         <methodReturn name="&lt;return of self.compute(current);&gt;" pathCondition="  !current = null
&amp; selectSK_2&lt;&lt;selectSK&gt;&gt; = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="false" isReturnValueComputed="false">
                                                            <termination name="&lt;end&gt;" pathCondition="  !current = null
&amp; selectSK_2&lt;&lt;selectSK&gt;&gt; = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="false" terminationKind="NORMAL">
                                                            </termination>
                                                         </methodReturn>
                                                      </statement>
                                                   </statement>
                                                </statement>
                                             </statement>
                                          </branchCondition>
                                          <branchCondition name="!selectSK_2&lt;&lt;selectSK&gt;&gt; = null" pathCondition="  !current = null
&amp; !selectSK_2&lt;&lt;selectSK&gt;&gt; = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="true" branchCondition="!selectSK_2&lt;&lt;selectSK&gt;&gt; = null" mergedBranchCondition="false" isBranchConditionComputed="true">
                                             <statement name="current.parent.right=newParent;" pathCondition="  !current = null
&amp; !selectSK_2&lt;&lt;selectSK&gt;&gt; = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="false">
                                                <statement name="newParent.parent=current.parent;" pathCondition="  !current = null
&amp; !selectSK_2&lt;&lt;selectSK&gt;&gt; = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="false">
                                                   <statement name="current.parent=newParent;" pathCondition="  !current = null
&amp; !selectSK_2&lt;&lt;selectSK&gt;&gt; = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="false">
                                                      <statement name="return current;" pathCondition="  !current = null
&amp; !selectSK_2&lt;&lt;selectSK&gt;&gt; = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="false">
                                                         <methodReturn name="&lt;return of self.compute(current);&gt;" pathCondition="  !current = null
&amp; !selectSK_2&lt;&lt;selectSK&gt;&gt; = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="false" isReturnValueComputed="false">
                                                            <termination name="&lt;end&gt;" pathCondition="  !current = null
&amp; !selectSK_2&lt;&lt;selectSK&gt;&gt; = null
&amp; !current.right = null
&amp; !current.right.left = null" pathConditionChanged="false" terminationKind="NORMAL">
                                                            </termination>
                                                         </methodReturn>
                                                      </statement>
                                                   </statement>
                                                </statement>
                                             </statement>
                                          </branchCondition>
                                       </branchStatement>
                                    </statement>
                                 </branchCondition>
                                 <branchCondition name="current.right.left = null" pathCondition="  !current = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="true" branchCondition="current.right.left = null" mergedBranchCondition="false" isBranchConditionComputed="true">
                                    <branchStatement name="if (current.parent==null) {   this.root=newParent;   newParent.parent=null; }else  {   current.parent.right=newParent;   newParent.parent=current.parent; }" pathCondition="  !current = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="false">
                                       <branchCondition name="current.parent = null" pathCondition="  !current = null
&amp; current.parent = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="true" branchCondition="current.parent = null" mergedBranchCondition="false" isBranchConditionComputed="true">
                                          <statement name="this.root=newParent;" pathCondition="  !current = null
&amp; current.parent = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="false">
                                             <statement name="newParent.parent=null;" pathCondition="  !current = null
&amp; current.parent = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="false">
                                                <statement name="current.parent=newParent;" pathCondition="  !current = null
&amp; current.parent = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="false">
                                                   <statement name="return current;" pathCondition="  !current = null
&amp; current.parent = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="false">
                                                      <methodReturn name="&lt;return of self.compute(current);&gt;" pathCondition="  !current = null
&amp; current.parent = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="false" isReturnValueComputed="false">
                                                         <termination name="&lt;end&gt;" pathCondition="  !current = null
&amp; current.parent = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="false" terminationKind="NORMAL">
                                                         </termination>
                                                      </methodReturn>
                                                   </statement>
                                                </statement>
                                             </statement>
                                          </statement>
                                       </branchCondition>
                                       <branchCondition name="!current.parent = null" pathCondition="  !current = null
&amp; !current.parent = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="true" branchCondition="!current.parent = null" mergedBranchCondition="false" isBranchConditionComputed="true">
                                          <statement name="current.parent.right=newParent;" pathCondition="  !current = null
&amp; !current.parent = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="false">
                                             <statement name="newParent.parent=current.parent;" pathCondition="  !current = null
&amp; !current.parent = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="false">
                                                <statement name="current.parent=newParent;" pathCondition="  !current = null
&amp; !current.parent = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="false">
                                                   <statement name="return current;" pathCondition="  !current = null
&amp; !current.parent = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="false">
                                                      <methodReturn name="&lt;return of self.compute(current);&gt;" pathCondition="  !current = null
&amp; !current.parent = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="false" isReturnValueComputed="false">
                                                         <termination name="&lt;end&gt;" pathCondition="  !current = null
&amp; !current.parent = null
&amp; !current.right = null
&amp; current.right.left = null" pathConditionChanged="false" terminationKind="NORMAL">
                                                         </termination>
                                                      </methodReturn>
                                                   </statement>
                                                </statement>
                                             </statement>
                                          </statement>
                                       </branchCondition>
                                    </branchStatement>
                                 </branchCondition>
                              </branchStatement>
                           </statement>
                        </statement>
                     </statement>
                  </statement>
               </branchCondition>
               <branchCondition name="current.right = null" pathCondition="!current = null &amp; current.right = null" pathConditionChanged="true" branchCondition="current.right = null" mergedBranchCondition="false" isBranchConditionComputed="true">
                  <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="!current = null &amp; current.right = null" pathConditionChanged="false" terminationKind="EXCEPTIONAL">
                  </termination>
               </branchCondition>
            </statement>
         </branchCondition>
         <branchCondition name="current = null" pathCondition="current = null" pathConditionChanged="true" branchCondition="current = null" mergedBranchCondition="false" isBranchConditionComputed="true">
            <termination name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="current = null" pathConditionChanged="false" terminationKind="EXCEPTIONAL">
            </termination>
         </branchCondition>
      </statement>
   </methodCall>
</start>
