\settings {
"#Proof-Settings-Config-File
#Wed Jun 26 18:44:34 CEST 2013
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]RETREAT_MODE_OPTIONS_KEY=RETREAT_MODE_NONE
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[Label]Instantiators=
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=Strings-Strings\\:on , reach-reach\\:on , JavaCard-JavaCard\\:on , assertions-assertions\\:on , bigint-bigint\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , modelFields-modelFields\\:treatAsAxiom , initialisation-initialisation\\:disableStaticInitialisation , sequences-sequences\\:on , integerSimplificationRules-integerSimplificationRules\\:full , runtimeExceptions-runtimeExceptions\\:allow
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src.templates";

\proofObligation "#Proof Obligation Settings
#Wed Jun 26 18:44:34 CEST 2013
name=Disjoint[Disjoint\\:\\:disjoint2_8()].JML operation contract.0
contract=Disjoint[Disjoint\\:\\:disjoint2_8()].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "christoph" ) (keyVersion "98151b013121376e2e9354875c034e6e91892cac"))
(keyLog "1" (keyUser "christoph" ) (keyVersion "1f1226c4c6024cfbad7c2c83e640e8e4598e721f"))

(autoModeTime "4284")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "11"))
(rule "assignment" (formula "14"))
(rule "disjointDefinition" (formula "4"))
(rule "disjointDefinition" (formula "5"))
(rule "disjointDefinition" (formula "6"))
(rule "disjointDefinition" (formula "7"))
(rule "disjointDefinition" (formula "8"))
(rule "disjointDefinition" (formula "9"))
(rule "disjointDefinition" (formula "10"))
(rule "disjointDefinition" (formula "11"))
(rule "disjointDefinition" (formula "14") (term "0,1,1,0,0,1"))
(rule "disjointDefinition" (formula "14") (term "0,1,1,1,0,0,1"))
(rule "disjointDefinition" (formula "14") (term "0,1,1,1,1,0,0,1"))
(rule "disjointDefinition" (formula "14") (term "0,1,1,1,1,1,1,1,1,0,0,1"))
(rule "disjointDefinition" (formula "14") (term "0,1,1,1,1,1,0,0,1"))
(rule "disjointDefinition" (formula "14") (term "0,1,1,1,1,1,1,1,0,0,1"))
(rule "disjointDefinition" (formula "14") (term "0,1,0,0,1"))
(rule "disjointDefinition" (formula "14") (term "0,1,1,1,1,1,1,0,0,1"))
(rule "Class_invariant_axiom_for_Disjoint" (formula "12") (ifseqformula "3"))
(rule "true_left" (formula "12"))
(rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_disjoint2_8,savedHeapBefore_disjoint2_8"))
(builtin "One Step Simplification" (formula "13"))
(builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_disjointHelper2_8,exc_0,heapAfter_disjointHelper2_8,anon_heap_disjointHelper2_8") (contract "Disjoint[Disjoint::disjointHelper2_8()].JML operation contract.0"))
(branch "Post (disjointHelper2_8)"
   (builtin "One Step Simplification" (formula "13"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "15"))
   (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "18"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "22"))
   (rule "disjointDefinition" (formula "15"))
   (rule "disjointDefinition" (formula "16"))
   (rule "disjointDefinition" (formula "17"))
   (rule "disjointDefinition" (formula "18"))
   (rule "disjointDefinition" (formula "19"))
   (rule "disjointDefinition" (formula "20"))
   (rule "disjointDefinition" (formula "21"))
   (rule "disjointDefinition" (formula "22"))
   (rule "selectOfAnonEQ" (formula "15") (term "0,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "15") (term "0,0,0"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,0,0,0,0,0,0"))
   (rule "selectOfAnonEQ" (formula "16") (term "1,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "16") (term "0,1,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,1,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,1,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
   (rule "selectOfAnonEQ" (formula "17") (term "0,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "17") (term "0,0,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0,0,0,0,0,0"))
   (rule "selectOfAnonEQ" (formula "18") (term "1,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "18") (term "0,1,0"))
   (rule "elementOfUnion" (formula "18") (term "0,0,1,0"))
   (rule "elementOfUnion" (formula "18") (term "0,0,0,1,0"))
   (rule "elementOfUnion" (formula "18") (term "0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "18") (term "0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "18") (term "0,0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "18") (term "0,0,0,0,0,0,0,1,0"))
   (rule "selectOfAnonEQ" (formula "19") (term "0,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "19") (term "0,0,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0,0,0,0,0,0"))
   (rule "selectOfAnonEQ" (formula "20") (term "1,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "20") (term "0,1,0"))
   (rule "elementOfUnion" (formula "20") (term "0,0,1,0"))
   (rule "elementOfUnion" (formula "20") (term "0,0,0,1,0"))
   (rule "elementOfUnion" (formula "20") (term "0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "20") (term "0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "20") (term "0,0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "20") (term "0,0,0,0,0,0,0,1,0"))
   (rule "selectOfAnonEQ" (formula "21") (term "1,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "21") (term "0,1,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,1,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,1,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0,0,1,0"))
   (rule "selectOfAnonEQ" (formula "22") (term "1,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "22") (term "0,1,0"))
   (rule "elementOfUnion" (formula "22") (term "0,0,1,0"))
   (rule "elementOfUnion" (formula "22") (term "0,0,0,1,0"))
   (rule "elementOfUnion" (formula "22") (term "0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0,1,0"))
   (rule "selectOfAnonEQ" (formula "17") (term "1,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "17") (term "0,1,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,1,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,1,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
   (rule "selectOfAnonEQ" (formula "19") (term "1,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "19") (term "0,1,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,1,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,1,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "19") (term "0,0,0,0,0,0,0,1,0"))
   (rule "selectOfAnonEQ" (formula "18") (term "0,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "18") (term "0,0,0"))
   (rule "elementOfUnion" (formula "18") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "18") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "18") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "18") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "18") (term "0,0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "18") (term "0,0,0,0,0,0,0,0,0"))
   (rule "selectOfAnonEQ" (formula "20") (term "0,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "20") (term "0,0,0"))
   (rule "elementOfUnion" (formula "20") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "20") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "20") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "20") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "20") (term "0,0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "20") (term "0,0,0,0,0,0,0,0,0"))
   (rule "selectOfAnonEQ" (formula "21") (term "0,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "21") (term "0,0,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0,0,0,0"))
   (rule "selectOfAnonEQ" (formula "22") (term "0,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "22") (term "0,0,0"))
   (rule "elementOfUnion" (formula "22") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0,0,0"))
   (rule "selectOfAnonEQ" (formula "16") (term "0,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "16") (term "0,0,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
   (rule "selectOfAnonEQ" (formula "15") (term "1,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "24")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "15") (term "0,1,0"))
   (rule "elementOfUnion" (formula "15") (term "0,0,1,0"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,1,0"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,0,0,0,1,0"))
   (rule "elementOfUnion" (formula "15") (term "0,0,0,0,0,0,0,1,0"))
   (rule "methodCallEmpty" (formula "25") (term "1"))
   (rule "Class_invariant_axiom_for_Disjoint" (formula "23") (ifseqformula "3"))
   (rule "true_left" (formula "23"))
   (rule "tryEmpty" (formula "24") (term "1"))
   (rule "emptyModality" (formula "24") (term "1"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "selectOfAnonEQ" (formula "24") (term "1,0,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,1,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,1,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,1,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1,0,0"))
   (rule "selectOfAnonEQ" (formula "24") (term "1,0,0,1,1,1,1,1,1,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,1,0,0,1,1,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,1,0,0,1,1,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,1,0,0,1,1,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1,0,0,1,1,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1,0,0,1,1,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1"))
   (rule "selectOfAnonEQ" (formula "24") (term "0,0,0,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,1"))
   (rule "selectOfAnonEQ" (formula "24") (term "0,0,0,1,1,1,1,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,1,1,1,1,1"))
   (rule "selectOfAnonEQ" (formula "24") (term "1,0,0,1,1,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,1,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,1,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,1,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1,0,0,1,1,1"))
   (rule "selectOfAnonEQ" (formula "24") (term "1,0,0,1,1,1,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,1,0,0,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,1,0,0,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,1,0,0,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1,0,0,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1,0,0,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1,0,0,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1,0,0,1,1,1,1"))
   (rule "selectOfAnonEQ" (formula "24") (term "1,0,0,1,1,1,1,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,1,0,0,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,1,0,0,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,1,0,0,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1,0,0,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1,0,0,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1,0,0,1,1,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1,0,0,1,1,1,1,1"))
   (rule "replace_known_left" (formula "24") (term "0,1,1,1,1,1") (ifseqformula "20"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "selectOfAnonEQ" (formula "24") (term "0,0,0,1,1,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,1,1,1"))
   (rule "replace_known_left" (formula "24") (term "0,1,1,1") (ifseqformula "18"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "selectOfAnonEQ" (formula "24") (term "1,0,0,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,1,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,1,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,1,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1,0,0,1"))
   (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "selectOfAnonEQ" (formula "24") (term "0,0,0,1,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
   (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "19"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "selectOfAnonEQ" (formula "24") (term "1,0,0,1,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,1,0,0,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,1,0,0,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,1,0,0,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1,0,0,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1,0,0,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1,0,0,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
   (rule "selectOfAnonEQ" (formula "24") (term "0,0,0,1,1,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,1,1,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,1,1,1"))
   (rule "replace_known_left" (formula "24") (term "0,1,1,1") (ifseqformula "22"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "selectOfAnonEQ" (formula "24") (term "0,0,0,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,1"))
   (rule "selectOfAnonEQ" (formula "24") (term "0,0,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,0"))
   (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "15"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "selectOfAnonEQ" (formula "24") (term "0,0,0,1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,1"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,0,0,0,1"))
   (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "21"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "selectOfAnonEQ" (formula "24") (term "1,0,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
   (rule "elementOfUnion" (formula "24") (term "0,1,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,1,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,1,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,1,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,1,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,1,0,0"))
   (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0,1,0,0"))
   (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "ifthenelse_split" (formula "17") (term "0,0"))
   (branch " (self, rep) in self.rep1 | (self, rep) in self.rep2 | (self, rep) in self.rep3 | (self, rep) in self.rep4 | (self, rep) in self.rep5 | (self, rep) in self.rep6 | (self, rep) in self.rep7 | (self, rep) in self.rep8 TRUE"
      (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "ifthenelse_split" (formula "18") (term "1,0"))
      (branch " (self, rep3) in self.rep1 | (self, rep3) in self.rep2 | (self, rep3) in self.rep3 | (self, rep3) in self.rep4 | (self, rep3) in self.rep5 | (self, rep3) in self.rep6 | (self, rep3) in self.rep7 | (self, rep3) in self.rep8 TRUE"
         (rule "Class_invariant_axiom_for_Disjoint" (formula "26") (ifseqformula "3"))
         (rule "closeTrue" (formula "26"))
      )
      (branch " (self, rep3) in self.rep1 | (self, rep3) in self.rep2 | (self, rep3) in self.rep3 | (self, rep3) in self.rep4 | (self, rep3) in self.rep5 | (self, rep3) in self.rep6 | (self, rep3) in self.rep7 | (self, rep3) in self.rep8 FALSE"
         (rule "orRight" (formula "24"))
         (rule "orRight" (formula "24"))
         (rule "orRight" (formula "24"))
         (rule "orRight" (formula "24"))
         (rule "orRight" (formula "24"))
         (rule "orRight" (formula "24"))
         (rule "orRight" (formula "24"))
         (rule "commuteIntersection" (formula "18") (term "0"))
         (rule "Class_invariant_axiom_for_Disjoint" (formula "33") (ifseqformula "3"))
         (rule "closeTrue" (formula "33"))
      )
   )
   (branch " (self, rep) in self.rep1 | (self, rep) in self.rep2 | (self, rep) in self.rep3 | (self, rep) in self.rep4 | (self, rep) in self.rep5 | (self, rep) in self.rep6 | (self, rep) in self.rep7 | (self, rep) in self.rep8 FALSE"
      (rule "orRight" (formula "23"))
      (rule "orRight" (formula "23"))
      (rule "orRight" (formula "23"))
      (rule "orRight" (formula "23"))
      (rule "orRight" (formula "23"))
      (rule "orRight" (formula "23"))
      (rule "orRight" (formula "23"))
      (rule "replace_known_right" (formula "18") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "25"))
      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
      (rule "replace_known_right" (formula "15") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "25"))
      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
      (rule "replace_known_right" (formula "16") (term "1,0,0,0,0,0,0") (ifseqformula "27"))
      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
      (rule "replace_known_right" (formula "21") (term "1,0,0,0,0,0") (ifseqformula "28"))
      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
      (rule "replace_known_right" (formula "19") (term "1,0,0,0") (ifseqformula "30"))
      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")))
      (rule "replace_known_right" (formula "22") (term "1,0,0,0,0,0,0,0") (ifseqformula "26"))
      (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
      (rule "replace_known_right" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "28"))
      (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
      (rule "ifthenelse_split" (formula "17") (term "1,0"))
      (branch " (self, rep3) in self.rep1 | (self, rep3) in self.rep2 | (self, rep3) in self.rep3 | (self, rep3) in self.rep4 | (self, rep3) in self.rep5 | (self, rep3) in self.rep6 | (self, rep3) in self.rep7 | (self, rep3) in self.rep8 TRUE"
         (rule "Class_invariant_axiom_for_Disjoint" (formula "33") (ifseqformula "3"))
         (rule "closeTrue" (formula "33"))
      )
      (branch " (self, rep3) in self.rep1 | (self, rep3) in self.rep2 | (self, rep3) in self.rep3 | (self, rep3) in self.rep4 | (self, rep3) in self.rep5 | (self, rep3) in self.rep6 | (self, rep3) in self.rep7 | (self, rep3) in self.rep8 FALSE"
         (rule "orRight" (formula "22"))
         (rule "orRight" (formula "22"))
         (rule "orRight" (formula "22"))
         (rule "orRight" (formula "22"))
         (rule "orRight" (formula "22"))
         (rule "orRight" (formula "22"))
         (rule "orRight" (formula "22"))
         (rule "Class_invariant_axiom_for_Disjoint" (formula "39") (ifseqformula "3"))
         (rule "closeTrue" (formula "39"))
      )
   )
)
(branch "Exceptional Post (disjointHelper2_8)"
   (builtin "One Step Simplification" (formula "15"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,0") (ifseqformula "13"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "16"))
   (rule "notLeft" (formula "14"))
   (rule "close" (formula "17") (ifseqformula "16"))
)
(branch "Pre (disjointHelper2_8)"
   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")))
   (rule "disjointDefinition" (formula "13") (term "0,1,1,1,1"))
   (rule "replace_known_left" (formula "13") (term "0,1,1,1,1") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "disjointDefinition" (formula "13") (term "0,1,1,1,1,1,1"))
   (rule "replace_known_left" (formula "13") (term "0,1,1,1,1,1,1") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "disjointDefinition" (formula "13") (term "0,1,1,1,1,1"))
   (rule "replace_known_left" (formula "13") (term "0,1,1,1,1,1") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "disjointDefinition" (formula "13") (term "0,1"))
   (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "5"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "disjointDefinition" (formula "13") (term "0,1"))
   (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "disjointDefinition" (formula "13") (term "0,1"))
   (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "disjointDefinition" (formula "13") (term "0,1"))
   (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "disjointDefinition" (formula "13") (term "0"))
   (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "Class_invariant_axiom_for_Disjoint" (formula "13") (ifseqformula "3"))
   (rule "closeTrue" (formula "13"))
)
)

}
