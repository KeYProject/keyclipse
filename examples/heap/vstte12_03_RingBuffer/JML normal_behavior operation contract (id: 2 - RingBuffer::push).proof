\settings {
"#Proof-Settings-Config-File
#Tue Nov 08 23:39:04 CET 2011
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\\:ban
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[View]HideIntermediateProofsteps=true
[View]HideClosedSubtrees=false
[General]UseOCL=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[View]ShowWholeTaclet=false
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMinimum=-2147483645
[General]StupidMode=true
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[General]OneStepSimplification=true
[General]UseJML=true
[SMTSettings]integersMaximum=2147483645
[General]DnDDirectionSensitive=true
[View]FontIndex=2
[View]UseSystemLookAndFeel=false
[SMTSettings]useUninterpretedMultiplication=true
[Strategy]MaximumNumberOfAutomaticApplications=50000
[View]MaxTooltipLines=40
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[SMTSettings]SelectedTaclets=
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[SMTSettings]explicitTypeHierarchy=false
"
}

\javaSource "src";

\rules {

 Axiom_def_modulo {
    \schemaVar \term RingBuffer r;
    \schemaVar \term Heap h;
    \schemaVar \term int x;

    \assumes (RingBuffer::exactInstance(r)=TRUE ==>)
    \find(RingBuffer::modulo(h, r, x))
    \replacewith(\if(x < length(int[]::select(h,r,RingBuffer::$data)))
                 \then(x)
                 \else(x-length(int[]::select(h,r,RingBuffer::$data))))

    \heuristics ( simplify )
  };

}

\chooseContract "JML normal_behavior operation contract [id: 2 / RingBuffer::push]";

\proof {
(keyLog "0" (keyUser "mattze" ) (keyVersion "b88cc7b75f75e95abe065dd5173efb1710172c68"))

(autoModeTime "5155")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "eqSymm" (formula "7") (term "1,0,0,1,0,1"))
(rule "translateJavaAddInt" (formula "7") (term "2,0,1,1,2,0,0,0,0,1,0,1"))
(rule "eqSymm" (formula "7") (term "0,0,0,0,1"))
(rule "Axiom_def_modulo" (formula "7") (term "0,1,1,2,0,0,0,0,1,0,1") (ifseqformula "3"))
(rule "polySimp_elimSub" (formula "7") (term "2,0,1,1,2,0,0,0,0,1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,1,1,2,0,0,0,0,1,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,1,1,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,1,2,0,0,0,0,1,0,1"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,1,1,2,0,0,0,0,1,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,1,1,2,0,0,0,0,1,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,1,1,2,0,0,0,0,1,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "0,0,0,1,1,2,0,0,0,0,1,0,1"))
(rule "Query_axiom_for_isFull_in_RingBuffer" (formula "6") (term "0") (inst "isFull_sk=isFull_sk_0") (inst "#self=r") (inst "#res=x") (ifseqformula "3"))
(rule "eqSymm" (formula "1") (term "0,1"))
(rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "7"))
(builtin "One Step Simplification" (formula "1"))
(rule "elementOfUnion" (formula "8") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "8") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "0,0,0,0,0,0,1,0,1"))
(rule "Class_invariant_axiom_for_RingBuffer" (formula "5") (inst "i=_var0") (inst "sk=sk_0") (ifseqformula "4"))
(branch "Use Axiom"
   (builtin "One Step Simplification" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "5"))
   (rule "notLeft" (formula "5"))
   (rule "translateJavaAddInt" (formula "11") (term "2,0,2,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_gtToGeq" (formula "6"))
   (rule "mul_literals" (formula "6") (term "1,0,0"))
   (rule "add_zero_right" (formula "6") (term "0,0"))
   (rule "inEqSimp_ltToLeq" (formula "8"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "9"))
   (rule "inEqSimp_commuteLeq" (formula "7"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
   (rule "mul_literals" (formula "6") (term "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8"))
   (rule "polySimp_mulComm0" (formula "8") (term "1"))
   (rule "polySimp_rightDist" (formula "8") (term "1"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
   (rule "mul_literals" (formula "8") (term "0,1"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1"))
   (rule "Axiom_def_modulo" (formula "11") (term "0,2,1,1,0") (ifseqformula "4"))
   (rule "eqSymm" (formula "11") (term "1,0"))
   (rule "polySimp_elimSub" (formula "11") (term "2,0,2,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,2,0,1,0"))
   (rule "polySimp_addComm1" (formula "11") (term "2,0,2,0,1,0"))
   (rule "polySimp_addComm0" (formula "11") (term "0,2,0,2,0,1,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,2,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,2,0,1,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,2,0,1,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,2,0,1,0"))
   (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,2,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,2,0,1,0"))
   (rule "mul_literals" (formula "11") (term "0,0,1,0,0,2,0,1,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,2,0,1,0"))
   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
   (rule "times_zero_1" (formula "7") (term "0,0"))
   (rule "add_zero_left" (formula "7") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "7"))
   (rule "mul_literals" (formula "7") (term "1"))
   (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
   (rule "times_zero_1" (formula "9") (term "0,0"))
   (rule "add_zero_left" (formula "9") (term "0"))
   (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "6"))
   (rule "leq_literals" (formula "9") (term "0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "nnf_imp2or" (formula "11") (term "0"))
   (rule "nnf_notAnd" (formula "11") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
   (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
   (rule "mul_literals" (formula "11") (term "1,0,0,0"))
   (rule "methodBodyExpand" (formula "1") (term "1") (newnames "heapBefore_isFull,savedHeapBefore_isFull"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_push,savedHeapBefore_push"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "variableDeclarationAssign" (formula "15") (term "1"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "pos"))
   (rule "returnUnfold" (formula "1") (term "1") (inst "#v0=x_1"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_1"))
   (rule "compound_equality_comparison_2" (formula "1") (term "1") (inst "#v1=x_3") (inst "#v0=x_2"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_2"))
   (rule "assignment" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_3"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "15") (term "1"))
   (rule "variableDeclarationAssign" (formula "15") (term "1"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "var"))
   (rule "assignmentAdditionInt" (formula "15") (term "1"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "translateJavaAddInt" (formula "15") (term "0,1,0"))
   (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_modulo,result_4,exc_7,heapAfter_modulo,anonHeap_modulo") (contract "JML normal_behavior operation contract [id: 6 / RingBuffer::modulo]"))
   (branch "Post (modulo)"
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "assignment" (formula "21") (term "1"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "blockEmpty" (formula "21") (term "1"))
      (rule "assignment_to_primitive_array_component" (formula "21"))
      (branch "Normal Execution (data != null)"
         (builtin "One Step Simplification" (formula "21"))
         (rule "assignment" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "eqSymm" (formula "16") (term "1"))
         (rule "translateJavaAddInt" (formula "16") (term "1,1,0"))
         (rule "translateJavaSubInt" (formula "16") (term "0,1"))
         (rule "polySimp_homoEq" (formula "15") (term "1"))
         (rule "polySimp_pullOutFactor3" (formula "16") (term "1,1,0"))
         (rule "polySimp_elimSub" (formula "16") (term "0,1"))
         (rule "polySimp_homoEq" (formula "16") (term "1"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0"))
         (rule "polySimp_mulAssoc" (formula "16") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0,1"))
         (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
         (rule "inEqSimp_commuteGeq" (formula "16") (term "0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "15") (term "0,0,1"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1"))
         (rule "polySimp_rightDist" (formula "16") (term "0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
         (rule "polySimp_sepPosMonomial" (formula "15") (term "1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1"))
         (rule "polySimp_mulAssoc" (formula "15") (term "0,1,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0,1,1"))
         (rule "polySimp_elimOne" (formula "15") (term "0,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
         (rule "polySimp_sepPosMonomial" (formula "16") (term "1"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1"))
         (rule "polySimp_rightDist" (formula "16") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1"))
         (rule "polySimp_elimOne" (formula "16") (term "1,0,1,1"))
         (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
         (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
         (rule "selectOfStore" (formula "21") (term "0,3,0,1,0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "selectOfAnonEQ" (formula "16") (term "0,0,0,1,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
         (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "16") (term "0,1,1,0"))
         (rule "mul_literals" (formula "16") (term "0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,0"))
         (rule "selectOfAnonEQ" (formula "21") (term "1,0,0,1,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "replace_known_left" (formula "21") (term "0,1,0,1,0,0,1,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "selectOfAnonEQ" (formula "15") (term "0,0,1,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
         (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "15") (term "0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,0"))
         (rule "mul_literals" (formula "15") (term "0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,0,1,1,0"))
         (rule "selectOfAnonEQ" (formula "16") (term "0,0,0,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
         (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0"))
         (rule "selectOfAnonEQ" (formula "21") (term "0,3,0,1,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "replace_known_right" (formula "21") (term "0,0,0,0,3,0,1,0") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "replace_known_left" (formula "21") (term "0,0,0,3,0,1,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "selectOfAnonEQ" (formula "16") (term "0,0,1") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
         (rule "polySimp_homoEq" (formula "16") (term "1"))
         (rule "polySimp_addComm1" (formula "16") (term "0,1"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,1"))
         (rule "polySimp_sepPosMonomial" (formula "16") (term "1"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1"))
         (rule "polySimp_rightDist" (formula "16") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1"))
         (rule "polySimp_elimOne" (formula "16") (term "1,0,1,1"))
         (rule "polySimp_mulAssoc" (formula "16") (term "0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,1"))
         (rule "polySimp_elimOne" (formula "16") (term "0,0,1,1"))
         (rule "Class_invariant_axiom_for_RingBuffer" (formula "17") (inst "i=_var3") (inst "sk=sk_3") (ifseqformula "4"))
         (branch "Use Axiom"
            (builtin "One Step Simplification" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "notLeft" (formula "17"))
            (rule "translateJavaAddInt" (formula "23") (term "2,0,2,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "20"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "18"))
            (rule "times_zero_1" (formula "18") (term "1,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "21"))
            (rule "inEqSimp_commuteLeq" (formula "22"))
            (rule "inEqSimp_commuteLeq" (formula "19"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18"))
            (rule "mul_literals" (formula "18") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0"))
            (rule "polySimp_elimOne" (formula "20") (term "0"))
            (rule "Axiom_def_modulo" (formula "23") (term "0,2,1,1,0") (ifseqformula "4"))
            (rule "eqSymm" (formula "23") (term "1,0"))
            (rule "polySimp_elimSub" (formula "23") (term "2,0,2,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,2,0,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,2,0,1,0"))
            (rule "polySimp_addComm1" (formula "23") (term "2,0,2,0,1,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,2,0,1,0"))
            (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,2,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,2,0,1,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,2,0,1,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,2,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,2,0,1,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,2,0,1,0"))
            (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,2,0,1,0"))
            (rule "mul_literals" (formula "23") (term "0,0,1,0,0,2,0,1,0"))
            (rule "selectOfAnonEQ" (formula "17") (term "1") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "26")) (ifInst ""  (formula "3")))
            (rule "selectOfAnonEQ" (formula "24") (term "0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "26")) (ifInst ""  (formula "3")) (ifInst ""  (formula "25")))
            (rule "false_right" (formula "24"))
            (rule "selectOfAnonEQ" (formula "21") (term "0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")) (ifInst ""  (formula "3")) (ifInst ""  (formula "9")))
            (rule "true_left" (formula "21"))
            (rule "selectOfAnonEQ" (formula "21") (term "1") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")) (ifInst ""  (formula "3")))
            (rule "selectOfAnonEQ" (formula "18") (term "0,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")) (ifInst ""  (formula "3")) (ifInst ""  (formula "6")))
            (rule "true_left" (formula "18"))
            (rule "selectOfAnonEQ" (formula "21") (term "1,1,1,0,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "23")) (ifInst ""  (formula "3")))
            (rule "selectOfAnonEQ" (formula "18") (term "0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")) (ifInst ""  (formula "3")) (ifInst ""  (formula "7")))
            (rule "true_left" (formula "18"))
            (rule "selectOfAnonEQ" (formula "18") (term "0,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "22")) (ifInst ""  (formula "3")))
            (rule "inEqSimp_homoInEq1" (formula "18"))
            (rule "polySimp_addComm1" (formula "18") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18"))
            (rule "polySimp_mulComm0" (formula "18") (term "1"))
            (rule "polySimp_rightDist" (formula "18") (term "1"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
            (rule "mul_literals" (formula "18") (term "0,1"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1"))
            (rule "selectOfAnonEQ" (formula "20") (term "0,0,1,0,2,0,2,0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "22")) (ifInst ""  (formula "3")))
            (rule "polySimp_addComm0" (formula "20") (term "0,2,0,2,0,1,0"))
            (rule "selectOfAnonEQ" (formula "17") (term "0,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "22")) (ifInst ""  (formula "3")) (ifInst ""  (formula "5")))
            (rule "true_left" (formula "17"))
            (rule "selectOfAnonEQ" (formula "18") (term "0,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "21")) (ifInst ""  (formula "3")))
            (rule "inEqSimp_commuteGeq" (formula "18"))
            (rule "selectOfAnonEQ" (formula "17") (term "0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")) (ifInst ""  (formula "8")))
            (rule "true_left" (formula "17"))
            (rule "selectOfAnonEQ" (formula "17") (term "0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "selectOfAnonEQ" (formula "17") (term "0,1,0,2,1,0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
            (rule "selectOfAnonEQ" (formula "17") (term "1,2,0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
            (rule "selectOfAnonEQ" (formula "17") (term "0,1,0,1,0,0,2,1,0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
            (rule "selectOfAnonEQ" (formula "17") (term "0,0,0,0,0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")) (ifInst ""  (formula "18")))
            (rule "ifthenelse_negated" (formula "17") (term "0,1,0"))
            (rule "selectOfAnonEQ" (formula "17") (term "0,1,0,2,1,0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
            (rule "selectOfAnonEQ" (formula "17") (term "1,0,0,0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
            (rule "selectOfAnonEQ" (formula "17") (term "0,1,0,1,0,0,2,1,0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
            (rule "selectOfAnonEQ" (formula "17") (term "1,0,2,0,2,1,0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
            (rule "selectOfAnonEQ" (formula "17") (term "0,1,1,0,0,2,1,0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
            (rule "polySimp_addComm1" (formula "17") (term "1,0,0,2,1,0,1,0"))
            (rule "selectOfAnonEQ" (formula "17") (term "1,0,2,0,2,2,0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
            (rule "selectOfAnonEQ" (formula "17") (term "0,1,1,0,0,2,2,0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
            (rule "polySimp_addComm1" (formula "17") (term "1,0,0,2,2,0,1,0"))
            (rule "selectOfAnonEQ" (formula "17") (term "0,1,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
            (rule "selectOfAnonEQ" (formula "17") (term "1,2,0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
            (rule "nnf_imp2or" (formula "17") (term "0"))
            (rule "nnf_notAnd" (formula "17") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
            (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
            (rule "mul_literals" (formula "17") (term "1,0,0,0"))
            (rule "boxToDiamond" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "assignment_read_length" (formula "17"))
            (branch "Normal Execution (data != null)"
               (builtin "One Step Simplification" (formula "17"))
               (rule "arrayLengthNotNegative" (formula "9") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "5"))
               (rule "leq_literals" (formula "9") (term "0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "lenNonNegative" (formula "4") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "4"))
               (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
               (rule "postincrement" (formula "21") (term "1"))
               (rule "ifthenelse_to_or_left" (formula "16") (term "1,0"))
               (rule "commute_or" (formula "16") (term "0,1,0"))
               (rule "commute_or" (formula "16") (term "1,1,0"))
               (rule "cnf_rightDist" (formula "16") (term "0"))
               (rule "distr_forallAnd" (formula "16"))
               (rule "andLeft" (formula "16"))
               (rule "commute_or_2" (formula "17") (term "0"))
               (rule "commute_or" (formula "17") (term "0,0"))
               (rule "shift_paren_or" (formula "16") (term "0"))
               (rule "compound_int_cast_expression" (formula "22") (term "1") (inst "#v=x"))
               (rule "variableDeclarationAssign" (formula "22") (term "1"))
               (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_4"))
               (rule "remove_parentheses_right" (formula "22") (term "1"))
               (rule "assignmentAdditionInt" (formula "22") (term "1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "translateJavaAddInt" (formula "22") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
               (rule "selectOfStore" (formula "22") (term "1,0,1,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "selectOfStore" (formula "22") (term "1,0,1,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "selectOfAnonEQ" (formula "22") (term "1,0,1,0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "replace_known_right" (formula "22") (term "0,0,0,1,0,1,0") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "replace_known_left" (formula "22") (term "0,0,1,0,1,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "widening_identity_cast_5" (formula "22") (term "1"))
               (rule "assignment" (formula "22") (term "1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "methodCallEmpty" (formula "22") (term "1"))
               (rule "tryEmpty" (formula "22") (term "1"))
               (rule "emptyModality" (formula "22") (term "1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "eqSymm" (formula "22") (term "1,0,0,1"))
               (rule "eqSymm" (formula "22") (term "0,0"))
               (rule "polySimp_addComm1" (formula "22") (term "2,0,1,1,1,0,0,0,0,1"))
               (rule "polySimp_addComm0" (formula "22") (term "0,2,0,1,1,1,0,0,0,0,1"))
               (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,1,1,1,0,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,1,1,0,0,0,0,1"))
               (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,1,1,1,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,1,1,1,0,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1,1,0,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,1,1,0,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,1,1,1,0,0,0,0,1"))
               (rule "mul_literals" (formula "22") (term "0,0,1,0,0,1,1,1,0,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,1,1,1,0,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "22") (term "1,0,1,0,0,1,1,1,0,0,0,0,1"))
               (rule "selectOfStore" (formula "22") (term "0,1,0,0,1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "eqSymm" (formula "22") (term "1,0,0,1,0,0,1"))
               (rule "eqSymm" (formula "22") (term "0,0,0,1,0,0,1"))
               (rule "castDel" (formula "22") (term "1,0,1,0,0,1"))
               (rule "selectOfStore" (formula "22") (term "2,0,1,0,0,1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "eqSymm" (formula "22") (term "1,0,2,0,1,0,0,1"))
               (rule "eqSymm" (formula "22") (term "0,0,2,0,1,0,0,1"))
               (rule "castDel" (formula "22") (term "1,2,0,1,0,0,1"))
               (rule "selectOfStore" (formula "22") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "selectOfStore" (formula "22") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "castDel" (formula "22") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "selectOfStore" (formula "22") (term "2,2,0,1,0,0,1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "eqSymm" (formula "22") (term "1,0,2,2,0,1,0,0,1"))
               (rule "eqSymm" (formula "22") (term "0,0,2,2,0,1,0,0,1"))
               (rule "castDel" (formula "22") (term "1,2,2,0,1,0,0,1"))
               (rule "selectOfAnonEQ" (formula "22") (term "2,2,2,0,1,0,0,1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "Class_invariant_axiom_for_RingBuffer" (formula "22") (term "0") (inst "i=_var4") (inst "sk=sk_4") (ifseqformula "3"))
               (branch "Use Axiom"
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "translateJavaAddInt" (formula "22") (term "2,0,2,1,1,0,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "22") (term "1,0,0,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,1,1,0,0,0"))
                  (rule "Axiom_def_modulo" (formula "22") (term "0,2,1,1,0,1,0") (ifseqformula "3"))
                  (rule "eqSymm" (formula "22") (term "1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "22") (term "2,0,2,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,2,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,2,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "2,0,2,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,2,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,2,0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,2,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,2,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,2,0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,2,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,2,0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,2,0,1,0,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,0,1,0,0,2,0,1,0,1,0"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "eqSymm" (formula "22") (term "1,0,0,0,0,0"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_homoInEq1" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,1,0,0,0"))
                  (rule "selectOfStore" (formula "22") (term "0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,1,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_commuteGeq" (formula "22") (term "1,1,0,0"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "castDelInt" (formula "22") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "1,0,1,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "22") (term "0,1,0,0") (ifseqformula "8"))
                  (rule "leq_literals" (formula "22") (term "0,0,1,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,1,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "1,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,2,0,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "1,1,1,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "castDelInt" (formula "22") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,0,1,0"))
                  (rule "add_literals" (formula "22") (term "0,1,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "22") (term "1,1,0,0,1,0"))
                  (rule "selectOfStore" (formula "22") (term "0,1,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "castDelInt" (formula "22") (term "0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0"))
                  (rule "selectOfStore" (formula "22") (term "0,1,0,1,0,0,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,0,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,0,1,0,0,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,1,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "castDelInt" (formula "22") (term "1,0,1,0,1,0"))
                  (rule "eqSymm" (formula "22") (term "0,0,0,1,0,1,0"))
                  (rule "eqSymm" (formula "22") (term "1,0,0,1,0,1,0"))
                  (rule "selectOfStore" (formula "22") (term "0,1,0,2,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,0,2,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,0,1,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,0,1,0,0,1,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "1,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,2,0,2,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "castDel" (formula "22") (term "0,1,1,0,0,0,0,0"))
                  (rule "lenOfSeqConcat" (formula "22") (term "1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "polySimp_addComm0" (formula "22") (term "1,1,0,0,0,0,0"))
                  (rule "applyEq" (formula "22") (term "1,1,1,0,0,0,0,0") (ifseqformula "4"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "1,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,0,1,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,2,0,1,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "castDel" (formula "22") (term "0,1,1,0,1,0"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,2,0,1,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "getOfSeqConcat" (formula "22") (term "1,1,0,1,0"))
                  (rule "eqSymm" (formula "22") (term "1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "22") (term "1,2,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "22") (term "1,2,0,1,0,1,0"))
                  (rule "applyEq" (formula "22") (term "0,0,1,2,0,1,0,1,0") (ifseqformula "4"))
                  (rule "applyEq" (formula "22") (term "0,1,0,0,0,0,1,0,1,0") (ifseqformula "4"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,1,0,1,0"))
                  (rule "eqSymm" (formula "22") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,1,0,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,1,1,0,1,0"))
                  (rule "getOfSeqSingleton" (formula "22") (term "2,1,1,0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "22") (term "0,2,1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,2,1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,0,2,1,1,0,1,0"))
                  (rule "castDel" (formula "22") (term "1,2,1,1,0,1,0"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,0,0,2,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_homoInEq0" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,1,0,0,0"))
                  (rule "selectOfStore" (formula "22") (term "0,0,2,0,1,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,2,0,2,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,2,0,2,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,0,0,2,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,2,0,2,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,0,1,0,0,2,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,0,0,1,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "castDelInt" (formula "22") (term "0,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,0,0,2,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,2,0,1,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,2,0,2,2,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,0,1,0,2,0,1,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,0,0,1,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfStore" (formula "22") (term "0,1,1,0,0,1,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,0,0,0,1,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,0,2,0,2,2,0,1,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,0,1,0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,0,2,0,0,0,1,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "selectOfAnonEQ" (formula "22") (term "1,2,0,1,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,1,0,1,0,0,0,0,1,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,1,0,0,0,1,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "selectOfAnonEQ" (formula "22") (term "1,1,1,1,0,0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,0,1,0,0,0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")) (ifInst ""  (formula "5")))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,0,1,1,0,0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "inEqSimp_homoInEq1" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,1,0,0,0"))
                  (rule "replace_known_left" (formula "22") (term "1,1,0,0,0") (ifseqformula "7"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,1,0,2,2,0,1,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,1,1,0,0,0,0,1,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "polySimp_addComm1" (formula "22") (term "1,0,0,0,0,1,0,1,0"))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,1,1,0,0,2,2,0,1,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "polySimp_addComm1" (formula "22") (term "1,0,0,2,2,0,1,0,1,0"))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,0,1,0,2,0,2,2,0,1,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "polySimp_addComm0" (formula "22") (term "0,2,0,2,2,0,1,0,1,0"))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,0,0,0,0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")) (ifInst ""  (formula "19")))
                  (rule "selectOfAnonEQ" (formula "22") (term "2,0,1,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "19")))
                  (rule "ifthenelse_negated" (formula "22") (term "2,0,1,0,1,0"))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,1,1,0,0,2,2,2,0,1,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,0,0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,1,1,0,0,2,1,2,0,1,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "eqSymm" (formula "22") (term "1,0,1,0"))
                  (rule "selectOfAnonEQ" (formula "22") (term "0,0,1,0,2,0,0,1,1,0,1,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
                  (rule "polySimp_addComm0" (formula "22") (term "0,2,0,0,1,1,0,1,0"))
                  (rule "nnf_imp2or" (formula "22") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "22") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "22") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0"))
                  (rule "equality_comparison_new" (formula "18") (term "1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "assignment" (formula "18") (term "1,1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "assignment" (formula "18") (term "1,2"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "ifthenelse_negated_for" (formula "18"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,1") (ifseqformula "1"))
                  (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "replace_known_left" (formula "21") (term "0,2,1,1,0,1,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "ifthenelse_split_for" (formula "17"))
                  (branch "self_6.len = self_6.data.length TRUE"
                     (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,1,0"))
                     (rule "applyEq" (formula "22") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,0"))
                     (rule "qeq_literals" (formula "22") (term "0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "false_right" (formula "22"))
                     (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "1"))
                     (rule "polySimp_homoEq" (formula "16") (term "1"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                     (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "1"))
                     (rule "inEqSimp_commuteGeq" (formula "16") (term "0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "11"))
                     (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                     (rule "add_literals" (formula "11") (term "1,0"))
                     (rule "times_zero_1" (formula "11") (term "0"))
                     (rule "qeq_literals" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "16") (term "0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "1,0,0,0,0"))
                     (rule "times_zero_1" (formula "16") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,0"))
                     (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,1,0"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,0,0,1,0"))
                     (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "1"))
                     (rule "polySimp_homoEq" (formula "16") (term "1"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "16") (term "0,0,1"))
                     (rule "applyEq" (formula "5") (term "1") (ifseqformula "1"))
                     (rule "polySimp_sepNegMonomial" (formula "15") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "16") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "16") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
                     (rule "inEqSimp_invertInEq0" (formula "16") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                     (rule "times_zero_2" (formula "16") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                     (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                     (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "applyEq" (formula "11") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "16"))
                     (rule "polySimp_addComm1" (formula "11") (term "1,0,0,2,0,1,0"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "16"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq0" (formula "8"))
                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                     (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "16"))
                     (rule "polySimp_homoEq" (formula "15") (term "1"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                     (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "0,0,1"))
                     (rule "add_zero_left" (formula "15") (term "0,1"))
                     (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "16"))
                     (rule "inEqSimp_commuteGeq" (formula "15") (term "0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                     (rule "applyEq" (formula "11") (term "0,1,0,2,0,1,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "11") (term "1,0,2,0,2,0,1,0") (ifseqformula "16"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,2,0,2,0,1,0"))
                     (rule "polySimp_invertEq" (formula "15") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,1"))
                     (rule "times_zero_2" (formula "15") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "15") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                     (rule "mul_literals" (formula "8") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
                     (rule "inEqSimp_contradEq7" (formula "15") (term "1") (ifseqformula "6"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                     (rule "add_literals" (formula "15") (term "0,0,1"))
                     (rule "leq_literals" (formula "15") (term "0,1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "notLeft" (formula "15"))
                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "6"))
                     (rule "leq_literals" (formula "9") (term "0"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "15") (term "0,1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "false_right" (formula "15"))
                     (rule "methodCallReturn" (formula "15") (term "1"))
                     (rule "assignment" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "emptyModality" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "closeTrue" (formula "15"))
                  )
                  (branch "self_6.len = self_6.data.length FALSE"
                     (rule "inEqSimp_strengthen0" (formula "10") (ifseqformula "17"))
                     (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "10"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0"))
                     (rule "qeq_literals" (formula "17") (term "0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "false_right" (formula "17"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "10"))
                     (rule "times_zero_1" (formula "8") (term "0,0"))
                     (rule "add_zero_left" (formula "8") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1"))
                     (rule "methodCallReturn" (formula "17") (term "1"))
                     (rule "assignment" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "methodCallEmpty" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "emptyModality" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "false_right" (formula "17"))
                     (rule "andRight" (formula "20"))
                     (branch "Case 1"
                        (rule "allRight" (formula "20") (inst "sk=_var4_0"))
                        (rule "orRight" (formula "20"))
                        (rule "orRight" (formula "20"))
                        (rule "eqSymm" (formula "22") (term "0,2,0"))
                        (rule "inEqSimp_leqRight" (formula "20"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "21"))
                        (rule "polySimp_addComm0" (formula "22") (term "1,0,0,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "2,0,0,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "2,0,2,2,1"))
                        (rule "polySimp_addComm0" (formula "22") (term "1,0,2,2,1"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,2,0,0,1"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,2,0,2,2,1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,2,2,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0,2,2,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,2,2,1"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,1"))
                        (rule "eqSymm" (formula "22"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0,2,2,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,2,2,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,0,0,2,2,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,1"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "12"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "cut_direct" (formula "19") (term "0,0"))
                        (branch "CUT: self_6.len >= self_6.data.length + self_6.first * -1 TRUE"
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "18") (term "0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0,1,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "18") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "18") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "13"))
                           (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                           (rule "mul_literals" (formula "18") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "18"))
                           (rule "leq_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "9"))
                           (rule "mul_literals" (formula "17") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "17"))
                           (rule "leq_literals" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "ifthenelse_split" (formula "23") (term "2,1"))
                           (branch "self_6.len = _var4_0 TRUE"
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,0"))
                              (rule "times_zero_1" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "1"))
                              (rule "polySimp_homoEq" (formula "19") (term "1"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "11"))
                              (rule "polySimp_addComm1" (formula "11") (term "0"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "18"))
                              (rule "polySimp_addComm1" (formula "18") (term "0"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                              (rule "applyEq" (formula "22") (term "0,0,1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "22") (term "0,0,1"))
                              (rule "leq_literals" (formula "22") (term "0,1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "applyEq" (formula "7") (term "1") (ifseqformula "1"))
                              (rule "polySimp_sepNegMonomial" (formula "18") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1"))
                              (rule "polySimp_rightDist" (formula "10") (term "1"))
                              (rule "mul_literals" (formula "10") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                              (rule "polySimp_elimOne" (formula "16") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,0,0") (ifseqformula "16"))
                              (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,0,1,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0"))
                              (rule "leq_literals" (formula "21") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "polySimp_homoEq" (formula "21") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "21") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0,2,2,0") (ifseqformula "16"))
                              (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0,2,2,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,2,2,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,2,2,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0,0,0,2,2,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,0,0,2,2,0"))
                              (rule "mul_literals" (formula "21") (term "0,0,1,0,0,0,0,2,2,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,0,1,0,0,0,0,2,2,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,2,2,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,2,2,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0,2,2,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,2,2,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,2,2,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0,0,0,2,2,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,2,2,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0,2,2,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,0,0,0,2,2,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,2,2,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,2,2,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0,0,0,2,2,0"))
                              (rule "leq_literals" (formula "21") (term "0,0,0,2,2,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "8"))
                              (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                              (rule "polySimp_mulAssoc" (formula "16") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "16") (term "0"))
                              (rule "add_literals" (formula "16") (term "1,1,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0"))
                              (rule "add_zero_right" (formula "16") (term "0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "mul_literals" (formula "16") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "16"))
                              (rule "leq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "cut_direct" (formula "17") (term "0"))
                              (branch "CUT: self_6.first <= -1 + _var4_0 * -1 + self_6.data.length * 2 TRUE"
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "replace_known_left" (formula "22") (term "0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "closeTrue" (formula "22"))
                              )
                              (branch "CUT: self_6.first <= -1 + _var4_0 * -1 + self_6.data.length * 2 FALSE"
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_leqRight" (formula "17"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "8"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0"))
                                 (rule "add_literals" (formula "4") (term "0"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch "self_6.len = _var4_0 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "23"))
                              (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0"))
                              (rule "leq_literals" (formula "23") (term "0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "false_right" (formula "23"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "cut_direct" (formula "19") (term "0"))
                              (branch "CUT: self_6.len <= -1 + self_6.data.length * 2 + self_6.first * -1 TRUE"
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "applyEq" (formula "9") (term "0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "18") (term "0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "20"))
                                 (rule "inEqSimp_homoInEq0" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0"))
                                 (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                 (rule "inEqSimp_homoInEq0" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,0"))
                                 (rule "applyEq" (formula "7") (term "1") (ifseqformula "20"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "0"))
                                 (rule "inEqSimp_invertInEq0" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1"))
                                 (rule "mul_literals" (formula "11") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0,1"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1"))
                                 (rule "mul_literals" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "8"))
                                 (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                 (rule "mul_literals" (formula "11") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "11"))
                                 (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0"))
                                 (rule "qeq_literals" (formula "20") (term "0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "9"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "12") (term "0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "18") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                 (rule "mul_literals" (formula "12") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "9"))
                                 (rule "mul_literals" (formula "19") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1"))
                                 (rule "mul_literals" (formula "19") (term "0,1"))
                                 (rule "ifthenelse_split" (formula "26") (term "0"))
                                 (branch " if ( self_6.first <= -1 + _var4_0 * -1 + self_6.data.length) then (_var4_0 + self_6.first) else ( _var4_0 + self_6.data.length * -1 + self_6.first) = result_4 TRUE"
                                    (rule "eqSymm" (formula "27"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "self_6.first <= -1 + _var4_0 * -1 + self_6.data.length TRUE"
                                       (rule "polySimp_homoEq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0"))
                                       (rule "applyEq" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "15") (term "0,1,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0,1,1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0,0,1,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,1,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,1,1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,1,1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,1,1,0,0"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "10"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "10") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                       (rule "applyEq" (formula "15") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,2,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,2,0,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "15") (term "0,1,1,0,0,2,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,1,0,0,2,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,1,1,0,0,2,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0,1,1,0,0,2,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "1,0,0,2,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0,2,0,1,0"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,2,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "15") (term "1,0,2,0,2,0,1,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0,2,0,2,0,1,0"))
                                       (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,1"))
                                       (rule "polySimp_mulAssoc" (formula "9") (term "0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "9") (term "0,1,1"))
                                       (rule "polySimp_addComm1" (formula "9") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "9") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,1"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "9") (term "0,1"))
                                       (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "2"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                       (rule "polySimp_mulAssoc" (formula "24") (term "0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0,1,1"))
                                       (rule "polySimp_addComm1" (formula "24") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "24") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                                       (rule "mul_literals" (formula "10") (term "0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                    (branch "self_6.first <= -1 + _var4_0 * -1 + self_6.data.length FALSE"
                                       (rule "polySimp_homoEq" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "inEqSimp_leqRight" (formula "24"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "11") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0"))
                                       (rule "add_zero_right" (formula "11") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0"))
                                       (rule "add_zero_right" (formula "11") (term "0"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "0,1,1,1,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "13") (term "0,0,1,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,1,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,0,1,1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "13") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,1,1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "0,1,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "13") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,1,1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "13") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,2,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,2,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "0,1,1,0,0,2,0,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "13") (term "0,0,1,1,0,0,2,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,1,1,0,0,2,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,1,0,0,2,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,0,1,1,0,0,2,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "1,0,0,2,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,2,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "13") (term "1,0,0,2,0,1,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,1,0,0,2,0,1,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,1,0,0,2,0,1,0"))
                                       (rule "add_zero_right" (formula "13") (term "1,0,0,2,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "1,0,0,2,0,1,0"))
                                       (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "9") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0"))
                                       (rule "add_zero_right" (formula "9") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "12") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "20") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "3") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "qeq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch " if ( self_6.first <= -1 + _var4_0 * -1 + self_6.data.length) then (_var4_0 + self_6.first) else ( _var4_0 + self_6.data.length * -1 + self_6.first) = result_4 FALSE"
                                    (rule "allLeft" (formula "13") (inst "t=_var4_0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0,1"))
                                    (rule "polySimp_addComm1" (formula "13") (term "2,0,2,0,1"))
                                    (rule "polySimp_addComm0" (formula "13") (term "0,2,0,2,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,2,0,1"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,2,0,1"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,2,0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0,2,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,2,0,1"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0,0,0,2,0,1"))
                                    (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "13") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "13") (term "0,0,1"))
                                    (rule "leq_literals" (formula "13") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "13") (term "0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "closeFalse" (formula "13"))
                                 )
                              )
                              (branch "CUT: self_6.len <= -1 + self_6.data.length * 2 + self_6.first * -1 FALSE"
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "inEqSimp_leqRight" (formula "19"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "12"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "1"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "inEqSimp_homoInEq1" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0"))
                                 (rule "add_literals" (formula "10") (term "0"))
                                 (rule "leq_literals" (formula "10"))
                                 (rule "closeFalse" (formula "10"))
                              )
                           )
                        )
                        (branch "CUT: self_6.len >= self_6.data.length + self_6.first * -1 FALSE"
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "inEqSimp_geqRight" (formula "19"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                           (rule "mul_literals" (formula "1") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                           (rule "replace_known_left" (formula "19") (term "1,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "replace_known_left" (formula "24") (term "0,0,2,2,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "3")))
                           (rule "eqSymm" (formula "24"))
                           (rule "polySimp_homoEq" (formula "24") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                           (rule "polySimp_sepNegMonomial" (formula "24") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "24") (term "0,0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "13") (term "0,0"))
                           (rule "add_zero_left" (formula "13") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "3"))
                           (rule "times_zero_1" (formula "11") (term "0,0"))
                           (rule "add_zero_left" (formula "11") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1"))
                           (rule "polySimp_rightDist" (formula "11") (term "1"))
                           (rule "mul_literals" (formula "11") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                           (rule "cut_direct" (formula "20") (term "0"))
                           (branch "CUT: self_6.len >= self_6.first * -1 TRUE"
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "21"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq0" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                              (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq1" (formula "20"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "20") (term "0"))
                              (rule "add_literals" (formula "20") (term "1,1,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0"))
                              (rule "add_zero_right" (formula "20") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "applyEq" (formula "25") (term "0,0,2,0") (ifseqformula "21"))
                              (rule "polySimp_homoEq" (formula "25") (term "0,2,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,2,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,2,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,2,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,2,0"))
                              (rule "applyEq" (formula "9") (term "1") (ifseqformula "21"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                              (rule "mul_literals" (formula "15") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,0,1"))
                              (rule "polySimp_sepPosMonomial" (formula "25") (term "0,2,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,2,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,2,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,2,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,0,1,0,0"))
                              (rule "inEqSimp_invertInEq0" (formula "20"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                              (rule "times_zero_2" (formula "20") (term "1"))
                              (rule "polySimp_elimOne" (formula "20") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "3"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                              (rule "polySimp_pullOutFactor3b" (formula "15") (term "0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                              (rule "mul_literals" (formula "15") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "4"))
                              (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1"))
                              (rule "polySimp_rightDist" (formula "16") (term "1"))
                              (rule "mul_literals" (formula "16") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "13"))
                              (rule "times_zero_1" (formula "11") (term "0,0"))
                              (rule "add_zero_left" (formula "11") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "12"))
                              (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                              (rule "polySimp_pullOutFactor3b" (formula "16") (term "0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1"))
                              (rule "polySimp_rightDist" (formula "16") (term "1"))
                              (rule "mul_literals" (formula "16") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "13"))
                              (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "polySimp_rightDist" (formula "17") (term "0,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "4"))
                              (rule "mul_literals" (formula "11") (term "0,0"))
                              (rule "add_zero_left" (formula "11") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1"))
                              (rule "polySimp_elimOne" (formula "11") (term "1"))
                              (rule "ifthenelse_split" (formula "28") (term "1"))
                              (branch "self_6.first = _var4_0 * -1 + result_4 TRUE"
                                 (rule "replace_known_left" (formula "29") (term "0,2,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                 (rule "applyEq" (formula "20") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,2,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,2,0,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "20") (term "0,1,1,0,0,2,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,1,0,0,2,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,0,0,2,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,1,1,0,0,2,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "1,0,0,2,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0,2,0,1,0"))
                                 (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "20") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,1,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,1,1,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "1,1,0,0"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "1,0"))
                                 (rule "times_zero_1" (formula "5") (term "0"))
                                 (rule "qeq_literals" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "28") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "closeTrue" (formula "28"))
                              )
                              (branch "self_6.first = _var4_0 * -1 + result_4 FALSE"
                                 (rule "replace_known_right" (formula "29") (term "0,2,0") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "28"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                 (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_contradEq3" (formula "28") (ifseqformula "4"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,0"))
                                 (rule "qeq_literals" (formula "28") (term "0"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "false_right" (formula "28"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "18"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "3"))
                                 (rule "times_zero_1" (formula "11") (term "0,0"))
                                 (rule "add_zero_left" (formula "11") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                 (rule "mul_literals" (formula "11") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "11"))
                                 (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0"))
                                 (rule "qeq_literals" (formula "10") (term "0"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "allLeft" (formula "19") (inst "t=_var4_0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "2,0,2,0,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,0,2,0,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,2,0,2,0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0,2,0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,2,0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,2,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,0,2,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,2,0,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,0,0,2,0,1"))
                                 (rule "replace_known_left" (formula "19") (term "0,0,2,0,1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "eqSymm" (formula "19") (term "1"))
                                 (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,1"))
                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "19"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch "CUT: self_6.len >= self_6.first * -1 FALSE"
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_geqRight" (formula "20"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "15") (term "0,0"))
                              (rule "add_zero_left" (formula "15") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "13"))
                              (rule "qeq_literals" (formula "15") (term "0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "closeFalse" (formula "15"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "20") (inst "sk=f_0"))
                        (rule "allRight" (formula "20") (inst "sk=o_0"))
                        (rule "orRight" (formula "20"))
                        (rule "orRight" (formula "20"))
                        (rule "orRight" (formula "20"))
                        (rule "orRight" (formula "20"))
                        (rule "eqSymm" (formula "22") (term "1"))
                        (rule "replace_known_right" (formula "24") (term "0,2,0") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "20")) (ifInst ""  (formula "23")))
                        (rule "commute_and" (formula "24") (term "0,0"))
                        (rule "cut_direct" (formula "16") (term "0,0"))
                        (branch "CUT: self_6.len >= self_6.data.length + self_6.first * -1 TRUE"
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0,0,1") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0,0,0,1"))
                           (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,0,0,0,0,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,0,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1"))
                           (rule "leq_literals" (formula "23") (term "0,0,0,0,1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "eqSymm" (formula "23") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "15") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "15") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "10"))
                           (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                           (rule "mul_literals" (formula "15") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "15"))
                           (rule "leq_literals" (formula "6") (term "0"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "6"))
                           (rule "mul_literals" (formula "14") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0"))
                           (rule "add_literals" (formula "14") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                           (rule "mul_literals" (formula "14") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "14"))
                           (rule "leq_literals" (formula "5") (term "0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "ifthenelse_split" (formula "24") (term "0"))
                           (branch "f_0 = arr(result_4) & o_0 = self_6.data TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "26"))
                              (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "26") (term "2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "polySimp_homoEq" (formula "24"))
                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "0,0,0"))
                              (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "false_right" (formula "23"))
                              (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "false_right" (formula "22"))
                              (rule "applyEq" (formula "23") (term "0,0,0") (ifseqformula "2"))
                              (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "notRight" (formula "23"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                              (rule "polySimp_sepPosMonomial" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1"))
                              (rule "polySimp_rightDist" (formula "22") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,0,1"))
                              (rule "polySimp_mulAssoc" (formula "22") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                              (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "notLeft" (formula "18"))
                              (rule "inEqSimp_leqRight" (formula "18"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "9"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "f_0 = arr(result_4) & o_0 = self_6.data FALSE"
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "closeTrue" (formula "25"))
                           )
                        )
                        (branch "CUT: self_6.len >= self_6.data.length + self_6.first * -1 FALSE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "inEqSimp_geqRight" (formula "16"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                           (rule "mul_literals" (formula "1") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                           (rule "replace_known_left" (formula "22") (term "0,0,0,1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "eqSymm" (formula "22") (term "1"))
                           (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "9") (term "0,0"))
                           (rule "add_zero_left" (formula "9") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                           (rule "polySimp_elimOne" (formula "9") (term "0"))
                           (rule "ifthenelse_split" (formula "24") (term "0"))
                           (branch "f_0 = arr(result_4) & o_0 = self_6.data TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "26"))
                              (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "applyEq" (formula "26") (term "2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "1,0,0,1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "25") (term "0,1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "false_right" (formula "25"))
                              (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "false_right" (formula "22"))
                              (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "false_right" (formula "22"))
                              (rule "applyEq" (formula "22") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "polySimp_homoEq" (formula "22"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1"))
                              (rule "polySimp_rightDist" (formula "22") (term "1"))
                              (rule "polySimp_mulAssoc" (formula "22") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "22") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,1"))
                              (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "notLeft" (formula "18"))
                              (rule "inEqSimp_geqRight" (formula "18"))
                              (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "narrowSelectArrayType" (formula "23") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "12") (term "0,0"))
                              (rule "add_zero_left" (formula "12") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "12"))
                              (rule "qeq_literals" (formula "10") (term "0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "closeFalse" (formula "10"))
                           )
                           (branch "f_0 = arr(result_4) & o_0 = self_6.data FALSE"
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "closeTrue" (formula "25"))
                           )
                        )
                     )
                  )
               )
               (branch "Show Axiom Satisfiability"
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "closeTrue" (formula "22"))
               )
            )
            (branch "Null Reference (data = null)"
               (builtin "One Step Simplification" (formula "18"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Show Axiom Satisfiability"
            (builtin "One Step Simplification" (formula "18"))
            (rule "closeTrue" (formula "18"))
         )
      )
      (branch "Null Reference (data = null)"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "false_right" (formula "22"))
         (rule "eqSymm" (formula "17") (term "1"))
         (rule "translateJavaAddInt" (formula "17") (term "1,1,0"))
         (rule "translateJavaSubInt" (formula "17") (term "0,1"))
         (rule "polySimp_homoEq" (formula "16") (term "1"))
         (rule "polySimp_pullOutFactor3" (formula "17") (term "1,1,0"))
         (rule "polySimp_elimSub" (formula "17") (term "0,1"))
         (rule "polySimp_homoEq" (formula "17") (term "1"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0"))
         (rule "polySimp_mulAssoc" (formula "17") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,1"))
         (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
         (rule "inEqSimp_commuteGeq" (formula "17") (term "0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "16") (term "0,0,1"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1"))
         (rule "polySimp_rightDist" (formula "17") (term "0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
         (rule "applyEq" (formula "16") (term "0,0,1,0,1,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0"))
         (rule "applyEq" (formula "17") (term "0,0,0,0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
         (rule "applyEq" (formula "17") (term "0,0,1,0,1,0") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0"))
         (rule "applyEq" (formula "17") (term "0,1,0,1") (ifseqformula "1"))
         (rule "polySimp_addComm1" (formula "17") (term "0,1"))
         (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
         (rule "polySimp_sepPosMonomial" (formula "16") (term "1"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1"))
         (rule "polySimp_mulAssoc" (formula "16") (term "0,1,1"))
         (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0,1,1"))
         (rule "polySimp_elimOne" (formula "16") (term "0,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
         (rule "polySimp_sepNegMonomial" (formula "17") (term "1"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
         (rule "polySimp_elimOne" (formula "17") (term "0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "16") (term "0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,0"))
         (rule "mul_literals" (formula "16") (term "0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "17") (term "0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1,0"))
         (rule "mul_literals" (formula "17") (term "0,0,1,1,0"))
         (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")) (ifInst ""  (formula "19")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (data != null, but pos Out of Bounds!)"
         (builtin "One Step Simplification" (formula "22"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "false_right" (formula "22"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "eqSymm" (formula "17") (term "1"))
         (rule "translateJavaAddInt" (formula "17") (term "1,1,0"))
         (rule "translateJavaSubInt" (formula "17") (term "0,1"))
         (rule "polySimp_homoEq" (formula "16") (term "1"))
         (rule "polySimp_pullOutFactor3" (formula "17") (term "1,1,0"))
         (rule "polySimp_elimSub" (formula "17") (term "0,1"))
         (rule "polySimp_homoEq" (formula "17") (term "1"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0"))
         (rule "polySimp_mulAssoc" (formula "17") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,1"))
         (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
         (rule "inEqSimp_commuteGeq" (formula "17") (term "0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1"))
         (rule "polySimp_addComm0" (formula "16") (term "0,0,1"))
         (rule "polySimp_rightDist" (formula "17") (term "0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
         (rule "polySimp_sepPosMonomial" (formula "16") (term "1"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1"))
         (rule "polySimp_mulAssoc" (formula "16") (term "0,1,1"))
         (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0,1,1"))
         (rule "polySimp_elimOne" (formula "16") (term "0,1,1"))
         (rule "polySimp_sepPosMonomial" (formula "17") (term "1"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
         (rule "polySimp_rightDist" (formula "17") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1"))
         (rule "polySimp_elimOne" (formula "17") (term "1,0,1,1"))
         (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
         (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
         (rule "selectOfAnonEQ" (formula "19") (term "0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "21")) (ifInst ""  (formula "4")) (ifInst ""  (formula "20")))
         (rule "false_right" (formula "19"))
         (rule "selectOfAnonEQ" (formula "16") (term "0,0,1,0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
         (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "16") (term "0,1,1,0"))
         (rule "mul_literals" (formula "16") (term "0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,0,1,1,0"))
         (rule "selectOfAnonEQ" (formula "17") (term "0,0,1") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
         (rule "polySimp_homoEq" (formula "17") (term "1"))
         (rule "polySimp_addComm1" (formula "17") (term "0,1"))
         (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
         (rule "polySimp_sepPosMonomial" (formula "17") (term "1"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1"))
         (rule "polySimp_rightDist" (formula "17") (term "0,1,1"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1"))
         (rule "polySimp_elimOne" (formula "17") (term "1,0,1,1"))
         (rule "polySimp_mulAssoc" (formula "17") (term "0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "17") (term "0,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,1"))
         (rule "polySimp_elimOne" (formula "17") (term "0,0,1,1"))
         (rule "selectOfAnonEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
         (rule "selectOfAnonEQ" (formula "17") (term "0,0,0,1,0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
         (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "17") (term "0,1,1,0"))
         (rule "mul_literals" (formula "17") (term "0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,1,0"))
         (rule "selectOfAnonEQ" (formula "17") (term "0,0,0,0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
         (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
         (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
         (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0"))
         (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0"))
         (rule "Class_invariant_axiom_for_RingBuffer" (formula "18") (inst "i=_var2") (inst "sk=sk_2") (ifseqformula "5"))
         (branch "Use Axiom"
            (builtin "One Step Simplification" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "18"))
            (rule "notLeft" (formula "18"))
            (rule "translateJavaAddInt" (formula "24") (term "2,0,2,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "19"))
            (rule "times_zero_1" (formula "19") (term "1,0,0"))
            (rule "add_zero_right" (formula "19") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "21"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "22"))
            (rule "inEqSimp_commuteLeq" (formula "23"))
            (rule "inEqSimp_commuteLeq" (formula "20"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19"))
            (rule "mul_literals" (formula "19") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "21"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0"))
            (rule "polySimp_elimOne" (formula "21") (term "0"))
            (rule "Axiom_def_modulo" (formula "24") (term "0,2,1,1,0") (ifseqformula "5"))
            (rule "eqSymm" (formula "24") (term "1,0"))
            (rule "polySimp_elimSub" (formula "24") (term "2,0,2,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,2,0,1,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,2,0,1,0"))
            (rule "polySimp_addComm1" (formula "24") (term "2,0,2,0,1,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,2,0,1,0"))
            (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,2,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,2,0,1,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,2,0,1,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,2,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,2,0,1,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,2,0,1,0"))
            (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,2,0,1,0"))
            (rule "mul_literals" (formula "24") (term "0,0,1,0,0,2,0,1,0"))
            (rule "selectOfAnonEQ" (formula "25") (term "0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "27")) (ifInst ""  (formula "4")) (ifInst ""  (formula "26")))
            (rule "false_right" (formula "25"))
            (rule "selectOfAnonEQ" (formula "23") (term "1") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "26")) (ifInst ""  (formula "4")))
            (rule "selectOfAnonEQ" (formula "22") (term "0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "26")) (ifInst ""  (formula "4")) (ifInst ""  (formula "10")))
            (rule "true_left" (formula "22"))
            (rule "selectOfAnonEQ" (formula "18") (term "1") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "25")) (ifInst ""  (formula "4")))
            (rule "selectOfAnonEQ" (formula "19") (term "0,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "25")) (ifInst ""  (formula "4")) (ifInst ""  (formula "7")))
            (rule "true_left" (formula "19"))
            (rule "selectOfAnonEQ" (formula "22") (term "1,1,1,0,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "24")) (ifInst ""  (formula "4")))
            (rule "selectOfAnonEQ" (formula "19") (term "0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")) (ifInst ""  (formula "4")) (ifInst ""  (formula "8")))
            (rule "true_left" (formula "19"))
            (rule "selectOfAnonEQ" (formula "19") (term "1,1") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
            (rule "selectOfAnonEQ" (formula "21") (term "0,0,2,0,2,0,1,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
            (rule "selectOfAnonEQ" (formula "18") (term "0,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")) (ifInst ""  (formula "6")))
            (rule "true_left" (formula "18"))
            (rule "selectOfAnonEQ" (formula "19") (term "0,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "22")) (ifInst ""  (formula "4")))
            (rule "inEqSimp_commuteGeq" (formula "19"))
            (rule "selectOfAnonEQ" (formula "18") (term "0,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "21")) (ifInst ""  (formula "4")))
            (rule "inEqSimp_homoInEq1" (formula "18"))
            (rule "polySimp_addComm1" (formula "18") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18"))
            (rule "polySimp_mulComm0" (formula "18") (term "1"))
            (rule "polySimp_rightDist" (formula "18") (term "1"))
            (rule "mul_literals" (formula "18") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1"))
            (rule "selectOfAnonEQ" (formula "18") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
            (rule "polySimp_addComm1" (formula "18") (term "1,0,0,2,0,1,0"))
            (rule "selectOfAnonEQ" (formula "18") (term "0,1,0,2,0,1,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
            (rule "selectOfAnonEQ" (formula "18") (term "0,1,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "selectOfAnonEQ" (formula "18") (term "0,0,1,0,2,0,2,1,0,1,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
            (rule "polySimp_addComm0" (formula "18") (term "0,2,0,2,1,0,1,0"))
            (rule "selectOfAnonEQ" (formula "18") (term "1,0,0,1,0,0,1,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
            (rule "selectOfAnonEQ" (formula "18") (term "0,0,1,0,2,0,2,2,0,1,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
            (rule "polySimp_addComm0" (formula "18") (term "0,2,0,2,2,0,1,0"))
            (rule "selectOfAnonEQ" (formula "18") (term "0,1,1,0,0,2,2,0,1,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
            (rule "selectOfAnonEQ" (formula "18") (term "1,2,0,1,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
            (rule "selectOfAnonEQ" (formula "18") (term "0,1,1,0,0,2,1,0,1,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
            (rule "selectOfAnonEQ" (formula "18") (term "0,0,0,0,0,1,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")) (ifInst ""  (formula "19")))
            (rule "ifthenelse_negated" (formula "18") (term "0,1,0"))
            (rule "selectOfAnonEQ" (formula "18") (term "1,2,0,1,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
            (rule "selectOfAnonEQ" (formula "18") (term "0,1,1,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
            (rule "nnf_imp2or" (formula "18") (term "0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0"))
            (rule "boxToDiamond" (formula "2") (term "1"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "notLeft" (formula "2"))
            (rule "assignment_read_length" (formula "18"))
            (branch "Normal Execution (data != null)"
               (builtin "One Step Simplification" (formula "18"))
               (rule "arrayLengthNotNegative" (formula "10") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "6"))
               (rule "leq_literals" (formula "10") (term "0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "lenNonNegative" (formula "5") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "5"))
               (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
               (rule "ifthenelse_to_or_left" (formula "17") (term "1,0"))
               (rule "commute_or" (formula "17") (term "1,1,0"))
               (rule "commute_or" (formula "17") (term "0,1,0"))
               (rule "cnf_rightDist" (formula "17") (term "0"))
               (rule "distr_forallAnd" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "commute_or_2" (formula "18") (term "0"))
               (rule "commute_or" (formula "18") (term "0,0"))
               (rule "shift_paren_or" (formula "17") (term "0"))
               (rule "equality_comparison_new" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "assignment" (formula "19") (term "1,2"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "assignment" (formula "19") (term "1,1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "ifthenelse_negated_for" (formula "19"))
               (rule "ifthenelse_split_for" (formula "19"))
               (branch "self_6.len = self_6.data.length TRUE"
                  (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "1"))
                  (rule "inEqSimp_commuteGeq" (formula "16") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                  (rule "applyEq" (formula "19") (term "1,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "11"))
                  (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "1,0"))
                  (rule "times_zero_1" (formula "11") (term "0"))
                  (rule "qeq_literals" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                  (rule "add_literals" (formula "15") (term "0,0,1,0"))
                  (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                  (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "1"))
                  (rule "polySimp_homoEq" (formula "15") (term "1"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                  (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,1,0"))
                  (rule "add_literals" (formula "16") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,0,0,1,0"))
                  (rule "applyEq" (formula "17") (term "1,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "16") (term "0,0,0,0"))
                  (rule "add_literals" (formula "16") (term "1,0,0,0,0"))
                  (rule "times_zero_1" (formula "16") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,0"))
                  (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "1"))
                  (rule "polySimp_homoEq" (formula "16") (term "1"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                  (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "16") (term "0,0,1"))
                  (rule "applyEq" (formula "6") (term "1") (ifseqformula "1"))
                  (rule "polySimp_sepNegMonomial" (formula "15") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "16") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
                  (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "inEqSimp_invertInEq0" (formula "16") (term "0"))
                  (rule "mul_literals" (formula "16") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                  (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "applyEq" (formula "11") (term "0,1,1,0,0,2,0,1,0") (ifseqformula "16"))
                  (rule "polySimp_addComm1" (formula "11") (term "1,0,0,2,0,1,0"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "16"))
                  (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "16"))
                  (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "16"))
                  (rule "inEqSimp_commuteGeq" (formula "15") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                  (rule "applyEq" (formula "18") (term "0,1,1,0,0,2,0,1,0,0") (ifseqformula "16"))
                  (rule "polySimp_addComm1" (formula "18") (term "1,0,0,2,0,1,0,0"))
                  (rule "applyEq" (formula "17") (term "0,1,1,0,0,2,0,1,0,0") (ifseqformula "16"))
                  (rule "polySimp_addComm1" (formula "17") (term "1,0,0,2,0,1,0,0"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "16"))
                  (rule "inEqSimp_homoInEq0" (formula "9"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "16"))
                  (rule "polySimp_homoEq" (formula "15") (term "1"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                  (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0,1"))
                  (rule "add_literals" (formula "15") (term "1,0,0,1"))
                  (rule "times_zero_1" (formula "15") (term "0,0,1"))
                  (rule "add_zero_left" (formula "15") (term "0,1"))
                  (rule "applyEq" (formula "17") (term "0,1,0,2,0,1,0,0") (ifseqformula "16"))
                  (rule "applyEq" (formula "17") (term "1,0,2,0,2,0,1,0,0") (ifseqformula "16"))
                  (rule "polySimp_addComm0" (formula "17") (term "0,2,0,2,0,1,0,0"))
                  (rule "applyEq" (formula "18") (term "1,0,2,0,2,0,1,0,0") (ifseqformula "16"))
                  (rule "polySimp_addComm0" (formula "18") (term "0,2,0,2,0,1,0,0"))
                  (rule "applyEq" (formula "18") (term "0,1,0,2,0,1,0,0") (ifseqformula "16"))
                  (rule "applyEq" (formula "11") (term "1,0,2,0,2,0,1,0") (ifseqformula "16"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,2,0,2,0,1,0"))
                  (rule "applyEq" (formula "11") (term "0,1,0,2,0,1,0") (ifseqformula "16"))
                  (rule "polySimp_invertEq" (formula "15") (term "1"))
                  (rule "mul_literals" (formula "15") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                  (rule "mul_literals" (formula "9") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                  (rule "inEqSimp_contradEq7" (formula "15") (term "1") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                  (rule "add_literals" (formula "15") (term "0,0,1"))
                  (rule "leq_literals" (formula "15") (term "0,1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "notLeft" (formula "15"))
                  (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "7"))
                  (rule "leq_literals" (formula "10") (term "0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "2") (term "0,1"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "8"))
                  (rule "qeq_literals" (formula "17") (term "0,1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "false_right" (formula "17"))
                  (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "2"))
                  (rule "andLeft" (formula "9"))
                  (rule "inEqSimp_homoInEq1" (formula "9"))
                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "1,1,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0"))
                  (rule "add_zero_right" (formula "9") (term "0"))
                  (rule "leq_literals" (formula "9"))
                  (rule "closeFalse" (formula "9"))
               )
               (branch "self_6.len = self_6.data.length FALSE"
                  (rule "inEqSimp_strengthen0" (formula "10") (ifseqformula "19"))
                  (rule "inEqSimp_contradEq3" (formula "19") (ifseqformula "10"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0"))
                  (rule "qeq_literals" (formula "19") (term "0"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "false_right" (formula "19"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                  (rule "times_zero_1" (formula "9") (term "0,0"))
                  (rule "add_zero_left" (formula "9") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "1"))
                  (rule "methodCallReturn" (formula "19") (term "1"))
                  (rule "assignment" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "methodCallEmpty" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "emptyModality" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "false_right" (formula "19"))
                  (rule "cut_direct" (formula "16") (term "0,0"))
                  (branch "CUT: self_6.len >= self_6.data.length + self_6.first * -1 TRUE"
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "15") (term "0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0,1,0"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                     (rule "add_literals" (formula "15") (term "0,0,1,0"))
                     (rule "leq_literals" (formula "15") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "10"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                     (rule "mul_literals" (formula "15") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "15"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "7"))
                     (rule "mul_literals" (formula "14") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                     (rule "mul_literals" (formula "14") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "14"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "cut_direct" (formula "1") (term "1"))
                     (branch "CUT: result_4 <= -1 TRUE"
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "cut_direct" (formula "16") (term "0"))
                        (branch "CUT: self_6.len <= -1 + self_6.data.length * 2 + self_6.first * -1 TRUE"
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq0" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "1,1,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0"))
                           (rule "add_zero_right" (formula "16") (term "0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,0"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "19") (term "1,1,0,0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "15"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "15") (term "0"))
                           (rule "add_literals" (formula "15") (term "1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0"))
                           (rule "add_zero_right" (formula "15") (term "0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0"))
                           (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                           (rule "add_literals" (formula "15") (term "1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0"))
                           (rule "add_zero_right" (formula "15") (term "0"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq0" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "17"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1"))
                           (rule "polySimp_rightDist" (formula "16") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                           (rule "mul_literals" (formula "16") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0"))
                           (rule "inEqSimp_invertInEq0" (formula "15"))
                           (rule "times_zero_2" (formula "15") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                           (rule "mul_literals" (formula "8") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "15"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "CUT: self_6.len <= -1 + self_6.data.length * 2 + self_6.first * -1 FALSE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "inEqSimp_leqRight" (formula "18"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "1"))
                           (rule "andLeft" (formula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,1,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0"))
                           (rule "add_zero_right" (formula "8") (term "0"))
                           (rule "leq_literals" (formula "8"))
                           (rule "closeFalse" (formula "8"))
                        )
                     )
                     (branch "CUT: result_4 <= -1 FALSE"
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_leqRight" (formula "19"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
                        (rule "mul_literals" (formula "14") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                        (rule "mul_literals" (formula "14") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "14"))
                        (rule "leq_literals" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "cut_direct" (formula "17") (term "0"))
                        (branch "CUT: self_6.len <= -1 + self_6.data.length * 2 + self_6.first * -1 TRUE"
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq0" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0"))
                           (rule "add_zero_right" (formula "17") (term "0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,0"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq0" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "applyEq" (formula "20") (term "1,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "19") (term "1,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "1,1,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0"))
                           (rule "add_zero_right" (formula "16") (term "0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0"))
                           (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "1,1,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0"))
                           (rule "add_zero_right" (formula "16") (term "0"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "18"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1"))
                           (rule "polySimp_rightDist" (formula "17") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                           (rule "mul_literals" (formula "17") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1"))
                           (rule "polySimp_rightDist" (formula "8") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                           (rule "mul_literals" (formula "8") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0"))
                           (rule "inEqSimp_invertInEq0" (formula "16"))
                           (rule "times_zero_2" (formula "16") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "CUT: self_6.len <= -1 + self_6.data.length * 2 + self_6.first * -1 FALSE"
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "inEqSimp_leqRight" (formula "19"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "8"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "CUT: self_6.len >= self_6.data.length + self_6.first * -1 FALSE"
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "inEqSimp_geqRight" (formula "18"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                     (rule "mul_literals" (formula "1") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                     (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "10") (term "0,0"))
                     (rule "add_zero_left" (formula "10") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "cut_direct" (formula "2") (term "1"))
                     (branch "CUT: result_4 <= -1 TRUE"
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "cut_direct" (formula "16") (term "0"))
                        (branch "CUT: self_6.len >= self_6.first * -1 TRUE"
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq0" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                           (rule "applyEq" (formula "19") (term "1,1,0,0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0"))
                           (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "16") (term "0"))
                           (rule "add_literals" (formula "16") (term "1,1,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0"))
                           (rule "add_zero_right" (formula "16") (term "0"))
                           (rule "applyEq" (formula "6") (term "1") (ifseqformula "17"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1"))
                           (rule "polySimp_rightDist" (formula "11") (term "1"))
                           (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                           (rule "mul_literals" (formula "11") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_invertInEq0" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                           (rule "times_zero_2" (formula "16") (term "1"))
                           (rule "polySimp_elimOne" (formula "16") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "16") (term "0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "closeFalse" (formula "16"))
                        )
                        (branch "CUT: self_6.len >= self_6.first * -1 FALSE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "inEqSimp_geqRight" (formula "18"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "11") (term "0,0"))
                           (rule "add_zero_left" (formula "11") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "11") (term "0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "closeFalse" (formula "11"))
                        )
                     )
                     (branch "CUT: result_4 <= -1 FALSE"
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_leqRight" (formula "19"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                        (rule "mul_literals" (formula "8") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                        (rule "mul_literals" (formula "8") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "8"))
                        (rule "leq_literals" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "cut_direct" (formula "17") (term "0"))
                        (branch "CUT: self_6.len >= self_6.first * -1 TRUE"
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "17"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0"))
                           (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0"))
                           (rule "add_zero_right" (formula "17") (term "0"))
                           (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "20") (term "1,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq0" (formula "12"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                           (rule "applyEq" (formula "19") (term "1,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "6") (term "1") (ifseqformula "18"))
                           (rule "inEqSimp_invertInEq0" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                           (rule "times_zero_2" (formula "17") (term "1"))
                           (rule "polySimp_elimOne" (formula "17") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                           (rule "mul_literals" (formula "12") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: self_6.len >= self_6.first * -1 FALSE"
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "inEqSimp_geqRight" (formula "19"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "12") (term "0,0"))
                           (rule "add_zero_left" (formula "12") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                           (rule "polySimp_elimOne" (formula "12") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "12"))
                           (rule "qeq_literals" (formula "10") (term "0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "closeFalse" (formula "10"))
                        )
                     )
                  )
               )
            )
            (branch "Null Reference (data = null)"
               (builtin "One Step Simplification" (formula "19"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Show Axiom Satisfiability"
            (builtin "One Step Simplification" (formula "19"))
            (rule "closeTrue" (formula "19"))
         )
      )
   )
   (branch "Exceptional Post (modulo)"
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "andLeft" (formula "13"))
      (rule "selectCreatedOfAnonEQ" (formula "14") (term "0,1,0") (ifseqformula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "16"))
      (rule "notLeft" (formula "14"))
      (rule "close" (formula "18") (ifseqformula "17"))
   )
   (branch "Pre (modulo)"
      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")))
      (rule "Class_invariant_axiom_for_RingBuffer" (formula "15") (inst "i=_var1") (inst "sk=sk_1") (ifseqformula "4"))
      (branch "Use Axiom"
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")) (ifInst ""  (formula "5")) (ifInst ""  (formula "10")))
         (rule "translateJavaAddInt" (formula "15") (term "2,0,2,1,1,0,1"))
         (rule "inEqSimp_gtToGeq" (formula "15") (term "0,0,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,0,0"))
         (rule "replace_known_left" (formula "15") (term "0,1,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "1,0"))
         (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0"))
         (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0"))
         (rule "mul_literals" (formula "15") (term "1,0"))
         (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "allRight" (formula "15") (inst "sk=_var1_0"))
         (rule "impRight" (formula "15"))
         (rule "andLeft" (formula "1"))
         (rule "polySimp_addComm0" (formula "17") (term "2,0,2,1"))
         (rule "inEqSimp_homoInEq0" (formula "2"))
         (rule "polySimp_addComm1" (formula "2") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
         (rule "mul_literals" (formula "2") (term "0,1"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
         (rule "Axiom_def_modulo" (formula "17") (term "0,2,1") (ifseqformula "6"))
         (rule "eqSymm" (formula "17"))
         (rule "polySimp_elimSub" (formula "17") (term "2,0,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,2,0"))
         (rule "polySimp_addComm1" (formula "17") (term "2,0,2,0"))
         (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,2,0"))
         (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,2,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,2,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,2,0"))
         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,2,0"))
         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,2,0"))
         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,2,0"))
         (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,2,0"))
         (rule "mul_literals" (formula "17") (term "0,0,1,0,0,2,0"))
         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
         (rule "mul_literals" (formula "2") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "polySimp_mulComm0" (formula "2") (term "1"))
         (rule "polySimp_rightDist" (formula "2") (term "1"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
         (rule "mul_literals" (formula "2") (term "0,1"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
         (rule "boxToDiamond" (formula "4") (term "1"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "notLeft" (formula "4"))
         (rule "assignment_read_length" (formula "14"))
         (branch "Normal Execution (data != null)"
            (builtin "One Step Simplification" (formula "14"))
            (rule "arrayLengthNotNegative" (formula "12") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "8"))
            (rule "leq_literals" (formula "12") (term "0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "lenNonNegative" (formula "7") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "7"))
            (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
            (rule "equality_comparison_new" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "assignment" (formula "14") (term "1,1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "assignment" (formula "14") (term "1,2"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "ifthenelse_negated_for" (formula "14"))
            (rule "allLeft" (formula "13") (inst "t=_var1_0"))
            (rule "polySimp_addComm0" (formula "13") (term "1,0,2,0,1"))
            (rule "polySimp_addComm1" (formula "13") (term "2,0,2,0,1"))
            (rule "polySimp_addComm0" (formula "13") (term "0,2,0,2,0,1"))
            (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
            (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,2,0,1"))
            (rule "polySimp_addComm1" (formula "13") (term "0,0,0,2,0,1"))
            (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,2,0,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0,2,0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,2,0,1"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0,0,2,0,1"))
            (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "13") (term "0,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "3"))
            (rule "andLeft" (formula "13"))
            (rule "inEqSimp_homoInEq1" (formula "13"))
            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
            (rule "add_literals" (formula "13") (term "1,1,0"))
            (rule "times_zero_1" (formula "13") (term "1,0"))
            (rule "add_zero_right" (formula "13") (term "0"))
            (rule "leq_literals" (formula "13"))
            (rule "closeFalse" (formula "13"))
         )
         (branch "Null Reference (data = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Show Axiom Satisfiability"
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")) (ifInst ""  (formula "5")) (ifInst ""  (formula "10")) (ifInst ""  (formula "12")) (ifInst ""  (formula "5")) (ifInst ""  (formula "10")))
         (rule "closeTrue" (formula "15"))
      )
   )
)
(branch "Show Axiom Satisfiability"
   (builtin "One Step Simplification" (formula "6"))
   (rule "closeTrue" (formula "6"))
)
)

}
