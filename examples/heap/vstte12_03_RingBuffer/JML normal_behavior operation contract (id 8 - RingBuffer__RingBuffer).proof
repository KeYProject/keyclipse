\settings {
"#Proof-Settings-Config-File
#Tue Nov 08 23:38:33 CET 2011
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\\:ban
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[View]HideIntermediateProofsteps=true
[View]HideClosedSubtrees=false
[General]UseOCL=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[View]ShowWholeTaclet=false
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMinimum=-2147483645
[General]StupidMode=true
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[General]OneStepSimplification=true
[General]UseJML=true
[SMTSettings]integersMaximum=2147483645
[General]DnDDirectionSensitive=true
[View]FontIndex=2
[View]UseSystemLookAndFeel=false
[SMTSettings]useUninterpretedMultiplication=true
[Strategy]MaximumNumberOfAutomaticApplications=50000
[View]MaxTooltipLines=40
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[SMTSettings]SelectedTaclets=
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[SMTSettings]explicitTypeHierarchy=false
"
}

\javaSource "src";

\rules {

 Axiom_def_modulo {
    \schemaVar \term RingBuffer r;
    \schemaVar \term Heap h;
    \schemaVar \term int x;

    \assumes (RingBuffer::exactInstance(r)=TRUE ==>)
    \find(RingBuffer::modulo(h, r, x))
    \replacewith(\if(x < length(int[]::select(h,r,RingBuffer::$data)))
                 \then(x)
                 \else(x-length(int[]::select(h,r,RingBuffer::$data))))

    \heuristics ( simplify )
  };

}

\chooseContract "JML normal_behavior operation contract [id: 8 / RingBuffer::RingBuffer]";

\proof {
(keyLog "0" (keyUser "mattze" ) (keyVersion "b88cc7b75f75e95abe065dd5173efb1710172c68"))

(autoModeTime "6004")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "assignment" (formula "3") (term "1"))
(builtin "One Step Simplification" (formula "3"))
(rule "eqSymm" (formula "3") (term "1,0,0,1,0,1"))
(rule "instanceCreationAssignment" (formula "3") (term "1") (inst "#v0=r"))
(rule "variableDeclarationAssign" (formula "3") (term "1"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "r"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "3") (term "1") (inst "#v0=r_1"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "r_1"))
(rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
(builtin "One Step Simplification" (formula "3"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "3") (term "1") (inst "#v0=r_2"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "r_2"))
(rule "allocateInstance" (formula "3"))
(builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(builtin "One Step Simplification" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
(builtin "One Step Simplification" (formula "6"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallWithinClass" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "6") (term "1"))
(rule "methodCallReturn" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "var"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "arrayCreation" (formula "6") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_arr"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "dim0"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "ifUnfold" (formula "6") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x"))
(rule "less_than_comparison_new" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "assignment" (formula "6") (term "1,2"))
(builtin "One Step Simplification" (formula "6"))
(rule "assignment" (formula "6") (term "1,1"))
(builtin "One Step Simplification" (formula "6"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
(rule "times_zero_1" (formula "6") (term "1,0,0,0"))
(rule "add_zero_right" (formula "6") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0"))
(rule "mul_literals" (formula "6") (term "1,0"))
(rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "3"))
(rule "qeq_literals" (formula "6") (term "0,0"))
(builtin "One Step Simplification" (formula "6"))
(rule "if" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "6") (term "1") (inst "#v0=x_arr_1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_arr_1"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "length_1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
(builtin "One Step Simplification" (formula "6"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "newObject"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "6") (term "1") (inst "#v0=x_arr_2"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_arr_2"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "length_2"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "allocateInstanceWithLength" (formula "6"))
(builtin "One Step Simplification" (formula "7"))
(builtin "One Step Simplification" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "9") (term "1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "selectOfStore" (formula "1") (term "0,0,0,1"))
(builtin "One Step Simplification" (formula "1"))
(rule "selectOfStore" (formula "1") (term "0,0,0,1"))
(builtin "One Step Simplification" (formula "1"))
(rule "selectOfStore" (formula "1") (term "0,0,0,1"))
(builtin "One Step Simplification" (formula "1"))
(rule "selectOfStore" (formula "1") (term "0,0,0,1"))
(builtin "One Step Simplification" (formula "1"))
(rule "selectOfStore" (formula "1") (term "0,0,0,1"))
(builtin "One Step Simplification" (formula "1"))
(rule "selectOfCreate" (formula "1") (term "0,0,0,1"))
(builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
(rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0,1"))
(rule "replace_known_right" (formula "1") (term "1,0,0,0,0,1") (ifseqformula "6"))
(builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
(rule "arrayLengthNotNegative" (formula "1") (term "0,1,1"))
(rule "methodCall" (formula "10"))
(branch "Normal Execution (newObject != null )"
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallWithinClass" (formula "10") (term "1"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "arrayInitialisation" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "blockEmpty" (formula "10") (term "1"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallReturnIgnoreResult" (formula "10") (term "1"))
   (rule "blockEmpty" (formula "10") (term "1"))
   (rule "methodCallReturn" (formula "10") (term "1"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "blockEmpty" (formula "10") (term "1"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "blockEmpty" (formula "10") (term "1"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "blockEmpty" (formula "10") (term "1"))
   (rule "assignment_write_attribute" (formula "10"))
   (branch "Normal Execution (r != null)"
      (builtin "One Step Simplification" (formula "10"))
      (rule "assignment" (formula "10") (term "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "tryEmpty" (formula "10") (term "1"))
      (rule "emptyModality" (formula "10") (term "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "eqSymm" (formula "10") (term "1,0,0,1"))
      (rule "selectOfStore" (formula "10") (term "0,1,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "0,1,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "castDel" (formula "10") (term "0,0,1,0,0"))
      (rule "selectOfStore" (formula "10") (term "0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "eqSymm" (formula "10") (term "0,0,0,1,0,0,1"))
      (rule "eqSymm" (formula "10") (term "1,0,0,1,0,0,1"))
      (rule "castDel" (formula "10") (term "1,0,1,0,0,1"))
      (rule "selectOfStore" (formula "10") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "2,0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "eqSymm" (formula "10") (term "0,0,2,0,1,0,0,1"))
      (rule "eqSymm" (formula "10") (term "1,0,2,0,1,0,0,1"))
      (rule "castDel" (formula "10") (term "1,2,0,1,0,0,1"))
      (rule "selectOfStore" (formula "10") (term "2,2,0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "eqSymm" (formula "10") (term "0,0,2,2,0,1,0,0,1"))
      (rule "eqSymm" (formula "10") (term "1,0,2,2,0,1,0,0,1"))
      (rule "castDel" (formula "10") (term "1,2,2,0,1,0,0,1"))
      (rule "selectOfStore" (formula "10") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "0,1,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfMemset" (formula "10") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "elementOfArrayRange" (formula "10") (term "0,0,0,0,0,0") (inst "iv=_var0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfMemset" (formula "10") (term "2,2,2,0,1,0,0,1"))
      (rule "elementOfArrayRange" (formula "10") (term "0,0,2,2,2,0,1,0,0,1") (inst "iv=_var1"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,1,0,0,2,2,2,0,1,0,0,1"))
      (rule "selectOfMemset" (formula "10") (term "0,1,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "elementOfArrayRange" (formula "10") (term "0,0,1,0,0,0") (inst "iv=_var2"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "2,2,2,2,0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "eqSymm" (formula "10") (term "0,0,2,2,2,2,0,1,0,0,1"))
      (rule "eqSymm" (formula "10") (term "1,0,2,2,2,2,0,1,0,0,1"))
      (rule "castDel" (formula "10") (term "1,2,2,2,2,0,1,0,0,1"))
      (rule "selectOfStore" (formula "10") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "2,2,2,2,2,0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "eqSymm" (formula "10") (term "0,0,2,2,2,2,2,0,1,0,0,1"))
      (rule "eqSymm" (formula "10") (term "1,0,2,2,2,2,2,0,1,0,0,1"))
      (rule "castDel" (formula "10") (term "1,2,2,2,2,2,0,1,0,0,1"))
      (rule "selectOfStore" (formula "10") (term "0,1,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "0,1,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "2,2,2,2,2,2,0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "eqSymm" (formula "10") (term "0,0,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "eqSymm" (formula "10") (term "1,0,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "castDel" (formula "10") (term "1,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "selectOfStore" (formula "10") (term "0,1,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfCreate" (formula "10") (term "0,1,0,0,0"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
      (rule "selectOfCreate" (formula "10") (term "2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "eqSymm" (formula "10") (term "0,0,0,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "replace_known_right" (formula "10") (term "0,1,0,0,2,2,2,2,2,2,2,0,1,0,0,1") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "castDel" (formula "10") (term "1,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "selectOfStore" (formula "10") (term "2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "eqSymm" (formula "10") (term "0,0,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "eqSymm" (formula "10") (term "1,0,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "castDel" (formula "10") (term "1,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "selectOfCreate" (formula "10") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
      (rule "selectOfStore" (formula "10") (term "0,1,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "castDel" (formula "10") (term "0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "eqSymm" (formula "10") (term "1,0,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "eqSymm" (formula "10") (term "0,0,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "castDel" (formula "10") (term "1,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "selectOfStore" (formula "10") (term "2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "eqSymm" (formula "10") (term "1,0,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "eqSymm" (formula "10") (term "0,0,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "castDel" (formula "10") (term "1,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "selectOfStore" (formula "10") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "castDelInt" (formula "10") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "10") (term "2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "eqSymm" (formula "10") (term "1,0,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "eqSymm" (formula "10") (term "0,0,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "castDel" (formula "10") (term "1,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "selectOfStore" (formula "10") (term "2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "eqSymm" (formula "10") (term "1,0,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "eqSymm" (formula "10") (term "0,0,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "castDel" (formula "10") (term "1,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "selectOfCreate" (formula "10") (term "2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "eqSymm" (formula "10") (term "0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "replace_known_right" (formula "10") (term "0,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "castDel" (formula "10") (term "1,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,0,0,1"))
      (rule "Class_invariant_axiom_for_RingBuffer" (formula "10") (term "1,0") (inst "i=_var3") (inst "sk=sk_0") (ifseqformula "4"))
      (branch "Use Axiom"
         (builtin "One Step Simplification" (formula "10"))
         (rule "translateJavaAddInt" (formula "10") (term "2,0,2,1,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,0,1,0"))
         (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,0,0,1,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,0,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,1,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "1,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,1,0"))
         (rule "mul_literals" (formula "10") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "0,1,1,0,0,1,0"))
         (rule "Axiom_def_modulo" (formula "10") (term "0,2,1,1,0,1,1,0") (ifseqformula "4"))
         (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "10") (term "2,0,2,0,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,2,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,2,0,1,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "10") (term "2,0,2,0,1,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,2,0,1,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,2,0,1,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,2,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,2,0,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,2,0,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,2,0,1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,2,0,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,2,0,1,0,1,1,0"))
         (rule "mul_literals" (formula "10") (term "0,0,1,0,0,2,0,1,0,1,1,0"))
         (rule "selectOfStore" (formula "10") (term "1,1,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,0,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,1,0,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,2,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,2,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,2,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "polySimp_addComm0" (formula "10") (term "0,2,0,2,0,1,0,1,1,0"))
         (rule "castDel" (formula "10") (term "0,0,0,0,2,0,2,0,1,0,1,1,0"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,1,0,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,0,2,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,1,0,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,1,1,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "eqSymm" (formula "10") (term "1,0,0,0,0,1,0"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_homoInEq1" (formula "10") (term "1,1,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "10") (term "0,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0,1,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,1,0,0,1,0"))
         (rule "castDel" (formula "10") (term "0,1,1,1,1,0,0,1,0"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_commuteGeq" (formula "10") (term "1,1,0,1,0"))
         (rule "selectOfStore" (formula "10") (term "0,0,0,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDel" (formula "10") (term "0,0,0,0,0,0,0,1,0"))
         (rule "replace_known_right" (formula "10") (term "0,0,0,0,0,0,1,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "1,1,0,1,0"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDel" (formula "10") (term "0,0,1,0,0,0,1,0"))
         (rule "selectOfStore" (formula "10") (term "1,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDel" (formula "10") (term "1,0,1,0,1,1,0"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_commuteGeq" (formula "10") (term "1,1,0,1,0"))
         (rule "castDel" (formula "10") (term "0,1,1,1,0,1,0"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "polySimp_addComm1" (formula "10") (term "1,0,0,2,0,1,0,1,1,0"))
         (rule "castDel" (formula "10") (term "0,1,0,1,0,0,2,0,1,0,1,1,0"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,0,2,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfMemset" (formula "10") (term "1,0,2,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "elementOfArrayRange" (formula "10") (term "0,1,0,2,0,2,0,1,0,1,1,0") (inst "iv=_var4"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,0,2,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,0,2,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,0,2,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfMemset" (formula "10") (term "0,1,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "eqSymm" (formula "10") (term "0,0,0,0,1,0"))
         (rule "elementOfArrayRange" (formula "10") (term "0,0,0,0,0,0,0,0,1,0") (inst "iv=_var5"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "eqSymm" (formula "10") (term "0,0,0,0,1,0"))
         (rule "castDel" (formula "10") (term "0,1,0,0,0,0,1,0"))
         (rule "selectOfCreate" (formula "10") (term "1,0,2,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfMemset" (formula "10") (term "0,1,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "elementOfArrayRange" (formula "10") (term "0,0,1,1,0,0,1,0") (inst "iv=_var6"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfMemset" (formula "10") (term "0,1,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "elementOfArrayRange" (formula "10") (term "0,0,0,1,1,0,1,1,0") (inst "iv=_var7"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDel" (formula "10") (term "0,1,1,0,1,1,0"))
         (rule "selectOfMemset" (formula "10") (term "0,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "elementOfArrayRange" (formula "10") (term "0,0,0,1,0,1,0") (inst "iv=_var8"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfMemset" (formula "10") (term "0,0,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "elementOfArrayRange" (formula "10") (term "0,0,0,1,0,0,1,0") (inst "iv=_var9"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,0,2,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,0,2,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfMemset" (formula "10") (term "0,1,1,0,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "elementOfArrayRange" (formula "10") (term "0,0,1,1,0,0,2,0,1,0,1,1,0") (inst "iv=_var10"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfMemset" (formula "10") (term "0,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "elementOfArrayRange" (formula "10") (term "0,0,0,0,0,0,1,0") (inst "iv=_var11"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfMemset" (formula "10") (term "0,1,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "elementOfArrayRange" (formula "10") (term "0,0,1,1,0,1,0") (inst "iv=_var12"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,0,2,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDelInt" (formula "10") (term "1,0,2,0,2,0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,2,0,2,0,1,0,1,1,0"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfMemset" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "elementOfArrayRange" (formula "10") (term "0,1,1,1,0,0,1,1,0") (inst "iv=_var13"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfMemset" (formula "10") (term "0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "elementOfArrayRange" (formula "10") (term "0,0,1,0,1,1,0") (inst "iv=_var14"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,0,0,0,1,0,1,1,0"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfMemset" (formula "10") (term "0,1,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "elementOfArrayRange" (formula "10") (term "0,0,1,0,0,0,0,0,0,1,0,1,1,0") (inst "iv=_var15"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfCreate" (formula "10") (term "0,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfCreate" (formula "10") (term "0,1,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfCreate" (formula "10") (term "0,1,1,0,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "selectOfCreate" (formula "10") (term "0,1,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "selectOfStore" (formula "10") (term "2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfMemset" (formula "10") (term "0,1,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "elementOfArrayRange" (formula "10") (term "0,0,1,0,2,2,0,1,0,1,1,0") (inst "iv=_var16"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDelInt" (formula "10") (term "0,0,1,0,1,0"))
         (rule "qeq_literals" (formula "10") (term "0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfCreate" (formula "10") (term "0,1,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDel" (formula "10") (term "0,1,1,0,1,1,0"))
         (rule "selectOfStore" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfCreate" (formula "10") (term "0,1,1,0,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "selectOfStore" (formula "10") (term "0,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "eqSymm" (formula "10") (term "0,0,0,0,1,0"))
         (rule "selectOfCreate" (formula "10") (term "0,0,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "selectOfStore" (formula "10") (term "0,1,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDelInt" (formula "10") (term "0,1,0,0,0,0,0,0,1,0,1,1,0"))
         (rule "add_zero_left" (formula "10") (term "1,0,0,0,0,0,0,1,0,1,1,0"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfCreate" (formula "10") (term "2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "selectOfStore" (formula "10") (term "0,1,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfCreate" (formula "10") (term "0,1,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDelInt" (formula "10") (term "0,1,1,0,0,1,0"))
         (rule "inEqSimp_homoInEq0" (formula "10") (term "1,1,0,0,1,0"))
         (rule "times_zero_2" (formula "10") (term "1,0,1,1,0,0,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "10") (term "1,1,1,0,0,1,0"))
         (rule "selectOfCreate" (formula "10") (term "1,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "selectOfCreate" (formula "10") (term "0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "selectOfStore" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDelInt" (formula "10") (term "0,0,1,0,0,1,0"))
         (rule "qeq_literals" (formula "10") (term "0,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfCreate" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "selectOfStore" (formula "10") (term "1,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDelInt" (formula "10") (term "1,0,0,0,1,0"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDelInt" (formula "10") (term "0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0"))
         (rule "replace_known_left" (formula "10") (term "1,0,1,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,0,0,0,0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDelInt" (formula "10") (term "0,1,1,0,0,0,0,0,0,0,1,0,1,1,0"))
         (rule "times_zero_2" (formula "10") (term "1,1,0,0,0,0,0,0,0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "1,0,0,0,0,0,0,0,1,0,1,1,0"))
         (rule "selectOfStore" (formula "10") (term "2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfCreate" (formula "10") (term "0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
         (rule "selectOfStore" (formula "10") (term "0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDel" (formula "10") (term "0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfCreate" (formula "10") (term "2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")))
         (rule "selectOfStore" (formula "10") (term "0,1,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "0,1,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDelInt" (formula "10") (term "0,1,0,2,2,0,1,0,1,1,0"))
         (rule "add_zero_left" (formula "10") (term "1,0,2,2,0,1,0,1,1,0"))
         (rule "selectOfStore" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "selectOfStore" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDelInt" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,1,0"))
         (rule "selectOfStore" (formula "10") (term "0,1,1,0,0,2,2,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "castDelInt" (formula "10") (term "0,1,1,0,0,2,2,0,1,0,1,1,0"))
         (rule "times_zero_2" (formula "10") (term "1,1,0,0,2,2,0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "1,0,0,2,2,0,1,0,1,1,0"))
         (rule "cut_direct" (formula "2") (term "0"))
         (branch "CUT: wellFormed(store(store(store(store(store(create(heap, r_2), r_2, <initialized>, FALSE), r_2, data, null), r_2, first, 0), r_2, len, 0), r_2, list, seqEmpty)) TRUE"
            (builtin "One Step Simplification" (formula "3"))
            (rule "andLeft" (formula "3"))
            (rule "notLeft" (formula "3"))
            (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "applyEq" (formula "12") (term "1,1,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "12") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "12") (term "1,1,0,0,2,2,0,1,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "12") (term "1,1,0,1,0,0,2,2,2,0,1,0,0,1") (ifseqformula "3"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
            (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "3"))
            (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "applyEq" (formula "12") (term "0,0,2,0,2,2,0,1,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "12") (term "0,0,2,0,0,0,0,0,0,1,0,0") (ifseqformula "3"))
            (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "7"))
            (rule "leq_literals" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "nnf_imp2or" (formula "11") (term "0,0"))
            (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "allRight" (formula "11") (inst "sk=f_0"))
            (rule "allRight" (formula "11") (inst "sk=o_0"))
            (rule "orRight" (formula "11"))
            (rule "orRight" (formula "11"))
            (rule "eqSymm" (formula "13") (term "0,0,0,1,0,0,2,2,2,0"))
            (rule "replace_known_right" (formula "13") (term "0,0,2,2,2,2,2,2,2,2,2,2,2,0") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
            (rule "commute_and" (formula "13") (term "0,0,1,0,0,2,0"))
            (rule "commute_and" (formula "13") (term "0,2,2,0"))
            (rule "commute_and" (formula "13") (term "0,2,2,2,0"))
            (rule "commute_and" (formula "13") (term "0,2,2,2,2,0"))
            (rule "commute_and" (formula "13") (term "0,2,2,2,2,2,0"))
            (rule "commute_and" (formula "13") (term "0,0"))
            (rule "commute_and_2" (formula "13") (term "0,1,0,0,2,0"))
            (rule "ifthenelse_split" (formula "13") (term "2,2,0"))
            (branch "f_0 = <initialized> & o_0 = x_arr_2 TRUE"
               (rule "andLeft" (formula "1"))
               (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
               (rule "eqSymm" (formula "15"))
               (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "2"))
               (rule "applyEqRigid" (formula "15") (term "2,0") (ifseqformula "1"))
               (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "2"))
               (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "10"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "notRight" (formula "14"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
               (rule "eqSymm" (formula "14"))
               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
               (rule "close" (formula "10") (ifseqformula "1"))
            )
            (branch "f_0 = <initialized> & o_0 = x_arr_2 FALSE"
               (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "cut_direct" (formula "12") (term "0,0"))
               (branch "CUT: o_0 = null TRUE"
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "false_right" (formula "13"))
                  (rule "applyEqRigid" (formula "14") (term "1,2,2,2,2,0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "14") (term "0,0,0,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "14") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "1"))
                  (rule "eqSymm" (formula "13") (term "1"))
                  (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "false_right" (formula "13"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "12"))
                  (rule "applyEq" (formula "12") (term "0,1,0,2,2,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "12") (term "1,0,2,2,0"))
                  (rule "replace_known_right" (formula "12") (term "1,0,2,2,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "12") (term "1,0,0"))
                  (rule "replace_known_right" (formula "12") (term "1,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "12") (term "1,0,0"))
                  (rule "replace_known_right" (formula "12") (term "1,0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "eqSymm" (formula "12"))
                  (rule "applyEqRigid" (formula "12") (term "1,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "closeTrue" (formula "12"))
               )
               (branch "CUT: o_0 = null FALSE"
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "notRight" (formula "13"))
                  (rule "ifthenelse_split" (formula "15") (term "2,0"))
                  (branch "f_0 = <transactionConditionallyUpdated> & o_0 = x_arr_2 TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "replace_known_left" (formula "17") (term "0,0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "applyEqRigid" (formula "17") (term "2,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "17") (term "1,1,0,0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "eqSymm" (formula "17"))
                     (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "false_right" (formula "16"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                     (rule "eqSymm" (formula "14"))
                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                     (rule "close" (formula "10") (ifseqformula "3"))
                  )
                  (branch "f_0 = <transactionConditionallyUpdated> & o_0 = x_arr_2 FALSE"
                     (rule "ifthenelse_split" (formula "16") (term "2,0"))
                     (branch "f_0 = <transient> & o_0 = x_arr_2 TRUE"
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "18"))
                        (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                        (rule "close" (formula "10") (ifseqformula "3"))
                     )
                     (branch "f_0 = <transient> & o_0 = x_arr_2 FALSE"
                        (rule "ifthenelse_split" (formula "17") (term "0"))
                        (branch " o_0 = x_arr_2 & exists int _var1; (_var1 >= 0 & _var1 <= n & arr(_var1) = f_0) & !f_0 = <created> TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "3"))
                           (rule "exLeft" (formula "2") (inst "sk=_var1_0"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "eqSymm" (formula "22"))
                           (rule "eqSymm" (formula "4"))
                           (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "false_right" (formula "20"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "false_right" (formula "20"))
                           (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "false_right" (formula "19"))
                           (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
                           (rule "close" (formula "13") (ifseqformula "5"))
                        )
                        (branch " o_0 = x_arr_2 & exists int _var1; (_var1 >= 0 & _var1 <= n & arr(_var1) = f_0) & !f_0 = <created> FALSE"
                           (rule "ifthenelse_split" (formula "18") (term "0"))
                           (branch "f_0 = <created> & o_0 = x_arr_2 TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "20"))
                              (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "2")))
                              (rule "false_right" (formula "19"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "false_right" (formula "16"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "false_right" (formula "16"))
                              (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                              (rule "close" (formula "10") (ifseqformula "3"))
                           )
                           (branch "f_0 = <created> & o_0 = x_arr_2 FALSE"
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "closeTrue" (formula "19"))
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch "CUT: wellFormed(store(store(store(store(store(create(heap, r_2), r_2, <initialized>, FALSE), r_2, data, null), r_2, first, 0), r_2, len, 0), r_2, list, seqEmpty)) FALSE"
            (builtin "One Step Simplification" (formula "2"))
            (rule "wellFormedStorePrimitive" (formula "7"))
            (rule "true_left" (formula "2"))
            (rule "wellFormedStorePrimitive" (formula "6"))
            (rule "wellFormedStorePrimitive" (formula "6"))
            (rule "wellFormedStoreObject" (formula "6"))
            (branch "Case 1"
               (rule "wellFormedStorePrimitive" (formula "6"))
               (rule "wellFormedCreate" (formula "6"))
               (rule "close" (formula "6") (ifseqformula "4"))
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "6"))
               (rule "closeTrue" (formula "6"))
            )
         )
      )
      (branch "Show Axiom Satisfiability"
         (builtin "One Step Simplification" (formula "10"))
         (rule "closeTrue" (formula "10"))
      )
   )
   (branch "Null Reference (r = null)"
      (builtin "One Step Simplification" (formula "11"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Null Reference (newObject = null)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
   (rule "closeFalse" (formula "1"))
)
)

}
