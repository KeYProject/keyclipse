\settings {
"#Proof-Settings-Config-File
#Thu Nov 22 10:46:06 CET 2012
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[Strategy]Timeout=-1
[StrategyProperty]RETREAT_MODE_OPTIONS_KEY=RETREAT_MODE_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , assertions-assertions\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , modelFields-modelFields\\:treatAsAxiom , initialisation-initialisation\\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\\:allow
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_NONE
[View]HideIntermediateProofsteps=false
[View]HideClosedSubtrees=false
[General]UseOCL=false
[View]ShowWholeTaclet=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMinimum=-2147483645
[General]StupidMode=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[General]OneStepSimplification=true
[General]UseJML=true
[SMTSettings]integersMaximum=2147483645
[General]DnDDirectionSensitive=true
[View]FontIndex=2
[View]UseSystemLookAndFeel=false
[SMTSettings]useUninterpretedMultiplication=true
[View]MaxTooltipLines=40
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[General]RightClickMacros=false
[SMTSettings]SelectedTaclets=
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[SMTSettings]explicitTypeHierarchy=false
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Thu Nov 22 10:46:06 CET 2012
name=PrefixSumRec[PrefixSumRec\\:\\:isPow2(int)].JML normal_behavior operation contract.0
contract=PrefixSumRec[PrefixSumRec\\:\\:isPow2(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "2e0b488dad8c3da19edb19401952be34275b207b"))

(autoModeTime "51562")

(branch "dummy ID"
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(builtin "One Step Simplification" (formula "8"))
(rule "assignment" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "eqSymm" (formula "8") (term "1,0,1,1,0,0,0,1"))
(rule "translateJavaDivInt" (formula "8") (term "2,0,1,0,0,1,0,0,0,0,1"))
(rule "eqSymm" (formula "8") (term "0,0,1,0,1"))
(rule "translateJavaMod" (formula "8") (term "0,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,1,1,0,0,0,1"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_isPow2"))
(builtin "One Step Simplification" (formula "8"))
(rule "ifElseUnfold" (formula "8") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x_1"))
(rule "equality_comparison_simple" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "ifElseSplit" (formula "8"))
(branch "if x_1 true"
   (builtin "One Step Simplification" (formula "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallReturn" (formula "9") (term "1"))
   (rule "assignment" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallEmpty" (formula "9") (term "1"))
   (rule "tryEmpty" (formula "9") (term "1"))
   (rule "emptyModality" (formula "9") (term "1"))
   (rule "andRight" (formula "9"))
   (branch "Case 1"
      (rule "andRight" (formula "9"))
      (branch "Case 1"
         (rule "andRight" (formula "9"))
         (branch "Case 1"
            (rule "impRight" (formula "9"))
            (rule "notRight" (formula "10"))
            (builtin "One Step Simplification" (formula "7"))
            (builtin "One Step Simplification" (formula "2"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
            (rule "true_left" (formula "6"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "7"))
            (rule "inEqSimp_gtToGeq" (formula "8"))
            (rule "times_zero_1" (formula "8") (term "1,0,0"))
            (rule "add_literals" (formula "8") (term "0,0"))
            (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
            (rule "eqSymm" (formula "7"))
            (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "3"))
            (rule "jdiv_axiom_inline" (formula "2") (term "2,0"))
            (rule "qeq_literals" (formula "2") (term "0,2,0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "div_literals" (formula "2") (term "2,0"))
            (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "3"))
            (rule "add_literals" (formula "8") (term "0"))
            (rule "qeq_literals" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
            (rule "jmod_axiom" (formula "1") (term "0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
            (rule "jdiv_axiom_inline" (formula "1") (term "0,1,0"))
            (rule "mul_literals" (formula "1") (term "0,0,2,0,1,0"))
            (rule "div_literals" (formula "1") (term "1,0,1,0"))
            (rule "qeq_literals" (formula "1") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "times_zero_2" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "equal_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Case 2"
            (builtin "One Step Simplification" (formula "9"))
            (rule "exRight" (formula "9") (inst "t=Z(0(#))") (userinteraction))
            (builtin "One Step Simplification" (formula "5"))
            (rule "bprod_lower_equals_upper" (formula "9") (term "0,1"))
            (rule "true_left" (formula "5"))
            (rule "qeq_literals" (formula "8") (term "0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "eqSymm" (formula "5"))
            (rule "eqSymm" (formula "8"))
            (rule "close" (formula "8") (ifseqformula "1"))
         )
      )
      (branch "Case 2"
         (builtin "One Step Simplification" (formula "5"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "closeTrue" (formula "9"))
      )
   )
   (branch "Case 2"
      (builtin "One Step Simplification" (formula "5"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "closeTrue" (formula "9"))
   )
)
(branch "if x_1 false"
   (builtin "One Step Simplification" (formula "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "notLeft" (formula "1"))
   (rule "ifElseUnfold" (formula "9") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_2"))
   (rule "compound_inequality_comparison_1" (formula "9") (term "1") (inst "#v0=x_3"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_3"))
   (rule "assignmentModulo" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "equal_literals" (formula "9") (term "0,0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "translateJavaMod" (formula "9") (term "0,1,0"))
   (rule "inequality_comparison_simple" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "ifElseSplit" (formula "9"))
   (branch "if x_2 true"
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "methodCallReturn" (formula "10") (term "1"))
      (rule "assignment" (formula "10") (term "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "methodCallEmpty" (formula "10") (term "1"))
      (rule "tryEmpty" (formula "10") (term "1"))
      (rule "emptyModality" (formula "10") (term "1"))
      (rule "andRight" (formula "10"))
      (branch "Case 1"
         (rule "andRight" (formula "10"))
         (branch "Case 1"
            (rule "andRight" (formula "10"))
            (branch "Case 1"
               (rule "impRight" (formula "10"))
               (rule "notRight" (formula "11"))
               (builtin "One Step Simplification" (formula "7"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "10"))
               (rule "notRight" (formula "10"))
               (rule "notLeft" (formula "2"))
               (rule "auto_int_induction_geqZeroLeft" (formula "1") (inst "sk=b_2") (userinteraction))
               (branch "Base Case"
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "bprod_lower_equals_upper" (formula "7") (term "0,1,0"))
                  (rule "true_left" (formula "4"))
                  (rule "qeq_literals" (formula "6") (term "0,0"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "notRight" (formula "6"))
                  (rule "eqSymm" (formula "5"))
                  (rule "eqSymm" (formula "1"))
                  (rule "close" (formula "8") (ifseqformula "1"))
               )
               (branch "Step Case"
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "impRight" (formula "6"))
                  (rule "notRight" (formula "7"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "4"))
                  (rule "eqSymm" (formula "7"))
                  (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "inEqSimp_gtToGeq" (formula "8"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "polySimp_addComm0" (formula "2") (term "1,0"))
                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "7"))
                  (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "7"))
                  (rule "applyEq" (formula "2") (term "1") (ifseqformula "7"))
                  (rule "applyEq" (formula "9") (term "1") (ifseqformula "7"))
                  (rule "jmod_axiom" (formula "10") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "bprod_induction_upper_concrete" (formula "2") (term "0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                  (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "mul_literals" (formula "8") (term "1"))
                  (rule "inEqSimp_strengthen1" (formula "8") (ifseqformula "11"))
                  (rule "add_literals" (formula "8") (term "1"))
                  (rule "inEqSimp_contradEq7" (formula "11") (ifseqformula "8"))
                  (rule "mul_literals" (formula "11") (term "1,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0"))
                  (rule "leq_literals" (formula "11") (term "0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "false_right" (formula "11"))
                  (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                  (rule "leq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "newSym_eq" (formula "1") (inst "l=l_1") (inst "newSymDef=mul(mbyAtPre, Z(0(#)))"))
                  (rule "times_zero_1" (formula "1") (term "1,1"))
                  (rule "add_zero_right" (formula "1") (term "1"))
                  (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "2"))
                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "9"))
                  (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "2"))
                  (rule "eqSymm" (formula "10"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "2"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
                  (rule "eqSymm" (formula "10"))
                  (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                  (rule "add_literals" (formula "9") (term "1,0"))
                  (rule "applyEq" (formula "7") (term "1") (ifseqformula "2"))
                  (rule "polySimp_invertEq" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "times_zero_2" (formula "9") (term "1"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                  (rule "leq_literals" (formula "8") (term "0,0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                  (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "leq_literals" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "inEqSimp_contradEq7" (formula "9") (ifseqformula "8"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0"))
                  (rule "leq_literals" (formula "9") (term "0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "false_right" (formula "9"))
                  (rule "elimGcdEq" (formula "9") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=jdiv(mul(l_1, Z(2(#))), Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,1,0"))
                  (rule "add_literals" (formula "9") (term "1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "9") (term "0,1,0"))
                  (rule "add_literals" (formula "9") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "9") (term "0,1,0"))
                  (rule "qeq_literals" (formula "9") (term "1,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "1,0,0"))
                  (rule "times_zero_1" (formula "9") (term "0,0"))
                  (rule "leq_literals" (formula "9") (term "0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "1,0,0"))
                  (rule "times_zero_1" (formula "9") (term "0,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "jdiv_axiom" (formula "9") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "9"))
                  (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "leq_literals" (formula "1") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "1"))
                  (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "1"))
                  (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=l_1"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0"))
                  (rule "equal_literals" (formula "10") (term "0,0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "polySimp_homoEq" (formula "10"))
                  (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "10") (term "1,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "10") (term "0,0,0,1,0"))
                  (rule "div_literals" (formula "10") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "10") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "1,0"))
                  (rule "times_zero_1" (formula "10") (term "0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "closeTrue" (formula "10"))
               )
            )
         )
         (branch "Case 2"
            (builtin "One Step Simplification" (formula "5"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "closeTrue" (formula "10"))
         )
      )
      (branch "Case 2"
         (builtin "One Step Simplification" (formula "5"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "closeTrue" (formula "10"))
      )
   )
   (branch "if x_2 false"
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "jmod_axiom" (formula "1") (term "0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
      (rule "polySimp_sepNegMonomial" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "returnUnfold" (formula "10") (term "1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "10") (term "1"))
      (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_4"))
      (rule "jdiv_axiom" (formula "1") (term "0,0"))
      (rule "eqSymm" (formula "1"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(x, Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
      (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
      (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0,0,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "2,0"))
      (rule "polySimp_mulAssoc" (formula "1") (term "0,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "11") (term "1"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "var"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,1,0"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,1,1,0"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,0"))
      (rule "add_literals" (formula "1") (term "1,1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,1,0"))
      (rule "add_zero_right" (formula "1") (term "1,0"))
      (rule "assignmentDivisionInt" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "equal_literals" (formula "11") (term "0,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "translateJavaDivInt" (formula "11") (term "0,1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
      (rule "polySimp_pullOutFactor2b" (formula "1") (term "2,0"))
      (rule "add_literals" (formula "1") (term "1,1,2,0"))
      (rule "times_zero_1" (formula "1") (term "1,2,0"))
      (rule "add_zero_right" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=jdiv(x, Z(2(#)))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(jdiv(x, Z(2(#))), Z(neglit(1(#))))"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,2,0"))
      (rule "geq_to_lt_alt" (formula "1") (term "0,0") (userinteraction))
      (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "8") (userinteraction))
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_isPow2_0,result_0,exc_0") (contract "PrefixSumRec[PrefixSumRec::isPow2(int)].JML normal_behavior operation contract.0"))
      (branch "Post (isPow2)"
         (builtin "One Step Simplification" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "9"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "blockEmpty" (formula "13") (term "1"))
         (rule "methodCallReturn" (formula "13") (term "1"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "methodCallEmpty" (formula "13") (term "1"))
         (rule "tryEmpty" (formula "13") (term "1"))
         (rule "emptyModality" (formula "13") (term "1"))
         (rule "andRight" (formula "13"))
         (branch "Case 1"
            (rule "andRight" (formula "13"))
            (branch "Case 1"
               (rule "andRight" (formula "13"))
               (branch "Case 1"
                  (rule "impRight" (formula "13"))
                  (rule "notRight" (formula "14"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "impLeft" (formula "11"))
                  (branch "Case 1"
                     (rule "notLeft" (formula "1"))
                     (rule "andRight" (formula "11"))
                     (branch "Case 1"
                        (rule "close" (formula "12") (ifseqformula "1"))
                     )
                     (branch "Case 2"
                        (rule "close" (formula "12") (ifseqformula "1"))
                     )
                  )
                  (branch "Case 2"
                     (rule "notLeft" (formula "11"))
                     (rule "notLeft" (formula "1"))
                     (rule "andRight" (formula "11"))
                     (branch "Case 1"
                        (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1") (userinteraction))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "hide_right" (formula "12") (userinteraction))
                        (rule "eqSymm" (formula "3") (userinteraction))
                        (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "3") (userinteraction))
                        (rule "jmod_axiom" (formula "11") (term "0") (userinteraction))
                        (rule "hide_left" (formula "10") (userinteraction))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0") (newnames "x_0,x_0,x_0,x_0,x_0,x_0,x_0,x_0"))
                        (rule "eqSymm" (formula "7"))
                        (rule "eqSymm" (formula "2"))
                        (rule "eqSymm" (formula "3"))
                        (rule "inEqSimp_gtToGeq" (formula "8"))
                        (rule "times_zero_1" (formula "8") (term "1,0,0"))
                        (rule "add_zero_right" (formula "8") (term "0,0"))
                        (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "7"))
                        (rule "eqSymm" (formula "2"))
                        (rule "applyEq" (formula "10") (term "0,0,0,0,1,0") (ifseqformula "7"))
                        (rule "polySimp_addComm0" (formula "10") (term "0"))
                        (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "7"))
                        (rule "eqSymm" (formula "3"))
                        (rule "applyEq" (formula "11") (term "0") (ifseqformula "7"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "7"))
                        (rule "eqSymm" (formula "3"))
                        (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "7"))
                        (rule "eqSymm" (formula "2"))
                        (rule "applyEq" (formula "10") (term "0,0,1,0") (ifseqformula "7"))
                        (rule "polySimp_addComm0" (formula "10") (term "0"))
                        (rule "applyEqRigid" (formula "10") (term "0,0,1,0") (ifseqformula "3"))
                        (rule "polySimp_pullOutFactor0" (formula "10") (term "0"))
                        (rule "add_literals" (formula "10") (term "1,0"))
                        (rule "times_zero_1" (formula "10") (term "0"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "closeTrue" (formula "10"))
                     )
                     (branch "Case 2"
                        (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1") (userinteraction))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "hide_right" (formula "12") (userinteraction))
                        (rule "eqSymm" (formula "2") (userinteraction))
                        (rule "applyEq" (formula "11") (term "2,0") (ifseqformula "2") (userinteraction))
                        (builtin "Evaluate Query" (formula "11") (term "0") (newnames "x_0,callee,queryResult,res_isPow2"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "variableDeclaration" (formula "12") (term "1") (newnames "queryResult") (userinteraction))
                        (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_isPow2_4,result_1,exc_1") (contract "PrefixSumRec[PrefixSumRec::isPow2(int)].JML normal_behavior operation contract.0"))
                        (branch "Post (isPow2)"
                           (builtin "One Step Simplification" (formula "12"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "andLeft" (formula "12"))
                           (rule "andLeft" (formula "13"))
                           (rule "andLeft" (formula "13"))
                           (rule "assignment" (formula "15"))
                           (rule "exLeft" (formula "11") (inst "sk=b_11"))
                           (rule "andLeft" (formula "11"))
                           (rule "eqSymm" (formula "8"))
                           (rule "translateJavaDivInt" (formula "14") (term "2,0,1,0,0,1"))
                           (rule "translateJavaMod" (formula "14") (term "0,0,0,0,1"))
                           (rule "eqSymm" (formula "15") (term "1,0,1"))
                           (rule "eqSymm" (formula "16") (term "0,0,1"))
                           (rule "eqSymm" (formula "12"))
                           (rule "inEqSimp_gtToGeq" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "11"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "14") (term "0,0,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "8"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEq" (formula "17") (term "0,2,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "8"))
                           (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "14") (term "0,0,0,0,0,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "14") (term "0,0,2,0,1,0,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "15") (term "0,1,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "8"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                           (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "apply_eq_boolean_rigid" (formula "16") (term "0,0,0,1") (ifseqformula "17"))
                           (rule "eqSymm" (formula "16") (term "0,0,1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "2"))
                           (rule "applyEqRigid" (formula "11") (term "1") (ifseqformula "2"))
                           (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "7"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "mul_literals" (formula "8") (term "1"))
                           (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "13") (term "0,1,0,0,1") (inst "isPow2_sk=isPow2_sk_5") (inst "#p0=x_1") (inst "#self=p") (inst "#res=x") (ifseqformula "6"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "eqSymm" (formula "13") (term "0,1"))
                           (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "16") (term "0") (inst "isPow2_sk=isPow2_sk_6") (inst "#p0=x_1") (inst "#self=p") (inst "#res=x") (ifseqformula "6"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1") (term "0,1"))
                           (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "20"))
                           (rule "add_literals" (formula "9") (term "1"))
                           (rule "inEqSimp_contradEq7" (formula "20") (ifseqformula "9"))
                           (rule "mul_literals" (formula "20") (term "1,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0"))
                           (rule "leq_literals" (formula "20") (term "0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "false_right" (formula "20"))
                           (rule "newSym_eq" (formula "8") (inst "l=l_10") (inst "newSymDef=mul(mbyAtPre, Z(0(#)))"))
                           (rule "times_zero_1" (formula "8") (term "1,1"))
                           (rule "add_zero_right" (formula "8") (term "1"))
                           (rule "applyEq" (formula "15") (term "0,0,1,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "8"))
                           (rule "eqSymm" (formula "9"))
                           (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "16") (term "0,1,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "16") (term "0,0,0,0,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "9"))
                           (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "9"))
                           (rule "applyEq" (formula "17") (term "0,1,1,0,1") (ifseqformula "9"))
                           (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "8"))
                           (rule "applyEq" (formula "13") (term "1") (ifseqformula "8"))
                           (rule "applyEqRigid" (formula "17") (term "1,1,0,1") (ifseqformula "8"))
                           (rule "jmod_axiom" (formula "16") (term "0,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1"))
                           (rule "polySimp_sepNegMonomial" (formula "16") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,1"))
                           (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_10") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "10") (term "0,0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "10") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0"))
                           (rule "leq_literals" (formula "10") (term "0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "polyDiv_pullOut" (formula "8") (term "0") (inst "polyDivCoeff=l_10"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,2,0"))
                           (rule "equal_literals" (formula "8") (term "0,0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "polySimp_homoEq" (formula "8"))
                           (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "8") (term "1,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "8") (term "0,0,0,1,0"))
                           (rule "div_literals" (formula "8") (term "0,0,1,0"))
                           (rule "add_zero_left" (formula "8") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,0"))
                           (rule "times_zero_1" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "methodCallEmpty" (formula "18") (term "1"))
                           (rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_isPow2_5"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "methodBodyExpand" (formula "1") (term "1") (newnames "heapBefore_isPow2_6"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "emptyModality" (formula "18") (term "1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "notLeft" (formula "15"))
                           (rule "nnf_ex2all" (formula "15"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "jdiv_axiom" (formula "4") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_subsumption6" (formula "4") (term "0,0") (ifseqformula "11"))
                           (rule "greater_literals" (formula "4") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                           (rule "leq_literals" (formula "4") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "polyDiv_pullOut" (formula "4") (term "0") (inst "polyDivCoeff=l_10"))
                           (rule "equal_literals" (formula "4") (term "0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_homoEq" (formula "4"))
                           (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "4") (term "1,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "4") (term "0,0,0,1,0"))
                           (rule "div_literals" (formula "4") (term "0,0,1,0"))
                           (rule "add_zero_left" (formula "4") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,0"))
                           (rule "times_zero_1" (formula "4") (term "0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "boxToDiamond" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "notLeft" (formula "15"))
                           (rule "boxToDiamond" (formula "2") (term "1"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "notLeft" (formula "2"))
                           (rule "ifElseUnfold" (formula "15") (term "1") (inst "#boolv=x_2"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_17"))
                           (rule "equality_comparison_simple" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "ifElseUnfold" (formula "14") (term "1") (inst "#boolv=x_2"))
                           (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_18"))
                           (rule "equality_comparison_simple" (formula "14") (term "1"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "allLeft" (formula "1") (inst "t=b_11"))
                           (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "12"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Exceptional Post (isPow2)"
                           (builtin "One Step Simplification" (formula "12"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "andLeft" (formula "12"))
                           (rule "andLeft" (formula "12"))
                           (rule "andLeft" (formula "14"))
                           (rule "notLeft" (formula "12"))
                           (rule "close" (formula "15") (ifseqformula "14"))
                        )
                        (branch "Pre (isPow2)"
                           (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "5")))
                           (rule "exLeft" (formula "11") (inst "sk=b_10"))
                           (rule "andLeft" (formula "11"))
                           (rule "eqSymm" (formula "8"))
                           (rule "eqSymm" (formula "12"))
                           (rule "inEqSimp_gtToGeq" (formula "9"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1"))
                           (rule "inEqSimp_gtToGeq" (formula "13") (term "0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "11"))
                           (rule "applyEq" (formula "13") (term "0,0,0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "14") (term "0,2,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "13") (term "0,1,0,1,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "8"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "8"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "8"))
                           (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "8"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "4"))
                           (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "applyEqRigid" (formula "2") (term "0,0") (ifseqformula "7"))
                           (rule "eqSymm" (formula "2"))
                           (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "7"))
                           (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "11") (term "1") (ifseqformula "2"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "mul_literals" (formula "8") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,1"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0"))
                           (rule "mul_literals" (formula "13") (term "1,0"))
                           (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "12") (term "0") (inst "isPow2_sk=isPow2_sk_4") (inst "#p0=x_1") (inst "#self=p") (inst "#res=x") (ifseqformula "6"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1") (term "0,1"))
                           (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "16"))
                           (rule "add_literals" (formula "9") (term "1"))
                           (rule "inEqSimp_contradEq7" (formula "16") (ifseqformula "9"))
                           (rule "mul_literals" (formula "16") (term "1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0"))
                           (rule "leq_literals" (formula "16") (term "0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "false_right" (formula "16"))
                           (rule "newSym_eq" (formula "8") (inst "l=l_9") (inst "newSymDef=mul(mbyAtPre, Z(0(#)))"))
                           (rule "times_zero_1" (formula "8") (term "1,1"))
                           (rule "add_zero_right" (formula "8") (term "1"))
                           (rule "applyEq" (formula "15") (term "0,1,1") (ifseqformula "8"))
                           (rule "inEqSimp_homoInEq0" (formula "15") (term "1,1"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,1,1"))
                           (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "15") (term "0,0,1") (ifseqformula "8"))
                           (rule "applyEqRigid" (formula "15") (term "0,0") (ifseqformula "8"))
                           (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "8"))
                           (rule "eqSymm" (formula "9"))
                           (rule "applyEqRigid" (formula "3") (term "0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                           (rule "applyEqRigid" (formula "15") (term "1,0,1,1") (ifseqformula "9"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,1"))
                           (rule "add_literals" (formula "15") (term "1,1,0,1,1"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,0,1,1"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                           (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "9"))
                           (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "9"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "8"))
                           (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "8"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,1"))
                           (rule "mul_literals" (formula "15") (term "1,1,1"))
                           (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_9") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "10") (term "0,0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                           (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "10") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0"))
                           (rule "leq_literals" (formula "10") (term "0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "replace_known_left" (formula "15") (term "1,1") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "10")))
                           (rule "inEqSimp_geqRight" (formula "15"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "11") (term "0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "closeFalse" (formula "11"))
                        )
                        (branch "Null reference (callee = null)"
                           (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "15")))
                           (rule "closeTrue" (formula "12"))
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "cut" (inst "cutFormula=result_0 = TRUE") (userinteraction))
                  (branch "CUT: result_0 = TRUE TRUE"
                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
                     (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1") (userinteraction))
                     (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1") (userinteraction))
                     (builtin "One Step Simplification" (formula "10"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "exLeft" (formula "11") (inst "sk=b_9") (userinteraction))
                     (rule "exRightHide" (formula "14") (inst "t=add(b_9, Z(1(#)))") (userinteraction))
                     (rule "notLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "eqSymm" (formula "2"))
                     (rule "eqSymm" (formula "7"))
                     (rule "eqSymm" (formula "11"))
                     (rule "translateJavaDivInt" (formula "12") (term "2,0,1,0"))
                     (rule "translateJavaMod" (formula "12") (term "0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "8"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "1,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "10"))
                     (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "2"))
                     (rule "applyEq" (formula "12") (term "0,0,2,0,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "7"))
                     (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "7"))
                     (rule "eqSymm" (formula "2"))
                     (rule "applyEq" (formula "3") (term "1") (ifseqformula "7"))
                     (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "7"))
                     (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "7"))
                     (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "7"))
                     (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "7"))
                     (rule "eqSymm" (formula "2"))
                     (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "12") (term "0,2,0,1,0") (ifseqformula "2"))
                     (rule "applyEqRigid" (formula "11") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0"))
                     (rule "mul_literals" (formula "15") (term "1,0"))
                     (rule "bprod_induction_upper_concrete" (formula "15") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1"))
                     (rule "replace_known_left" (formula "15") (term "0,0,0,1") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1"))
                     (rule "applyEqRigid" (formula "15") (term "0,0,1") (ifseqformula "11"))
                     (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "inEqSimp_geqRight" (formula "15"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                     (rule "mul_literals" (formula "9") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "13") (term "0,1,0") (inst "isPow2_sk=isPow2_sk_3") (inst "#p0=x_1") (inst "#self=p") (inst "#res=x") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1") (term "0,1"))
                     (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "15"))
                     (rule "add_literals" (formula "10") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "15") (ifseqformula "10"))
                     (rule "mul_literals" (formula "15") (term "1,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0"))
                     (rule "leq_literals" (formula "15") (term "0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "false_right" (formula "15"))
                     (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "12") (term "0"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "closeFalse" (formula "12"))
                  )
                  (branch "CUT: result_0 = TRUE FALSE"
                     (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "11") (userinteraction))
                     (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "11") (userinteraction))
                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "11")))
                     (builtin "One Step Simplification" (formula "9"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "notRight" (formula "14"))
                     (rule "notLeft" (formula "11"))
                     (rule "exLeft" (formula "1") (inst "sk=b_8") (userinteraction))
                     (rule "exRightHide" (formula "11") (inst "t=sub(b_8, Z(1(#)))") (userinteraction))
                     (rule "andRight" (formula "11"))
                     (branch "Case 1"
                        (rule "andLeft" (formula "1"))
                        (rule "true_left" (formula "11"))
                        (rule "eqSymm" (formula "8"))
                        (rule "eqSymm" (formula "3"))
                        (rule "polySimp_elimSub" (formula "11") (term "1"))
                        (rule "mul_literals" (formula "11") (term "1,1"))
                        (rule "inEqSimp_leqRight" (formula "11"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "10"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "9"))
                        (rule "applyEq" (formula "13") (term "0") (ifseqformula "9"))
                        (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "9"))
                        (rule "eqSymm" (formula "4"))
                        (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "9"))
                        (rule "eqSymm" (formula "5"))
                        (rule "applyEq" (formula "3") (term "1") (ifseqformula "9"))
                        (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "9"))
                        (rule "eqSymm" (formula "4"))
                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "5"))
                        (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "4"))
                        (rule "applyEqRigid" (formula "5") (term "0,1") (ifseqformula "4"))
                        (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "9"))
                        (rule "inEqSimp_invertInEq1" (formula "1"))
                        (rule "times_zero_2" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                        (rule "mul_literals" (formula "10") (term "1"))
                        (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "13"))
                        (rule "add_literals" (formula "10") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "13") (ifseqformula "10"))
                        (rule "mul_literals" (formula "13") (term "1,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0"))
                        (rule "leq_literals" (formula "13") (term "0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "false_right" (formula "13"))
                        (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "2"))
                        (rule "bprod_lower_equals_upper" (formula "4") (term "0"))
                        (rule "eqSymm" (formula "4"))
                        (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "2"))
                        (rule "leq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "2"))
                        (rule "div_literals" (formula "8") (term "0,0"))
                        (rule "times_zero_2" (formula "8") (term "0"))
                        (rule "eqSymm" (formula "8"))
                        (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "2"))
                        (rule "jdiv_axiom_inline" (formula "3") (term "0"))
                        (rule "mul_literals" (formula "3") (term "0,0,2,0"))
                        (rule "qeq_literals" (formula "3") (term "0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "div_literals" (formula "3") (term "0"))
                        (rule "eqSymm" (formula "3"))
                        (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "9"))
                        (rule "closeFalse" (formula "9"))
                     )
                     (branch "Case 2"
                        (rule "andLeft" (formula "1"))
                        (rule "bprod_induction_upper" (formula "2") (term "0") (userinteraction))
                        (rule "ifthenelse_split" (formula "2") (term "1,0") (userinteraction))
                        (branch "0 < b_8 TRUE"
                           (rule "true_left" (formula "12"))
                           (rule "eqSymm" (formula "9"))
                           (rule "eqSymm" (formula "12"))
                           (rule "eqSymm" (formula "4"))
                           (rule "polySimp_elimSub" (formula "3") (term "1,0,0"))
                           (rule "mul_literals" (formula "3") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "12") (term "1,0"))
                           (rule "mul_literals" (formula "12") (term "1,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "10"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                           (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "9"))
                           (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "5"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "9"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "9"))
                           (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "9"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "5") (term "0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "5"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "5"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                           (rule "applyEq" (formula "12") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1"))
                           (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "14"))
                           (rule "add_literals" (formula "10") (term "1"))
                           (rule "inEqSimp_contradEq7" (formula "14") (ifseqformula "10"))
                           (rule "mul_literals" (formula "14") (term "1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0"))
                           (rule "leq_literals" (formula "14") (term "0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "false_right" (formula "14"))
                           (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                           (rule "leq_literals" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "polyDiv_pullOut" (formula "11") (term "1") (inst "polyDivCoeff=bprod{int i;}(Z(0(#)),
              add(Z(neglit(1(#))), b_8),
              Z(2(#)))"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,1"))
                           (rule "equal_literals" (formula "11") (term "0,1"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "polySimp_homoEq" (formula "11"))
                           (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                           (rule "add_literals" (formula "11") (term "1,1,0"))
                           (rule "times_zero_1" (formula "11") (term "1,0"))
                           (rule "add_zero_right" (formula "11") (term "0"))
                           (rule "polyDiv_pullOut" (formula "4") (term "0,0") (inst "polyDivCoeff=bprod{int i;}(Z(0(#)),
              add(Z(neglit(1(#))), b_8),
              Z(2(#)))"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0,0"))
                           (rule "equal_literals" (formula "4") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0"))
                           (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0"))
                           (rule "polySimp_homoEq" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_sepNegMonomial" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "apply_eq_monomials" (formula "4") (term "1,0,0,0") (ifseqformula "2"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "1,0,0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,1,0,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,1,0,0,0"))
                           (rule "add_zero_right" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_homoEq" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,1,0"))
                           (rule "add_literals" (formula "4") (term "1,0,0,1,0"))
                           (rule "times_zero_1" (formula "4") (term "0,0,1,0"))
                           (rule "div_literals" (formula "4") (term "0,1,0"))
                           (rule "times_zero_2" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "polySimp_sepNegMonomial" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "polyDiv_pullOut" (formula "3") (term "1") (inst "polyDivCoeff=bprod{int i;}(Z(0(#)),
              add(Z(neglit(1(#))), b_8),
              Z(2(#)))"))
                           (rule "equal_literals" (formula "3") (term "0,1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1"))
                           (rule "polySimp_homoEq" (formula "3"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulAssoc" (formula "3") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "0,1"))
                           (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "3"))
                           (rule "polySimp_sepNegMonomial" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=mul(bprod{int i;}(Z(0(#)),
                  add(Z(neglit(1(#))), b_8),
                  Z(2(#))),
    Z(neglit(1(#))))"))
                           (rule "equal_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_homoEq" (formula "3"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1"))
                           (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "3"))
                           (rule "polyDiv_pullOut" (formula "10") (term "1") (inst "polyDivCoeff=bprod{int i;}(Z(0(#)),
              add(Z(neglit(1(#))), b_8),
              Z(2(#)))"))
                           (rule "equal_literals" (formula "10") (term "0,1"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                           (rule "polySimp_homoEq" (formula "10"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,1,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0"))
                           (rule "add_zero_right" (formula "10") (term "0"))
                           (rule "polyDiv_pullOut" (formula "3") (term "1") (inst "polyDivCoeff=bprod{int i;}(Z(0(#)),
              add(Z(neglit(1(#))), b_8),
              Z(2(#)))"))
                           (rule "equal_literals" (formula "3") (term "0,1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1"))
                           (rule "polySimp_homoEq" (formula "3"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulAssoc" (formula "3") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "0,1"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "3"))
                           (rule "polySimp_sepNegMonomial" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=mul(bprod{int i;}(Z(0(#)),
                  add(Z(neglit(1(#))), b_8),
                  Z(2(#))),
    Z(neglit(1(#))))"))
                           (rule "equal_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_homoEq" (formula "3"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1"))
                           (rule "applyEq" (formula "10") (term "1") (ifseqformula "3"))
                           (rule "polyDiv_pullOut" (formula "10") (term "1") (inst "polyDivCoeff=bprod{int i;}(Z(0(#)),
              add(Z(neglit(1(#))), b_8),
              Z(2(#)))"))
                           (rule "equal_literals" (formula "10") (term "0,1"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                           (rule "polySimp_homoEq" (formula "10"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,1,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0"))
                           (rule "add_zero_right" (formula "10") (term "0"))
                           (rule "polyDiv_pullOut" (formula "3") (term "1") (inst "polyDivCoeff=bprod{int i;}(Z(0(#)),
              add(Z(neglit(1(#))), b_8),
              Z(2(#)))"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,1"))
                           (rule "equal_literals" (formula "3") (term "0,1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_homoEq" (formula "3"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulAssoc" (formula "3") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "0,1"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "3"))
                           (rule "polySimp_sepNegMonomial" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=mul(bprod{int i;}(Z(0(#)),
                  add(Z(neglit(1(#))), b_8),
                  Z(2(#))),
    Z(neglit(1(#))))"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,2,0"))
                           (rule "equal_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_homoEq" (formula "3"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1"))
                           (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "3"))
                           (rule "polyDiv_pullOut" (formula "10") (term "1") (inst "polyDivCoeff=bprod{int i;}(Z(0(#)),
              add(Z(neglit(1(#))), b_8),
              Z(2(#)))"))
                           (rule "equal_literals" (formula "10") (term "0,1"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                           (rule "polySimp_homoEq" (formula "10"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,1,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0"))
                           (rule "add_zero_right" (formula "10") (term "0"))
                           (rule "polyDiv_pullOut" (formula "3") (term "1") (inst "polyDivCoeff=bprod{int i;}(Z(0(#)),
              add(Z(neglit(1(#))), b_8),
              Z(2(#)))"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,1"))
                           (rule "equal_literals" (formula "3") (term "0,1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_homoEq" (formula "3"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulAssoc" (formula "3") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "0,1"))
                           (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "3"))
                           (rule "polySimp_sepNegMonomial" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=mul(bprod{int i;}(Z(0(#)),
                  add(Z(neglit(1(#))), b_8),
                  Z(2(#))),
    Z(neglit(1(#))))"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,2,0"))
                           (rule "equal_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,0"))
                           (rule "polySimp_homoEq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1"))
                           (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "3"))
                           (rule "polyDiv_pullOut" (formula "10") (term "1") (inst "polyDivCoeff=bprod{int i;}(Z(0(#)),
              add(Z(neglit(1(#))), b_8),
              Z(2(#)))"))
                           (rule "equal_literals" (formula "10") (term "0,1"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1"))
                           (rule "polySimp_homoEq" (formula "10"))
                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "1,1,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0"))
                           (rule "add_zero_right" (formula "10") (term "0"))
                           (rule "polyDiv_pullOut" (formula "3") (term "1") (inst "polyDivCoeff=bprod{int i;}(Z(0(#)),
              add(Z(neglit(1(#))), b_8),
              Z(2(#)))"))
                           (rule "equal_literals" (formula "3") (term "0,1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1"))
                           (rule "polySimp_homoEq" (formula "3"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulAssoc" (formula "3") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "0,1"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "3"))
                           (rule "polySimp_sepNegMonomial" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                           (rule "polySimp_elimOne" (formula "10") (term "0"))
                           (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=mul(bprod{int i;}(Z(0(#)),
                  add(Z(neglit(1(#))), b_8),
                  Z(2(#))),
    Z(neglit(1(#))))"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,2,0"))
                           (rule "equal_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_homoEq" (formula "3"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1"))
                           (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "3"))
                           (rule "newSym_eq" (formula "2") (inst "l=l_8") (inst "newSymDef=mul(mbyAtPre, Z(0(#)))"))
                           (rule "times_zero_1" (formula "2") (term "1,1"))
                           (rule "add_zero_right" (formula "2") (term "1"))
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                           (rule "eqSymm" (formula "11"))
                           (rule "applyEqRigid" (formula "3") (term "0,0") (ifseqformula "2"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "3"))
                           (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "3"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "3"))
                           (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_8") (inst "elimGcd=Z(2(#))"))
                           (rule "leq_literals" (formula "9") (term "0,0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                           (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0"))
                           (rule "leq_literals" (formula "9") (term "0"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "polyDiv_pullOut" (formula "4") (term "1") (inst "polyDivCoeff=l_8"))
                           (rule "equal_literals" (formula "4") (term "0,1"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,1"))
                           (rule "add_literals" (formula "4") (term "1,0,0,1"))
                           (rule "times_zero_1" (formula "4") (term "0,0,1"))
                           (rule "div_literals" (formula "4") (term "0,1"))
                           (rule "add_zero_left" (formula "4") (term "1"))
                           (rule "polyDiv_pullOut" (formula "11") (term "0") (inst "polyDivCoeff=l_8"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,2,0"))
                           (rule "equal_literals" (formula "11") (term "0,0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "polySimp_homoEq" (formula "11"))
                           (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "11") (term "1,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "11") (term "0,0,0,1,0"))
                           (rule "div_literals" (formula "11") (term "0,0,1,0"))
                           (rule "add_zero_left" (formula "11") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                           (rule "add_literals" (formula "11") (term "1,0"))
                           (rule "times_zero_1" (formula "11") (term "0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "closeTrue" (formula "11"))
                        )
                        (branch "0 < b_8 FALSE"
                           (rule "true_left" (formula "11"))
                           (rule "eqSymm" (formula "8"))
                           (rule "eqSymm" (formula "3"))
                           (rule "eqSymm" (formula "12"))
                           (rule "polySimp_elimSub" (formula "2") (term "1,0,0"))
                           (rule "mul_literals" (formula "2") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "12") (term "1,0"))
                           (rule "mul_literals" (formula "12") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "11"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "10"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "1,0"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "9"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                           (rule "eqSymm" (formula "12"))
                           (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "5"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "9"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "9"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "5"))
                           (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "5"))
                           (rule "eqSymm" (formula "12"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "5"))
                           (rule "eqSymm" (formula "12"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "4"))
                           (rule "applyEqRigid" (formula "12") (term "0,0,0") (ifseqformula "4"))
                           (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "9"))
                           (rule "polySimp_homoEq" (formula "12"))
                           (rule "polySimp_pullOutFactor0" (formula "12") (term "0"))
                           (rule "add_literals" (formula "12") (term "1,0"))
                           (rule "polySimp_elimOne" (formula "12") (term "0"))
                           (rule "applyEqRigid" (formula "5") (term "0,1") (ifseqformula "4"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "4"))
                           (rule "applyEq" (formula "5") (term "1") (ifseqformula "9"))
                           (rule "inEqSimp_invertInEq1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                           (rule "mul_literals" (formula "10") (term "1"))
                           (rule "inEqSimp_strengthen1" (formula "10") (ifseqformula "14"))
                           (rule "add_literals" (formula "10") (term "1"))
                           (rule "inEqSimp_contradEq7" (formula "14") (ifseqformula "10"))
                           (rule "mul_literals" (formula "14") (term "1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0"))
                           (rule "leq_literals" (formula "14") (term "0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "false_right" (formula "14"))
                           (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                           (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "2"))
                           (rule "add_literals" (formula "4") (term "1,0"))
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "2"))
                           (rule "leq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "newSym_eq" (formula "8") (inst "l=l_7") (inst "newSymDef=mul(mbyAtPre, Z(0(#)))"))
                           (rule "times_zero_1" (formula "8") (term "1,1"))
                           (rule "add_zero_right" (formula "8") (term "1"))
                           (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "8"))
                           (rule "eqSymm" (formula "9"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "8"))
                           (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEq" (formula "2") (term "1") (ifseqformula "9"))
                           (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "9"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "8"))
                           (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_7") (inst "elimGcd=Z(2(#))"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "10") (term "0,0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                           (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                           (rule "add_literals" (formula "10") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0"))
                           (rule "add_literals" (formula "10") (term "0,0"))
                           (rule "leq_literals" (formula "10") (term "0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_contradEq7" (formula "12") (ifseqformula "10"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0"))
                           (rule "leq_literals" (formula "12") (term "0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "false_right" (formula "12"))
                           (rule "polyDiv_pullOut" (formula "8") (term "0") (inst "polyDivCoeff=l_7"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,2,0"))
                           (rule "equal_literals" (formula "8") (term "0,0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0"))
                           (rule "add_literals" (formula "8") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "8") (term "0,0,0"))
                           (rule "div_literals" (formula "8") (term "0,0"))
                           (rule "add_zero_left" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "jdiv_axiom" (formula "3") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "3"))
                           (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                           (rule "inEqSimp_subsumption6" (formula "3") (term "0,0") (ifseqformula "10"))
                           (rule "greater_literals" (formula "3") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                           (rule "leq_literals" (formula "3") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=l_7"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0"))
                           (rule "equal_literals" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "3") (term "0,0,0"))
                           (rule "div_literals" (formula "3") (term "0,0"))
                           (rule "add_zero_left" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "bprod_empty" (formula "2") (term "0") (userinteraction))
                           (branch "Precondition"
                              (rule "leq_literals" (formula "11") (userinteraction))
                              (rule "closeTrue" (formula "11") (userinteraction))
                           )
                           (branch "Empty Sum"
                              (builtin "SMTRule" (newnames "x_0,x_0,x_0,x_0,x_0,x_0,x_0,x_0"))
                           )
                        )
                     )
                  )
               )
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "13"))
               (rule "closeTrue" (formula "13"))
            )
         )
         (branch "Case 2"
            (builtin "One Step Simplification" (formula "13"))
            (rule "closeTrue" (formula "13"))
         )
      )
      (branch "Exceptional Post (isPow2)"
         (builtin "One Step Simplification" (formula "8"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "10"))
         (rule "notLeft" (formula "8"))
         (rule "close" (formula "11") (ifseqformula "10"))
      )
      (branch "Pre (isPow2)"
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "3")))
         (rule "eqSymm" (formula "6"))
         (rule "eqSymm" (formula "1"))
         (rule "inEqSimp_gtToGeq" (formula "7"))
         (rule "times_zero_1" (formula "7") (term "1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0"))
         (rule "inEqSimp_gtToGeq" (formula "10") (term "0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,1"))
         (rule "applyEq" (formula "10") (term "0,1,0,1,1") (ifseqformula "6"))
         (rule "applyEq" (formula "10") (term "0,1,0,0") (ifseqformula "6"))
         (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "6"))
         (rule "eqSymm" (formula "2"))
         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "6"))
         (rule "eqSymm" (formula "1"))
         (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "6"))
         (rule "applyEq" (formula "10") (term "0,0,0,1") (ifseqformula "6"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "6"))
         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
         (rule "applyEq" (formula "6") (term "0") (ifseqformula "2"))
         (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "6"))
         (rule "eqSymm" (formula "1"))
         (rule "applyEq" (formula "10") (term "0,0,1") (ifseqformula "1"))
         (rule "applyEq" (formula "10") (term "1,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "10") (term "1,0,1,1") (ifseqformula "1"))
         (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
         (rule "applyEqRigid" (formula "2") (term "0,1") (ifseqformula "1"))
         (rule "applyEq" (formula "2") (term "1") (ifseqformula "6"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7"))
         (rule "mul_literals" (formula "7") (term "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0"))
         (rule "mul_literals" (formula "10") (term "1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,1"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,1"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1"))
         (rule "mul_literals" (formula "10") (term "0,1,1,1"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,1"))
         (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "8"))
         (rule "add_literals" (formula "7") (term "1"))
         (rule "inEqSimp_contradEq7" (formula "8") (ifseqformula "7"))
         (rule "mul_literals" (formula "8") (term "1,0,0"))
         (rule "add_literals" (formula "8") (term "0,0"))
         (rule "leq_literals" (formula "8") (term "0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "false_right" (formula "8"))
         (rule "newSym_eq" (formula "6") (inst "l=l_2") (inst "newSymDef=mul(mbyAtPre, Z(0(#)))"))
         (rule "times_zero_1" (formula "6") (term "1,1"))
         (rule "add_zero_right" (formula "6") (term "1"))
         (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "6"))
         (rule "eqSymm" (formula "7"))
         (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "6"))
         (rule "inEqSimp_homoInEq0" (formula "10") (term "1,1"))
         (rule "polySimp_addComm1" (formula "10") (term "0,1,1"))
         (rule "applyEqRigid" (formula "10") (term "0,0,1") (ifseqformula "6"))
         (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "6"))
         (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "7"))
         (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
         (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "7"))
         (rule "eqSymm" (formula "1"))
         (rule "applyEq" (formula "10") (term "1,0,1,1") (ifseqformula "7"))
         (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,1"))
         (rule "add_literals" (formula "10") (term "1,1,0,1,1"))
         (rule "polySimp_elimOne" (formula "10") (term "1,0,1,1"))
         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "7"))
         (rule "eqSymm" (formula "1"))
         (rule "applyEq" (formula "2") (term "1") (ifseqformula "7"))
         (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "6"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,1"))
         (rule "mul_literals" (formula "10") (term "1,1,1"))
         (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(2(#))"))
         (rule "leq_literals" (formula "8") (term "0,0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
         (rule "add_literals" (formula "8") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "8") (term "1,0,0"))
         (rule "add_zero_right" (formula "8") (term "0,0"))
         (rule "leq_literals" (formula "8") (term "0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "replace_known_left" (formula "10") (term "1,1") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "8")))
         (rule "inEqSimp_geqRight" (formula "10"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
         (rule "qeq_literals" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
)
)

}
