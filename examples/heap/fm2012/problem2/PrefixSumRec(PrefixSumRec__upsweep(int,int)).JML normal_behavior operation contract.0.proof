\settings {
"#Proof-Settings-Config-File
#Wed Dec 12 09:13:37 CET 2012
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[Strategy]Timeout=-1
[StrategyProperty]RETREAT_MODE_OPTIONS_KEY=RETREAT_MODE_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , initialisation-initialisation\\:disableStaticInitialisation , modelFields-modelFields\\:treatAsAxiom , runtimeExceptions-runtimeExceptions\\:allow
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_NONE
[View]HideIntermediateProofsteps=false
[View]HideClosedSubtrees=false
[General]UseOCL=false
[View]ShowWholeTaclet=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMinimum=-2147483645
[General]StupidMode=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[General]OneStepSimplification=true
[General]UseJML=true
[SMTSettings]integersMaximum=2147483645
[General]DnDDirectionSensitive=true
[View]FontIndex=2
[View]UseSystemLookAndFeel=false
[SMTSettings]useUninterpretedMultiplication=true
[View]MaxTooltipLines=40
[Strategy]MaximumNumberOfAutomaticApplications=100000
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[General]RightClickMacros=false
[SMTSettings]SelectedTaclets=
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[SMTSettings]explicitTypeHierarchy=false
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Wed Dec 12 09:13:37 CET 2012
name=PrefixSumRec[PrefixSumRec\\:\\:upsweep(int,int)].JML normal_behavior operation contract.0
contract=PrefixSumRec[PrefixSumRec\\:\\:upsweep(int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "2628e49c1ca0e1e3075927f5c7701ec15053a70f"))
(keyLog "1" (keyUser "daniel" ) (keyVersion "2628e49c1ca0e1e3075927f5c7701ec15053a70f"))
(keyLog "2" (keyUser "daniel" ) (keyVersion "2628e49c1ca0e1e3075927f5c7701ec15053a70f"))

(autoModeTime "7548366")

(branch "dummy ID"
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(builtin "One Step Simplification" (formula "15"))
(rule "assignment" (formula "15") (term "1"))
(builtin "One Step Simplification" (formula "15"))
(rule "translateJavaMulInt" (formula "15") (term "0,0,0,0,0,0,2,0,0,0,0,1,0,1"))
(rule "eqSymm" (formula "15") (term "1,0,0,1,0,1"))
(rule "translateJavaMulInt" (formula "15") (term "0,0,0,1,1,0,0,0,0,0,1"))
(rule "translateJavaAddInt" (formula "15") (term "1,1,1,0,0,0,0,0,1"))
(rule "translateJavaSubInt" (formula "15") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "translateJavaAddInt" (formula "15") (term "0,0,0,0,2,0,0,0,0,1,0,1"))
(rule "translateJavaAddInt" (formula "15") (term "0,1,1,0,0,0,0,0,1"))
(rule "translateJavaAddInt" (formula "15") (term "0,0,0,0,0,0,0,0,1"))
(rule "translateJavaSubInt" (formula "15") (term "0,0,0,0,0,2,0,0,0,0,1,0,1"))
(rule "translateJavaSubInt" (formula "15") (term "0,0,1,1,0,0,0,0,0,1"))
(rule "translateJavaMulInt" (formula "15") (term "0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "15") (term "0,0,0,0,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "15") (term "0,0,1,1,0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "15") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "15") (term "0,0,0,0,0,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_mulComm0" (formula "15") (term "0,0,0,1,1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "15") (term "0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "15") (term "1,1,1,0,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm1" (formula "15") (term "0,1,1,0,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "15") (term "0,0,1,1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,2,0,0,0,0,1,0,1"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0,0,0,0,1"))
(rule "bsum_induction_upper_concrete" (formula "15") (term "1,1,0,0,0,0,0,1"))
(rule "polySimp_homoEq" (formula "15") (term "1,0,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "15") (term "0,1,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,0,1,0,0,0,0,0,1"))
(rule "polySimp_sepPosMonomial" (formula "15") (term "1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "15") (term "0,1,1,0,0,0,0,0,1"))
(rule "elementOfInfiniteUnion" (formula "15") (term "0,0,0,0,1,0,1"))
(builtin "One Step Simplification" (formula "15"))
(rule "elementOfSingleton" (formula "15") (term "1,0,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "15") (term "0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "15") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "15") (term "0,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "15") (term "1,0,0,0,0,0,0,1"))
(builtin "One Step Simplification" (formula "15"))
(rule "inEqSimp_notLeq" (formula "15") (term "0,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,0,0,0,0,0,0,1"))
(rule "methodBodyExpand" (formula "15") (term "1"))
(builtin "One Step Simplification" (formula "15"))
(rule "variableDeclarationAssign" (formula "15") (term "1"))
(rule "variableDeclaration" (formula "15") (term "1") (newnames "space"))
(rule "assignmentSubtractionInt" (formula "15") (term "1"))
(builtin "One Step Simplification" (formula "15"))
(rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
(rule "polySimp_elimSub" (formula "15") (term "0,1,0"))
(rule "polySimp_addComm0" (formula "15") (term "0,1,0"))
(rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "15") (term "1") (newnames "x"))
(rule "greater_than_comparison_simple" (formula "15") (term "1"))
(builtin "One Step Simplification" (formula "15"))
(rule "inEqSimp_gtToGeq" (formula "15") (term "0,0,1,0"))
(rule "mul_literals" (formula "15") (term "1,0,0,0,0,1,0"))
(rule "add_literals" (formula "15") (term "0,0,0,0,1,0"))
(rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,1,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0"))
(rule "mul_literals" (formula "15") (term "0,1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,0"))
(rule "ifthenelse_split" (formula "15") (term "0,1,0"))
(branch "right >= 2 + left TRUE"
   (rule "if" (formula "16") (term "1"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "methodCallUnfoldArguments" (formula "16") (term "1"))
   (rule "variableDeclarationAssign" (formula "16") (term "1"))
   (rule "variableDeclaration" (formula "16") (term "1") (newnames "var"))
   (rule "compound_subtraction_2" (formula "16") (term "1") (inst "#v0=x") (inst "#v1=x_1"))
   (rule "variableDeclarationAssign" (formula "16") (term "1"))
   (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_8"))
   (rule "assignment" (formula "16") (term "1"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "variableDeclarationAssign" (formula "16") (term "1"))
   (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_9"))
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "true_left" (formula "5"))
   (rule "translateJavaSubInt" (formula "9") (term "1,0") (userinteraction))
   (rule "translateJavaAddInt" (formula "7") (term "0") (userinteraction))
   (rule "translateJavaSubInt" (formula "7") (term "0,0") (userinteraction))
   (rule "translateJavaMulInt" (formula "7") (term "0,0,0") (userinteraction))
   (rule "translateJavaSubInt" (formula "5") (term "0,1") (userinteraction))
   (rule "translateJavaAddInt" (formula "5") (term "1") (userinteraction))
   (rule "translateJavaSubInt" (formula "10") (term "0,1") (userinteraction))
   (builtin "Use Operation Contract" (formula "14") (contract "PrefixSumRec[PrefixSumRec::div2(int)].JML normal_behavior operation contract.0"))
   (branch "Post (div2)"
      (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "translateJavaMulInt" (formula "13") (term "0") (userinteraction))
      (rule "assignment" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "assignmentSubtractionInt" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "var_5"))
      (rule "assignment" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "translateJavaSubInt" (formula "17") (term "0,1,0,0"))
      (rule "polySimp_elimSub" (formula "17") (term "0,1,0,0"))
      (builtin "Use Operation Contract" (formula "17") (contract "PrefixSumRec[PrefixSumRec::upsweep(int,int)].JML normal_behavior operation contract.0"))
      (branch "Post (upsweep)"
         (builtin "One Step Simplification" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "blockEmpty" (formula "22") (term "1"))
         (rule "methodCallUnfoldArguments" (formula "22") (term "1"))
         (rule "variableDeclarationAssign" (formula "22") (term "1"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "var_6"))
         (rule "compound_subtraction_2" (formula "22") (term "1") (inst "#v0=x") (inst "#v1=x_1"))
         (rule "variableDeclarationAssign" (formula "22") (term "1"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_65"))
         (rule "assignment" (formula "22") (term "1"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "variableDeclarationAssign" (formula "22") (term "1"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_66"))
         (builtin "Use Dependency Contract" (formula "19") (ifInst ""  (formula "22") (term "1,0,0,0,1")) (ifInst ""  (formula "16")) (contract "PrefixSumRec[java.lang.Object::<inv>()].JML accessible clause.0"))
         (rule "wellFormedAnonEQ" (formula "20") (term "1,0,0,0,0,0") (ifseqformula "16"))
         (rule "translateJavaMulInt" (formula "20") (term "0,0,0,0,0,0,0,1,0"))
         (rule "translateJavaAddInt" (formula "20") (term "0,0,0,0,0,1,0"))
         (rule "translateJavaSubInt" (formula "20") (term "0,0,0,0,0,0,1,0"))
         (rule "replace_known_left" (formula "20") (term "1,0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "15")) (ifInst ""  (formula "22")) (ifInst ""  (formula "11")) (ifInst ""  (formula "19")) (ifInst ""  (formula "11")))
         (rule "true_left" (formula "20"))
         (builtin "Use Operation Contract" (formula "22") (contract "PrefixSumRec[PrefixSumRec::div2(int)].JML normal_behavior operation contract.0"))
         (branch "Post (div2)"
            (builtin "One Step Simplification" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "translateJavaAddInt" (formula "16") (term "0,0,0,0,1,0") (userinteraction))
            (rule "translateJavaSubInt" (formula "16") (term "0,0,0,0,0,1,0") (userinteraction))
            (rule "translateJavaMulInt" (formula "16") (term "0,0,0,0,0,0,1,0") (userinteraction))
            (rule "translateJavaAddInt" (formula "18") (term "0,0,0,0") (userinteraction))
            (rule "translateJavaSubInt" (formula "18") (term "0,0,0,0,0") (userinteraction))
            (rule "translateJavaMulInt" (formula "18") (term "0,0,0,0,0,0") (userinteraction))
            (rule "translateJavaAddInt" (formula "18") (term "0,1,1,0") (userinteraction))
            (rule "translateJavaSubInt" (formula "18") (term "0,0,1,1,0") (userinteraction))
            (rule "translateJavaMulInt" (formula "18") (term "0,0,0,1,1,0") (userinteraction))
            (rule "translateJavaAddInt" (formula "18") (term "1,1,1,0") (userinteraction))
            (builtin "One Step Simplification" (formula "25"))
            (rule "assignment" (formula "25") (term "1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "assignmentSubtractionInt" (formula "25") (term "1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "variableDeclarationAssign" (formula "25") (term "1"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "var_7"))
            (rule "assignment" (formula "25") (term "1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "translateJavaSubInt" (formula "25") (term "0,1,0,0"))
            (rule "polySimp_elimSub" (formula "25") (term "0,1,0,0"))
            (rule "polySimp_addComm0" (formula "25") (term "0,1,0,0"))
            (builtin "Use Dependency Contract" (formula "19") (ifInst ""  (formula "25") (term "1,0,0,0,1")) (ifInst ""  (formula "16")) (contract "PrefixSumRec[java.lang.Object::<inv>()].JML accessible clause.0"))
            (rule "wellFormedAnonEQ" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "16"))
            (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "15")) (ifInst ""  (formula "25")) (ifInst ""  (formula "3")) (ifInst ""  (formula "19")) (ifInst ""  (formula "11")))
            (rule "true_left" (formula "23"))
            (builtin "Use Operation Contract" (formula "25") (contract "PrefixSumRec[PrefixSumRec::upsweep(int,int)].JML normal_behavior operation contract.0"))
            (branch "Post (upsweep)"
               (builtin "One Step Simplification" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "translateJavaAddInt" (formula "24") (term "0,0,0,0,1,0") (userinteraction))
               (rule "translateJavaSubInt" (formula "24") (term "0,0,0,0,0,1,0") (userinteraction))
               (rule "translateJavaMulInt" (formula "24") (term "0,0,0,0,0,0,1,0") (userinteraction))
               (rule "translateJavaAddInt" (formula "26") (term "0,0,0,0") (userinteraction))
               (rule "translateJavaSubInt" (formula "26") (term "0,0,0,0,0") (userinteraction))
               (rule "translateJavaMulInt" (formula "26") (term "0,0,0,0,0,0") (userinteraction))
               (rule "translateJavaAddInt" (formula "26") (term "0,1,1,0") (userinteraction))
               (rule "translateJavaSubInt" (formula "26") (term "0,0,1,1,0") (userinteraction))
               (rule "translateJavaMulInt" (formula "26") (term "0,0,0,1,1,0") (userinteraction))
               (rule "translateJavaAddInt" (formula "26") (term "1,1,1,0") (userinteraction))
               (rule "translateJavaMulInt" (formula "21") (term "0") (userinteraction))
               (builtin "One Step Simplification" (formula "30"))
               (rule "blockEmpty" (formula "30") (term "1"))
               (rule "eval_order_array_access3" (formula "30") (term "1") (inst "#v0=x_arr") (inst "#v2=x") (inst "#v1=x_1"))
               (rule "variableDeclarationAssign" (formula "30") (term "1"))
               (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_arr_1"))
               (rule "assignment" (formula "30") (term "1"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "variableDeclarationAssign" (formula "30") (term "1"))
               (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_76"))
               (rule "assignment" (formula "30") (term "1"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "selectOfAnonEQ" (formula "30") (term "0,1,0,0") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "selectCreatedOfAnonEQ" (formula "30") (term "0,0,1,1,0,0,1,0,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "replace_known_right" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "replace_known_left" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "polySimp_elimSub" (formula "30") (term "0,0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,0,2,0,0,1,0,0"))
               (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0,2,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,2,0,0,1,0,0"))
               (rule "elementOfInfiniteUnion" (formula "30") (term "0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "elementOfSingleton" (formula "30") (term "1,0,0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "selectOfAnonEQ" (formula "30") (term "0,1,0,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "replace_known_right" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "replace_known_left" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "polySimp_elimSub" (formula "30") (term "0,0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,0,0,2,0,0,1,0,0"))
               (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0,2,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,0,2,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,2,0,0,1,0,0"))
               (rule "elementOfInfiniteUnion" (formula "30") (term "0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "elementOfSingleton" (formula "30") (term "1,0,0,0,1,0,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "ifUnfold" (formula "30") (term "1") (inst "#boolv=x_77"))
               (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_77"))
               (rule "compound_assignment_5_nonsimple" (formula "30") (term "1"))
               (rule "ifElseUnfold" (formula "30") (term "1") (inst "#boolv=x_78"))
               (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_78"))
               (rule "compound_less_equal_than_comparison_1" (formula "30") (term "1") (inst "#v0=x_79"))
               (rule "variableDeclarationAssign" (formula "30") (term "1"))
               (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_79"))
               (rule "assignment_read_length" (formula "30") (term "1"))
               (branch "Normal Execution (a != null)"
                  (builtin "One Step Simplification" (formula "30"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "selectOfAnonEQ" (formula "30") (term "0") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "29")))
                  (rule "selectCreatedOfAnonEQ" (formula "30") (term "0,0,1,0,0") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "3")))
                  (rule "polySimp_elimSub" (formula "30") (term "0,0,0,0,0,2,0,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,2,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,2,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,0,2,0,0"))
                  (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,2,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,2,0,0"))
                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0,2,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,2,0,0"))
                  (rule "elementOfInfiniteUnion" (formula "30") (term "0,0"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "elementOfSingleton" (formula "30") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "selectOfAnonEQ" (formula "31") (term "0,0,1,0") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "selectCreatedOfAnonEQ" (formula "31") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "replace_known_left" (formula "31") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "polySimp_elimSub" (formula "31") (term "0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "0,0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,0,2,0,0,0,1,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,2,0,0,0,1,0"))
                  (rule "elementOfInfiniteUnion" (formula "31") (term "0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "elementOfSingleton" (formula "31") (term "1,0,0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "selectOfAnonEQ" (formula "31") (term "0,0,1,0") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "replace_known_right" (formula "31") (term "0,0,1,0,0,0,1,0") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "replace_known_left" (formula "31") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "polySimp_elimSub" (formula "31") (term "0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "0,0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0,0,2,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,2,0,0,0,1,0"))
                  (rule "elementOfInfiniteUnion" (formula "31") (term "0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "elementOfSingleton" (formula "31") (term "1,0,0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "selectOfAnonEQ" (formula "30") (term "0") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "29")) (ifInst ""  (formula "3")))
                  (rule "polySimp_elimSub" (formula "30") (term "0,0,0,0,0,2,0,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,2,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,2,0,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,2,0,0"))
                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,0,0,2,0,0"))
                  (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,0,2,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,2,0,0"))
                  (rule "elementOfInfiniteUnion" (formula "30") (term "0,0"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "elementOfSingleton" (formula "30") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "less_equal_than_comparison_simple" (formula "31") (term "1"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "ifthenelse_split" (formula "31") (term "0,1,0"))
                  (branch "self.a.length <= right TRUE"
                     (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "11") (term "0,1"))
                     (rule "polySimp_elimSub" (formula "27") (term "0,0,1,1,0"))
                     (rule "polySimp_elimSub" (formula "17") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_elimSub" (formula "19") (term "0,0,1,1,0"))
                     (rule "polySimp_elimSub" (formula "19") (term "0,0,0,0,0"))
                     (rule "polySimp_elimSub" (formula "27") (term "0,0,0,0,0"))
                     (rule "polySimp_elimSub" (formula "25") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_homoEq" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                     (rule "polySimp_homoEq" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "6") (term "0,1"))
                     (rule "polySimp_elimSub" (formula "8") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "11") (term "1"))
                     (rule "polySimp_homoEq" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "23"))
                     (rule "inEqSimp_gtToGeq" (formula "7"))
                     (rule "inEqSimp_ltToLeq" (formula "15"))
                     (rule "inEqSimp_ltToLeq" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                     (rule "polySimp_addComm0" (formula "27") (term "1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "19") (term "1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                     (rule "polySimp_addComm1" (formula "22") (term "0"))
                     (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                     (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "0,0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "0,0,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,1,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,1,0"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "27") (term "0,0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,1,1,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                     (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "29") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_59"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "1") (term "0,1"))
                     (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "12") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_60"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "eqSymm" (formula "12") (term "0,1"))
                     (rule "polySimp_sepPosMonomial" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1"))
                     (rule "polySimp_rightDist" (formula "16") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "16") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "16") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "16") (term "0,1"))
                     (rule "applyEq" (formula "34") (term "0,1,0,0,0,0,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "16"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
                     (rule "add_literals" (formula "8") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0"))
                     (rule "applyEq" (formula "29") (term "1,1,0,0,0") (ifseqformula "16"))
                     (rule "polySimp_addComm1" (formula "29") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,1,0,0,0"))
                     (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "16"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                     (rule "add_literals" (formula "7") (term "0,0,0"))
                     (rule "applyEq" (formula "13") (term "0,1,0,1") (ifseqformula "16"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1"))
                     (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "16"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "1,1,0"))
                     (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "16"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                     (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,0,0"))
                     (rule "applyEq" (formula "27") (term "1,1,0,0,0,1,0") (ifseqformula "16"))
                     (rule "polySimp_addComm1" (formula "27") (term "1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,0,0,1,0"))
                     (rule "applyEq" (formula "29") (term "1,0,1,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "16"))
                     (rule "polySimp_addAssoc" (formula "11") (term "1,0"))
                     (rule "polySimp_pullOutFactor2" (formula "11") (term "0,1,0"))
                     (rule "add_literals" (formula "11") (term "1,0,1,0"))
                     (rule "times_zero_1" (formula "11") (term "0,1,0"))
                     (rule "add_zero_left" (formula "11") (term "1,0"))
                     (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "16"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                     (rule "polySimp_pullOutFactor2" (formula "24") (term "0,0,0"))
                     (rule "add_literals" (formula "24") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "24") (term "0,0,0"))
                     (rule "add_zero_left" (formula "24") (term "0,0"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0"))
                     (rule "applyEq" (formula "2") (term "1") (ifseqformula "16"))
                     (rule "applyEq" (formula "27") (term "1,0,1,0,0,1,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "16"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                     (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0"))
                     (rule "applyEq" (formula "34") (term "0,1,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "29") (term "1,0,1,1,0") (ifseqformula "16"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,1,0"))
                     (rule "applyEq" (formula "10") (term "1,0,0") (ifseqformula "16"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "bsum_induction_upper_concrete" (formula "21") (term "1,1,0"))
                     (rule "polySimp_homoEq" (formula "21") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "0,1,0,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1"))
                     (rule "polySimp_rightDist" (formula "7") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                     (rule "mul_literals" (formula "7") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                     (rule "applyEq" (formula "34") (term "1,0,1,0,0,0,0,0,0") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "34") (term "0,0,1,0,0,0,0,0,0"))
                     (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "27") (term "1,1,0,1,0,0,1,0") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "27") (term "1,0,1,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "27") (term "0,1,0,1,0,0,1,0"))
                     (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                     (rule "add_literals" (formula "8") (term "0,0"))
                     (rule "applyEq" (formula "29") (term "1,1,0,1,0,0") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "29") (term "1,0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "29") (term "0,1,0,1,0,0"))
                     (rule "applyEq" (formula "34") (term "1,0,1,0,0") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "34") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "2") (term "1"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                     (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                     (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "16") (term "1"))
                     (rule "polySimp_addComm0" (formula "16") (term "0,1"))
                     (rule "applyEq" (formula "27") (term "1,0,1,0,0,0,1,0") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,1,0"))
                     (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "10") (term "1,0,0") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,0"))
                     (rule "applyEq" (formula "29") (term "1,0,1,0,0,0") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0,1,0,0,0"))
                     (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
                     (rule "applyEq" (formula "29") (term "1,0,0,1,1,0") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,1,0"))
                     (rule "add_literals" (formula "29") (term "0,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "29") (term "0,0,0,1,1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "13") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
                     (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "7"))
                     (rule "polySimp_homoEq" (formula "13") (term "1"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                     (rule "add_literals" (formula "13") (term "0,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                     (rule "polySimp_elimOne" (formula "17") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq0" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "21") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1"))
                     (rule "polySimp_rightDist" (formula "25") (term "1"))
                     (rule "mul_literals" (formula "25") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                     (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "7"))
                     (rule "polySimp_addAssoc" (formula "25") (term "1"))
                     (rule "add_literals" (formula "25") (term "0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "11") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_27"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "eqSymm" (formula "11") (term "0,1"))
                     (rule "applyEqRigid" (formula "11") (term "1,0,1") (ifseqformula "12"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "mul_literals" (formula "8") (term "1"))
                     (rule "polySimp_sepNegMonomial" (formula "14") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "14") (term "0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "bsum_induction_upper_concrete" (formula "30") (term "1,1,0"))
                     (rule "polySimp_homoEq" (formula "30") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "30") (term "0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                     (rule "polySimp_sepPosMonomial" (formula "30") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_contradEq7" (formula "14") (term "1") (ifseqformula "3"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,1"))
                     (rule "add_literals" (formula "14") (term "0,0,1"))
                     (rule "leq_literals" (formula "14") (term "0,1"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "notLeft" (formula "14"))
                     (rule "apply_eq_boolean_rigid" (formula "13") (term "1,0,1") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "10"))
                     (rule "andLeft" (formula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,1,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0"))
                     (rule "add_zero_right" (formula "2") (term "0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,1,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0"))
                     (rule "add_literals" (formula "2") (term "0"))
                     (rule "leq_literals" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "self.a.length <= right FALSE"
                     (rule "inEqSimp_leqRight" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "ifElse" (formula "32") (term "1"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "less_than_comparison_simple" (formula "32") (term "1"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "blockEmpty" (formula "32") (term "1"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "1,0,0,1,0"))
                     (rule "ifthenelse_split" (formula "32") (term "0,1,0"))
                     (branch "right <= -1 TRUE"
                        (rule "polySimp_elimSub" (formula "11") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "12") (term "0,1"))
                        (rule "polySimp_elimSub" (formula "28") (term "0,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "7") (term "0,1"))
                        (rule "polySimp_elimSub" (formula "18") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "26") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_homoEq" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "9") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "20") (term "0,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "20") (term "0,0,0,0,0"))
                        (rule "polySimp_elimSub" (formula "28") (term "0,0,0,0,0"))
                        (rule "polySimp_homoEq" (formula "15"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                        (rule "polySimp_homoEq" (formula "12") (term "1"))
                        (rule "polySimp_homoEq" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                        (rule "inEqSimp_gtToGeq" (formula "8"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24"))
                        (rule "inEqSimp_ltToLeq" (formula "16"))
                        (rule "inEqSimp_ltToLeq" (formula "10"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_addComm0" (formula "20") (term "1,1,1,0"))
                        (rule "polySimp_addComm0" (formula "28") (term "1,1,1,0"))
                        (rule "polySimp_addComm0" (formula "11") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0"))
                        (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                        (rule "polySimp_addComm0" (formula "12") (term "1,1,0,1"))
                        (rule "polySimp_addComm1" (formula "10") (term "0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "0,0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "0,0,0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,1,1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,1,1,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,1,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0"))
                        (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "28") (term "0,0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,1,1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,1,1,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,0,0,1,1,0"))
                        (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                        (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "30") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_57"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1") (term "0,1"))
                        (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "13") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_58"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "eqSymm" (formula "13") (term "0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1"))
                        (rule "polySimp_rightDist" (formula "25") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                        (rule "polySimp_mulAssoc" (formula "25") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "25") (term "0,1"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "25"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                        (rule "polySimp_pullOutFactor2" (formula "17") (term "0,0,0"))
                        (rule "add_literals" (formula "17") (term "1,0,0,0"))
                        (rule "times_zero_1" (formula "17") (term "0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0"))
                        (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "25"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0"))
                        (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,0"))
                        (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0"))
                        (rule "applyEq" (formula "35") (term "0,1,0,0,0,0,0,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "25"))
                        (rule "polySimp_addAssoc" (formula "3") (term "1"))
                        (rule "applyEq" (formula "14") (term "0,1,0,1") (ifseqformula "25"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1"))
                        (rule "applyEq" (formula "30") (term "1,0,1,0,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "35") (term "0,1,0,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "25"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                        (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "1,1,0"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "25"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "25"))
                        (rule "polySimp_addAssoc" (formula "12") (term "1,0"))
                        (rule "polySimp_pullOutFactor2" (formula "12") (term "0,1,0"))
                        (rule "add_literals" (formula "12") (term "1,0,1,0"))
                        (rule "times_zero_1" (formula "12") (term "0,1,0"))
                        (rule "add_zero_left" (formula "12") (term "1,0"))
                        (rule "applyEq" (formula "28") (term "1,1,0,0,0,1,0") (ifseqformula "25"))
                        (rule "polySimp_addAssoc" (formula "28") (term "1,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "28") (term "1,0,0,0,1,0"))
                        (rule "add_literals" (formula "28") (term "1,1,1,0,0,0,1,0"))
                        (rule "times_zero_1" (formula "28") (term "1,1,0,0,0,1,0"))
                        (rule "add_zero_right" (formula "28") (term "1,0,0,0,1,0"))
                        (rule "applyEq" (formula "30") (term "1,1,0,0,0") (ifseqformula "25"))
                        (rule "polySimp_addAssoc" (formula "30") (term "1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "30") (term "1,0,0,0"))
                        (rule "add_literals" (formula "30") (term "1,1,1,0,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,1,0,0,0"))
                        (rule "add_zero_right" (formula "30") (term "1,0,0,0"))
                        (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "25"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0"))
                        (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0"))
                        (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "25"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                        (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0"))
                        (rule "add_zero_right" (formula "9") (term "0,0"))
                        (rule "applyEq" (formula "28") (term "1,0,1,0,0,1,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "25"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "4") (term "1,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0"))
                        (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "25"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                        (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                        (rule "add_literals" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,0,0"))
                        (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "25"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                        (rule "applyEq" (formula "30") (term "1,0,1,1,0") (ifseqformula "25"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,1,1,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,1,1,0"))
                        (rule "add_literals" (formula "30") (term "1,1,0,1,1,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,1,1,0"))
                        (rule "add_zero_right" (formula "30") (term "0,1,1,0"))
                        (rule "bsum_induction_upper_concrete" (formula "22") (term "1,1,0"))
                        (rule "polySimp_homoEq" (formula "22") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "0,1,0,1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1"))
                        (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "28") (term "1,1,0,1,0,0,1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "17"))
                        (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "30") (term "1,1,0,1,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "35") (term "1,0,1,0,0,0,0,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "35") (term "1,0,1,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "17"))
                        (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "17"))
                        (rule "polySimp_sepNegMonomial" (formula "14") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,1"))
                        (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "17"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "17"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                        (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                        (rule "inEqSimp_homoInEq1" (formula "18"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                        (rule "add_literals" (formula "18") (term "1,1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "22") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "8"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1"))
                        (rule "polySimp_rightDist" (formula "8") (term "1"))
                        (rule "mul_literals" (formula "8") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                        (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "8"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                        (rule "add_literals" (formula "9") (term "0,0"))
                        (rule "applyEq" (formula "30") (term "1,1,0,1,0,0") (ifseqformula "8"))
                        (rule "polySimp_addAssoc" (formula "30") (term "1,0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "30") (term "0,1,0,1,0,0"))
                        (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "8"))
                        (rule "polySimp_addAssoc" (formula "3") (term "1"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                        (rule "add_literals" (formula "3") (term "0,0,1"))
                        (rule "add_zero_left" (formula "3") (term "0,1"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0"))
                        (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "8"))
                        (rule "polySimp_homoEq" (formula "14") (term "1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                        (rule "add_literals" (formula "14") (term "0,0,1"))
                        (rule "applyEq" (formula "28") (term "1,1,0,1,0,0,1,0") (ifseqformula "8"))
                        (rule "polySimp_addAssoc" (formula "28") (term "1,0,1,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "28") (term "0,1,0,1,0,0,1,0"))
                        (rule "applyEq" (formula "35") (term "1,0,1,0,0,0,0,0,0") (ifseqformula "8"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addComm0" (formula "35") (term "0,0,1,0,0,0,0,0,0"))
                        (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "35") (term "1,0,1,0,0") (ifseqformula "8"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,0"))
                        (rule "polySimp_addComm0" (formula "35") (term "0,0,1,0,0"))
                        (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "8"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                        (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "8"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "11") (term "0,0,0"))
                        (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "8"))
                        (rule "polySimp_addAssoc" (formula "25") (term "1"))
                        (rule "polySimp_addComm0" (formula "25") (term "0,1"))
                        (rule "applyEq" (formula "17") (term "1") (ifseqformula "8"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "17"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                        (rule "applyEq" (formula "10") (term "0") (ifseqformula "17"))
                        (rule "inEqSimp_homoInEq0" (formula "10"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                        (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0"))
                        (rule "bsum_induction_upper_concrete" (formula "30") (term "1,1,0"))
                        (rule "polySimp_homoEq" (formula "30") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "30") (term "0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                        (rule "polySimp_elimOne" (formula "18") (term "0"))
                        (rule "polySimp_sepNegMonomial" (formula "14") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "mul_literals" (formula "9") (term "1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "12") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_26"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "eqSymm" (formula "12") (term "0,1"))
                        (rule "applyEqRigid" (formula "12") (term "1,0,1") (ifseqformula "13"))
                        (rule "polySimp_sepPosMonomial" (formula "31") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0"))
                        (rule "bsum_induction_lower2_concrete" (formula "30") (term "0,0,1,1,0"))
                        (rule "polySimp_homoEq" (formula "30") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "30") (term "0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,1,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "30") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "0,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "30") (term "0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "0,0,0,1,0"))
                        (rule "polySimp_homoEq" (formula "30") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "30") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,1,0"))
                        (rule "inEqSimp_contradEq7" (formula "14") (term "1") (ifseqformula "4"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,1"))
                        (rule "add_literals" (formula "14") (term "0,0,1"))
                        (rule "leq_literals" (formula "14") (term "0,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "apply_eq_boolean_rigid" (formula "13") (term "1,0,1") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "4"))
                        (rule "leq_literals" (formula "9") (term "0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                        (rule "mul_literals" (formula "4") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "10"))
                        (rule "mul_literals" (formula "5") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                        (rule "mul_literals" (formula "5") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "4") (term "0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                     (branch "right <= -1 FALSE"
                        (rule "inEqSimp_leqRight" (formula "32"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "if" (formula "33") (term "1"))
                        (builtin "One Step Simplification" (formula "33"))
                        (rule "variableDeclarationAssign" (formula "33") (term "1"))
                        (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_80"))
                        (rule "compound_addition_2" (formula "33") (term "1") (inst "#v0=x_81") (inst "#v1=x_82"))
                        (rule "variableDeclarationAssign" (formula "33") (term "1"))
                        (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_81"))
                        (rule "assignment_array2" (formula "33") (term "1"))
                        (branch "Normal Execution (a != null)"
                           (builtin "One Step Simplification" (formula "33"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "orRight" (formula "33"))
                           (rule "orRight" (formula "33"))
                           (rule "variableDeclarationAssign" (formula "36") (term "1"))
                           (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_82"))
                           (rule "assignment_array2" (formula "36") (term "1"))
                           (branch "Normal Execution (a != null)"
                              (builtin "One Step Simplification" (formula "37"))
                              (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "33")))
                              (rule "orRight" (formula "36"))
                              (rule "assignmentAdditionInt" (formula "38") (term "1"))
                              (rule "assignment_to_primitive_array_component" (formula "38") (term "1,1"))
                              (branch "Normal Execution (x_arr_1 != null)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "11")) (ifInst ""  (formula "2")))
                                 (rule "true_left" (formula "1"))
                                 (rule "translateJavaAddInt" (formula "38") (term "0,0,1"))
                                 (rule "methodCallEmpty" (formula "38") (term "1,1,1"))
                                 (rule "tryEmpty" (formula "38") (term "1,1,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "emptyModality" (formula "38") (term "1") (userinteraction))
                                 (rule "cut" (inst "cutFormula=  int[]::select(heapAfter_upsweep_0,
                self,
                PrefixSumRec::$a)
= int[]::select(heapAfter_upsweep,
                self,
                PrefixSumRec::$a)") (userinteraction))
                                 (branch "CUT: int[]::select(heapAfter_upsweep_0, self, a) = int[]::select(heapAfter_upsweep, self, a) TRUE"
                                    (rule "cut" (inst "cutFormula=  int[]::select(heapAfter_upsweep,
                self,
                PrefixSumRec::$a)
= int[]::select(heap, self, PrefixSumRec::$a)") (userinteraction))
                                    (branch "CUT: int[]::select(heapAfter_upsweep, self, a) = self.a TRUE"
                                       (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "2") (userinteraction))
                                       (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "1") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "2") (userinteraction))
                                       (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "1") (userinteraction))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "2") (userinteraction))
                                       (rule "applyEq" (formula "35") (term "0") (ifseqformula "1") (userinteraction))
                                       (rule "applyEq" (formula "30") (term "1,2,1,1,0") (ifseqformula "1") (userinteraction))
                                       (rule "applyEq" (formula "39") (term "1,0,3,0,1,0") (ifseqformula "2") (userinteraction))
                                       (rule "applyEq" (formula "39") (term "1,0,3,0,1,0") (ifseqformula "1") (userinteraction))
                                       (rule "applyEq" (formula "39") (term "1,1,3,0,1,0") (ifseqformula "2") (userinteraction))
                                       (rule "applyEq" (formula "39") (term "1,1,3,0,1,0") (ifseqformula "1") (userinteraction))
                                       (rule "applyEq" (formula "22") (term "1,0,1,0") (ifseqformula "1") (userinteraction))
                                       (rule "applyEq" (formula "28") (term "0,1,0,1,0") (ifseqformula "1") (userinteraction))
                                       (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "2") (userinteraction))
                                       (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "1") (userinteraction))
                                       (rule "andRight" (formula "39"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "39"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "39"))
                                             (branch "Case 1"
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "auto_int_induction_geqZero" (formula "39") (inst "sk=k_29") (userinteraction))
                                                (branch "Base Case"
                                                   (rule "orRight" (formula "39"))
                                                   (rule "orRight" (formula "39"))
                                                   (rule "orRight" (formula "40"))
                                                   (rule "polySimp_homoEq" (formula "9"))
                                                   (rule "polySimp_elimSub" (formula "28") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "30") (term "0,0,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "13") (term "1,0"))
                                                   (rule "polySimp_homoEq" (formula "17"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                   (rule "polySimp_homoEq" (formula "25"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                                   (rule "polySimp_elimSub" (formula "22") (term "0,0,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "22") (term "0,0,0,0,0"))
                                                   (rule "polySimp_elimSub" (formula "30") (term "0,0,0,0,0"))
                                                   (rule "polySimp_elimSub" (formula "11") (term "0,0"))
                                                   (rule "polySimp_elimSub" (formula "20") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "0,1"))
                                                   (rule "polySimp_homoEq" (formula "42"))
                                                   (rule "polySimp_elimSub" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_homoEq" (formula "14") (term "1"))
                                                   (rule "inEqSimp_ltRight" (formula "36"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "36"))
                                                   (rule "inEqSimp_ltRight" (formula "38"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "37"))
                                                   (rule "inEqSimp_leqRight" (formula "38"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "39"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "15"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "1,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "27") (term "1,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "19") (term "1,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "0,1,0,1"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,1,0"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "1,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,1,1,0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,1,0,0"))
                                                   (rule "times_zero_2" (formula "41") (term "1,0,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "41") (term "0,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0"))
                                                   (rule "applyEq" (formula "7") (term "1") (ifseqformula "6"))
                                                   (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "37") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_238"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "1") (term "0,1"))
                                                   (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "38"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "20") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_239"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "eqSymm" (formula "20") (term "0,1"))
                                                   (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "42") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_240"))
                                                   (rule "eqSymm" (formula "1") (term "0,1"))
                                                   (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "43"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "25") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "0,1"))
                                                   (rule "applyEq" (formula "36") (term "1,0,1,0,0,1,0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "25"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0"))
                                                   (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "25"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "1"))
                                                   (rule "applyEq" (formula "1") (term "0,2,0,0,0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "22") (term "0,1,0,1") (ifseqformula "25"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                   (rule "applyEq" (formula "10") (term "0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "25"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "25"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0"))
                                                   (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "25"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "16") (term "0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0"))
                                                   (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "25"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor2" (formula "33") (term "0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "1,0,0,0"))
                                                   (rule "times_zero_1" (formula "33") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "33") (term "0,0"))
                                                   (rule "applyEq" (formula "44") (term "0,1,0,0,1,0") (ifseqformula "25"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "44") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "25"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "12") (term "0,0"))
                                                   (rule "applyEq" (formula "38") (term "1,0,1,0,0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "38") (term "1,1,0,0,0") (ifseqformula "25"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,0,0"))
                                                   (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "25"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,0,0"))
                                                   (rule "applyEq" (formula "36") (term "1,1,0,0,0,1,0") (ifseqformula "25"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "25"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor2" (formula "20") (term "0,1,0"))
                                                   (rule "add_literals" (formula "20") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "20") (term "0,1,0"))
                                                   (rule "add_zero_left" (formula "20") (term "1,0"))
                                                   (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "25"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0"))
                                                   (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "25"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "1") (term "0,2,1,3,0,0,0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "25"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                   (rule "applyEq" (formula "38") (term "1,0,1,1,0") (ifseqformula "25"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0"))
                                                   (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "25"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                   (rule "applyEq" (formula "44") (term "0,1,0,0,0,1,0,0") (ifseqformula "25"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "44") (term "1,1,0,0,0,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0,0,1,0,0"))
                                                   (rule "applyEq" (formula "44") (term "0,2,0,0,0,0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "44") (term "0,2,1,3,0,0,0,0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "44") (term "0,2,1,3,0,1,0,0,0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "44") (term "0,2,0,1,0,0,0") (ifseqformula "25"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                   (rule "mul_literals" (formula "6") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                   (rule "bsum_induction_upper_concrete" (formula "30") (term "1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "30") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "30") (term "0,1,0,1,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "22") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                   (rule "mul_literals" (formula "17") (term "1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "16"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                   (rule "mul_literals" (formula "16") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                   (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "16"))
                                                   (rule "polySimp_homoEq" (formula "22") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                                   (rule "add_literals" (formula "22") (term "0,0,1"))
                                                   (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                                                   (rule "add_literals" (formula "11") (term "0,0,1"))
                                                   (rule "add_zero_left" (formula "11") (term "0,1"))
                                                   (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                   (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                   (rule "applyEq" (formula "36") (term "1,1,0,1,0,0,1,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "1,0,1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "0,1,0,1,0,0,1,0"))
                                                   (rule "applyEq" (formula "1") (term "1,0,2,1,3,0,0,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,3,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0,2,1,3,0,0,0"))
                                                   (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0"))
                                                   (rule "applyEq" (formula "1") (term "1,0,2,0,0,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,2,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0,2,0,0,0"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                   (rule "add_literals" (formula "17") (term "0,0"))
                                                   (rule "applyEq" (formula "38") (term "1,1,0,1,0,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "38") (term "0,1,0,1,0,0"))
                                                   (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "1"))
                                                   (rule "polySimp_addComm0" (formula "25") (term "0,1"))
                                                   (rule "applyEq" (formula "36") (term "1,0,1,0,0,0,1,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                   (rule "add_zero_left" (formula "19") (term "0,0,0"))
                                                   (rule "applyEq" (formula "38") (term "1,0,1,0,0,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,0"))
                                                   (rule "applyEq" (formula "44") (term "1,0,2,0,1,0,0,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,2,0,1,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,0,2,0,1,0,0,0"))
                                                   (rule "applyEq" (formula "44") (term "1,0,2,0,0,0,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,2,0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,0,2,0,0,0,0"))
                                                   (rule "applyEq" (formula "44") (term "1,0,2,1,3,0,1,0,0,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,2,1,3,0,1,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,0,2,1,3,0,1,0,0,0"))
                                                   (rule "applyEq" (formula "44") (term "1,0,2,1,3,0,0,0,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,2,1,3,0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,0,2,1,3,0,0,0,0"))
                                                   (rule "applyEq" (formula "38") (term "1,0,0,1,1,0") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                   (rule "add_literals" (formula "12") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq0" (formula "18"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                   (rule "mul_literals" (formula "34") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                   (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "1"))
                                                   (rule "add_literals" (formula "34") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "30") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
                                                   (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "16"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                   (rule "add_literals" (formula "5") (term "0,0,1"))
                                                   (rule "add_zero_left" (formula "5") (term "0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1,0,0"))
                                                   (rule "applyEq" (formula "43") (term "0,0,0,1,0,0") (ifseqformula "15"))
                                                   (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "43") (term "0,1,0,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "43") (term "0,0,0,0,0,1,0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "21") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "0,1"))
                                                   (rule "polySimp_sepNegMonomial" (formula "32"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                   (rule "mul_literals" (formula "9") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                   (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "19") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_60"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "0,1"))
                                                   (rule "applyEqRigid" (formula "19") (term "1,0,1") (ifseqformula "20"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                   (rule "bsum_induction_upper_concrete" (formula "37") (term "1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "37") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "37") (term "0,1,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "42"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "36") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "0,0,0,1,1"))
                                                   (rule "replace_known_left" (formula "42") (term "0,0,1,1") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "polySimp_addComm0" (formula "42") (term "1"))
                                                   (rule "inEqSimp_contradEq7" (formula "20") (term "1") (ifseqformula "10"))
                                                   (rule "mul_literals" (formula "20") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "20") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "20") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "notLeft" (formula "20"))
                                                   (rule "apply_eq_boolean_rigid" (formula "19") (term "1,0,1") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "15") (term "0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "16") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "16"))
                                                   (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                                   (rule "add_literals" (formula "16") (term "1,0"))
                                                   (rule "times_zero_1" (formula "16") (term "0"))
                                                   (rule "qeq_literals" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "applyEq" (formula "1") (term "1,0,2,0,0,0") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,2,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,2,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,2,0,0,0"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "1") (term "0,2,0,0,0"))
                                                   (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "2") (term "0,0"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEq" (formula "31") (term "1,1,0,1,0,0,1,0") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "1,0,1,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,1,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0,1,0,1,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "31") (term "1,0,1,0,0,1,0"))
                                                   (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "9") (term "1"))
                                                   (rule "applyEq" (formula "1") (term "1,0,2,1,3,0,0,0") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,3,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,2,1,3,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,2,1,3,0,0,0"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "1") (term "0,2,1,3,0,0,0"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0"))
                                                   (rule "applyEq" (formula "10") (term "0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "10"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                   (rule "add_literals" (formula "10") (term "0,0"))
                                                   (rule "applyEq" (formula "33") (term "1,1,0,1,0,0") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,1,0,1,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,1,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "33") (term "1,0,1,0,0"))
                                                   (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "1"))
                                                   (rule "add_literals" (formula "29") (term "0,1"))
                                                   (rule "add_zero_left" (formula "29") (term "1"))
                                                   (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0"))
                                                   (rule "applyEq" (formula "33") (term "1,0,1,0,0,1,0") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "33") (term "0,0,1,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "33") (term "0,1,0,0,1,0"))
                                                   (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "1"))
                                                   (rule "add_literals" (formula "28") (term "0,1"))
                                                   (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "1"))
                                                   (rule "add_literals" (formula "14") (term "0,1"))
                                                   (rule "applyEq" (formula "40") (term "1,0,2,1,3,0,1,1") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,2,1,3,0,1,1"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "0,0,2,1,3,0,1,1"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0,2,1,3,0,1,1"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "40") (term "0,2,1,3,0,1,1"))
                                                   (rule "applyEq" (formula "40") (term "1,0,2,1,3,0,1,1,1") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,2,1,3,0,1,1,1"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "0,0,2,1,3,0,1,1,1"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0,2,1,3,0,1,1,1"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "40") (term "0,2,1,3,0,1,1,1"))
                                                   (rule "applyEq" (formula "33") (term "1,0,1,0,0,0") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "33") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "33") (term "0,1,0,0,0"))
                                                   (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                                                   (rule "add_literals" (formula "20") (term "0,0,1"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "20") (term "1"))
                                                   (rule "applyEq" (formula "40") (term "1,0,2,0,1,1") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,2,0,1,1"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "0,0,2,0,1,1"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0,2,0,1,1"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "40") (term "0,2,0,1,1"))
                                                   (rule "applyEq" (formula "40") (term "1,0,2,0,1,1,1") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,2,0,1,1,1"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "0,0,2,0,1,1,1"))
                                                   (rule "add_literals" (formula "40") (term "0,0,0,2,0,1,1,1"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "40") (term "0,2,0,1,1,1"))
                                                   (rule "applyEq" (formula "31") (term "1,0,1,0,0,0,1,0") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "31") (term "0,1,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "33") (term "1,0,0,0,0,1,1,0") (ifseqformula "3"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor3b" (formula "33") (term "0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "5") (term "0"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "9"))
                                                   (rule "mul_literals" (formula "7") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "7") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "leq_literals" (formula "7") (term "0"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "newSym_eq" (formula "26") (inst "newSymDef=add(Z(0(#)), mul(left, Z(0(#))))") (inst "l=l_157"))
                                                   (rule "add_zero_left" (formula "26") (term "1,1"))
                                                   (rule "times_zero_1" (formula "26") (term "1,1"))
                                                   (rule "add_zero_right" (formula "26") (term "1"))
                                                   (rule "applyEq" (formula "30") (term "0,1,1,0,0,0,1,0") (ifseqformula "26"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "1,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "26"))
                                                   (rule "polySimp_homoEq" (formula "27"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                   (rule "applyEq" (formula "32") (term "0,1,1,0,0,0") (ifseqformula "26"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "1,0,0,0"))
                                                   (rule "applyEq" (formula "28") (term "0") (ifseqformula "26"))
                                                   (rule "inEqSimp_commuteLeq" (formula "28"))
                                                   (rule "applyEq" (formula "32") (term "0,1,1,0,0,1,0") (ifseqformula "26"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "1,0,0,1,0"))
                                                   (rule "applyEq" (formula "32") (term "0,1,0,0,0,1,1,0") (ifseqformula "26"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "27"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                   (rule "mul_literals" (formula "27") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                   (rule "applyEq" (formula "32") (term "0,1,1,0,1,0,0") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,1,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "1,0,1,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,1,0,1,0,0"))
                                                   (rule "applyEq" (formula "30") (term "0,1,1,0,0,0,1,0") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0,1,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "30") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "30") (term "1,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0,2,1,3,0,0,0") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,2,1,3,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "3,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,2,0,3,0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,2,0,3,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,2,0,3,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,2,0,3,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,2,0,3,0,0,0"))
                                                   (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "27"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0,0"))
                                                   (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0,2,0,0,0") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,2,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,2,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,2,0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,2,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,2,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,2,0,0,0"))
                                                   (rule "applyEq" (formula "32") (term "0,1,1,0,0,1,0") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,1,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "32") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "32") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                                   (rule "applyEq" (formula "21") (term "1,0,1,0,0,1,0") (ifseqformula "27"))
                                                   (rule "applyEq" (formula "23") (term "1,0,1,0,0") (ifseqformula "27"))
                                                   (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "27"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                   (rule "add_literals" (formula "4") (term "0,1"))
                                                   (rule "add_zero_left" (formula "4") (term "1"))
                                                   (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "applyEq" (formula "30") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,1,0,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,1,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "1,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "30") (term "0,1,0,1,0,0,1,0"))
                                                   (rule "applyEq" (formula "32") (term "0,1,1,0,0,0") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,1,0,0,0"))
                                                   (rule "add_zero_left" (formula "32") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "32") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                                   (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "27"))
                                                   (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,1"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "1"))
                                                   (rule "add_literals" (formula "7") (term "0,1"))
                                                   (rule "add_zero_left" (formula "7") (term "1"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "27"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                   (rule "add_literals" (formula "8") (term "0,0"))
                                                   (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "27"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                   (rule "add_literals" (formula "3") (term "0,1"))
                                                   (rule "applyEq" (formula "23") (term "1,0,1,0,0,0") (ifseqformula "27"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,1,0,0,0"))
                                                   (rule "add_zero_left" (formula "23") (term "0,1,0,0,0"))
                                                   (rule "applyEq" (formula "39") (term "0,1,0,2,0,1,1,1") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,2,0,1,1,1"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,2,0,1,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,2,0,1,1,1"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,2,0,1,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,2,0,1,1,1"))
                                                   (rule "add_literals" (formula "39") (term "0,0,2,0,1,1,1"))
                                                   (rule "applyEq" (formula "39") (term "0,1,0,2,1,3,0,1,1,1") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,2,1,3,0,1,1,1"))
                                                   (rule "polySimp_addComm0" (formula "39") (term "3,0,1,1,1"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,2,0,3,0,1,1,1"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,2,0,3,0,1,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,2,0,3,0,1,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,2,0,3,0,1,1,1"))
                                                   (rule "add_literals" (formula "39") (term "0,0,2,0,3,0,1,1,1"))
                                                   (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "1"))
                                                   (rule "add_literals" (formula "18") (term "0,1"))
                                                   (rule "applyEq" (formula "39") (term "1,0,0,0") (ifseqformula "27"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0,0,0"))
                                                   (rule "applyEq" (formula "23") (term "1,0,1,0,0,1,0") (ifseqformula "27"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,1,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "23") (term "0,1,0,0,1,0"))
                                                   (rule "applyEq" (formula "39") (term "0,1,0,2,1,3,0,1,1") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,2,1,3,0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "39") (term "3,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,2,0,3,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,2,0,3,0,1,1"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,2,0,3,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,2,0,3,0,1,1"))
                                                   (rule "add_literals" (formula "39") (term "0,0,2,0,3,0,1,1"))
                                                   (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "27"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "1"))
                                                   (rule "add_literals" (formula "12") (term "0,1"))
                                                   (rule "add_zero_left" (formula "12") (term "1"))
                                                   (rule "applyEq" (formula "39") (term "0,1,0,2,0,1,1") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,2,0,1,1"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,2,0,1,1"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,2,0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,2,0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,2,0,1,1"))
                                                   (rule "add_literals" (formula "39") (term "0,0,2,0,1,1"))
                                                   (rule "applyEq" (formula "21") (term "1,0,1,0,0,0,1,0") (ifseqformula "27"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "21") (term "0,1,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "32") (term "0,1,0,0,0,1,1,0") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "32") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "32") (term "1,0,0,0,1,1,0"))
                                                   (rule "applyEq" (formula "1") (term "0,2,1,3,0,0,0") (ifseqformula "27"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "3,0,0,0"))
                                                   (rule "applyEq" (formula "23") (term "1,0,0,0,0,1,1,0") (ifseqformula "27"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "23") (term "0,0,0,0,1,1,0"))
                                                   (rule "applyEq" (formula "39") (term "0,2,1,3,0,1,1") (ifseqformula "27"))
                                                   (rule "polySimp_addComm0" (formula "39") (term "3,0,1,1"))
                                                   (rule "applyEq" (formula "39") (term "0,2,1,3,0,1,1,1") (ifseqformula "27"))
                                                   (rule "polySimp_addComm0" (formula "39") (term "3,0,1,1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                   (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "28"))
                                                   (rule "greater_literals" (formula "8") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1,0"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "elimGcdEq" (formula "11") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=result") (inst "elimGcdRightDiv=l_157"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "add_literals" (formula "11") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0"))
                                                   (rule "add_literals" (formula "11") (term "1,0,0,0"))
                                                   (rule "times_zero_1" (formula "11") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "11") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                                   (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,1"))
                                                   (rule "add_literals" (formula "11") (term "1,0,0,1"))
                                                   (rule "times_zero_1" (formula "11") (term "0,0,1"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0"))
                                                   (rule "add_literals" (formula "11") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "11") (term "0,0"))
                                                   (rule "qeq_literals" (formula "11") (term "0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "37") (term "0,1,0,0") (ifseqformula "11"))
                                                   (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0"))
                                                   (rule "add_literals" (formula "37") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "37") (term "0,0"))
                                                   (rule "bsum_lower_equals_upper" (formula "37") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "37"))
                                                   (rule "mul_literals" (formula "37") (term "1,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0"))
                                                   (rule "applyEq" (formula "21") (term "0,1,1,0,0,0") (ifseqformula "11"))
                                                   (rule "polySimp_pullOutFactor0" (formula "21") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                   (rule "applyEq" (formula "19") (term "0,1,1,0,0,0,1,0") (ifseqformula "11"))
                                                   (rule "polySimp_pullOutFactor0" (formula "19") (term "1,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "21") (term "0,1,1,0,0,1,0") (ifseqformula "11"))
                                                   (rule "polySimp_pullOutFactor0" (formula "21") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                   (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,1,0") (ifseqformula "11"))
                                                   (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "21") (term "1,0,0,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "21") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "37"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1"))
                                                   (rule "selectOfStore" (formula "37") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "6"))
                                                   (rule "selectOfAnonEQ" (formula "30") (term "2,0,0,1,1,0") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")))
                                                   (rule "elementOfInfiniteUnion" (formula "30") (term "0,0,2,0,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "elementOfSingleton" (formula "30") (term "1,0,0,0,2,0,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "castDel" (formula "30") (term "1,0,0,1,1,0,0,0,2,0,0,1,1,0"))
                                                   (rule "castDel" (formula "30") (term "0,0,0,0,0,2,0,0,1,1,0"))
                                                   (rule "castDel" (formula "30") (term "0,0,1,0,0,0,2,0,0,1,1,0"))
                                                   (rule "instanceof_static_type" (formula "30") (term "0,1,0,0,2,0,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "selectOfAnonEQ" (formula "1") (term "1,3,0,0,0") (ifseqformula "28"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,0,1,1,0,1,3,0,0,0") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,1,0,1,3,0,0,0") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "typeEqDerived2" (formula "1") (term "0,1,0,0,1,3,0,0,0") (ifseqformula "17"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "0,0,0,0,1,3,0,0,0"))
                                                   (rule "castDel" (formula "1") (term "1,0,0,1,1,0,0,1,3,0,0,0"))
                                                   (rule "castDel" (formula "1") (term "0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,1,3,0,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,1,3,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "qeq_literals" (formula "1") (term "0,1,0,0,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,1,3,0,0,0"))
                                                   (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "1") (term "0,0,1,0,0,1,3,0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_241"))
                                                   (rule "eqSymm" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_subsumption6" (formula "2") (term "0,0,0,1,3,0,0,0") (ifseqformula "27"))
                                                   (rule "greater_literals" (formula "2") (term "0,0,0,0,0,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1,0,0,0,0,1,3,0,0,0"))
                                                   (rule "leq_literals" (formula "2") (term "0,0,0,0,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "selectOfAnonEQ" (formula "7") (term "0") (ifseqformula "29"))
                                                   (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "35")))
                                                   (rule "selectCreatedOfAnonEQ" (formula "7") (term "0,0,1,0,0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "10")))
                                                   (rule "applyEq" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "elementOfInfiniteUnion" (formula "7") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "elementOfSingleton" (formula "7") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "selectOfAnonEQ" (formula "21") (term "1,1,1,0") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "35")))
                                                   (rule "polySimp_homoEq" (formula "21") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "21") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "21") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "0,1,1,0"))
                                                   (rule "elementOfInfiniteUnion" (formula "21") (term "0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "castDel" (formula "21") (term "1,0,0,1,1,0,0,0,0,1,0"))
                                                   (rule "castDel" (formula "21") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "castDel" (formula "21") (term "0,0,1,0,0,0,0,1,0"))
                                                   (rule "instanceof_static_type" (formula "21") (term "0,1,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "selectOfAnonEQ" (formula "6") (term "0") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "34")) (ifInst ""  (formula "9")))
                                                   (rule "elementOfInfiniteUnion" (formula "6") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "elementOfSingleton" (formula "6") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "selectOfStore" (formula "36") (term "0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "castDel" (formula "36") (term "1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "36") (term "0,0"))
                                                   (rule "mul_literals" (formula "36") (term "1,0,0"))
                                                   (rule "elimGcdEq" (formula "36") (term "0,0") (inst "elimGcd=Z(4(#))") (inst "elimGcdLeftDiv=l_157") (inst "elimGcdRightDiv=Z(0(#))"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "add_literals" (formula "36") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "36") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "equal_literals" (formula "36") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "selectOfAnonEQ" (formula "29") (term "1,0,1,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "34")))
                                                   (rule "elementOfInfiniteUnion" (formula "29") (term "0,0,1,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "elementOfSingleton" (formula "29") (term "1,0,0,0,1,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "castDel" (formula "29") (term "0,0,1,0,0,0,1,0,1,0"))
                                                   (rule "castDel" (formula "29") (term "0,0,0,0,0,1,0,1,0"))
                                                   (rule "castDel" (formula "29") (term "1,0,0,1,1,0,0,0,1,0,1,0"))
                                                   (rule "instanceof_static_type" (formula "29") (term "0,1,0,0,1,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "selectOfAnonEQ" (formula "2") (term "0,3,0,0,0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0,1,1,0,0,3,0,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "replace_known_right" (formula "2") (term "0,0,1,0,0,3,0,0,0") (ifseqformula "34"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "3,0,0,0"))
                                                   (rule "elementOfInfiniteUnion" (formula "2") (term "0,0,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "typeEqDerived2" (formula "2") (term "0,1,0,0,1,3,0,0,0") (ifseqformula "24"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "castDel" (formula "2") (term "0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "castDel" (formula "2") (term "1,0,0,1,1,0,0,1,3,0,0,0"))
                                                   (rule "castDel" (formula "2") (term "0,0,0,0,1,3,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0,0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,0,0,1,0,0,1,3,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,1,3,0,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0,0,1,3,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0,1,3,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,3,0,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,0,0,1,3,0,0,0"))
                                                   (rule "leq_literals" (formula "2") (term "0,0,0,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "3,0,0,0"))
                                                   (rule "ifthenelse_negated" (formula "2") (term "0,3,0,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "36") (term "0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "34")))
                                                   (rule "selectCreatedOfAnonEQ" (formula "36") (term "0,0,1,0,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "elementOfInfiniteUnion" (formula "36") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "elementOfSingleton" (formula "36") (term "1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "castDel" (formula "36") (term "0,0,0,0,0,0"))
                                                   (rule "castDel" (formula "36") (term "1,0,0,1,1,0,0,0,0"))
                                                   (rule "castDel" (formula "36") (term "0,0,1,0,0,0,0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "36") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "36") (term "0,1,0,0,0,0"))
                                                   (rule "times_zero_2" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0,0"))
                                                   (rule "instanceof_static_type" (formula "36") (term "0,1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "36") (term "1,0,1,0,0,0"))
                                                   (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "36") (term "0,0,1,1,0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_242"))
                                                   (rule "eqSymm" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_subsumption6" (formula "37") (term "0,1,0,0,0") (ifseqformula "26"))
                                                   (rule "greater_literals" (formula "37") (term "0,0,0,1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                                   (rule "leq_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_contradInEq5" (formula "37") (term "0,0,0,0") (ifseqformula "26"))
                                                   (rule "greater_literals" (formula "37") (term "0,0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                                                   (rule "qeq_literals" (formula "37") (term "0,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "ifthenelse_negated" (formula "37") (term "0"))
                                                   (rule "selectOfAnonEQ" (formula "3") (term "1,0,3,0,0,0") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "replace_known_right" (formula "3") (term "0,0,1,0,1,0,3,0,0,0") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "3,0,0,0"))
                                                   (rule "elementOfInfiniteUnion" (formula "3") (term "0,0,1,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,1,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "typeEqDerived2" (formula "3") (term "0,1,0,0,1,1,3,0,0,0") (ifseqformula "25"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "castDel" (formula "3") (term "0,0,1,0,0,1,1,3,0,0,0"))
                                                   (rule "castDel" (formula "3") (term "1,0,0,1,1,0,0,1,1,3,0,0,0"))
                                                   (rule "castDel" (formula "3") (term "0,0,0,0,1,1,3,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "0,1,0,0,1,1,3,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "3") (term "0,0,1,0,0,1,1,3,0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,0,0,1,0,0,1,1,3,0,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "0,0,1,0,0,1,1,3,0,0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "0,1,0,0,1,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0,1,1,3,0,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "1,0,0,0,1,1,3,0,0,0"))
                                                   (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "3") (term "0,0,1,0,0,1,1,3,0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_243"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "eqSymm" (formula "3") (term "0,1"))
                                                   (rule "inEqSimp_subsumption6" (formula "4") (term "0,0,0,1,1,3,0,0,0") (ifseqformula "27"))
                                                   (rule "mul_literals" (formula "4") (term "1,1,0,0,0,0,1,1,3,0,0,0"))
                                                   (rule "greater_literals" (formula "4") (term "0,0,0,0,0,1,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "leq_literals" (formula "4") (term "0,0,0,0,1,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "3,0,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "31") (term "1,1,1,0") (ifseqformula "29"))
                                                   (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "36")))
                                                   (rule "selectCreatedOfAnonEQ" (formula "31") (term "0,0,1,0,1,1,1,0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "polySimp_homoEq" (formula "31") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "31") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "31") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0,1,1,0"))
                                                   (rule "elementOfInfiniteUnion" (formula "31") (term "0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "elementOfSingleton" (formula "31") (term "1,0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "castDel" (formula "31") (term "0,0,1,0,0,0,0,1,0"))
                                                   (rule "castDel" (formula "31") (term "1,0,0,1,1,0,0,0,0,1,0"))
                                                   (rule "castDel" (formula "31") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "instanceof_static_type" (formula "31") (term "0,1,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "selectOfAnonEQ" (formula "38") (term "1,0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "36")))
                                                   (rule "elementOfInfiniteUnion" (formula "38") (term "0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "elementOfSingleton" (formula "38") (term "1,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "castDel" (formula "38") (term "1,0,0,1,1,0,0,0,1,0"))
                                                   (rule "castDel" (formula "38") (term "0,0,0,0,0,1,0"))
                                                   (rule "castDel" (formula "38") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "qeq_literals" (formula "38") (term "0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0,0,0,1,0"))
                                                   (rule "times_zero_2" (formula "38") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,1,0"))
                                                   (rule "instanceof_static_type" (formula "38") (term "0,1,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0"))
                                                   (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "38") (term "0,0,1,0,0,1,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_244"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_subsumption6" (formula "39") (term "0,0,0,1,0") (ifseqformula "28"))
                                                   (rule "greater_literals" (formula "39") (term "0,0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "mul_literals" (formula "39") (term "1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "39") (term "0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "selectOfAnonEQ" (formula "5") (term "2,1,3,0,0,0") (ifseqformula "21"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_right" (formula "5") (term "0,0,1,0,2,1,3,0,0,0") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfInfiniteUnion" (formula "5") (term "0,0,2,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfSingleton" (formula "5") (term "1,0,0,0,2,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "typeEqDerived2" (formula "5") (term "0,1,0,0,2,1,3,0,0,0") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "castDel" (formula "5") (term "1,0,0,1,1,0,0,2,1,3,0,0,0"))
                                                   (rule "castDel" (formula "5") (term "0,0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "castDel" (formula "5") (term "0,0,0,0,2,1,3,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,0,0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "add_zero_left" (formula "5") (term "0,0,0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "add_literals" (formula "5") (term "1,0,0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "5") (term "0,0,1,1,0,0,2,1,3,0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_245"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "eqSymm" (formula "5") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0,2,1,3,0,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "1,0,0,0,2,1,3,0,0,0"))
                                                   (rule "inEqSimp_invertInEq1" (formula "6") (term "0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "times_zero_2" (formula "6") (term "1,0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1,0,0,2,1,3,0,0,0"))
                                                   (rule "inEqSimp_subsumption6" (formula "6") (term "0,0,0,2,1,3,0,0,0") (ifseqformula "29"))
                                                   (rule "greater_literals" (formula "6") (term "0,0,0,0,0,2,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "mul_literals" (formula "6") (term "1,0,0,0,0,2,1,3,0,0,0"))
                                                   (rule "leq_literals" (formula "6") (term "0,0,0,0,2,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_contradInEq5" (formula "6") (term "0,0,0,2,1,3,0,0,0") (ifseqformula "29"))
                                                   (rule "greater_literals" (formula "6") (term "0,0,0,0,0,2,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "mul_literals" (formula "6") (term "1,0,0,0,0,2,1,3,0,0,0"))
                                                   (rule "qeq_literals" (formula "6") (term "0,0,0,0,2,1,3,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "ifthenelse_negated" (formula "6") (term "2,1,3,0,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "33") (term "2,0,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "38")))
                                                   (rule "elementOfInfiniteUnion" (formula "33") (term "0,0,2,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "elementOfSingleton" (formula "33") (term "1,0,0,0,2,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "castDel" (formula "33") (term "1,0,0,1,1,0,0,0,2,0,1,0"))
                                                   (rule "castDel" (formula "33") (term "0,0,0,0,0,2,0,1,0"))
                                                   (rule "castDel" (formula "33") (term "0,0,1,0,0,0,2,0,1,0"))
                                                   (rule "instanceof_static_type" (formula "33") (term "0,1,0,0,2,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "25"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "notLeft" (formula "25"))
                                                   (rule "inEqSimp_gtToGeq" (formula "25"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "25") (term "0,0"))
                                                   (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "26") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_61"))
                                                   (rule "eqSymm" (formula "26") (term "0,1"))
                                                   (rule "applyEqRigid" (formula "26") (term "1,0,1") (ifseqformula "27"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                   (rule "mul_literals" (formula "25") (term "1"))
                                                   (rule "selectOfAnonEQ" (formula "37") (term "0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "40")) (ifInst ""  (formula "12")))
                                                   (rule "elementOfInfiniteUnion" (formula "37") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "elementOfSingleton" (formula "37") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "41")))
                                                   (rule "false_right" (formula "37"))
                                                   (rule "selectOfAnonEQ" (formula "25") (term "0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "39")) (ifInst ""  (formula "12")))
                                                   (rule "elementOfInfiniteUnion" (formula "25") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "selectOfAnonEQ" (formula "26") (term "0,0,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "replace_known_left" (formula "26") (term "0,1,1,0,0,0,1,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "elementOfInfiniteUnion" (formula "26") (term "0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "36"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "andLeft" (formula "36"))
                                                   (rule "notLeft" (formula "36"))
                                                   (rule "inEqSimp_gtToGeq" (formula "36"))
                                                   (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "36") (term "0,0"))
                                                   (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "37") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_62"))
                                                   (rule "eqSymm" (formula "37") (term "0,1"))
                                                   (rule "applyEqRigid" (formula "37") (term "1,0,1") (ifseqformula "38"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                   (rule "mul_literals" (formula "36") (term "1"))
                                                   (rule "selectOfAnonEQ" (formula "39") (term "0") (ifseqformula "33"))
                                                   (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "42")))
                                                   (rule "selectCreatedOfAnonEQ" (formula "39") (term "0,0,1,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "12")))
                                                   (rule "elementOfInfiniteUnion" (formula "39") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "elementOfSingleton" (formula "39") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "selectOfAnonEQ" (formula "36") (term "0,0") (ifseqformula "33"))
                                                   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "42")))
                                                   (rule "selectCreatedOfAnonEQ" (formula "36") (term "0,0,1,0,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "12")))
                                                   (rule "elementOfInfiniteUnion" (formula "36") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "elementOfSingleton" (formula "36") (term "1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "selectOfAnonEQ" (formula "37") (term "0,0,1,0") (ifseqformula "33"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "37") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "replace_known_left" (formula "37") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "elementOfInfiniteUnion" (formula "37") (term "0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "elementOfSingleton" (formula "37") (term "1,0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "selectOfAnonEQ" (formula "36") (term "0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "42")) (ifInst ""  (formula "12")))
                                                   (rule "elementOfInfiniteUnion" (formula "36") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "elementOfSingleton" (formula "36") (term "1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "25")))
                                                   (rule "true_left" (formula "36"))
                                                   (rule "selectOfAnonEQ" (formula "38") (term "0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "41")) (ifInst ""  (formula "12")))
                                                   (rule "elementOfInfiniteUnion" (formula "38") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "elementOfSingleton" (formula "38") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "42")))
                                                   (rule "false_right" (formula "38"))
                                                   (rule "selectOfAnonEQ" (formula "36") (term "0,0,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "replace_known_left" (formula "36") (term "0,1,1,0,0,0,1,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "elementOfInfiniteUnion" (formula "36") (term "0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "elementOfSingleton" (formula "36") (term "1,0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "18"))
                                                   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "41")))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "inEqSimp_gtToGeq" (formula "18"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0"))
                                                   (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "19") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_63"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSymm" (formula "19") (term "0,1"))
                                                   (rule "applyEqRigid" (formula "19") (term "1,0,1") (ifseqformula "20"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                   (rule "mul_literals" (formula "18") (term "1"))
                                                   (rule "methodBodyExpand" (formula "7") (term "1"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "27"))
                                                   (rule "leq_literals" (formula "10") (term "0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "methodBodyExpand" (formula "15") (term "1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "methodBodyExpand" (formula "17") (term "1"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "nnf_imp2or" (formula "25") (term "0"))
                                                   (rule "shift_paren_and" (formula "34") (term "0,0,1,0"))
                                                   (rule "shift_paren_and" (formula "23") (term "0,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "36") (term "0"))
                                                   (rule "methodBodyExpand" (formula "3") (term "1"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "36") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "25") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_notLeq" (formula "25") (term "0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "25") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "36") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "36") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0"))
                                                   (rule "nnf_notOr" (formula "36") (term "1,0,0,1,0"))
                                                   (rule "methodBodyExpand" (formula "2") (term "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "methodBodyExpand" (formula "4") (term "1"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "methodBodyExpand" (formula "1") (term "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "methodBodyExpand" (formula "5") (term "1"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "methodBodyExpand" (formula "6") (term "1"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "commute_or" (formula "25") (term "0,0,1,0"))
                                                   (rule "commute_or" (formula "36") (term "0,2,0,1,1,0"))
                                                   (rule "commute_or" (formula "36") (term "0,1,1,1,1,0"))
                                                   (rule "commute_or" (formula "36") (term "0,2,0,1,0"))
                                                   (rule "shift_paren_or" (formula "25") (term "0,0"))
                                                   (rule "methodBodyExpand" (formula "27") (term "1"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "shift_paren_or" (formula "36") (term "0,0"))
                                                   (rule "ifthenelse_split" (formula "44") (term "0"))
                                                   (branch " self.a.<created> = TRUE | boolean::select(anon_heap_upsweep, self.a, <created>) = TRUE TRUE"
                                                      (builtin "One Step Simplification" (formula "45"))
                                                      (rule "orRight" (formula "45"))
                                                      (rule "notRight" (formula "45"))
                                                      (rule "replace_known_left" (formula "8") (term "0,1,0,1,3,0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "8") (term "0,0,3,0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "8"))
                                                      (rule "polySimp_addComm0" (formula "8") (term "3,0,0,0"))
                                                      (rule "ifthenelse_negated" (formula "8") (term "0,3,0,0,0"))
                                                      (rule "cnf_rightDist" (formula "27") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "27") (term "0,0,0,1,0"))
                                                      (rule "commute_or" (formula "27") (term "1,0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "38") (term "0,2,0,1,1,0"))
                                                      (rule "commute_or" (formula "38") (term "1,0,2,0,1,1,0"))
                                                      (rule "commute_or" (formula "38") (term "0,0,2,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "38") (term "0,1,1,1,1,0"))
                                                      (rule "commute_or" (formula "38") (term "0,0,1,1,1,1,0"))
                                                      (rule "commute_or" (formula "38") (term "1,0,1,1,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "38") (term "0,2,0,1,0"))
                                                      (rule "commute_or" (formula "38") (term "0,0,2,0,1,0"))
                                                      (rule "commute_or" (formula "38") (term "1,0,2,0,1,0"))
                                                      (rule "methodBodyExpand" (formula "39") (term "1"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "shift_paren_and" (formula "38") (term "0,0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "27") (term "1,0,0,1,0"))
                                                      (rule "commute_or" (formula "27") (term "0,1,0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "38") (term "1,0,2,0,1,1,0"))
                                                      (rule "commute_or" (formula "38") (term "0,1,0,2,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "38") (term "1,0,1,1,1,1,0"))
                                                      (rule "commute_or" (formula "38") (term "0,1,0,1,1,1,1,0"))
                                                      (rule "methodBodyExpand" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "cnf_rightDist" (formula "38") (term "1,0,2,0,1,0"))
                                                      (rule "commute_or" (formula "38") (term "0,1,0,2,0,1,0"))
                                                      (rule "returnUnfold" (formula "9") (term "1") (inst "#v0=x_2"))
                                                      (rule "variableDeclarationAssign" (formula "9") (term "1"))
                                                      (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_2501"))
                                                      (rule "returnUnfold" (formula "19") (term "1") (inst "#v0=x_2"))
                                                      (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                                      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_2502"))
                                                      (rule "cnf_rightDist" (formula "38") (term "0,0,1,0"))
                                                      (rule "commute_or" (formula "38") (term "0,0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "38") (term "1,0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "38") (term "0,0,0,1,0"))
                                                      (rule "returnUnfold" (formula "5") (term "1") (inst "#v0=x_2"))
                                                      (rule "variableDeclarationAssign" (formula "5") (term "1"))
                                                      (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_2503"))
                                                      (rule "cnf_rightDist" (formula "38") (term "0,1,0,0,1,0"))
                                                      (rule "commute_or" (formula "38") (term "0,0,1,0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "38") (term "0,0,0,0,1,0"))
                                                      (rule "commute_or" (formula "38") (term "0,0,0,0,0,1,0"))
                                                      (rule "shift_paren_and" (formula "27") (term "0,0,1,0"))
                                                      (rule "shift_paren_and" (formula "38") (term "0,2,0,1,1,0"))
                                                      (rule "shift_paren_and" (formula "38") (term "0,1,1,1,1,0"))
                                                      (rule "shift_paren_and" (formula "38") (term "0,2,0,1,0"))
                                                      (rule "returnUnfold" (formula "4") (term "1") (inst "#v0=x_2"))
                                                      (rule "variableDeclarationAssign" (formula "4") (term "1"))
                                                      (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_2504"))
                                                      (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x_2"))
                                                      (rule "variableDeclarationAssign" (formula "6") (term "1"))
                                                      (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_2505"))
                                                      (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_2"))
                                                      (rule "variableDeclarationAssign" (formula "3") (term "1"))
                                                      (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_2506"))
                                                      (rule "returnUnfold" (formula "7") (term "1") (inst "#v0=x_2"))
                                                      (rule "variableDeclarationAssign" (formula "7") (term "1"))
                                                      (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_2507"))
                                                      (rule "shift_paren_and" (formula "38") (term "0,0,1,0"))
                                                      (rule "ifthenelse_to_or_left" (formula "27") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "27") (term "1,0,1,0"))
                                                      (rule "polySimp_homoEq" (formula "27") (term "1,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "27") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "0,1,1,0,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "27") (term "1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "0,1,1,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
                                                      (rule "nnf_notAnd" (formula "27") (term "0,0,0,1,0"))
                                                      (rule "nnf_notOr" (formula "27") (term "1,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "nnf_notOr" (formula "27") (term "1,0,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "inEqSimp_notLeq" (formula "27") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "27") (term "0,0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,1,0"))
                                                      (rule "nnf_notOr" (formula "27") (term "0,0,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "commute_or" (formula "27") (term "1,1,0"))
                                                      (rule "returnUnfold" (formula "8") (term "1") (inst "#v0=x_2"))
                                                      (rule "variableDeclarationAssign" (formula "8") (term "1"))
                                                      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_2508"))
                                                      (rule "shift_paren_and" (formula "38") (term "0,0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "27") (term "1,1,0"))
                                                      (rule "commute_or_2" (formula "27") (term "1,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "27") (term "0,1,1,0"))
                                                      (rule "commute_or_2" (formula "27") (term "1,0,1,1,0"))
                                                      (rule "shift_paren_or" (formula "27") (term "0,0,1,1,0"))
                                                      (rule "commute_or" (formula "27") (term "0,0,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "27") (term "0,0,0,1,0"))
                                                      (rule "commute_or" (formula "27") (term "0,0,0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "27") (term "1,0,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "commute_or" (formula "27") (term "0,1,0,0,0,1,0"))
                                                      (rule "commute_and" (formula "27") (term "1,0,0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "27") (term "0,0,0,0,1,0"))
                                                      (rule "commute_or" (formula "27") (term "0,0,0,0,0,1,0"))
                                                      (rule "commute_or" (formula "27") (term "1,0,0,0,0,1,0"))
                                                      (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x_2"))
                                                      (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_2509"))
                                                      (rule "compound_equality_comparison_1" (formula "9") (term "1") (inst "#v0=x_2502"))
                                                      (rule "variableDeclarationAssign" (formula "9") (term "1"))
                                                      (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_2510"))
                                                      (rule "compound_equality_comparison_1" (formula "19") (term "1") (inst "#v0=x_2503"))
                                                      (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                                      (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_2511"))
                                                      (rule "compound_equality_comparison_1" (formula "5") (term "1") (inst "#v0=x_2504"))
                                                      (rule "variableDeclarationAssign" (formula "5") (term "1"))
                                                      (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_2512"))
                                                      (rule "compound_equality_comparison_1" (formula "4") (term "1") (inst "#v0=x_2505"))
                                                      (rule "variableDeclarationAssign" (formula "4") (term "1"))
                                                      (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_2513"))
                                                      (rule "compound_equality_comparison_1" (formula "6") (term "1") (inst "#v0=x_2506"))
                                                      (rule "variableDeclarationAssign" (formula "6") (term "1"))
                                                      (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_2514"))
                                                      (rule "ifthenelse_to_or_left" (formula "38") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "38") (term "1,0,1,0"))
                                                      (rule "polySimp_homoEq" (formula "38") (term "1,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "38") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "38") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "38") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "0,1,1,0,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "38") (term "1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "1,1,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "0,1,1,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "38") (term "0,0,1,0"))
                                                      (rule "nnf_notOr" (formula "38") (term "1,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "nnf_notAnd" (formula "38") (term "0,0,0,1,0"))
                                                      (rule "nnf_notOr" (formula "38") (term "1,0,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,1,0"))
                                                      (rule "nnf_notAnd" (formula "38") (term "0,0,0,0,1,0"))
                                                      (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_notGeq" (formula "38") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "38") (term "1,0,0,0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,1,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,1,0,0,0,0,1,0"))
                                                      (rule "nnf_notAnd" (formula "38") (term "0,0,0,0,0,1,0"))
                                                      (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "nnf_notAnd" (formula "38") (term "0,0,0,0,0,0,1,0"))
                                                      (rule "nnf_notOr" (formula "38") (term "0,0,0,0,0,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "38") (term "1,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,0,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0,0,0,0,1,0"))
                                                      (rule "nnf_notOr" (formula "38") (term "1,0,0,0,0,0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_notLeq" (formula "38") (term "0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "commute_or" (formula "38") (term "1,1,0"))
                                                      (rule "compound_equality_comparison_1" (formula "3") (term "1") (inst "#v0=x_2507"))
                                                      (rule "variableDeclarationAssign" (formula "3") (term "1"))
                                                      (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_2515"))
                                                      (rule "shift_paren_and" (formula "27") (term "0,0,0,1,0"))
                                                      (rule "compound_equality_comparison_1" (formula "7") (term "1") (inst "#v0=x_2508"))
                                                      (rule "variableDeclarationAssign" (formula "7") (term "1"))
                                                      (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_2516"))
                                                      (rule "commute_or_2" (formula "27") (term "0,1,0"))
                                                      (rule "ifthenelse_to_or_left" (formula "27") (term "1,0,1,0,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "27") (term "1,0,1,0,1,0,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "27") (term "1,1,1,0,1,0,1,1,0"))
                                                      (rule "times_zero_2" (formula "27") (term "1,0,1,1,1,0,1,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,1,1,1,0,1,0,1,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0,1,0,1,0,1,1,0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,1,0,1,0,1,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,1,0,1,0,1,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,1,0,1,0,1,0,1,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "27") (term "1,1,1,0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0,1,0,1,1,0"))
                                                      (rule "polySimp_invertEq" (formula "27") (term "1,0,1,0,1,0,1,1,0"))
                                                      (rule "times_zero_2" (formula "27") (term "1,1,0,1,0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,1,0,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "0,1,0,1,0,1,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "27") (term "0,0,1,0,1,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,1,0,1,0,1,1,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,1,0,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,1,0,1,0,1,1,0"))
                                                      (rule "ifthenelse_to_or_left" (formula "27") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "27") (term "1,1,1,0,1,1,1,0"))
                                                      (rule "times_zero_2" (formula "27") (term "1,0,1,1,1,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,1,1,1,0,1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "27") (term "1,0,1,0,1,1,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0,1,0,1,1,1,0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,1,0,1,0,1,1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,1,0,1,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,1,0,1,0,1,1,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "27") (term "1,1,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0,1,1,1,0"))
                                                      (rule "polySimp_invertEq" (formula "27") (term "1,0,1,0,1,1,1,0"))
                                                      (rule "times_zero_2" (formula "27") (term "1,1,0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,1,0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "0,1,0,1,0,1,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "27") (term "0,0,1,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,0,0,1,0,1,1,1,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,1,0,1,1,1,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,1,0,1,1,1,0"))
                                                      (rule "ifthenelse_to_or_left" (formula "27") (term "1,0,0,0,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "27") (term "1,1,1,0,0,0,1,1,0"))
                                                      (rule "times_zero_2" (formula "27") (term "1,0,1,1,1,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,1,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "27") (term "1,0,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,1,0,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "27") (term "1,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_invertEq" (formula "27") (term "1,0,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,1,0,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,1,0,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "0,1,0,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "27") (term "0,0,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                                      (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,1,0,0,0,1,1,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "27") (term "0,0,1,0"))
                                                      (rule "commute_or_2" (formula "27") (term "1,0,1,1,0"))
                                                      (rule "ifElseUnfold" (formula "29") (term "1") (inst "#boolv=x_2"))
                                                      (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_2517"))
                                                      (rule "cut_direct" (formula "2") (term "0"))
                                                      (branch "CUT: self.a.<created> = TRUE TRUE"
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "replace_known_left" (formula "38") (term "1,1,0,0,0,0,0,0,1,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                                                         (rule "replace_known_left" (formula "8") (term "0,1,0,3,0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "replace_known_left" (formula "27") (term "1,0,1,0,0,1,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                                                         (rule "replace_known_left" (formula "8") (term "0,1,0,1,3,0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "apply_eq_boolean_rigid" (formula "2") (term "1,0,1") (ifseqformula "40"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "ifthenelse_negated" (formula "7") (term "1,3,0,0,0"))
                                                         (rule "boxToDiamond" (formula "38") (term "1"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "notLeft" (formula "38"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "0,1,0,1,0") (ifseqformula "12"))
                                                         (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "45")))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "equality_comparison_simple" (formula "16") (term "1"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "elimGcdEq" (formula "16") (term "0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_157") (inst "elimGcdRightDiv=Z(0(#))"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "16") (term "1,0,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,1,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "16") (term "0,1,0,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,1,0"))
                                                         (rule "leq_literals" (formula "16") (term "0,0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "equal_literals" (formula "16") (term "0,1,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "qeq_literals" (formula "16") (term "0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "assignmentModulo" (formula "8") (term "1"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "equal_literals" (formula "8") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "translateJavaMod" (formula "8") (term "0,0"))
                                                         (rule "ifElseUnfold" (formula "19") (term "1") (inst "#boolv=x_2"))
                                                         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_2518"))
                                                         (rule "assignmentModulo" (formula "18") (term "1"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "equal_literals" (formula "18") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "translateJavaMod" (formula "18") (term "0,0"))
                                                         (rule "assignmentModulo" (formula "4") (term "1"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "equal_literals" (formula "4") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "translateJavaMod" (formula "4") (term "0,1,0"))
                                                         (rule "assignmentModulo" (formula "3") (term "1"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "equal_literals" (formula "3") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "translateJavaMod" (formula "3") (term "0,1,0"))
                                                         (rule "jmod_axiom" (formula "3") (term "0,1,0"))
                                                         (rule "add_zero_left" (formula "3") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                                         (rule "jdiv_axiom_inline" (formula "3") (term "0,0,1,0"))
                                                         (rule "times_zero_2" (formula "3") (term "0,0,2,0,0,1,0"))
                                                         (rule "qeq_literals" (formula "3") (term "0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "div_literals" (formula "3") (term "0,0,1,0"))
                                                         (rule "times_zero_2" (formula "3") (term "0,1,0"))
                                                         (rule "assignmentModulo" (formula "5") (term "1"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "equal_literals" (formula "5") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "translateJavaMod" (formula "5") (term "0,0"))
                                                         (rule "commute_or" (formula "26") (term "0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "37") (term "1,1,0"))
                                                         (rule "cnf_rightDist" (formula "26") (term "1,0,1,1,0"))
                                                         (rule "cnf_rightDist" (formula "26") (term "1,1,1,0"))
                                                         (rule "cnf_rightDist" (formula "26") (term "0,0,1,1,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,1,0"))
                                                         (rule "commute_or_2" (formula "37") (term "0,0,0,0,0,1,0"))
                                                         (rule "commute_or" (formula "37") (term "1,0,0,0,0,1,0"))
                                                         (rule "commute_or_2" (formula "37") (term "1,1,1,0"))
                                                         (rule "commute_or_2" (formula "26") (term "1,1,0,1,1,0"))
                                                         (rule "commute_or_2" (formula "26") (term "1,1,1,1,0"))
                                                         (rule "assignmentModulo" (formula "6") (term "1"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "equal_literals" (formula "6") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "translateJavaMod" (formula "6") (term "0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "1,0,0,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "commute_or_2" (formula "37") (term "0,0,0,0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "shift_paren_or" (formula "26") (term "0,1,0,1,1,0"))
                                                         (rule "commute_or" (formula "26") (term "0,0,1,0,1,1,0"))
                                                         (rule "shift_paren_or" (formula "26") (term "0,1,1,1,0"))
                                                         (rule "commute_or" (formula "26") (term "0,0,1,1,1,0"))
                                                         (rule "shift_paren_or" (formula "26") (term "0,0,0,1,1,0"))
                                                         (rule "inEqSimp_or_tautInEq2" (formula "26") (term "0,0,0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "26") (term "1,1,0,0,0,0,1,1,0"))
                                                         (rule "qeq_literals" (formula "26") (term "1,0,0,0,0,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "cnf_rightDist" (formula "37") (term "0,1,1,0"))
                                                         (rule "commute_or_2" (formula "37") (term "1,0,1,1,0"))
                                                         (rule "equality_comparison_simple" (formula "28") (term "1"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "cnf_rightDist" (formula "37") (term "0,0,1,1,0"))
                                                         (rule "commute_or_2" (formula "37") (term "1,0,0,1,1,0"))
                                                         (rule "compound_equality_comparison_1" (formula "7") (term "1") (inst "#v0=x_2509"))
                                                         (rule "variableDeclarationAssign" (formula "7") (term "1"))
                                                         (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_2519"))
                                                         (rule "cnf_rightDist" (formula "37") (term "0,0,0,1,1,0"))
                                                         (rule "cnf_rightDist" (formula "37") (term "0,0,0,1,0"))
                                                         (rule "commute_or" (formula "37") (term "0,0,0,0,1,0"))
                                                         (rule "assignmentModulo" (formula "2") (term "1"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "equal_literals" (formula "2") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "translateJavaMod" (formula "2") (term "0,0"))
                                                         (rule "jmod_axiom" (formula "2") (term "0,0"))
                                                         (rule "add_zero_left" (formula "2") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                                         (rule "jdiv_axiom_inline" (formula "2") (term "0,0,0"))
                                                         (rule "div_literals" (formula "2") (term "1,0,0,0"))
                                                         (rule "times_zero_2" (formula "2") (term "0,0,2,0,0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "mul_literals" (formula "2") (term "0,0"))
                                                         (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,1,1,0"))
                                                         (rule "commute_or" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                                         (rule "cnf_rightDist" (formula "37") (term "1,0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "commute_or" (formula "37") (term "0,1,0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,1,0"))
                                                         (rule "commute_or_2" (formula "37") (term "1,0,0,0,0,1,0"))
                                                         (rule "commute_or_2" (formula "37") (term "0,1,0,0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "shift_paren_or" (formula "37") (term "0,0,0,0,1,0"))
                                                         (rule "shift_paren_or" (formula "37") (term "0,0,0,0,0,1,0"))
                                                         (rule "commute_or_2" (formula "37") (term "0,1,0"))
                                                         (rule "commute_or" (formula "37") (term "0,0,0,0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "commute_or" (formula "37") (term "0,0,1,0"))
                                                         (rule "equality_comparison_simple" (formula "8") (term "1"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "shift_paren_and" (formula "26") (term "0,1,1,0"))
                                                         (rule "equality_comparison_simple" (formula "19") (term "1"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "cnf_rightDist" (formula "37") (term "0,0,1,0"))
                                                         (rule "commute_or_2" (formula "37") (term "1,0,0,1,0"))
                                                         (rule "commute_or" (formula "37") (term "0,0,0,1,0"))
                                                         (rule "equality_comparison_simple" (formula "18") (term "1"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "equality_comparison_simple" (formula "4") (term "1"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "ifthenelse_to_or_left" (formula "26") (term "1,0,1,0"))
                                                         (rule "polySimp_homoEq" (formula "26") (term "1,0,1,0,1,0"))
                                                         (rule "polySimp_homoEq" (formula "26") (term "1,1,1,0,1,0"))
                                                         (rule "times_zero_2" (formula "26") (term "1,0,1,1,1,0,1,0"))
                                                         (rule "add_zero_right" (formula "26") (term "0,1,1,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "26") (term "1,1,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "1,1,1,1,0,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "26") (term "1,0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,1,0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "26") (term "0,1,1,0,1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,1,0,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "0,1,1,0,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "0,1,1,0,1,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "26") (term "0,0,1,0,1,0"))
                                                         (rule "mul_literals" (formula "26") (term "1,0,0,0,0,1,0,1,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,1,0,1,0"))
                                                         (rule "mul_literals" (formula "26") (term "1,0,0,1,0,1,0"))
                                                         (rule "equality_comparison_simple" (formula "3") (term "1"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "cnf_rightDist" (formula "37") (term "0,1,0"))
                                                         (rule "commute_or" (formula "37") (term "0,0,1,0"))
                                                         (rule "equality_comparison_simple" (formula "5") (term "1"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "cnf_rightDist" (formula "26") (term "0,1,0"))
                                                         (rule "commute_or_2" (formula "26") (term "1,0,1,0"))
                                                         (rule "shift_paren_or" (formula "26") (term "0,0,1,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0,0,1,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "shift_paren_or" (formula "26") (term "0,1,0,1,0"))
                                                         (rule "shift_paren_or" (formula "26") (term "0,0,1,0,1,0"))
                                                         (rule "inEqSimp_or_tautInEq2" (formula "26") (term "0,0,0,1,0,1,0"))
                                                         (rule "add_zero_right" (formula "26") (term "1,1,0,0,0,1,0,1,0"))
                                                         (rule "qeq_literals" (formula "26") (term "1,0,0,0,1,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "cnf_rightDist" (formula "37") (term "1,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "commute_or" (formula "37") (term "0,1,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "equality_comparison_simple" (formula "6") (term "1"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "cnf_rightDist" (formula "37") (term "0,0,1,0"))
                                                         (rule "commute_or_2" (formula "37") (term "1,0,0,1,0"))
                                                         (rule "commute_or_2" (formula "37") (term "0,1,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "shift_paren_or" (formula "37") (term "0,0,1,0"))
                                                         (rule "shift_paren_or" (formula "37") (term "0,0,0,1,0"))
                                                         (rule "commute_or" (formula "37") (term "0,0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "cnf_rightDist" (formula "37") (term "0"))
                                                         (rule "distr_forallAnd" (formula "37"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "commute_or" (formula "38") (term "0"))
                                                         (rule "assignmentModulo" (formula "7") (term "1"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "equal_literals" (formula "7") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "translateJavaMod" (formula "7") (term "0,1,0"))
                                                         (rule "jmod_axiom" (formula "7") (term "0,1,0"))
                                                         (rule "add_zero_left" (formula "7") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                                                         (rule "jdiv_axiom_inline" (formula "7") (term "0,0,1,0"))
                                                         (rule "qeq_literals" (formula "7") (term "0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "div_literals" (formula "7") (term "0,0,1,0"))
                                                         (rule "times_zero_2" (formula "7") (term "0,1,0"))
                                                         (rule "cnf_rightDist" (formula "37") (term "0"))
                                                         (rule "distr_forallAnd" (formula "37"))
                                                         (rule "andLeft" (formula "37"))
                                                         (rule "commute_or_2" (formula "38") (term "0"))
                                                         (rule "commute_or_2" (formula "38") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "37") (term "0"))
                                                         (rule "commute_or_2" (formula "37") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "38") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "38") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "shift_paren_or" (formula "37") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "37"))
                                                         (rule "ifElseUnfold" (formula "41") (term "1") (inst "#boolv=x_2"))
                                                         (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_2520"))
                                                         (rule "cnf_rightDist" (formula "39") (term "0"))
                                                         (rule "distr_forallAnd" (formula "39"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "commute_or_2" (formula "40") (term "0"))
                                                         (rule "commute_or_2" (formula "40") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                                                         (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                                         (rule "equality_comparison_simple" (formula "2") (term "1"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "boxToDiamond" (formula "16") (term "1"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "notLeft" (formula "16"))
                                                         (rule "shift_paren_and" (formula "25") (term "1,1,0"))
                                                         (rule "cnf_rightDist" (formula "38") (term "0"))
                                                         (rule "distr_forallAnd" (formula "38"))
                                                         (rule "andLeft" (formula "38"))
                                                         (rule "commute_or_2" (formula "39") (term "0"))
                                                         (rule "commute_or_2" (formula "39") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "39") (term "0,0,0,0"))
                                                         (rule "commute_or" (formula "39") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "39") (term "0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "39") (term "0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "39") (term "1,0,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "39") (term "0,1,0,0,0,0"))
                                                         (rule "leq_literals" (formula "39") (term "1,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "true_left" (formula "39"))
                                                         (rule "methodCallReturn" (formula "8") (term "1"))
                                                         (rule "assignment" (formula "8") (term "1"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "methodCallReturn" (formula "17") (term "1"))
                                                         (rule "assignment" (formula "17") (term "1"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "cnf_rightDist" (formula "25") (term "0"))
                                                         (rule "distr_forallAnd" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "commute_or" (formula "26") (term "0"))
                                                         (rule "shift_paren_or" (formula "25") (term "0"))
                                                         (rule "commute_or_2" (formula "25") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "methodCallReturn" (formula "4") (term "1"))
                                                         (rule "assignment" (formula "4") (term "1"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "cnf_rightDist" (formula "39") (term "0"))
                                                         (rule "distr_forallAnd" (formula "39"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "commute_or_2" (formula "40") (term "0"))
                                                         (rule "commute_or_2" (formula "40") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "40") (term "0,0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq2" (formula "40") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "40") (term "0,1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "40") (term "1,0,1,0,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "40") (term "0,1,0,0,0,0,0"))
                                                         (rule "leq_literals" (formula "40") (term "1,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "true_left" (formula "40"))
                                                         (rule "methodCallReturn" (formula "3") (term "1"))
                                                         (rule "assignment" (formula "3") (term "1"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "cnf_rightDist" (formula "26") (term "0"))
                                                         (rule "distr_forallAnd" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "commute_or_2" (formula "27") (term "0"))
                                                         (rule "shift_paren_or" (formula "27") (term "0,0"))
                                                         (rule "commute_or_2" (formula "27") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "27") (term "0,0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq2" (formula "27") (term "0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "27") (term "1,1,0,0,0,0,0"))
                                                         (rule "qeq_literals" (formula "27") (term "1,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "true_left" (formula "27"))
                                                         (rule "methodCallReturn" (formula "5") (term "1"))
                                                         (rule "assignment" (formula "5") (term "1"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "ifthenelse_to_or_left" (formula "38") (term "1,0,0"))
                                                         (rule "polySimp_homoEq" (formula "38") (term "1,1,1,0,0"))
                                                         (rule "times_zero_2" (formula "38") (term "1,0,1,1,1,0,0"))
                                                         (rule "add_zero_right" (formula "38") (term "0,1,1,1,0,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "38") (term "1,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "1,1,1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "38") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "38") (term "1,0,0,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                                         (rule "commute_or_2" (formula "38") (term "0"))
                                                         (rule "ifthenelse_to_or_left" (formula "37") (term "1,0"))
                                                         (rule "polySimp_homoEq" (formula "37") (term "1,1,1,0"))
                                                         (rule "times_zero_2" (formula "37") (term "1,0,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "37") (term "0,1,1,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "37") (term "1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "37") (term "0,0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "37") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "39") (term "0"))
                                                         (rule "distr_forallAnd" (formula "39"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "ifthenelse_to_or_left" (formula "41") (term "1,0,0"))
                                                         (rule "polySimp_homoEq" (formula "41") (term "1,1,1,0,0"))
                                                         (rule "times_zero_2" (formula "41") (term "1,0,1,1,1,0,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,1,1,1,0,0"))
                                                         (rule "polySimp_homoEq" (formula "41") (term "1,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,1,0,1,0,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,1,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "41") (term "1,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1,1,1,0,0"))
                                                         (rule "polySimp_invertEq" (formula "41") (term "1,0,1,0,0"))
                                                         (rule "times_zero_2" (formula "41") (term "1,1,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "0,1,0,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "41") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "41") (term "1,0,0,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,0,0"))
                                                         (rule "methodCallReturn" (formula "6") (term "1"))
                                                         (rule "assignment" (formula "6") (term "1"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "boxToDiamond" (formula "28") (term "1"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "notLeft" (formula "28"))
                                                         (rule "commute_or_2" (formula "39") (term "0"))
                                                         (rule "cnf_rightDist" (formula "26") (term "0"))
                                                         (rule "distr_forallAnd" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "equality_comparison_simple" (formula "7") (term "1"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "commute_or_2" (formula "41") (term "0"))
                                                         (rule "cnf_rightDist" (formula "38") (term "0"))
                                                         (rule "distr_forallAnd" (formula "38"))
                                                         (rule "andLeft" (formula "38"))
                                                         (rule "equality_comparison_simple" (formula "46") (term "1"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "commute_or_2" (formula "27") (term "0"))
                                                         (rule "commute_or_2" (formula "38") (term "0"))
                                                         (rule "boxToDiamond" (formula "18") (term "1"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "notLeft" (formula "18"))
                                                         (rule "methodCallReturn" (formula "2") (term "1"))
                                                         (rule "assignment" (formula "2") (term "1"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "cnf_rightDist" (formula "36") (term "0"))
                                                         (rule "distr_forallAnd" (formula "36"))
                                                         (rule "andLeft" (formula "36"))
                                                         (rule "cnf_rightDist" (formula "40") (term "0"))
                                                         (rule "distr_forallAnd" (formula "40"))
                                                         (rule "andLeft" (formula "40"))
                                                         (rule "shift_paren_or" (formula "42") (term "0,0"))
                                                         (rule "commute_or_2" (formula "37") (term "0"))
                                                         (rule "commute_or_2" (formula "41") (term "0"))
                                                         (rule "commute_or" (formula "42") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "39") (term "0"))
                                                         (rule "commute_or_2" (formula "39") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "26") (term "0,0"))
                                                         (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "38") (term "0,0"))
                                                         (rule "commute_or_2" (formula "38") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "38") (term "0,0,0,0"))
                                                         (rule "methodCallEmpty" (formula "8") (term "1"))
                                                         (rule "commute_or_2" (formula "38") (term "0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "methodCallEmpty" (formula "17") (term "1"))
                                                         (rule "shift_paren_or" (formula "36") (term "0"))
                                                         (rule "commute_or_2" (formula "36") (term "0,0"))
                                                         (rule "commute_or_2" (formula "36") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "36") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "shift_paren_or" (formula "40") (term "0"))
                                                         (rule "commute_or_2" (formula "40") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "37") (term "0,0"))
                                                         (rule "commute_or_2" (formula "40") (term "0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq0" (formula "40") (term "0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "40") (term "0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "40") (term "1,0,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "40") (term "0,1,0,0,0,0"))
                                                         (rule "leq_literals" (formula "40") (term "1,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "true_left" (formula "40"))
                                                         (rule "shift_paren_or" (formula "40") (term "0,0"))
                                                         (rule "methodCallEmpty" (formula "4") (term "1"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "cnf_rightDist" (formula "25") (term "0"))
                                                         (rule "distr_forallAnd" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "cnf_rightDist" (formula "43") (term "0"))
                                                         (rule "distr_forallAnd" (formula "43"))
                                                         (rule "andLeft" (formula "43"))
                                                         (rule "commute_or_2" (formula "26") (term "0"))
                                                         (rule "methodCallEmpty" (formula "3") (term "1"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "shift_paren_or" (formula "38") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "43") (term "0"))
                                                         (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                                         (rule "commute_or" (formula "41") (term "0,0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "41") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "41") (term "0,1,0,0,0"))
                                                         (rule "add_literals" (formula "41") (term "1,0,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "41") (term "0,1,0,0,0"))
                                                         (rule "leq_literals" (formula "41") (term "1,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "shift_paren_or" (formula "40") (term "0,0,0,0"))
                                                         (rule "methodCallEmpty" (formula "5") (term "1"))
                                                         (rule "shift_paren_or" (formula "43") (term "0"))
                                                         (rule "commute_or_2" (formula "43") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "26") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "38") (term "0,0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq2" (formula "38") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "38") (term "0,1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "38") (term "1,0,1,0,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "38") (term "0,1,0,0,0,0,0"))
                                                         (rule "leq_literals" (formula "38") (term "1,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "38"))
                                                         (rule "true_left" (formula "38"))
                                                         (rule "shift_paren_or" (formula "41") (term "0,0"))
                                                         (rule "commute_or_2" (formula "41") (term "0,0,0"))
                                                         (rule "ifthenelse_to_or_left" (formula "40") (term "1,0"))
                                                         (rule "polySimp_homoEq" (formula "40") (term "1,0,1,0"))
                                                         (rule "polySimp_homoEq" (formula "40") (term "1,1,1,0"))
                                                         (rule "times_zero_2" (formula "40") (term "1,0,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "40") (term "0,1,1,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,1,0,1,0"))
                                                         (rule "add_literals" (formula "40") (term "1,1,0,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,1,0,1,0"))
                                                         (rule "add_zero_right" (formula "40") (term "0,1,0,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "40") (term "1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,1,1,0"))
                                                         (rule "polySimp_invertEq" (formula "40") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,1,0"))
                                                         (rule "times_zero_2" (formula "40") (term "1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "0,1,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "40") (term "0,0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "40") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0"))
                                                         (rule "commute_or_2" (formula "41") (term "0,0,0,0"))
                                                         (rule "shift_paren_or" (formula "39") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq2" (formula "39") (term "0,0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "39") (term "0,1,0,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "39") (term "1,0,1,0,0,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "39") (term "0,1,0,0,0,0,0,0"))
                                                         (rule "leq_literals" (formula "39") (term "1,0,0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "true_left" (formula "39"))
                                                         (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                         (rule "cnf_rightDist" (formula "25") (term "0"))
                                                         (rule "distr_forallAnd" (formula "25"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "commute_or_2" (formula "41") (term "0,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "ifthenelse_split" (formula "8") (term "0,0"))
                                                         (branch "jmod(-1 + l_157 * 4, 2) = 0 TRUE"
                                                            (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "jmod_axiom" (formula "8") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                            (rule "elimGcdEq" (formula "8") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=jdiv(add(Z(neglit(1(#))), mul(l_157, Z(4(#)))),
     Z(2(#)))") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), mul(l_157, Z(2(#))))"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0,1"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,1"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "8") (term "0,0,1"))
                                                            (rule "equal_literals" (formula "8") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "8") (term "0,1,0"))
                                                            (rule "qeq_literals" (formula "8") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0"))
                                                            (rule "leq_literals" (formula "8") (term "0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "closeFalse" (formula "8"))
                                                         )
                                                         (branch "jmod(-1 + l_157 * 4, 2) = 0 FALSE"
                                                            (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "jmod_axiom" (formula "44") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "44"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                            (rule "elimGcdEq" (formula "44") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=jdiv(add(Z(neglit(1(#))), mul(l_157, Z(4(#)))),
     Z(2(#)))") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), mul(l_157, Z(2(#))))"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "add_literals" (formula "44") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,1"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "44") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "44") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                                                            (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0"))
                                                            (rule "qeq_literals" (formula "44") (term "0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                                                            (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "44") (term "0,0"))
                                                            (rule "equal_literals" (formula "44") (term "0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "false_right" (formula "44"))
                                                            (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq2" (formula "27") (term "0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "27") (term "1,1,0,0,0,0,0"))
                                                            (rule "qeq_literals" (formula "27") (term "1,0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "27"))
                                                            (rule "true_left" (formula "27"))
                                                            (rule "ifthenelse_split" (formula "17") (term "0,0"))
                                                            (branch "jmod(-1 + l_157 * 2, 2) = 0 TRUE"
                                                               (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "17"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "jmod_axiom" (formula "17") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "17"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                               (rule "elimGcdEq" (formula "17") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=jdiv(add(Z(neglit(1(#))), mul(l_157, Z(2(#)))),
     Z(2(#)))") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_157)"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                               (rule "add_literals" (formula "17") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "17") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,1"))
                                                               (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                               (rule "equal_literals" (formula "17") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                               (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "17") (term "0,0"))
                                                               (rule "qeq_literals" (formula "17") (term "0"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "closeFalse" (formula "17"))
                                                            )
                                                            (branch "jmod(-1 + l_157 * 2, 2) = 0 FALSE"
                                                               (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "jmod_axiom" (formula "43") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "43"))
                                                               (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                               (rule "elimGcdEq" (formula "43") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=jdiv(add(Z(neglit(1(#))), mul(l_157, Z(2(#)))),
     Z(2(#)))") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_157)"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "add_literals" (formula "43") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                               (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "43") (term "0,1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                               (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "43") (term "0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,1,0"))
                                                               (rule "add_literals" (formula "43") (term "1,1,0,1,0"))
                                                               (rule "times_zero_1" (formula "43") (term "1,0,1,0"))
                                                               (rule "add_literals" (formula "43") (term "0,1,0"))
                                                               (rule "qeq_literals" (formula "43") (term "1,0"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                                               (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                                               (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "43") (term "0,0"))
                                                               (rule "leq_literals" (formula "43") (term "0"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                                               (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                                               (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "43") (term "0,0"))
                                                               (rule "equal_literals" (formula "43") (term "0"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "false_right" (formula "43"))
                                                               (rule "ifthenelse_to_or_left" (formula "38") (term "1,0,0"))
                                                               (rule "polySimp_homoEq" (formula "38") (term "1,1,1,0,0"))
                                                               (rule "polySimp_homoEq" (formula "38") (term "1,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,1,1,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "38") (term "1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,1,1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,1,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,1,1,1,1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "38") (term "0,1,1,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,1,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "0,1,1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "0,1,1,1,1,0,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "38") (term "1,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,1,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "38") (term "0,1,1,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,1,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "0,1,1,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "0,1,1,0,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "38") (term "0,0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "38"))
                                                               (rule "nnf_notAnd" (formula "38") (term "0,0,0,1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "1,0,0,0,0,1,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,1,0,0"))
                                                               (rule "commute_or_2" (formula "26") (term "0"))
                                                               (rule "ifthenelse_to_or_left" (formula "37") (term "1,0"))
                                                               (rule "polySimp_homoEq" (formula "37") (term "1,0,1,0"))
                                                               (rule "polySimp_homoEq" (formula "37") (term "1,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "37") (term "0,1,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "37") (term "0,1,1,1,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "37") (term "1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "37") (term "0,1,1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "0,1,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "0,1,1,0,1,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "37") (term "1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "1,1,1,1,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "37") (term "0,1,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "0,1,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "0,1,1,1,1,0"))
                                                               (rule "nnf_notAnd" (formula "37") (term "0,0,1,0"))
                                                               (builtin "One Step Simplification" (formula "37"))
                                                               (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "37") (term "1,0,0,0,0,1,0"))
                                                               (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                                               (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,1,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0,1,0"))
                                                               (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,1,0"))
                                                               (rule "methodCallReturn" (formula "7") (term "1"))
                                                               (rule "assignment" (formula "7") (term "1"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "shift_paren_or" (formula "41") (term "0,0,0,0"))
                                                               (rule "shift_paren_or" (formula "25") (term "0"))
                                                               (rule "ifElseSplit" (formula "45"))
                                                               (branch "if x_2509 true"
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                               (branch "if x_2509 false"
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "methodCallEmpty" (formula "2") (term "1"))
                                                                  (rule "cnf_rightDist" (formula "39") (term "0"))
                                                                  (rule "emptyModality" (formula "8") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "ifthenelse_to_or_left" (formula "40") (term "1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "40") (term "0,0,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "nnf_notAnd" (formula "40") (term "0,0,0,1,0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0,1,0,0"))
                                                                  (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,1,0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "40") (term "1,0,0,0,0,1,0,0"))
                                                                  (rule "emptyModality" (formula "16") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "emptyModality" (formula "3") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "eqSymm" (formula "3"))
                                                                  (rule "ifthenelse_split" (formula "42") (term "0,1,0"))
                                                                  (branch "self.a.length = 1 TRUE"
                                                                     (rule "replace_known_left" (formula "45") (term "0,0,1,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "replace_known_left" (formula "42") (term "0,0,1,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "applyEq" (formula "43") (term "0,1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "45") (term "0,1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "42") (term "0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "10"))
                                                                     (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "27"))
                                                                     (rule "true_left" (formula "27"))
                                                                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "11"))
                                                                     (rule "inEqSimp_contradInEq5" (formula "10") (ifseqformula "31"))
                                                                     (rule "greater_literals" (formula "10") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "mul_literals" (formula "10") (term "1,0"))
                                                                     (rule "qeq_literals" (formula "10") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "closeFalse" (formula "10"))
                                                                  )
                                                                  (branch "self.a.length = 1 FALSE"
                                                                     (rule "replace_known_right" (formula "45") (term "0,0,1,0") (ifseqformula "42"))
                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "replace_known_right" (formula "41") (term "0,0,1,0") (ifseqformula "42"))
                                                                     (builtin "One Step Simplification" (formula "41"))
                                                                     (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "42"))
                                                                     (rule "add_literals" (formula "26") (term "1"))
                                                                     (rule "inEqSimp_contradEq7" (formula "42") (ifseqformula "26"))
                                                                     (rule "mul_literals" (formula "42") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "42") (term "0,0"))
                                                                     (rule "leq_literals" (formula "42") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "false_right" (formula "42"))
                                                                     (rule "commute_or" (formula "36") (term "1,1,0,0"))
                                                                     (rule "distr_forallAnd" (formula "37"))
                                                                     (rule "andLeft" (formula "37"))
                                                                     (rule "emptyModality" (formula "4") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "eqSymm" (formula "4"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "notLeft" (formula "4"))
                                                                     (rule "replace_known_right" (formula "6") (term "0,0,3,0,0,0") (ifseqformula "41"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "methodCallEmpty" (formula "5") (term "1"))
                                                                     (rule "ifElse" (formula "43") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "shift_paren_or" (formula "23") (term "0,0"))
                                                                     (rule "commute_or" (formula "34") (term "1,1,0"))
                                                                     (rule "commute_or_2" (formula "22") (term "0,0"))
                                                                     (rule "commute_or" (formula "39") (term "1,1,0,0"))
                                                                     (rule "emptyModality" (formula "4") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "eqSymm" (formula "4"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "notLeft" (formula "4"))
                                                                     (rule "replace_known_right" (formula "5") (term "0,1,3,0,0,0") (ifseqformula "40"))
                                                                     (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "polySimp_addComm0" (formula "5") (term "3,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "38") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_or_tautInEq2" (formula "38") (term "0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0,0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "38") (term "1,0,1,0,0,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                                                     (rule "leq_literals" (formula "38") (term "1,0,0,0,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "38"))
                                                                     (rule "true_left" (formula "38"))
                                                                     (rule "commute_or_2" (formula "34") (term "0"))
                                                                     (rule "commute_or_2" (formula "36") (term "0"))
                                                                     (rule "commute_or_2" (formula "21") (term "0,0,0"))
                                                                     (rule "inEqSimp_or_tautInEq0" (formula "21") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                                                                     (rule "qeq_literals" (formula "21") (term "1,0,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "true_left" (formula "21"))
                                                                     (rule "shift_paren_or" (formula "34") (term "0"))
                                                                     (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "34") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "inEqSimp_or_tautInEq1" (formula "21") (term "0,0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1,0,0,0"))
                                                                     (rule "add_literals" (formula "21") (term "1,0,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "21") (term "0,1,0,0,0"))
                                                                     (rule "leq_literals" (formula "21") (term "1,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "true_left" (formula "21"))
                                                                     (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                                                     (rule "shift_paren_or" (formula "34") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "33") (term "0,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "cnf_rightDist" (formula "31") (term "1,1,0"))
                                                                     (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                                                                     (rule "shift_paren_or" (formula "34") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_or_tautInEq2" (formula "34") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "34") (term "0,1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "34") (term "1,0,1,0,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "34") (term "0,1,0,0,0,0,0"))
                                                                     (rule "leq_literals" (formula "34") (term "1,0,0,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "cnf_rightDist" (formula "32") (term "1,1,0"))
                                                                     (rule "emptyModality" (formula "2") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: self.a.<created> = TRUE FALSE"
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "45"))
                                                         (rule "close" (formula "41") (ifseqformula "13"))
                                                      )
                                                   )
                                                   (branch " self.a.<created> = TRUE | boolean::select(anon_heap_upsweep, self.a, <created>) = TRUE FALSE"
                                                      (rule "orRight" (formula "44"))
                                                      (rule "referencedObjectIsCreatedRight" (formula "44") (ifseqformula "42"))
                                                      (rule "close" (formula "44") (ifseqformula "11"))
                                                   )
                                                )
                                                (branch "Step Case"
                                                   (rule "impRight" (formula "39"))
                                                   (rule "orRight" (formula "40"))
                                                   (rule "orRight" (formula "40"))
                                                   (rule "orRight" (formula "41"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "cut" (inst "cutFormula=  int[]::select(store(heapAfter_upsweep_0,
                      int[]::select(heap,
                                    self,
                                    PrefixSumRec::$a),
                      arr(right),
                      add(int::select(heapAfter_upsweep_0,
                                      int[]::select(heap,
                                                    self,
                                                    PrefixSumRec::$a),
                                      arr(left)),
                          int::select(heapAfter_upsweep_0,
                                      int[]::select(heap,
                                                    self,
                                                    PrefixSumRec::$a),
                                      arr(right)))),
                self,
                PrefixSumRec::$a)
= int[]::select(heap, self, PrefixSumRec::$a)") (userinteraction))
                                                   (branch "CUT: int[]::select(store(heapAfter_upsweep_0, self.a, arr(right), int::select(heapAfter_upsweep_0, self.a, arr(left)) + int::select(heapAfter_upsweep_0, self.a, arr(right))), self, a) = self.a TRUE"
                                                      (rule "applyEq" (formula "45") (term "1,1,1") (ifseqformula "1") (userinteraction))
                                                      (rule "applyEq" (formula "3") (term "1,1,1,1") (ifseqformula "1") (userinteraction))
                                                      (rule "orLeft" (formula "17"))
                                                      (branch "!even(left) = TRUE"
                                                         (rule "notLeft" (formula "17"))
                                                         (rule "selectOfStore" (formula "3") (term "1,1,1") (userinteraction))
                                                         (rule "castDel" (formula "3") (term "1,1,1,1") (userinteraction))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "selectOfStore" (formula "45") (term "1,1") (userinteraction))
                                                         (rule "castDel" (formula "45") (term "1,1,1") (userinteraction))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "ifthenelse_split" (formula "45") (term "0") (userinteraction))
                                                         (branch "k_29 + 1 >= 1 + left * 2 + right * -1 TRUE"
                                                            (rule "cut_direct" (formula "4") (term "0,1,0") (userinteraction))
                                                            (branch "CUT: k_29 >= 1 + right TRUE"
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "polySimp_elimSub" (formula "25") (term "0,0,0,0,0"))
                                                               (rule "polySimp_elimSub" (formula "31") (term "0,0,0,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "23") (term "0,0,0,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "17") (term "1,0"))
                                                               (rule "polySimp_elimSub" (formula "33") (term "0,0,0,0,0"))
                                                               (rule "polySimp_elimSub" (formula "13") (term "0,1"))
                                                               (rule "polySimp_elimSub" (formula "33") (term "0,0,1,1,0"))
                                                               (rule "polySimp_homoEq" (formula "46"))
                                                               (rule "polySimp_elimSub" (formula "25") (term "0,0,1,1,0"))
                                                               (rule "polySimp_homoEq" (formula "20"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                               (rule "polySimp_homoEq" (formula "28"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                                               (rule "polySimp_elimSub" (formula "15") (term "0,0"))
                                                               (rule "polySimp_homoEq" (formula "13"))
                                                               (rule "inEqSimp_geqRight" (formula "44"))
                                                               (rule "inEqSimp_leqRight" (formula "44"))
                                                               (rule "inEqSimp_leqRight" (formula "43"))
                                                               (rule "inEqSimp_ltRight" (formula "44"))
                                                               (rule "times_zero_1" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "42"))
                                                               (rule "inEqSimp_ltRight" (formula "43"))
                                                               (rule "times_zero_1" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "34"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "21"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26"))
                                                               (rule "inEqSimp_gtToGeq" (formula "19"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "38") (term "1,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "30") (term "1,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "22") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "45") (term "1,0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "45") (term "0,2,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "45") (term "0,2,2,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "45") (term "1,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "0,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "0,0,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "0,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "0,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "0,0,0,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "9"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "0,0,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,1,0"))
                                                               (rule "add_literals" (formula "38") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "5") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "38") (term "0,0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "5") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0,1,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,1,1,0"))
                                                               (rule "add_literals" (formula "30") (term "1,1,0,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                               (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                               (rule "add_zero_left" (formula "4") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                                               (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                               (rule "add_zero_left" (formula "6") (term "0,0,0"))
                                                               (rule "applyEq" (formula "11") (term "1") (ifseqformula "10"))
                                                               (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "41") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_540"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "eqSymm" (formula "1") (term "0,1"))
                                                               (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "41") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_541"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "eqSymm" (formula "1") (term "0,1"))
                                                               (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "polySimp_sepPosMonomial" (formula "27"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                               (rule "polySimp_mulAssoc" (formula "27") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "0,1"))
                                                               (rule "applyEq" (formula "46") (term "0,2,0,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "27"))
                                                               (rule "polySimp_addAssoc" (formula "24") (term "1,0"))
                                                               (rule "polySimp_pullOutFactor2" (formula "24") (term "0,1,0"))
                                                               (rule "add_literals" (formula "24") (term "1,0,1,0"))
                                                               (rule "times_zero_1" (formula "24") (term "0,1,0"))
                                                               (rule "add_zero_left" (formula "24") (term "1,0"))
                                                               (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "27"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "20") (term "0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                               (rule "applyEq" (formula "9") (term "0,2,0,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "27"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,0"))
                                                               (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "21") (term "0,0"))
                                                               (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "27"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "1"))
                                                               (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "27"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                               (rule "applyEq" (formula "46") (term "0,2,1,3,0,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "40") (term "1,1,0,0,0") (ifseqformula "27"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,0,0"))
                                                               (rule "applyEq" (formula "38") (term "1,0,1,0,0,1,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "47") (term "0,1,0,0,1,0") (ifseqformula "27"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "47") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0,1,0"))
                                                               (rule "applyEq" (formula "9") (term "0,2,1,3,0,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "40") (term "1,0,1,0,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "27"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "28") (term "0,0"))
                                                               (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "27"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "1,0,0"))
                                                               (rule "applyEq" (formula "38") (term "1,1,0,0,0,1,0") (ifseqformula "27"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,0,0,1,0"))
                                                               (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "27"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "27"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                                               (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "22") (term "1,0,0"))
                                                               (rule "applyEq" (formula "16") (term "0") (ifseqformula "27"))
                                                               (rule "inEqSimp_homoInEq1" (formula "16"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                               (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0"))
                                                               (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "27"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                               (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "27"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                               (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                               (rule "applyEq" (formula "14") (term "0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "27"))
                                                               (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2" (formula "35") (term "0,0,0"))
                                                               (rule "add_literals" (formula "35") (term "1,0,0,0"))
                                                               (rule "times_zero_1" (formula "35") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "35") (term "0,0"))
                                                               (rule "applyEq" (formula "47") (term "0,2,1,1,1,0,0") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "47") (term "0,0,1,0,0") (ifseqformula "27"))
                                                               (rule "polySimp_homoEq" (formula "47") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                                                               (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "27"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                               (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "27"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                               (rule "applyEq" (formula "40") (term "1,0,1,1,0") (ifseqformula "27"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                               (rule "mul_literals" (formula "4") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                               (rule "bsum_induction_upper_concrete" (formula "32") (term "1,1,0"))
                                                               (rule "polySimp_homoEq" (formula "32") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "32") (term "0,1,0,1,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "20"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                               (rule "mul_literals" (formula "20") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                               (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                               (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                                               (rule "applyEq" (formula "9") (term "1,0,2,1,3,0,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,2,1,3,0,0"))
                                                               (rule "polySimp_addComm0" (formula "9") (term "0,0,2,1,3,0,0"))
                                                               (rule "applyEq" (formula "40") (term "1,1,0,1,0,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "1,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "40") (term "0,1,0,1,0,0"))
                                                               (rule "applyEq" (formula "46") (term "1,0,2,1,3,0,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,2,1,3,0,0"))
                                                               (rule "polySimp_addComm0" (formula "46") (term "0,0,2,1,3,0,0"))
                                                               (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                                               (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                                               (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                               (rule "add_literals" (formula "21") (term "0,0"))
                                                               (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "15") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                                                               (rule "add_literals" (formula "15") (term "0,0,1"))
                                                               (rule "add_zero_left" (formula "15") (term "0,1"))
                                                               (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                               (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "20"))
                                                               (rule "applyEq" (formula "9") (term "1,0,2,0,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,2,0,0"))
                                                               (rule "polySimp_addComm0" (formula "9") (term "0,0,2,0,0"))
                                                               (rule "applyEq" (formula "46") (term "1,0,2,0,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,2,0,0"))
                                                               (rule "polySimp_addComm0" (formula "46") (term "0,0,2,0,0"))
                                                               (rule "applyEq" (formula "38") (term "1,1,0,1,0,0,1,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "38") (term "1,0,1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "38") (term "0,1,0,1,0,0,1,0"))
                                                               (rule "applyEq" (formula "40") (term "1,0,1,0,0,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0"))
                                                               (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,0"))
                                                               (rule "applyEq" (formula "38") (term "1,0,1,0,0,0,1,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0,1,0"))
                                                               (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "27") (term "0,1"))
                                                               (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "20"))
                                                               (rule "applyEq" (formula "47") (term "1,0,2,1,1,1,0,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,2,1,1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "47") (term "0,0,2,1,1,1,0,0"))
                                                               (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                               (rule "add_zero_left" (formula "23") (term "0,0,0"))
                                                               (rule "applyEq" (formula "40") (term "1,0,0,1,1,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1,1,0"))
                                                               (rule "add_literals" (formula "40") (term "0,0,0,0,1,1,0"))
                                                               (rule "add_zero_left" (formula "40") (term "0,0,0,1,1,0"))
                                                               (rule "bsum_induction_upper_concrete" (formula "47") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "0,1,0,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,0,1,0,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "47") (term "0,0,0,0,0,1,0,0"))
                                                               (rule "applyEq" (formula "47") (term "1,0,0,0,1,0,0") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                               (rule "applyEq" (formula "8") (term "0") (ifseqformula "20"))
                                                               (rule "inEqSimp_homoInEq1" (formula "8"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                               (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                               (rule "applyEq" (formula "7") (term "0") (ifseqformula "20"))
                                                               (rule "inEqSimp_homoInEq1" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                               (rule "applyEq" (formula "22") (term "0") (ifseqformula "20"))
                                                               (rule "inEqSimp_homoInEq0" (formula "22"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                               (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                               (rule "add_literals" (formula "22") (term "0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                               (rule "applyEq" (formula "16") (term "0") (ifseqformula "20"))
                                                               (rule "inEqSimp_homoInEq1" (formula "16"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                               (rule "add_literals" (formula "16") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                                               (rule "mul_literals" (formula "36") (term "0,1"))
                                                               (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "36") (term "1"))
                                                               (rule "add_literals" (formula "36") (term "0,1"))
                                                               (rule "polySimp_sepPosMonomial" (formula "32") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                               (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
                                                               (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "20"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                                                               (rule "add_literals" (formula "5") (term "0,0,1"))
                                                               (rule "add_zero_left" (formula "5") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                               (rule "polySimp_mulAssoc" (formula "10") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                               (rule "mul_literals" (formula "13") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                               (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                               (rule "mul_literals" (formula "20") (term "1"))
                                                               (rule "polySimp_sepNegMonomial" (formula "34"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                               (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "23") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_96"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "eqSymm" (formula "23") (term "0,1"))
                                                               (rule "applyEqRigid" (formula "23") (term "1,0,1") (ifseqformula "24"))
                                                               (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "46") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_542"))
                                                               (rule "eqSymm" (formula "1") (term "0,1"))
                                                               (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "polySimp_sepNegMonomial" (formula "48") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "0,0,1,0,0,0"))
                                                               (rule "applyEq" (formula "48") (term "0,0,1,0,0,0") (ifseqformula "20"))
                                                               (rule "polySimp_homoEq" (formula "48") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "48") (term "0,0,0,1,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "48") (term "0,0,0,0,1,0,0,0"))
                                                               (rule "add_literals" (formula "48") (term "0,0,0,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                               (rule "bsum_induction_upper_concrete" (formula "40") (term "1,1,0"))
                                                               (rule "polySimp_homoEq" (formula "40") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "40") (term "0,1,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "0,1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "47") (term "0,0,1,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "46") (term "0,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "0,0,1,0,0,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "39") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "46"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                               (rule "inEqSimp_contradEq3" (formula "46") (term "0,1,0,1") (ifseqformula "10"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,0,1"))
                                                               (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "46") (term "0,1,0,0,0,1,0,1"))
                                                               (rule "mul_literals" (formula "46") (term "0,0,1,0,0,0,1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,1,0,1"))
                                                               (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0,1,0,1"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "46") (term "0,0,0,1,0,1"))
                                                               (rule "add_literals" (formula "46") (term "1,1,0,0,0,1,0,1"))
                                                               (rule "times_zero_1" (formula "46") (term "1,0,0,0,1,0,1"))
                                                               (rule "add_zero_right" (formula "46") (term "0,0,0,1,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,1,0,1"))
                                                               (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0,1,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0,1,0,1"))
                                                               (rule "add_literals" (formula "46") (term "1,1,0,0,0,1,0,1"))
                                                               (rule "times_zero_1" (formula "46") (term "1,0,0,0,1,0,1"))
                                                               (rule "add_literals" (formula "46") (term "0,0,0,1,0,1"))
                                                               (rule "qeq_literals" (formula "46") (term "0,0,1,0,1"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "15"))
                                                               (rule "leq_literals" (formula "20") (term "0"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "true_left" (formula "20"))
                                                               (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "7"))
                                                               (rule "andLeft" (formula "10"))
                                                               (rule "inEqSimp_homoInEq1" (formula "10"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0"))
                                                               (rule "add_zero_right" (formula "10") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0"))
                                                               (rule "add_literals" (formula "10") (term "0"))
                                                               (rule "leq_literals" (formula "10"))
                                                               (rule "closeFalse" (formula "10"))
                                                            )
                                                            (branch "CUT: k_29 >= 1 + right FALSE"
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "ifthenelse_split" (formula "4") (term "0,1") (userinteraction))
                                                               (branch "k_29 >= 1 + left * 2 + right * -1 TRUE"
                                                                  (opengoal " ")
                                                               )
                                                               (branch "k_29 >= 1 + left * 2 + right * -1 FALSE"
                                                                  (rule "polySimp_elimSub" (formula "33") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "48"))
                                                                  (rule "polySimp_elimSub" (formula "33") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_elimSub" (formula "17") (term "1,0"))
                                                                  (rule "polySimp_elimSub" (formula "13") (term "0,1"))
                                                                  (rule "polySimp_homoEq" (formula "20"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                  (rule "polySimp_homoEq" (formula "4") (term "1"))
                                                                  (rule "times_zero_2" (formula "4") (term "1,0,1"))
                                                                  (rule "add_zero_right" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_elimSub" (formula "25") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "25") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_elimSub" (formula "23") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "31") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "13"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                                                                  (rule "inEqSimp_geqRight" (formula "36"))
                                                                  (rule "inEqSimp_geqRight" (formula "46"))
                                                                  (rule "inEqSimp_leqRight" (formula "46"))
                                                                  (rule "inEqSimp_leqRight" (formula "43"))
                                                                  (rule "inEqSimp_geqRight" (formula "39"))
                                                                  (rule "inEqSimp_ltRight" (formula "44"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_ltRight" (formula "46"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_leqRight" (formula "45"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "36"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "21"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "28"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "23"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "32") (term "1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "8") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "40") (term "0,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "0,2,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "24") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "0,2,2,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "36") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "40") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "20") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "40") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "0,0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "40") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,1,0"))
                                                                  (rule "add_literals" (formula "40") (term "1,1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "40") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "40") (term "1,1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "38") (term "1,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "7") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "32") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "32") (term "1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "1,0,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "32") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "5") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "8") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                                  (rule "applyEq" (formula "13") (term "1") (ifseqformula "12"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "43") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_543"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "eqSymm" (formula "1") (term "0,1"))
                                                                  (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "44"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "43") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_544"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "eqSymm" (formula "1") (term "0,1"))
                                                                  (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "44"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "13") (term "0,1,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_545"))
                                                                  (rule "eqSymm" (formula "13") (term "0,1"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "30") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "0,1"))
                                                                  (rule "applyEq" (formula "11") (term "0,2,1,3,0,0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "49") (term "0,2,1,3,0,0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "13") (term "0,2,0,0,0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "17") (term "0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "49") (term "0,2,0,0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "14") (term "0,1,0,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,0"))
                                                                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "30"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "19"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                  (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "24") (term "0,0"))
                                                                  (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "24") (term "0,0"))
                                                                  (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "31") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                                  (rule "add_literals" (formula "31") (term "1,1,0"))
                                                                  (rule "applyEq" (formula "43") (term "1,0,1,0,0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,1") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,1,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,0,1"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,1,0,1"))
                                                                  (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "23") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "1,0,0"))
                                                                  (rule "applyEq" (formula "41") (term "1,0,1,0,0,1,0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "39") (term "0,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "43") (term "1,1,0,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addComm1" (formula "43") (term "1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0,0"))
                                                                  (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "1"))
                                                                  (rule "applyEq" (formula "13") (term "0,2,1,3,0,0,0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "applyEq" (formula "11") (term "0,2,0,0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "1,0,0"))
                                                                  (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "applyEq" (formula "50") (term "0,1,0,0,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "50") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "27") (term "1,0"))
                                                                  (rule "polySimp_pullOutFactor2" (formula "27") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "27") (term "1,0,1,0"))
                                                                  (rule "times_zero_1" (formula "27") (term "0,1,0"))
                                                                  (rule "add_zero_left" (formula "27") (term "1,0"))
                                                                  (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "41") (term "1,1,0,0,0,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor2" (formula "38") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "38") (term "1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "38") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "38") (term "0,0"))
                                                                  (rule "applyEq" (formula "14") (term "0,2,1,1,0,0,1") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "14") (term "0,0,0,0,1") (ifseqformula "30"))
                                                                  (rule "polySimp_homoEq" (formula "14") (term "0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1"))
                                                                  (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                                  (rule "applyEq" (formula "50") (term "0,2,1,1,1,0,0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "50") (term "0,0,1,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_homoEq" (formula "50") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0"))
                                                                  (rule "applyEq" (formula "43") (term "1,0,1,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addComm1" (formula "43") (term "0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                  (rule "bsum_induction_upper_concrete" (formula "35") (term "1,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "35") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "35") (term "0,1,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "49") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_546"))
                                                                  (rule "eqSymm" (formula "1") (term "0,1"))
                                                                  (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                  (rule "mul_literals" (formula "25") (term "1"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "24"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                                  (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,2,0,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,2,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0,2,0,0,0"))
                                                                  (rule "applyEq" (formula "14") (term "1,0,2,1,3,0,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "14") (term "0,0,2,1,3,0,0,0"))
                                                                  (rule "applyEq" (formula "20") (term "0") (ifseqformula "24"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "20"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0"))
                                                                  (rule "applyEq" (formula "12") (term "1,0,2,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,2,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "12") (term "0,0,2,0,0"))
                                                                  (rule "applyEq" (formula "12") (term "1,0,2,1,3,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,2,1,3,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "12") (term "0,0,2,1,3,0,0"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,2,1,3,0,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0,2,1,3,0,0,0"))
                                                                  (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "44") (term "1,1,0,1,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,1,0,1,0,0"))
                                                                  (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "24"))
                                                                  (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "24"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
                                                                  (rule "applyEq" (formula "42") (term "1,1,0,1,0,0,1,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "42") (term "1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "42") (term "0,1,0,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "24"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "25"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0"))
                                                                  (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,1"))
                                                                  (rule "add_zero_left" (formula "19") (term "0,1"))
                                                                  (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "18") (term "0") (ifseqformula "24"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "18"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                                                  (rule "applyEq" (formula "14") (term "1,0,2,0,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,2,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "14") (term "0,0,2,0,0,0"))
                                                                  (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "31") (term "0,1"))
                                                                  (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "24"))
                                                                  (rule "applyEq" (formula "27") (term "1,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "27") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "15") (term "1,0,2,1,1,0,0,1") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,2,1,1,0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "0,0,2,1,1,0,0,1"))
                                                                  (rule "applyEq" (formula "42") (term "1,0,1,0,0,0,1,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                                                  (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "51") (term "1,0,2,1,1,1,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "51") (term "0,2,1,1,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "51") (term "0,0,2,1,1,1,0,0"))
                                                                  (rule "applyEq" (formula "44") (term "1,0,1,0,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0"))
                                                                  (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0"))
                                                                  (rule "applyEq" (formula "44") (term "1,0,0,1,1,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "44") (term "0,0,0,0,1,1,0"))
                                                                  (rule "add_zero_left" (formula "44") (term "0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "24"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "24"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                                  (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                                  (rule "add_literals" (formula "26") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                                  (rule "mul_literals" (formula "40") (term "0,1"))
                                                                  (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "40") (term "1"))
                                                                  (rule "add_literals" (formula "40") (term "0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                                  (rule "applyEq" (formula "11") (term "0") (ifseqformula "24"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "24"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "15") (term "0,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1"))
                                                                  (rule "applyEq" (formula "15") (term "0,0,0,0,1") (ifseqformula "24"))
                                                                  (rule "polySimp_homoEq" (formula "15") (term "0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0,0,1"))
                                                                  (rule "bsum_induction_upper_concrete" (formula "51") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "51") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "0,1,0,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "51") (term "0,0,1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "51") (term "0,0,0,0,0,1,0,0"))
                                                                  (rule "applyEq" (formula "51") (term "1,0,0,0,1,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "0,0,0,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "0,0,0,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "51") (term "0,0,0,0,0,0,1,0,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "36") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
                                                                  (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "24"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,1"))
                                                                  (rule "add_zero_left" (formula "4") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                  (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                  (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "27") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_97"))
                                                                  (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "eqSymm" (formula "27") (term "0,1"))
                                                                  (rule "applyEqRigid" (formula "27") (term "1,0,1") (ifseqformula "28"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                                                                  (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "5"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "true_left" (formula "14"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "38"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                  (rule "bsum_induction_upper_concrete" (formula "42") (term "1,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "42") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "42") (term "0,1,0,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "49") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,0,0,0"))
                                                                  (rule "applyEq" (formula "49") (term "0,0,1,0,0,0") (ifseqformula "22"))
                                                                  (rule "polySimp_homoEq" (formula "49") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "0,0,0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "49") (term "0,0,0,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "48") (term "0,1,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "48") (term "0,0,1,0,0,1,0,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "41") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "48") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "0,0,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "48") (term "0,0,1,0,0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "48"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "47") (term "0,0,1,1") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "47") (term "0,0,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "0,1,0,0,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "47") (term "0,0,1,0,0,0,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,0,0,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "1,0,1,0,0,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,0,1,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0,0,1,1"))
                                                                  (rule "add_literals" (formula "47") (term "1,1,0,0,0,0,1,1"))
                                                                  (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,1,1"))
                                                                  (rule "add_zero_right" (formula "47") (term "0,0,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,0,1,1"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,1,1"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "47") (term "0,0,0,0,1,1"))
                                                                  (rule "add_literals" (formula "47") (term "1,1,0,0,0,0,1,1"))
                                                                  (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,1,1"))
                                                                  (rule "add_literals" (formula "47") (term "0,0,0,0,1,1"))
                                                                  (rule "leq_literals" (formula "47") (term "0,0,0,1,1"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "mul_literals" (formula "47") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "47") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "16"))
                                                                  (rule "leq_literals" (formula "21") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "true_left" (formula "21"))
                                                                  (rule "selectOfStore" (formula "9") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "13")))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "5"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,2,1,3,0,0,0") (ifseqformula "7"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "1") (term "0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0,2,1,3,0,0,0"))
                                                                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                                  (rule "add_literals" (formula "5") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "0"))
                                                                  (rule "qeq_literals" (formula "5"))
                                                                  (rule "true_left" (formula "5"))
                                                                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "14") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "14") (term "1"))
                                                                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                                                  (rule "add_literals" (formula "7") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "0"))
                                                                  (rule "leq_literals" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,2,0,0,0") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,2,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,2,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "1") (term "0,2,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,2,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,2,0,0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0,0,2,0,0,0"))
                                                                  (rule "applyEq" (formula "37") (term "1,1,0,1,0,0") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "37") (term "0,1,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "37") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,1,0,0"))
                                                                  (rule "add_literals" (formula "37") (term "0,0,1,0,1,0,0"))
                                                                  (rule "add_zero_left" (formula "37") (term "0,1,0,1,0,0"))
                                                                  (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "20") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "9") (term "1,0,2,0,0,0") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,2,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0,2,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "9") (term "0,2,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,2,0,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0,2,0,0,0"))
                                                                  (rule "add_zero_left" (formula "9") (term "0,0,2,0,0,0"))
                                                                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "19"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0"))
                                                                  (rule "applyEq" (formula "35") (term "1,1,0,1,0,0,1,0") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "35") (term "1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "35") (term "0,0,1,0,1,0,0,1,0"))
                                                                  (rule "add_zero_left" (formula "35") (term "0,1,0,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "9") (term "1,0,2,1,3,0,0,0") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "9") (term "0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_zero_left" (formula "9") (term "0,0,2,1,3,0,0,0"))
                                                                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "12") (term "0,0"))
                                                                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "7") (term "0,0"))
                                                                  (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "33") (term "1"))
                                                                  (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                                                  (rule "add_literals" (formula "33") (term "0,0,1"))
                                                                  (rule "applyEq" (formula "37") (term "1,0,1,0,0,1,0") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "37") (term "0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "37") (term "0,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "1"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,1"))
                                                                  (rule "add_zero_left" (formula "18") (term "0,1"))
                                                                  (rule "applyEq" (formula "44") (term "0,0,1,1") (ifseqformula "6"))
                                                                  (rule "polySimp_homoEq" (formula "44") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "0,1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "44") (term "0,0,1,0,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "44") (term "1,0,1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,1"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "44") (term "0,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,1,1"))
                                                                  (rule "add_literals" (formula "44") (term "0,0,0,0,0,1,1"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "44") (term "0,0,0,1,1"))
                                                                  (rule "applyEq" (formula "44") (term "1,0,2,1,1,1,1") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,2,1,1,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0,0,2,1,1,1,1"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "44") (term "0,2,1,1,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,2,1,1,1,1"))
                                                                  (rule "add_literals" (formula "44") (term "0,0,0,2,1,1,1,1"))
                                                                  (rule "add_zero_left" (formula "44") (term "0,0,2,1,1,1,1"))
                                                                  (rule "applyEq" (formula "35") (term "1,0,1,0,0,0,1,0") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "35") (term "0,0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "35") (term "0,1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "24") (term "1"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                                                                  (rule "add_literals" (formula "24") (term "0,0,1"))
                                                                  (rule "add_zero_left" (formula "24") (term "0,1"))
                                                                  (rule "applyEq" (formula "37") (term "1,0,1,0,0,0") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "37") (term "0,0,1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "37") (term "0,1,0,0,0"))
                                                                  (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "1"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                                                  (rule "add_literals" (formula "32") (term "0,0,1"))
                                                                  (rule "add_zero_left" (formula "32") (term "0,1"))
                                                                  (rule "applyEq" (formula "37") (term "1,0,0,0,0,1,1,0") (ifseqformula "6"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "37") (term "0,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                  (rule "mul_literals" (formula "19") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "44") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "0,0,1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "8"))
                                                                  (rule "leq_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "14"))
                                                                  (rule "greater_literals" (formula "7") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "7") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "elimGcdEq" (formula "42") (term "0,1,1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=left") (inst "elimGcdRightDiv=add(Z(0(#)), k_29)"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "add_zero_left" (formula "42") (term "1,1,0,0,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "42") (term "0,1,0,1,0,0,1,1"))
                                                                  (rule "add_zero_left" (formula "42") (term "1,1,0,0,1,0,1,1"))
                                                                  (rule "add_zero_left" (formula "42") (term "1,1,1,0,1,1"))
                                                                  (rule "add_literals" (formula "42") (term "1,0,0,0,1,1"))
                                                                  (rule "add_zero_left" (formula "42") (term "1,1,0,1,0,0,1,1"))
                                                                  (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,1,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,0,1,1"))
                                                                  (rule "add_literals" (formula "42") (term "1,1,0,0,0,0,1,1"))
                                                                  (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,1,1"))
                                                                  (rule "add_zero_right" (formula "42") (term "0,0,0,0,1,1"))
                                                                  (rule "leq_literals" (formula "42") (term "0,0,0,1,1"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,1,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,1,0,1,1"))
                                                                  (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,1,1"))
                                                                  (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,1,1"))
                                                                  (rule "add_zero_right" (formula "42") (term "0,0,1,0,1,1"))
                                                                  (rule "equal_literals" (formula "42") (term "0,1,0,1,1"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,1,1"))
                                                                  (rule "add_literals" (formula "42") (term "1,1,0,0,0,1,1"))
                                                                  (rule "times_zero_1" (formula "42") (term "1,0,0,0,1,1"))
                                                                  (rule "add_zero_right" (formula "42") (term "0,0,0,1,1"))
                                                                  (rule "qeq_literals" (formula "42") (term "0,0,1,1"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "selectOfAnonEQ" (formula "9") (term "0") (ifseqformula "25"))
                                                                  (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "39")) (ifInst ""  (formula "15")))
                                                                  (rule "elementOfInfiniteUnion" (formula "9") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "elementOfSingleton" (formula "9") (term "1,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "newSym_eq" (formula "29") (inst "newSymDef=add(mul(k_29, Z(neglit(1(#)))), mul(left, Z(0(#))))") (inst "l=l_338"))
                                                                  (rule "times_zero_1" (formula "29") (term "1,1,1"))
                                                                  (rule "add_zero_right" (formula "29") (term "1,1"))
                                                                  (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "29"))
                                                                  (rule "polySimp_homoEq" (formula "30"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                                                                  (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0"))
                                                                  (rule "applyEq" (formula "35") (term "0,1,1,0,0,1,0") (ifseqformula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,0,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "33") (term "0,1,1,0,0,0,1,0") (ifseqformula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "0,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0,0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,1,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "33") (term "1,1,0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "31") (term "0") (ifseqformula "29"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,0"))
                                                                  (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "31") (term "0,0"))
                                                                  (rule "applyEq" (formula "35") (term "0,1,1,0,0,0") (ifseqformula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,0,1,0,0,0"))
                                                                  (rule "applyEq" (formula "35") (term "0,1,0,0,0,1,1,0") (ifseqformula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1"))
                                                                  (rule "applyEq" (formula "26") (term "1,0,1,0,0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "8") (term "0,1,0,2,0,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,2,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,2,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,2,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,2,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,2,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,2,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,2,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "8") (term "0,0,2,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,2,0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,2,0,0,0"))
                                                                  (rule "applyEq" (formula "24") (term "1,0,1,0,0,1,0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "33") (term "0,1,1,0,1,0,0,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "33") (term "0,1,1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "0,1,1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "33") (term "1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "33") (term "0,1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "33") (term "1,0,1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "33") (term "1,1,1,0,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "11") (term "0,1,1") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "11") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "1"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,1"))
                                                                  (rule "applyEq" (formula "1") (term "0,1,0,2,1,3,0,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,2,0,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,2,0,3,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,2,0,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,2,0,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,2,0,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,2,0,3,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0,2,0,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,2,0,3,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,2,0,3,0,0,0"))
                                                                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "30"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "12") (term "0"))
                                                                  (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                  (rule "applyEq" (formula "35") (term "0,1,1,0,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "35") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,1,0,0,0"))
                                                                  (rule "applyEq" (formula "35") (term "0,1,1,0,0,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "35") (term "0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                                  (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                                  (rule "applyEq" (formula "33") (term "0,1,1,0,0,0,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "33") (term "0,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "0,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "33") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "33") (term "1,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,1,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "33") (term "1,1,0,1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                                                  (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,0,0"))
                                                                  (rule "applyEq" (formula "1") (term "0,1,0,2,0,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,2,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,2,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,2,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,2,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,2,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,2,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,2,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0,2,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,2,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,2,0,0,0"))
                                                                  (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                                                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "30"))
                                                                  (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "applyEq" (formula "35") (term "0,1,1,0,1,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "35") (term "0,1,1,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,1,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "0,1,1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "35") (term "0,1,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "35") (term "1,0,1,0,0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,1,0,1,0,0"))
                                                                  (rule "applyEq" (formula "8") (term "0,1,0,2,1,3,0,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "8") (term "3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1,0,2,0,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,2,0,3,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,2,0,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,2,0,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,2,0,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "8") (term "0,2,0,3,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "8") (term "0,0,2,0,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,2,0,3,0,0,0"))
                                                                  (rule "add_literals" (formula "8") (term "1,1,0,2,0,3,0,0,0"))
                                                                  (rule "applyEq" (formula "24") (term "1,0,1,0,0,0,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "26") (term "1,0,1,0,0,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "42") (term "1,0,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "1"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,1"))
                                                                  (rule "applyEq" (formula "26") (term "1,0,1,0,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,0,0"))
                                                                  (rule "applyEq" (formula "21") (term "0,1,1") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "21") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "21") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "1"))
                                                                  (rule "add_literals" (formula "21") (term "1,1,1"))
                                                                  (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "1"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,1"))
                                                                  (rule "applyEq" (formula "35") (term "0,1,0,0,0,1,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,1,0"))
                                                                  (rule "applyEq" (formula "1") (term "0,2,1,3,0,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "3,0,0,0"))
                                                                  (rule "applyEq" (formula "8") (term "0,2,1,3,0,0,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addComm0" (formula "8") (term "3,0,0,0"))
                                                                  (rule "applyEq" (formula "26") (term "1,0,0,0,0,1,1,0") (ifseqformula "30"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "12") (ifseqformula "31"))
                                                                  (rule "greater_literals" (formula "12") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0"))
                                                                  (rule "add_literals" (formula "12") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "12") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "12") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "elimGcdEq" (formula "15") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=result") (inst "elimGcdRightDiv=add(l_338, mul(k_29, Z(neglit(1(#)))))"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "add_literals" (formula "15") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "15") (term "1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "15") (term "0,0,1"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "15") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "15") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "applyEq" (formula "25") (term "0,1,1,0,0,1,0") (ifseqformula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "25") (term "1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,1,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,0,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0,1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "25") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "23") (term "0,1,1,0,0,0,1,0") (ifseqformula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "23") (term "1,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,1,0,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,1,0,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "23") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "41") (term "0,1,0,0") (ifseqformula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                                  (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "41") (term "1,0,0"))
                                                                  (rule "applyEq" (formula "25") (term "0,1,1,0,0,0") (ifseqformula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "25") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "15"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "21"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                                  (rule "applyEq" (formula "25") (term "0,1,0,0,0,1,1,0") (ifseqformula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0,1,1,0"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,1,1,0"))
                                                                  (rule "bsum_induction_lower2_concrete" (formula "41") (term "0"))
                                                                  (rule "bsum_lower_equals_upper" (formula "41") (term "0,0"))
                                                                  (rule "polySimp_elimSub" (formula "41") (term "0"))
                                                                  (rule "add_zero_left" (formula "41") (term "0"))
                                                                  (rule "polySimp_homoEq" (formula "41"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0"))
                                                                  (rule "polySimp_elimOne" (formula "41") (term "1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "41") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "41") (term "1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "41") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "41") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "add_zero_right" (formula "41") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                                  (rule "mul_literals" (formula "21") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "40"))
                                                                  (rule "polySimp_mulLiterals" (formula "40") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "40") (term "1"))
                                                                  (rule "bsum_induction_lower2_concrete" (formula "24") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "24") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,1,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,1,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "24") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "24") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "24") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "24") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "24") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,1,0"))
                                                                  (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "10"))
                                                                  (rule "greater_literals" (formula "7") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "7") (term "0"))
                                                                  (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcd=Z(4(#))") (inst "elimGcdLeftDiv=l_338") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                  (rule "leq_literals" (formula "7") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0"))
                                                                  (rule "leq_literals" (formula "7") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "4"))
                                                                  (rule "times_zero_1" (formula "8") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "7"))
                                                                  (rule "times_zero_1" (formula "8") (term "1,1,0"))
                                                                  (rule "greater_literals" (formula "8") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "leq_literals" (formula "8") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "30"))
                                                                  (rule "times_zero_1" (formula "8") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                  (rule "mul_literals" (formula "8") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "8"))
                                                                  (rule "leq_literals" (formula "7") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "selectOfAnonEQ" (formula "34") (term "1,0,1,0") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "39")))
                                                                  (rule "elementOfInfiniteUnion" (formula "34") (term "0,0,1,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "elementOfSingleton" (formula "34") (term "1,0,0,0,1,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "castDel" (formula "34") (term "0,0,0,0,0,1,0,1,0"))
                                                                  (rule "castDel" (formula "34") (term "0,0,1,0,0,0,1,0,1,0"))
                                                                  (rule "castDel" (formula "34") (term "1,0,0,1,1,0,0,0,1,0,1,0"))
                                                                  (rule "instanceof_static_type" (formula "34") (term "0,1,0,0,1,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "selectOfAnonEQ" (formula "10") (term "0") (ifseqformula "32"))
                                                                  (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "38")))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "10") (term "0,0,1,0,0") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "14")))
                                                                  (rule "elementOfInfiniteUnion" (formula "10") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "elementOfSingleton" (formula "10") (term "1,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "selectOfAnonEQ" (formula "25") (term "1,0,1,1,0") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "39")))
                                                                  (rule "polySimp_homoEq" (formula "25") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "25") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "25") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "0,0,1,1,0"))
                                                                  (rule "elementOfInfiniteUnion" (formula "25") (term "0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "castDel" (formula "25") (term "1,0,0,1,1,0,0,0,0,1,0"))
                                                                  (rule "castDel" (formula "25") (term "0,0,1,0,0,0,0,1,0"))
                                                                  (rule "castDel" (formula "25") (term "0,0,0,0,0,0,1,0"))
                                                                  (rule "instanceof_static_type" (formula "25") (term "0,1,0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "selectOfAnonEQ" (formula "41") (term "0") (ifseqformula "32"))
                                                                  (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "39")))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "41") (term "0,0,1,0,0") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "elementOfInfiniteUnion" (formula "41") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "elementOfSingleton" (formula "41") (term "1,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "castDel" (formula "41") (term "0,0,1,0,0,0,0"))
                                                                  (rule "castDel" (formula "41") (term "1,0,0,1,1,0,0,0,0"))
                                                                  (rule "castDel" (formula "41") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "41") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "41") (term "1,1,0,0,1,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "41") (term "1,1,0,0,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,0,0"))
                                                                  (rule "instanceof_static_type" (formula "41") (term "0,1,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,0,0"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "41") (term "0,0,1,1,0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_547"))
                                                                  (rule "eqSymm" (formula "1") (term "0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "42") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_contradInEq3" (formula "42") (term "0,0,0,0") (ifseqformula "31"))
                                                                  (rule "greater_literals" (formula "42") (term "0,0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "polySimp_rightDist" (formula "42") (term "0,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "42") (term "0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "42") (term "1,1,0,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0"))
                                                                  (rule "leq_literals" (formula "42") (term "0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "ifthenelse_negated" (formula "42") (term "0"))
                                                                  (rule "selectOfAnonEQ" (formula "2") (term "1,3,0,0,0") (ifseqformula "33"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0,1,1,0,1,3,0,0,0") (ifseqformula "24"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,1,0,1,3,0,0,0") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "elementOfInfiniteUnion" (formula "2") (term "0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "typeEqDerived2" (formula "2") (term "0,1,0,0,1,3,0,0,0") (ifseqformula "22"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "castDel" (formula "2") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "2") (term "1,0,0,1,1,0,0,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "2") (term "0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "2") (term "0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "qeq_literals" (formula "2") (term "0,1,0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "2") (term "0,0,1,0,0,1,3,0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_548"))
                                                                  (rule "eqSymm" (formula "2") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,1,3,0,0,0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "3") (term "0,0,0,1,3,0,0,0") (ifseqformula "32"))
                                                                  (rule "greater_literals" (formula "3") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "qeq_literals" (formula "3") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "selectOfAnonEQ" (formula "11") (term "0,3,0,0,0") (ifseqformula "34"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "11") (term "0,0,1,1,0,0,3,0,0,0") (ifseqformula "25"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "replace_known_right" (formula "11") (term "0,0,1,0,0,3,0,0,0") (ifseqformula "41"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "3,0,0,0"))
                                                                  (rule "elementOfInfiniteUnion" (formula "11") (term "0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "elementOfSingleton" (formula "11") (term "1,0,0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "typeEqDerived2" (formula "11") (term "0,1,0,0,1,3,0,0,0") (ifseqformula "31"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "castDel" (formula "11") (term "0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "11") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "11") (term "1,0,0,1,1,0,0,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,0,0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "leq_literals" (formula "11") (term "0,0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "ifthenelse_negated" (formula "11") (term "1,3,0,0,0"))
                                                                  (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "37"))
                                                                  (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "andLeft" (formula "37"))
                                                                  (rule "notLeft" (formula "37"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "37"))
                                                                  (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "37") (term "0,0"))
                                                                  (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "38") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_98"))
                                                                  (rule "eqSymm" (formula "38") (term "0,1"))
                                                                  (rule "applyEqRigid" (formula "38") (term "1,0,1") (ifseqformula "39"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                                  (rule "mul_literals" (formula "37") (term "1"))
                                                                  (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "21"))
                                                                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "44")))
                                                                  (rule "andLeft" (formula "21"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "21"))
                                                                  (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0"))
                                                                  (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "22") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_99"))
                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "eqSymm" (formula "22") (term "0,1"))
                                                                  (rule "applyEqRigid" (formula "22") (term "1,0,1") (ifseqformula "23"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                                  (rule "mul_literals" (formula "21") (term "1"))
                                                                  (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "30"))
                                                                  (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "andLeft" (formula "30"))
                                                                  (rule "andLeft" (formula "30"))
                                                                  (rule "notLeft" (formula "30"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "30"))
                                                                  (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "30") (term "0,0"))
                                                                  (rule "applyEq" (formula "43") (term "0") (ifseqformula "12"))
                                                                  (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "12"))
                                                                  (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "12"))
                                                                  (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "31") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_100"))
                                                                  (rule "eqSymm" (formula "31") (term "0,1"))
                                                                  (rule "applyEqRigid" (formula "31") (term "1,0,1") (ifseqformula "32"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                                  (rule "mul_literals" (formula "30") (term "1"))
                                                                  (rule "selectOfAnonEQ" (formula "12") (term "0") (ifseqformula "27"))
                                                                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "46")) (ifInst ""  (formula "16")))
                                                                  (rule "elementOfInfiniteUnion" (formula "12") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "elementOfSingleton" (formula "12") (term "1,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "selectOfAnonEQ" (formula "38") (term "2,0,0,1,1,0") (ifseqformula "26"))
                                                                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "46")))
                                                                  (rule "elementOfInfiniteUnion" (formula "38") (term "0,0,2,0,0,1,1,0"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "elementOfSingleton" (formula "38") (term "1,0,0,0,2,0,0,1,1,0"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "castDel" (formula "38") (term "0,0,1,0,0,0,2,0,0,1,1,0"))
                                                                  (rule "castDel" (formula "38") (term "1,0,0,1,1,0,0,0,2,0,0,1,1,0"))
                                                                  (rule "castDel" (formula "38") (term "0,0,0,0,0,2,0,0,1,1,0"))
                                                                  (rule "instanceof_static_type" (formula "38") (term "0,1,0,0,2,0,0,1,1,0"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "selectOfAnonEQ" (formula "48") (term "1,0") (ifseqformula "26"))
                                                                  (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "46")))
                                                                  (rule "elementOfInfiniteUnion" (formula "48") (term "0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "elementOfSingleton" (formula "48") (term "1,0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "castDel" (formula "48") (term "0,0,1,0,0,0,1,0"))
                                                                  (rule "castDel" (formula "48") (term "0,0,0,0,0,1,0"))
                                                                  (rule "castDel" (formula "48") (term "1,0,0,1,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "48") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "48") (term "0,0,0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0,1,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "48") (term "1,1,0,0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "48") (term "0,0,0,1,0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "48") (term "0,0,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "48") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "48") (term "0,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "48") (term "0,0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "instanceof_static_type" (formula "48") (term "0,1,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,0,1,0"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "48") (term "0,0,1,0,0,1,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_549"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "eqSymm" (formula "1") (term "0,1"))
                                                                  (rule "inEqSimp_subsumption4" (formula "49") (term "0,0,0,1,0") (ifseqformula "35"))
                                                                  (rule "greater_literals" (formula "49") (term "0,0,0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "0,0,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "49") (term "0,0,0,0,0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "49") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,0,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "0,0,0,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "49") (term "0,0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "49") (term "1,1,0,0,0,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "49") (term "0,0,0,0,0,1,0"))
                                                                  (rule "qeq_literals" (formula "49") (term "0,0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                  (rule "selectOfAnonEQ" (formula "12") (term "0,3,0,0,0") (ifseqformula "37"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "12") (term "0,0,1,1,0,0,3,0,0,0") (ifseqformula "27"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "replace_known_right" (formula "12") (term "0,0,1,0,0,3,0,0,0") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "polySimp_addComm0" (formula "12") (term "3,0,0,0"))
                                                                  (rule "elementOfInfiniteUnion" (formula "12") (term "0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "typeEqDerived2" (formula "12") (term "0,1,0,0,1,3,0,0,0") (ifseqformula "25"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "castDel" (formula "12") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "12") (term "0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "12") (term "1,0,0,1,1,0,0,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "12") (term "0,1,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "12") (term "1,0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "12") (term "0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "qeq_literals" (formula "12") (term "0,1,0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,3,0,0,0"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "12") (term "0,0,1,0,0,1,3,0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_550"))
                                                                  (rule "eqSymm" (formula "12") (term "0,1"))
                                                                  (rule "inEqSimp_subsumption4" (formula "13") (term "0,0,0,1,3,0,0,0") (ifseqformula "36"))
                                                                  (rule "greater_literals" (formula "13") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "qeq_literals" (formula "13") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "selectOfAnonEQ" (formula "4") (term "2,1,3,0,0,0") (ifseqformula "28"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_right" (formula "4") (term "0,0,1,0,2,1,3,0,0,0") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "elementOfInfiniteUnion" (formula "4") (term "0,0,2,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "elementOfSingleton" (formula "4") (term "1,0,0,0,2,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "typeEqDerived2" (formula "4") (term "0,1,0,0,2,1,3,0,0,0") (ifseqformula "26"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "castDel" (formula "4") (term "0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "4") (term "1,0,0,1,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "4") (term "0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4") (term "0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "1,0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "4") (term "0,0,1,1,0,0,2,1,3,0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_551"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "eqSymm" (formula "4") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "5") (term "0,0,0,2,1,3,0,0,0") (ifseqformula "37"))
                                                                  (rule "greater_literals" (formula "5") (term "0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "qeq_literals" (formula "5") (term "0,0,0,0,2,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "inEqSimp_contradInEq3" (formula "5") (term "0,0,0,2,1,3,0,0,0") (ifseqformula "37"))
                                                                  (rule "greater_literals" (formula "5") (term "0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "0,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "leq_literals" (formula "5") (term "0,0,0,0,2,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "ifthenelse_negated" (formula "5") (term "2,1,3,0,0,0"))
                                                                  (rule "selectOfAnonEQ" (formula "42") (term "0,0") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "48")))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "42") (term "0,0,1,0,0,0") (ifseqformula "29"))
                                                                  (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "18")))
                                                                  (rule "elementOfInfiniteUnion" (formula "42") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "elementOfSingleton" (formula "42") (term "1,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "selectOfAnonEQ" (formula "45") (term "0") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "48")))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "45") (term "0,0,1,0,0") (ifseqformula "29"))
                                                                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "18")))
                                                                  (rule "elementOfInfiniteUnion" (formula "45") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "elementOfSingleton" (formula "45") (term "1,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "selectOfAnonEQ" (formula "43") (term "0,0,1,0") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "43") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "29"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "replace_known_right" (formula "43") (term "0,0,1,0,0,0,1,0") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "replace_known_left" (formula "43") (term "0,0,1,0,0,0,1,0") (ifseqformula "18"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "elementOfInfiniteUnion" (formula "43") (term "0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "methodBodyExpand" (formula "7") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "methodBodyExpand" (formula "6") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "24"))
                                                                  (rule "leq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "selectOfAnonEQ" (formula "41") (term "1,1,1,0") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "49")))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "41") (term "0,0,1,0,1,1,1,0") (ifseqformula "29"))
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "polySimp_homoEq" (formula "41") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "41") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "41") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "41") (term "0,1,1,0"))
                                                                  (rule "elementOfInfiniteUnion" (formula "41") (term "0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "elementOfSingleton" (formula "41") (term "1,0,0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "castDel" (formula "41") (term "0,0,0,0,0,0,1,0"))
                                                                  (rule "castDel" (formula "41") (term "0,0,1,0,0,0,0,1,0"))
                                                                  (rule "castDel" (formula "41") (term "1,0,0,1,1,0,0,0,0,1,0"))
                                                                  (rule "instanceof_static_type" (formula "41") (term "0,1,0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "41"))
                                                                  (rule "selectOfAnonEQ" (formula "14") (term "2,1,3,0,0,0") (ifseqformula "29"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "replace_known_right" (formula "14") (term "0,0,1,0,2,1,3,0,0,0") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "elementOfInfiniteUnion" (formula "14") (term "0,0,2,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "elementOfSingleton" (formula "14") (term "1,0,0,0,2,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "typeEqDerived2" (formula "14") (term "0,1,0,0,2,1,3,0,0,0") (ifseqformula "27"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "castDel" (formula "14") (term "0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "14") (term "1,0,0,1,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "14") (term "0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "14") (term "0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "14") (term "0,0,1,1,0,0,2,1,3,0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_552"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "eqSymm" (formula "14") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0,2,1,3,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "inEqSimp_contradInEq3" (formula "15") (term "0,1,0,0,2,1,3,0,0,0") (ifseqformula "38"))
                                                                  (rule "greater_literals" (formula "15") (term "0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (rule "leq_literals" (formula "15") (term "0,0,1,0,0,2,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "ifthenelse_negated" (formula "15") (term "2,1,3,0,0,0"))
                                                                  (rule "selectOfAnonEQ" (formula "5") (term "0,3,0,0,0") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,0,1,1,0,0,3,0,0,0") (ifseqformula "30"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "replace_known_right" (formula "5") (term "0,0,1,0,0,3,0,0,0") (ifseqformula "50"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "3,0,0,0"))
                                                                  (rule "elementOfInfiniteUnion" (formula "5") (term "0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "elementOfSingleton" (formula "5") (term "1,0,0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "typeEqDerived2" (formula "5") (term "0,1,0,0,1,3,0,0,0") (ifseqformula "37"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "castDel" (formula "5") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "5") (term "0,0,1,0,0,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "5") (term "1,0,0,1,1,0,0,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_zero_right" (formula "5") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,1,3,0,0,0"))
                                                                  (rule "add_zero_right" (formula "5") (term "0,0,0,0,1,3,0,0,0"))
                                                                  (rule "leq_literals" (formula "5") (term "0,0,0,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "3,0,0,0"))
                                                                  (rule "ifthenelse_negated" (formula "5") (term "0,3,0,0,0"))
                                                                  (rule "selectOfAnonEQ" (formula "43") (term "0,0") (ifseqformula "30"))
                                                                  (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "49")) (ifInst ""  (formula "19")))
                                                                  (rule "elementOfInfiniteUnion" (formula "43") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "24")))
                                                                  (rule "true_left" (formula "43"))
                                                                  (rule "selectOfAnonEQ" (formula "43") (term "0,0,1,0") (ifseqformula "30"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "replace_known_left" (formula "43") (term "0,1,1,0,0,0,1,0") (ifseqformula "19"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "elementOfInfiniteUnion" (formula "43") (term "0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "elementOfSingleton" (formula "43") (term "1,0,0,0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "selectOfAnonEQ" (formula "45") (term "0") (ifseqformula "30"))
                                                                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "48")) (ifInst ""  (formula "19")))
                                                                  (rule "elementOfInfiniteUnion" (formula "45") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "elementOfSingleton" (formula "45") (term "1,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "49")))
                                                                  (rule "false_right" (formula "45"))
                                                                  (rule "selectOfAnonEQ" (formula "42") (term "2,0,1,0") (ifseqformula "30"))
                                                                  (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "48")))
                                                                  (rule "elementOfInfiniteUnion" (formula "42") (term "0,0,2,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "elementOfSingleton" (formula "42") (term "1,0,0,0,2,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "castDel" (formula "42") (term "0,0,0,0,0,2,0,1,0"))
                                                                  (rule "castDel" (formula "42") (term "1,0,0,1,1,0,0,0,2,0,1,0"))
                                                                  (rule "castDel" (formula "42") (term "0,0,1,0,0,0,2,0,1,0"))
                                                                  (rule "instanceof_static_type" (formula "42") (term "0,1,0,0,2,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "selectOfAnonEQ" (formula "15") (term "1,0,3,0,0,0") (ifseqformula "30"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "replace_known_right" (formula "15") (term "0,0,1,0,1,0,3,0,0,0") (ifseqformula "48"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "3,0,0,0"))
                                                                  (rule "elementOfInfiniteUnion" (formula "15") (term "0,0,1,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "elementOfSingleton" (formula "15") (term "1,0,0,0,1,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "typeEqDerived2" (formula "15") (term "0,1,0,0,1,1,3,0,0,0") (ifseqformula "37"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "castDel" (formula "15") (term "0,0,1,0,0,1,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "15") (term "0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "15") (term "1,0,0,1,1,0,0,1,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "15") (term "0,1,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "15") (term "0,0,1,0,0,1,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,0,0,1,0,0,1,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "0,0,1,0,0,1,1,3,0,0,0"))
                                                                  (rule "qeq_literals" (formula "15") (term "0,1,0,0,1,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "15") (term "0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "15") (term "0,0,1,0,0,1,1,3,0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_553"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "eqSymm" (formula "15") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "16") (term "0,0,0,1,1,3,0,0,0") (ifseqformula "39"))
                                                                  (rule "greater_literals" (formula "16") (term "0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "qeq_literals" (formula "16") (term "0,0,0,0,1,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "3,0,0,0"))
                                                                  (rule "selectOfAnonEQ" (formula "5") (term "1,0,3,0,0,0") (ifseqformula "31"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "replace_known_right" (formula "5") (term "0,0,1,0,1,0,3,0,0,0") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "3,0,0,0"))
                                                                  (rule "elementOfInfiniteUnion" (formula "5") (term "0,0,1,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "elementOfSingleton" (formula "5") (term "1,0,0,0,1,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "typeEqDerived2" (formula "5") (term "0,1,0,0,1,1,3,0,0,0") (ifseqformula "38"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "castDel" (formula "5") (term "1,0,0,1,1,0,0,1,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "5") (term "0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "castDel" (formula "5") (term "0,0,1,0,0,1,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "5") (term "0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "5") (term "0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0,1,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "5") (term "0,0,1,0,0,1,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,0,0,1,0,0,1,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "0,0,1,0,0,1,1,3,0,0,0"))
                                                                  (rule "qeq_literals" (formula "5") (term "0,1,0,0,1,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "5") (term "0,0,1,0,0,1,1,3,0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_554"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "eqSymm" (formula "5") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "6") (term "0,0,0,1,1,3,0,0,0") (ifseqformula "40"))
                                                                  (rule "greater_literals" (formula "6") (term "0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,1,1,3,0,0,0"))
                                                                  (rule "qeq_literals" (formula "6") (term "0,0,0,0,1,1,3,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "3,0,0,0"))
                                                                  (rule "methodBodyExpand" (formula "24") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "shift_paren_and" (formula "42") (term "0,0,1,0"))
                                                                  (rule "nnf_imp2or" (formula "34") (term "0"))
                                                                  (rule "shift_paren_and" (formula "32") (term "0,0,1,0"))
                                                                  (rule "methodBodyExpand" (formula "2") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "methodBodyExpand" (formula "3") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "methodBodyExpand" (formula "27") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "methodBodyExpand" (formula "35") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "nnf_imp2or" (formula "44") (term "0"))
                                                                  (rule "methodBodyExpand" (formula "1") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "methodBodyExpand" (formula "14") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "34") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0"))
                                                                  (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "0,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "44") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,0,0"))
                                                                  (rule "ifthenelse_split" (formula "52") (term "1,0"))
                                                                  (branch "!even_sk_549 = TRUE | !self.a.<created> = TRUE TRUE"
                                                                     (rule "methodBodyExpand" (formula "5") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "nnf_notAnd" (formula "35") (term "1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "inEqSimp_notLeq" (formula "35") (term "0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,1,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0,0,0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "0,1,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,0,1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,0"))
                                                                     (rule "nnf_notAnd" (formula "45") (term "1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "inEqSimp_notLeq" (formula "45") (term "0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "45") (term "0,1,0,0,0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,0,0,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "45") (term "0,1,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "45") (term "0,0,1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,1,0,0"))
                                                                     (rule "returnUnfold" (formula "9") (term "1") (inst "#v0=x_2"))
                                                                     (rule "variableDeclarationAssign" (formula "9") (term "1"))
                                                                     (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_3857"))
                                                                     (rule "returnUnfold" (formula "8") (term "1") (inst "#v0=x_2"))
                                                                     (rule "variableDeclarationAssign" (formula "8") (term "1"))
                                                                     (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_3858"))
                                                                     (rule "nnf_notOr" (formula "45") (term "1,0,0,1,0"))
                                                                     (rule "methodBodyExpand" (formula "16") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "methodBodyExpand" (formula "46") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "commute_or" (formula "35") (term "0,0,1,0"))
                                                                     (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "21"))
                                                                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replace_known_left" (formula "46") (term "0,1,0,1,1,1,1,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                                     (rule "replace_known_left" (formula "19") (term "0,2,1,3,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "replace_known_left" (formula "8") (term "0,2,1,3,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "54"))
                                                                     (rule "replace_known_left" (formula "36") (term "0,0,0,0,1,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "36"))
                                                                     (rule "replace_known_left" (formula "19") (term "0,1,0,1,0,3,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "replace_known_left" (formula "8") (term "0,0,0,3,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "replace_known_left" (formula "8") (term "0,0,1,0,1,3,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "replace_known_left" (formula "19") (term "0,0,1,0,1,3,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "replace_known_left" (formula "8") (term "0,1,0,0,3,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "replace_known_left" (formula "19") (term "0,0,0,3,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "polySimp_addComm0" (formula "7") (term "3,0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "18") (term "3,0,0,0"))
                                                                     (rule "apply_eq_boolean_rigid" (formula "2") (term "1,0,1") (ifseqformula "48"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "ifthenelse_negated" (formula "7") (term "1,3,0,0,0"))
                                                                     (rule "ifthenelse_negated" (formula "7") (term "0,3,0,0,0"))
                                                                     (rule "ifthenelse_negated" (formula "18") (term "0,3,0,0,0"))
                                                                     (rule "ifthenelse_negated" (formula "18") (term "1,3,0,0,0"))
                                                                     (rule "methodBodyExpand" (formula "17") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "shift_paren_or" (formula "45") (term "0,0"))
                                                                     (rule "shift_paren_or" (formula "35") (term "0,0"))
                                                                     (rule "methodBodyExpand" (formula "6") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_2"))
                                                                     (rule "variableDeclarationAssign" (formula "3") (term "1"))
                                                                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_3859"))
                                                                     (rule "returnUnfold" (formula "4") (term "1") (inst "#v0=x_2"))
                                                                     (rule "variableDeclarationAssign" (formula "4") (term "1"))
                                                                     (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_3860"))
                                                                     (rule "returnUnfold" (formula "15") (term "1") (inst "#v0=x_2"))
                                                                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                                                                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_3861"))
                                                                     (rule "shift_paren_and" (formula "45") (term "0,0,1,0"))
                                                                     (rule "shift_paren_and" (formula "45") (term "0,1,1,1,1,0"))
                                                                     (rule "shift_paren_and" (formula "45") (term "0,2,0,1,1,0"))
                                                                     (rule "shift_paren_and" (formula "45") (term "0,2,0,1,0"))
                                                                     (rule "shift_paren_and" (formula "35") (term "0,0,1,0"))
                                                                     (rule "returnUnfold" (formula "5") (term "1") (inst "#v0=x_2"))
                                                                     (rule "variableDeclarationAssign" (formula "5") (term "1"))
                                                                     (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_3862"))
                                                                     (rule "compound_equality_comparison_1" (formula "9") (term "1") (inst "#v0=x_3858"))
                                                                     (rule "variableDeclarationAssign" (formula "9") (term "1"))
                                                                     (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_3863"))
                                                                     (rule "compound_equality_comparison_1" (formula "8") (term "1") (inst "#v0=x_3859"))
                                                                     (rule "variableDeclarationAssign" (formula "8") (term "1"))
                                                                     (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_3864"))
                                                                     (rule "returnUnfold" (formula "16") (term "1") (inst "#v0=x_2"))
                                                                     (rule "variableDeclarationAssign" (formula "16") (term "1"))
                                                                     (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_3865"))
                                                                     (rule "ifthenelse_to_or_left" (formula "45") (term "1,0"))
                                                                     (rule "polySimp_homoEq" (formula "45") (term "1,0,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "45") (term "1,1,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "45") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "45") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "45") (term "1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "45") (term "1,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "45") (term "0,1,1,0,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "45") (term "1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "45") (term "1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "45") (term "1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "45") (term "1,1,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "45") (term "0,1,1,1,1,0"))
                                                                     (rule "nnf_notAnd" (formula "45") (term "0,0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "nnf_notAnd" (formula "45") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "45") (term "0,1,0,0,0,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "45") (term "0,0,1,0,0,0,0,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,0,0,1,0"))
                                                                     (rule "add_zero_left" (formula "45") (term "0,0,0,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "45") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "45") (term "0,1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "45") (term "0,0,1,1,0,0,0,1,0"))
                                                                     (rule "commute_or" (formula "45") (term "1,1,0"))
                                                                     (rule "ifthenelse_to_or_left" (formula "35") (term "1,0"))
                                                                     (rule "polySimp_homoEq" (formula "35") (term "1,0,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "35") (term "1,1,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "35") (term "0,0,1,1,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "35") (term "1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "0,1,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,0,1,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,1,0,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "35") (term "1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,1,1,1,0"))
                                                                     (rule "nnf_notAnd" (formula "35") (term "0,0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "nnf_notAnd" (formula "35") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0"))
                                                                     (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "0,1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,0,1,1,0,0,0,1,0"))
                                                                     (rule "commute_or" (formula "35") (term "1,1,0"))
                                                                     (rule "boxToDiamond" (formula "25") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "notLeft" (formula "25"))
                                                                     (rule "ifElseUnfold" (formula "27") (term "1") (inst "#boolv=x_2"))
                                                                     (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_3866"))
                                                                     (rule "cnf_rightDist" (formula "44") (term "1,1,0"))
                                                                     (rule "boxToDiamond" (formula "35") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "notLeft" (formula "35"))
                                                                     (rule "methodBodyExpand" (formula "7") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "methodBodyExpand" (formula "18") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "returnUnfold" (formula "2") (term "1") (inst "#v0=x_2"))
                                                                     (rule "variableDeclarationAssign" (formula "2") (term "1"))
                                                                     (rule "variableDeclaration" (formula "2") (term "1") (newnames "x_3867"))
                                                                     (rule "ifthenelse_to_or_left" (formula "43") (term "1,0,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "43") (term "1,1,1,0,1,0"))
                                                                     (rule "times_zero_2" (formula "43") (term "1,0,1,1,1,0,1,0"))
                                                                     (rule "add_zero_right" (formula "43") (term "0,1,1,1,0,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "43") (term "1,1,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "1,1,1,1,0,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "43") (term "0,0,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "0,1,0,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0,0,0,1,0,1,0"))
                                                                     (rule "mul_literals" (formula "43") (term "0,0,1,0,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,1,0,1,0"))
                                                                     (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,1,0,1,0"))
                                                                     (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,1,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,1,0,1,0"))
                                                                     (rule "returnUnfold" (formula "17") (term "1") (inst "#v0=x_2"))
                                                                     (rule "variableDeclarationAssign" (formula "17") (term "1"))
                                                                     (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_3868"))
                                                                     (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x_2"))
                                                                     (rule "variableDeclarationAssign" (formula "6") (term "1"))
                                                                     (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_3869"))
                                                                     (rule "compound_equality_comparison_1" (formula "3") (term "1") (inst "#v0=x_3860"))
                                                                     (rule "variableDeclarationAssign" (formula "3") (term "1"))
                                                                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_3870"))
                                                                     (rule "compound_equality_comparison_1" (formula "4") (term "1") (inst "#v0=x_3861"))
                                                                     (rule "variableDeclarationAssign" (formula "4") (term "1"))
                                                                     (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_3871"))
                                                                     (rule "compound_equality_comparison_1" (formula "15") (term "1") (inst "#v0=x_3862"))
                                                                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                                                                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_3872"))
                                                                     (rule "compound_equality_comparison_1" (formula "5") (term "1") (inst "#v0=x_3863"))
                                                                     (rule "variableDeclarationAssign" (formula "5") (term "1"))
                                                                     (rule "variableDeclaration" (formula "5") (term "1") (newnames "x_3873"))
                                                                     (rule "assignmentModulo" (formula "9") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "equal_literals" (formula "9") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "translateJavaMod" (formula "9") (term "0,0"))
                                                                     (rule "assignmentModulo" (formula "8") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "equal_literals" (formula "8") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "translateJavaMod" (formula "8") (term "0,0"))
                                                                     (rule "compound_equality_comparison_1" (formula "16") (term "1") (inst "#v0=x_3866"))
                                                                     (rule "variableDeclarationAssign" (formula "16") (term "1"))
                                                                     (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_3874"))
                                                                     (rule "cnf_rightDist" (formula "34") (term "1,1,0"))
                                                                     (rule "cnf_rightDist" (formula "43") (term "0,1,1,0"))
                                                                     (rule "commute_or" (formula "43") (term "0,0,1,1,0"))
                                                                     (rule "ifthenelse_to_or_left" (formula "34") (term "1,0,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "34") (term "1,0,1,0,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "34") (term "1,1,1,0,1,0"))
                                                                     (rule "times_zero_2" (formula "34") (term "1,0,1,1,1,0,1,0"))
                                                                     (rule "add_zero_right" (formula "34") (term "0,1,1,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "0,1,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "0,0,1,0,1,0,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "34") (term "1,1,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "1,1,1,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,1,1,1,0,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "34") (term "0,1,1,1,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,1,1,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "0,1,1,1,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "0,1,1,1,1,0,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "0,1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "1,0,1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "34") (term "0,0,1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "0,0,1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "0,0,1,1,0,1,0,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "34") (term "0,0,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,1,0,1,0"))
                                                                     (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1,0,1,0"))
                                                                     (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,0,1,0"))
                                                                     (rule "add_zero_left" (formula "34") (term "0,0,0,0,1,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "1,0,0,1,0,1,0"))
                                                                     (rule "boxToDiamond" (formula "44") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "notLeft" (formula "44"))
                                                                     (rule "cnf_rightDist" (formula "43") (term "0,1,0"))
                                                                     (rule "ifthenelse_to_or_left" (formula "43") (term "1,1,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "43") (term "1,0,1,1,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "43") (term "1,1,1,1,1,1,0"))
                                                                     (rule "times_zero_2" (formula "43") (term "1,0,1,1,1,1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "43") (term "0,1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,1,0,1,1,1,1,0"))
                                                                     (rule "add_literals" (formula "43") (term "1,1,0,1,0,1,1,1,1,0"))
                                                                     (rule "times_zero_1" (formula "43") (term "1,0,1,0,1,1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "43") (term "0,1,0,1,1,1,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "43") (term "1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "1,1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_invertEq" (formula "43") (term "1,0,1,1,1,1,0"))
                                                                     (rule "mul_literals" (formula "43") (term "1,1,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "0,1,0,1,1,1,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "43") (term "0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "0,1,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "mul_literals" (formula "43") (term "0,0,1,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,1,1,1,1,0"))
                                                                     (rule "commute_or_2" (formula "43") (term "1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "34") (term "0,1,1,0"))
                                                                     (rule "shift_paren_or" (formula "43") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "34") (term "0,0,1,1,0"))
                                                                     (rule "commute_or_2" (formula "43") (term "0,0,0,1,0"))
                                                                     (rule "commute_or_2" (formula "43") (term "0,0,0,0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "equality_comparison_simple" (formula "27") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "cnf_rightDist" (formula "34") (term "0,1,0"))
                                                                     (rule "commute_or_2" (formula "34") (term "1,0,1,0"))
                                                                     (rule "returnUnfold" (formula "7") (term "1") (inst "#v0=x_2"))
                                                                     (rule "variableDeclarationAssign" (formula "7") (term "1"))
                                                                     (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_3875"))
                                                                     (rule "returnUnfold" (formula "18") (term "1") (inst "#v0=x_2"))
                                                                     (rule "variableDeclarationAssign" (formula "18") (term "1"))
                                                                     (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_3876"))
                                                                     (rule "compound_equality_comparison_1" (formula "2") (term "1") (inst "#v0=x_3868"))
                                                                     (rule "variableDeclarationAssign" (formula "2") (term "1"))
                                                                     (rule "variableDeclaration" (formula "2") (term "1") (newnames "x_3877"))
                                                                     (rule "shift_paren_or" (formula "43") (term "0,1,0,1,0"))
                                                                     (rule "ifthenelse_to_or_left" (formula "34") (term "1,1,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "34") (term "1,0,1,1,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "34") (term "1,1,1,1,1,1,0"))
                                                                     (rule "times_zero_2" (formula "34") (term "1,0,1,1,1,1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "34") (term "0,1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "0,1,0,1,1,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,1,1,1,1,0"))
                                                                     (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,1,1,1,1,0"))
                                                                     (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,1,1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "34") (term "0,0,1,0,1,1,1,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "34") (term "1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "1,1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "34") (term "0,1,1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "0,1,1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "0,1,1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1,1,1,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "34") (term "0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1,1,1,1,0"))
                                                                     (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "add_zero_left" (formula "34") (term "0,0,0,0,1,1,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "1,0,0,1,1,1,1,0"))
                                                                     (rule "shift_paren_or" (formula "34") (term "0,0,1,0"))
                                                                     (rule "shift_paren_or" (formula "34") (term "0,1,0,1,0"))
                                                                     (rule "shift_paren_or" (formula "43") (term "0,0,1,0,1,0"))
                                                                     (rule "inEqSimp_or_tautInEq2" (formula "43") (term "0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "43") (term "1,1,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "43") (term "0,1,1,0,0,0,1,0,1,0"))
                                                                     (rule "add_literals" (formula "43") (term "0,0,1,1,0,0,0,1,0,1,0"))
                                                                     (rule "add_zero_left" (formula "43") (term "0,1,1,0,0,0,1,0,1,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "43") (term "0,1,0,0,0,1,0,1,0"))
                                                                     (rule "add_literals" (formula "43") (term "1,0,1,0,0,0,1,0,1,0"))
                                                                     (rule "times_zero_1" (formula "43") (term "0,1,0,0,0,1,0,1,0"))
                                                                     (rule "leq_literals" (formula "43") (term "1,0,0,0,1,0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "compound_equality_comparison_1" (formula "17") (term "1") (inst "#v0=x_3869"))
                                                                     (rule "variableDeclarationAssign" (formula "17") (term "1"))
                                                                     (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_3878"))
                                                                     (rule "commute_or_2" (formula "34") (term "0,0,0,1,0"))
                                                                     (rule "compound_equality_comparison_1" (formula "6") (term "1") (inst "#v0=x_3870"))
                                                                     (rule "variableDeclarationAssign" (formula "6") (term "1"))
                                                                     (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_3879"))
                                                                     (rule "assignmentModulo" (formula "3") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "equal_literals" (formula "3") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "translateJavaMod" (formula "3") (term "0,1,0"))
                                                                     (rule "assignmentModulo" (formula "4") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "equal_literals" (formula "4") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "translateJavaMod" (formula "4") (term "0,1,0"))
                                                                     (rule "assignmentModulo" (formula "15") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                     (rule "equal_literals" (formula "15") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                     (rule "translateJavaMod" (formula "15") (term "0,1,0"))
                                                                     (rule "assignmentModulo" (formula "5") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "equal_literals" (formula "5") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "translateJavaMod" (formula "5") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "34") (term "0,0,0,0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "equality_comparison_simple" (formula "9") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "equality_comparison_simple" (formula "8") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "assignmentModulo" (formula "16") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "equal_literals" (formula "16") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "translateJavaMod" (formula "16") (term "0,0"))
                                                                     (rule "ifElseUnfold" (formula "47") (term "1") (inst "#boolv=x_2"))
                                                                     (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_3880"))
                                                                     (rule "shift_paren_or" (formula "34") (term "0,0,1,0,1,0"))
                                                                     (rule "inEqSimp_or_tautInEq2" (formula "34") (term "0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "34") (term "1,1,0,0,0,1,0,1,0"))
                                                                     (rule "add_literals" (formula "34") (term "0,1,1,0,0,0,1,0,1,0"))
                                                                     (rule "add_zero_left" (formula "34") (term "1,1,0,0,0,1,0,1,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "34") (term "0,1,0,0,0,1,0,1,0"))
                                                                     (rule "add_literals" (formula "34") (term "1,0,1,0,0,0,1,0,1,0"))
                                                                     (rule "times_zero_1" (formula "34") (term "0,1,0,0,0,1,0,1,0"))
                                                                     (rule "leq_literals" (formula "34") (term "1,0,0,0,1,0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "cnf_rightDist" (formula "43") (term "1,1,1,0"))
                                                                     (rule "commute_or_2" (formula "43") (term "1,1,1,1,0"))
                                                                     (rule "ifElseUnfold" (formula "46") (term "1") (inst "#boolv=x_2"))
                                                                     (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_3881"))
                                                                     (rule "shift_paren_or" (formula "43") (term "0,1,1,1,0"))
                                                                     (rule "commute_or" (formula "43") (term "0,0,1,1,1,0"))
                                                                     (rule "compound_equality_comparison_1" (formula "7") (term "1") (inst "#v0=x_3876"))
                                                                     (rule "variableDeclarationAssign" (formula "7") (term "1"))
                                                                     (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_3882"))
                                                                     (rule "ifthenelse_to_or_left" (formula "43") (term "1,0,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "43") (term "1,0,1,0,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "43") (term "1,1,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "43") (term "0,1,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "43") (term "0,1,1,1,0,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "43") (term "1,0,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "43") (term "0,1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "0,1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "0,1,1,0,1,0,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "43") (term "1,1,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "1,1,1,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "1,1,1,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,1,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "1,1,1,1,1,0,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "43") (term "0,1,1,1,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,1,1,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "0,1,1,1,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "0,1,1,1,1,0,1,0"))
                                                                     (rule "nnf_notAnd" (formula "43") (term "0,0,1,0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                     (rule "nnf_notAnd" (formula "43") (term "0,0,0,1,0,1,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,1,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "43") (term "0,1,0,0,1,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0,0,1,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,1,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,1,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "0,1,1,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,1,0,0,0,1,0,1,0"))
                                                                     (rule "mul_literals" (formula "43") (term "0,0,1,1,0,0,0,1,0,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0,1,0,1,0"))
                                                                     (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0,1,0,1,0"))
                                                                     (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0,1,0,1,0"))
                                                                     (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0,1,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0,0,1,0,1,0"))
                                                                     (rule "commute_or" (formula "43") (term "1,1,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "34") (term "1,1,1,0"))
                                                                     (rule "compound_equality_comparison_1" (formula "18") (term "1") (inst "#v0=x_3877"))
                                                                     (rule "variableDeclarationAssign" (formula "18") (term "1"))
                                                                     (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_3883"))
                                                                     (rule "assignmentModulo" (formula "2") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "equal_literals" (formula "2") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "translateJavaMod" (formula "2") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "34") (term "1,1,1,1,0"))
                                                                     (rule "shift_paren_or" (formula "34") (term "0,1,1,1,0"))
                                                                     (rule "commute_or" (formula "34") (term "0,0,1,1,1,0"))
                                                                     (rule "ifthenelse_to_or_left" (formula "34") (term "1,1,0,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "34") (term "1,1,1,1,0,1,1,0"))
                                                                     (rule "times_zero_2" (formula "34") (term "1,0,1,1,1,1,0,1,1,0"))
                                                                     (rule "add_zero_right" (formula "34") (term "0,1,1,1,1,0,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "34") (term "1,0,1,1,0,1,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "0,1,0,1,1,0,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,1,1,0,1,1,0"))
                                                                     (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,1,1,0,1,1,0"))
                                                                     (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                                                     (rule "add_zero_right" (formula "34") (term "0,0,1,0,1,1,0,1,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "34") (term "1,1,1,1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "1,1,1,1,1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,1,1,1,1,0,1,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "34") (term "0,1,1,1,1,1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,1,1,1,1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "0,1,1,1,1,1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "0,1,1,1,1,1,0,1,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0,1,1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1,1,0,1,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "34") (term "0,0,1,1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,1,1,0,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1,1,0,1,1,0"))
                                                                     (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,1,0,1,1,0"))
                                                                     (rule "add_zero_left" (formula "34") (term "0,0,0,0,1,1,0,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,1,1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "1,0,0,1,1,0,1,1,0"))
                                                                     (rule "ifthenelse_to_or_left" (formula "34") (term "1,0,0,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "34") (term "1,1,1,0,0,1,1,0"))
                                                                     (rule "times_zero_2" (formula "34") (term "1,0,1,1,1,0,0,1,1,0"))
                                                                     (rule "add_zero_right" (formula "34") (term "0,1,1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "34") (term "1,0,1,0,0,1,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "0,1,0,1,0,0,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,0,1,0,0,1,1,0"))
                                                                     (rule "add_literals" (formula "34") (term "1,1,0,0,1,0,1,0,0,1,1,0"))
                                                                     (rule "times_zero_1" (formula "34") (term "1,0,0,1,0,1,0,0,1,1,0"))
                                                                     (rule "add_zero_right" (formula "34") (term "0,0,1,0,1,0,0,1,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "34") (term "1,1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "1,1,1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,1,1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "34") (term "0,1,1,1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,1,1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "0,1,1,1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "0,1,1,1,1,0,0,1,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0,1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1,0,0,1,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "34") (term "0,0,1,0,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,1,0,0,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1,0,0,1,1,0"))
                                                                     (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                                                     (rule "add_zero_left" (formula "34") (term "0,0,0,0,1,0,0,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,1,0,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,0,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "1,0,0,1,0,0,1,1,0"))
                                                                     (rule "ifthenelse_to_or_left" (formula "34") (term "1,0,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "34") (term "1,0,1,0,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "34") (term "1,1,1,0,1,0"))
                                                                     (rule "times_zero_2" (formula "34") (term "1,0,1,1,1,0,1,0"))
                                                                     (rule "add_zero_right" (formula "34") (term "0,1,1,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "0,1,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "0,0,1,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1,0,1,0,1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "34") (term "1,1,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "0,1,1,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "0,1,1,1,0,1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "34") (term "1,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "0,1,0,1,0,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "34") (term "0,0,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,1,0,1,0"))
                                                                     (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1,0,1,0"))
                                                                     (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,0,1,0"))
                                                                     (rule "add_zero_left" (formula "34") (term "0,0,0,0,1,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "1,0,0,1,0,1,0"))
                                                                     (rule "assignmentModulo" (formula "17") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "equal_literals" (formula "17") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "translateJavaMod" (formula "17") (term "0,0"))
                                                                     (rule "ifElseUnfold" (formula "45") (term "1") (inst "#boolv=x_2"))
                                                                     (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_3884"))
                                                                     (rule "assignmentModulo" (formula "6") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "equal_literals" (formula "6") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "translateJavaMod" (formula "6") (term "0,0"))
                                                                     (rule "cnf_rightDist" (formula "43") (term "1,1,0,1,0"))
                                                                     (rule "equality_comparison_simple" (formula "3") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "equality_comparison_simple" (formula "4") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "equality_comparison_simple" (formula "15") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                     (rule "shift_paren_and" (formula "43") (term "1,1,0"))
                                                                     (rule "equality_comparison_simple" (formula "5") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "methodCallReturn" (formula "9") (term "1"))
                                                                     (rule "assignment" (formula "9") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "methodCallReturn" (formula "8") (term "1"))
                                                                     (rule "assignment" (formula "8") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "equality_comparison_simple" (formula "16") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "equality_comparison_simple" (formula "47") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "polySimp_homoEq" (formula "47") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "47") (term "0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "0,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "47") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0"))
                                                                     (rule "elimGcdEq" (formula "47") (term "0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=k_29") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_338)"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "47") (term "1,0,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "47") (term "0,1,0,1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "47") (term "0,1,0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "47") (term "1,1,0,0,0,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "47") (term "0,0,0,0,0,1,0"))
                                                                     (rule "leq_literals" (formula "47") (term "0,0,0,0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "0,0,0,1,0,0,1,0"))
                                                                     (rule "add_literals" (formula "47") (term "0,0,0,0,1,0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,1,0,0,1,0"))
                                                                     (rule "add_literals" (formula "47") (term "1,1,0,0,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "47") (term "0,0,1,0,0,1,0"))
                                                                     (rule "equal_literals" (formula "47") (term "0,1,0,0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "47") (term "1,1,0,0,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "47") (term "0,0,0,0,1,0"))
                                                                     (rule "qeq_literals" (formula "47") (term "0,0,0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "boxToDiamond" (formula "27") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "notLeft" (formula "27"))
                                                                     (rule "cnf_rightDist" (formula "33") (term "1,0,1,1,0"))
                                                                     (rule "equality_comparison_simple" (formula "46") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "assignmentModulo" (formula "7") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "equal_literals" (formula "7") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "translateJavaMod" (formula "7") (term "0,1,0"))
                                                                     (rule "ifthenelse_to_or_left" (formula "33") (term "1,1,1,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "33") (term "1,1,1,1,1,1,1,0"))
                                                                     (rule "mul_literals" (formula "33") (term "1,0,1,1,1,1,1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "33") (term "0,1,1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "33") (term "1,0,1,1,1,1,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "33") (term "0,1,0,1,1,1,1,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "33") (term "0,0,1,0,1,1,1,1,1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "33") (term "1,1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "0,1,1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "33") (term "0,1,1,1,1,1,1,1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "33") (term "1,0,1,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,1,1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "33") (term "0,1,0,1,1,1,1,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "33") (term "0,0,1,1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,1,1,1,1,1,0"))
                                                                     (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,1,1,1,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,1,1,1,1,1,0"))
                                                                     (rule "add_literals" (formula "33") (term "0,0,0,0,0,1,1,1,1,1,0"))
                                                                     (rule "add_zero_left" (formula "33") (term "0,0,0,0,1,1,1,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,1,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "33") (term "1,0,0,1,1,1,1,1,0"))
                                                                     (rule "ifthenelse_to_or_left" (formula "33") (term "1,0,1,1,1,0"))
                                                                     (rule "eqSymm" (formula "33") (term "1,1,1,0,1,1,1,0"))
                                                                     (rule "eqSymm" (formula "33") (term "1,0,1,0,1,1,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "33") (term "0,0,1,0,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,1,0,1,1,1,0"))
                                                                     (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,1,0,1,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,1,0,1,1,1,0"))
                                                                     (rule "add_literals" (formula "33") (term "0,0,0,0,0,1,0,1,1,1,0"))
                                                                     (rule "add_zero_left" (formula "33") (term "0,0,0,0,1,0,1,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,1,0,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,1,0,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "33") (term "1,0,0,1,0,1,1,1,0"))
                                                                     (rule "cnf_rightDist" (formula "33") (term "0,0,1,1,0"))
                                                                     (rule "cnf_rightDist" (formula "33") (term "0,1,0"))
                                                                     (rule "assignmentModulo" (formula "18") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "equal_literals" (formula "18") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "translateJavaMod" (formula "18") (term "0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "42") (term "0,1,1,0,1,0"))
                                                                     (rule "equality_comparison_simple" (formula "2") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "commute_or_2" (formula "33") (term "1,1,0,1,1,0"))
                                                                     (rule "shift_paren_or" (formula "33") (term "0,1,0,1,1,0"))
                                                                     (rule "ifthenelse_to_or_left" (formula "42") (term "1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                                     (rule "times_zero_2" (formula "42") (term "1,0,1,1,1,0,0,0,1,1,0"))
                                                                     (rule "add_zero_right" (formula "42") (term "0,1,1,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "42") (term "1,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,1,0,1,0,0,0,1,1,0"))
                                                                     (rule "add_literals" (formula "42") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                                                     (rule "times_zero_1" (formula "42") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                                                     (rule "add_zero_right" (formula "42") (term "0,1,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "1,1,1,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_invertEq" (formula "42") (term "1,0,1,0,0,0,1,1,0"))
                                                                     (rule "times_zero_2" (formula "42") (term "1,1,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "0,1,0,1,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "0,1,0,0,0,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,0,0,0,1,0,0,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "42") (term "0,0,1,0,0,0,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                                                     (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                                     (rule "ifthenelse_to_or_left" (formula "42") (term "1,1,1,1,0"))
                                                                     (rule "nnf_notAnd" (formula "42") (term "0,0,1,1,1,1,0"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,1,1,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0,0,1,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "0,1,1,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,1,0,0,0,1,1,1,1,0"))
                                                                     (rule "mul_literals" (formula "42") (term "0,0,1,1,0,0,0,1,1,1,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,0,1,1,1,1,0"))
                                                                     (rule "commute_or_2" (formula "33") (term "1,0,0,1,1,0"))
                                                                     (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "equality_comparison_simple" (formula "17") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "equality_comparison_simple" (formula "45") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "equality_comparison_simple" (formula "6") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                     (rule "methodCallReturn" (formula "3") (term "1"))
                                                                     (rule "assignment" (formula "3") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "methodCallReturn" (formula "4") (term "1"))
                                                                     (rule "assignment" (formula "4") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "methodCallReturn" (formula "15") (term "1"))
                                                                     (rule "assignment" (formula "15") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                     (rule "methodCallReturn" (formula "5") (term "1"))
                                                                     (rule "assignment" (formula "5") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "5"))
                                                                     (rule "methodCallEmpty" (formula "9") (term "1"))
                                                                     (rule "commute_or" (formula "42") (term "0,0,1,1,0,1,0"))
                                                                     (rule "commute_or" (formula "42") (term "1,1,1,1,1,0"))
                                                                     (rule "methodCallEmpty" (formula "8") (term "1"))
                                                                     (rule "methodCallReturn" (formula "16") (term "1"))
                                                                     (rule "assignment" (formula "16") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "commute_or" (formula "33") (term "0,0,1,0,1,1,0"))
                                                                     (rule "commute_or_2" (formula "33") (term "1,0,1,0"))
                                                                     (rule "shift_paren_or" (formula "33") (term "0,0,1,0"))
                                                                     (rule "shift_paren_or" (formula "33") (term "0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_or_tautInEq2" (formula "33") (term "0,0,0,0,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "33") (term "1,1,0,0,0,0,1,1,0"))
                                                                     (rule "add_literals" (formula "33") (term "0,1,1,0,0,0,0,1,1,0"))
                                                                     (rule "add_zero_left" (formula "33") (term "1,1,0,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0,0,0,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "33") (term "0,1,0,0,0,0,1,1,0"))
                                                                     (rule "add_literals" (formula "33") (term "1,0,1,0,0,0,0,1,1,0"))
                                                                     (rule "times_zero_1" (formula "33") (term "0,1,0,0,0,0,1,1,0"))
                                                                     (rule "leq_literals" (formula "33") (term "1,0,0,0,0,1,1,0"))
                                                                     (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "cnf_rightDist" (formula "42") (term "0,0,0,1,1,0"))
                                                                     (rule "commute_or_2" (formula "33") (term "0,0,0,1,0"))
                                                                     (rule "commute_or_2" (formula "42") (term "1,0,0,0,1,1,0"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "commute_or_2" (formula "33") (term "0,0,0,0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "equality_comparison_simple" (formula "7") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                     (rule "shift_paren_or" (formula "42") (term "0,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_or_tautInEq2" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "1,1,0,0,0,0,0,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                                     (rule "add_literals" (formula "42") (term "0,0,1,1,0,0,0,0,0,1,1,0"))
                                                                     (rule "add_zero_left" (formula "42") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "42") (term "0,1,0,0,0,0,0,1,1,0"))
                                                                     (rule "add_literals" (formula "42") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                                                     (rule "times_zero_1" (formula "42") (term "0,1,0,0,0,0,0,1,1,0"))
                                                                     (rule "leq_literals" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "shift_paren_or" (formula "33") (term "0,1,0,1,0"))
                                                                     (rule "ifthenelse_split" (formula "9") (term "0,0"))
                                                                     (branch "jmod(l_338 * 4 + k_29 * -3, 2) = 0 TRUE"
                                                                        (rule "replace_known_left" (formula "16") (term "0,0,1,0") (ifseqformula "9"))
                                                                        (builtin "One Step Simplification" (formula "16"))
                                                                        (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "9"))
                                                                        (builtin "One Step Simplification" (formula "17"))
                                                                        (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "9"))
                                                                        (builtin "One Step Simplification" (formula "5"))
                                                                        (rule "replace_known_left" (formula "4") (term "0,0,1,0") (ifseqformula "9"))
                                                                        (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "jmod_axiom" (formula "9") (term "0"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "9"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                        (rule "newSym_eq" (formula "9") (inst "newSymDef=add(mul(l_338, Z(2(#))), mul(k_29, Z(neglit(2(#)))))") (inst "l=l_340"))
                                                                        (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                                                        (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "9"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "0"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "0"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                                        (rule "polySimp_homoEq" (formula "10"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "10") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "10") (term "0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "10") (term "1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "1"))
                                                                        (rule "applyEq" (formula "56") (term "1,0,2,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,1,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,1,0,0,1,1,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "7") (term "0,1,0,2,2,1,3,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,2,2,1,3,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "7") (term "0,2,2,1,3,0,0,0"))
                                                                        (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,1,0,0,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,1,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                                                        (rule "applyEq" (formula "44") (term "0,1,1,1,0,1,1,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,1,1,1,1,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,1,1,1,1,1,1,0"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,1,1,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "1,1,0,0,0"))
                                                                        (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "21"))
                                                                        (rule "applyEqRigid" (formula "35") (term "0,0,1,0,1,0,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "44") (term "0,1,1,0,0,0,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,0,0,0,0,1,0"))
                                                                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "35") (term "1,1,0,1,1,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "49") (term "0,1,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "49") (term "0,0,0"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "1,1,0,0,0,1,0"))
                                                                        (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "10"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "12"))
                                                                        (rule "applyEq" (formula "44") (term "0,1,1,0,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,0,0,0,0"))
                                                                        (rule "applyEq" (formula "44") (term "0,1,1,0,0,1,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,0,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,0,0,1,0,1,1,0"))
                                                                        (rule "applyEqRigid" (formula "35") (term "0,1,1,1,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "35") (term "1,1,0,0,0"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,0,0,1,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "35") (term "1,0,0,1,0,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,1,0,0,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "42") (term "0,1,1,0,0,0,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                        (rule "applyEqRigid" (formula "44") (term "1,0,0,0,0,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "44") (term "0,1,1,0,1,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0,0,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,0,1,0,0,1,1,0"))
                                                                        (rule "applyEq" (formula "7") (term "1,0,0,0,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "3") (term "1,0,0,0,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,1,0,0,1,1,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "1,0,0,1,1,0,0,1,1,0"))
                                                                        (rule "applyEq" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "35") (term "0,1,1,1,0,1,1,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,1,1,0,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "35") (term "1,1,0,1,1,0,1,1,0"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,0,0,0,0,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "8") (term "0,1,0,0,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0,0"))
                                                                        (rule "applyEq" (formula "7") (term "0,1,0,2,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,2,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "7") (term "0,2,0,0,0"))
                                                                        (rule "applyEq" (formula "44") (term "1,0,0,0,0,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "35") (term "1,0,1,0,0,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,1,0,0,1,1,1,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "35") (term "0,0,1,1,1,0,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "35") (term "1,0,0,0,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,1,1,0,0,0,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "1,1,0,0,0,1,0,1,0"))
                                                                        (rule "applyEq" (formula "44") (term "1,1,0,0,0,2,0,1,1,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,1,0,1,1,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                        (rule "applyEqRigid" (formula "35") (term "0,1,1,1,1,0,0,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,1,0,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "35") (term "1,1,1,0,0,1,0,1,0"))
                                                                        (rule "applyEq" (formula "44") (term "0,1,1,0,0,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,1,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "1,0,0,1,1,1,0"))
                                                                        (rule "applyEqRigid" (formula "22") (term "0,1,1") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                                        (rule "polySimp_addComm1" (formula "22") (term "1"))
                                                                        (rule "applyEqRigid" (formula "44") (term "1,1,0,0,1,1,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,1,0,1,1,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "6") (term "0,1,0,0,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0,0"))
                                                                        (rule "applyEq" (formula "20") (term "0,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,1,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "35") (term "0,1,1,1,0,0,1,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "35") (term "1,1,0,0,1,0,1,1,0"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,1,0,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "19") (term "0,1,0,0,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0,0"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,0,0,0,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "20") (term "0,1,0,2,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,2,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "20") (term "0,2,0,0,0"))
                                                                        (rule "applyEqRigid" (formula "35") (term "0,1,1,1,0,0,0,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "35") (term "1,1,0,0,0,0,1,0"))
                                                                        (rule "applyEq" (formula "35") (term "0,2,1,0,1,1,1,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                        (rule "polySimp_addComm1" (formula "13") (term "1"))
                                                                        (rule "applyEqRigid" (formula "35") (term "0,2,1,0,1,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,1,0,0,1,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,0,0,0,1,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "40") (term "0") (ifseqformula "10"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "40"))
                                                                        (rule "polySimp_mulLiterals" (formula "40") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                                        (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,0,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,1,1,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "1,1,0,0,0,1,1,1,1,0"))
                                                                        (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                                        (rule "applyEqRigid" (formula "7") (term "0,1,0,2,1,1,3,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,2,1,1,3,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "7") (term "0,2,1,1,3,0,0,0"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,1,0,0,1,0,1,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,1,0,1,0,1,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0,1,1,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,0,1,0,1,1,0,1,0"))
                                                                        (rule "applyEq" (formula "33") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,0,1,0"))
                                                                        (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,0,1,0,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "20") (term "0,1,0,2,1,1,3,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,2,1,1,3,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "20") (term "0,2,1,1,3,0,0,0"))
                                                                        (rule "applyEqRigid" (formula "35") (term "1,1,0,1,1,0,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "20") (term "0,1,0,2,2,1,3,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,2,2,1,3,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "20") (term "0,2,2,1,3,0,0,0"))
                                                                        (rule "applyEqRigid" (formula "35") (term "0,2,1,0,1,0,1,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,0,0,1,1,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0,1,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "0,0,1,1,0,1,1,0"))
                                                                        (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,2,0,1,1,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                        (rule "applyEqRigid" (formula "33") (term "1,1,0,0,0,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,0,1,1,0,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,1,0,1,1,1,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "0,1,1,0,1,1,1,1,0"))
                                                                        (rule "applyEq" (formula "56") (term "1,0,2,1") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "39") (term "0,1,1") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                                        (rule "polySimp_addComm0" (formula "39") (term "1"))
                                                                        (rule "applyEqRigid" (formula "35") (term "0,1,1,1,1,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "35") (term "0,2,1,1,0,1,0,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,1,1,1,1,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "7") (term "0,1,0,2,2,0,3,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,2,2,0,3,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "7") (term "0,2,2,0,3,0,0,0"))
                                                                        (rule "applyEq" (formula "20") (term "0,1,0,2,1,0,3,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,2,1,0,3,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "20") (term "0,2,1,0,3,0,0,0"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,1,1,0,0,1,1,1,1,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,1,1,1,0,0,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,1,1,1,1,0,0,1,1,0"))
                                                                        (rule "applyEqRigid" (formula "35") (term "0,1,1,1,0,1,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "9") (term "0,1,1") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1"))
                                                                        (rule "add_literals" (formula "9") (term "1,0,1"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,1,1,0,0,2,1,0,1,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,1,0,1,1,1,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,1,0,1,1,1,1,1,0"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,0,1,0,1,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,1,1,1,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "0,1,0,1,1,1,1,1,0"))
                                                                        (rule "applyEqRigid" (formula "7") (term "0,1,0,2,1,0,3,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,2,1,0,3,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "7") (term "0,2,1,0,3,0,0,0"))
                                                                        (rule "applyEq" (formula "44") (term "1,1,0,0,0,2,1,0,1,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "20") (term "0,1,0,2,2,0,3,0,0,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,2,2,0,3,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "20") (term "0,2,2,0,3,0,0,0"))
                                                                        (rule "applyEq" (formula "38") (term "0,1,1") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                                        (rule "polySimp_addComm0" (formula "38") (term "1"))
                                                                        (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,2,1,1,0,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "35") (term "0,1,1,0,1,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "14") (term "0,1,1") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                        (rule "polySimp_addComm1" (formula "14") (term "1"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,0,1,1,0,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,1,0,0,0,1,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "0,1,1,0,0,0,1,1,0"))
                                                                        (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                                        (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,1,1,0,0,2,1,1,0,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,1,1,0,0,0,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,1,1,0,0,0,1,1,0"))
                                                                        (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                        (rule "polySimp_addComm0" (formula "26") (term "1"))
                                                                        (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,2,1,1,0,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,1,1,0,0,2,1,1,0,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,1,1,0,1,1,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,1,1,0,1,1,1,1,0"))
                                                                        (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,2,0,1,1,0,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,0,0,1,1,0,0,1,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0,0,1,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "0,0,1,1,0,0,1,1,0,1,0"))
                                                                        (rule "applyEq" (formula "35") (term "0,0,1,1,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,0,0,1,1,1,1,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,1,1,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "0,0,1,1,1,1,1,0,1,0"))
                                                                        (rule "applyEq" (formula "44") (term "0,1,0,0,1,1,1,0,1,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,1,0,1,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "0,0,1,1,1,0,1,1,0,1,0"))
                                                                        (rule "applyEq" (formula "35") (term "0,1,0,1,1,0,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "44") (term "1,1,0,0,0,2,0,1,1,1,1,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,2,0,1,1,0,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,1,1,0,0,2,0,1,1,1,1,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,0,1,1,1,1,1,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,0,1,1,1,1,1,0,1,0"))
                                                                        (rule "applyEqRigid" (formula "35") (term "0,0,1,1,1,1,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "44") (term "0,1,0,0,1,1,0,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "0,0,1,1,0,1,0,1,0"))
                                                                        (rule "applyEq" (formula "35") (term "0,0,1,1,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "44") (term "0,1,0,0,0,1,1,1,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,1,1,1,0,0,1,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,1,1,0,0,1,1,0"))
                                                                        (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,2,0,1,1,1,0,1,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,1,1,0,0,2,0,1,1,0,0,1,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,0,1,1,0,0,1,1,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,0,1,1,0,0,1,1,0,1,0"))
                                                                        (rule "applyEqRigid" (formula "44") (term "0,1,1,1,0,0,2,0,0,1,1,1,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,0,0,1,1,1,0,0,1,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,0,0,1,1,1,0,0,1,1,0"))
                                                                        (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,2,0,0,1,1,1,0,0,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,2,0,1,1,0,0,1,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "35") (term "0,2,0,0,1,1,0,1,1,1,1,1,0") (ifseqformula "10"))
                                                                        (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,2,0,1,1,1,0,1,1,0,1,0") (ifseqformula "10"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,0,1,1,1,0,1,1,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,0,1,1,1,0,1,1,0,1,0"))
                                                                        (rule "applyEq" (formula "35") (term "0,2,0,0,0,1,1,0,0,1,0") (ifseqformula "10"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                                        (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                                        (rule "mul_literals" (formula "40") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                                        (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_338") (inst "elimGcdRightDiv=l_340"))
                                                                        (rule "leq_literals" (formula "12") (term "0,0"))
                                                                        (builtin "One Step Simplification" (formula "12"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                                        (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "12") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                                        (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "12") (term "0,0"))
                                                                        (rule "leq_literals" (formula "12") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "12"))
                                                                        (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_340") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                        (rule "leq_literals" (formula "16") (term "0,0"))
                                                                        (builtin "One Step Simplification" (formula "16"))
                                                                        (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                                                                        (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                                        (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                        (rule "leq_literals" (formula "16") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "16"))
                                                                        (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=mul(l_338, Z(2(#)))") (inst "elimGcdRightDiv=mul(l_340, Z(3(#)))"))
                                                                        (rule "leq_literals" (formula "21") (term "0,0"))
                                                                        (builtin "One Step Simplification" (formula "21"))
                                                                        (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                        (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "21") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                        (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                        (rule "leq_literals" (formula "21") (term "0"))
                                                                        (builtin "One Step Simplification" (formula "21"))
                                                                        (rule "equality_comparison_simple" (formula "20") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "20"))
                                                                        (rule "methodCallReturn" (formula "2") (term "1"))
                                                                        (rule "assignment" (formula "2") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "ifthenelse_split" (formula "46") (term "0,1,0"))
                                                                        (branch "self.a.length = 1 TRUE"
                                                                           (rule "replace_known_left" (formula "49") (term "0,0,1,0") (ifseqformula "1"))
                                                                           (builtin "One Step Simplification" (formula "49"))
                                                                           (rule "replace_known_left" (formula "48") (term "0,0,1,0") (ifseqformula "1"))
                                                                           (builtin "One Step Simplification" (formula "48"))
                                                                           (rule "applyEq" (formula "49") (term "0,1,0,0") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "48") (term "0,1,0,0") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                                                           (rule "qeq_literals" (formula "29"))
                                                                           (rule "true_left" (formula "29"))
                                                                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "23"))
                                                                           (rule "mul_literals" (formula "23") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                                           (rule "add_literals" (formula "23") (term "0,0,0"))
                                                                           (rule "add_zero_left" (formula "23") (term "0,0"))
                                                                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "14"))
                                                                           (rule "mul_literals" (formula "14") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                                           (rule "add_literals" (formula "14") (term "0,0,0"))
                                                                           (rule "add_zero_left" (formula "14") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                                           (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                                                           (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_338") (inst "elimGcdRightDiv=l_340"))
                                                                           (rule "leq_literals" (formula "14") (term "0,0"))
                                                                           (builtin "One Step Simplification" (formula "14"))
                                                                           (rule "neg_literal" (formula "14") (term "0,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                           (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "14") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                           (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "14") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "14") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "14"))
                                                                           (rule "elimGcdLeq_antec" (formula "23") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=mul(l_338, Z(2(#)))") (inst "elimGcdRightDiv=mul(l_340, Z(3(#)))"))
                                                                           (rule "leq_literals" (formula "23") (term "0,0"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                                                           (rule "neg_literal" (formula "23") (term "0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "23") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "14"))
                                                                           (rule "applyEq" (formula "45") (term "0,1,1,1,0,0,2,0,1,1,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "45") (term "1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "45") (term "1,1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "45") (term "1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "45") (term "0,1,1,0,0,1,1,0,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "45") (term "1,0,0,1,1,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "45") (term "1,1,1,0,0,1,1,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "45") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "45") (term "1,0,0,1,1,0,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "14"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                                                           (rule "add_literals" (formula "14") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "14") (term "0"))
                                                                           (rule "leq_literals" (formula "14"))
                                                                           (rule "true_left" (formula "14"))
                                                                           (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "13"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "22"))
                                                                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "22") (term "0"))
                                                                           (rule "add_literals" (formula "22") (term "1,0"))
                                                                           (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                                           (rule "applyEqRigid" (formula "20") (term "0,1,0,0,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "20") (term "0,0,0,0,0"))
                                                                           (rule "applyEq" (formula "35") (term "0,1,1,1,0,1,1,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "35") (term "1,1,0,1,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "35") (term "1,1,1,0,1,1,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "35") (term "1,1,0,1,1,0,1,1,0"))
                                                                           (rule "applyEq" (formula "8") (term "0,1,0,2,2,1,3,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "8") (term "0,2,2,1,3,0,0,0"))
                                                                           (rule "add_literals" (formula "8") (term "1,0,2,2,1,3,0,0,0"))
                                                                           (rule "times_zero_1" (formula "8") (term "0,2,2,1,3,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,1,0,1,0,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "44") (term "1,0,1,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "44") (term "1,1,0,1,0,0,1,1,0"))
                                                                           (rule "applyEq" (formula "9") (term "0,1,0,0,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "9") (term "1,0,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "9") (term "0,0,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "42") (term "0,1,1,0,0,0,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,0,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                                                           (rule "add_zero_right" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,1,0,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "44") (term "1,0,0,0,0"))
                                                                           (rule "add_literals" (formula "44") (term "1,1,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "44") (term "1,0,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,1,0,0,0,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "44") (term "1,1,1,0,0,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "44") (term "1,1,0,0,0,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,0,1,0,1,1,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "44") (term "1,0,1,0,1,1,0,1,0"))
                                                                           (rule "add_literals" (formula "44") (term "1,1,0,1,0,1,1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "44") (term "1,0,1,0,1,1,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "7") (term "0,1,0,0,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "7") (term "0,0,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,1,1,0,0,0,1,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "44") (term "1,1,0,0,0,1,0,1,0"))
                                                                           (rule "add_literals" (formula "44") (term "1,1,1,1,0,0,0,1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "44") (term "1,1,1,0,0,0,1,0,1,0"))
                                                                           (rule "add_literals" (formula "44") (term "1,1,0,0,0,1,0,1,0"))
                                                                           (rule "applyEq" (formula "8") (term "0,1,0,2,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "8") (term "0,2,0,0,0"))
                                                                           (rule "add_literals" (formula "8") (term "1,0,2,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,0,0,1,1,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,1,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "44") (term "1,1,0,0,1,1,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "44") (term "1,0,0,1,1,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "44") (term "0,0,1,1,0,1,1,0"))
                                                                           (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "13"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "23"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "23") (term "0"))
                                                                           (rule "add_literals" (formula "23") (term "1,0"))
                                                                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "14"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                                                           (rule "add_literals" (formula "14") (term "1,0"))
                                                                           (rule "times_zero_1" (formula "14") (term "0"))
                                                                           (rule "qeq_literals" (formula "14"))
                                                                           (rule "true_left" (formula "14"))
                                                                           (rule "applyEqRigid" (formula "20") (term "0,1,0,2,2,1,3,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "20") (term "0,2,2,1,3,0,0,0"))
                                                                           (rule "add_literals" (formula "20") (term "1,0,2,2,1,3,0,0,0"))
                                                                           (rule "times_zero_1" (formula "20") (term "0,2,2,1,3,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "20") (term "0,1,0,2,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "20") (term "0,2,0,0,0"))
                                                                           (rule "add_literals" (formula "20") (term "1,0,2,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "31") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "31") (term "1,1,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "31") (term "1,1,0,0,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "42") (term "0,1,1,0,0,1,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "1,0,0,1,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,0,1,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,0,0,1,1,1,0"))
                                                                           (rule "add_zero_right" (formula "42") (term "1,0,0,1,1,1,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "1,1,0,0,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,1,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "13"))
                                                                           (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,1,1,1,1,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,1,1,1,1,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,1,1,1,1,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,0,1,1,1,1,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "13"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "38"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "38") (term "0"))
                                                                           (rule "add_literals" (formula "38") (term "1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "38") (term "1,0"))
                                                                           (rule "applyEq" (formula "47") (term "0,1,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "47") (term "1,0,0,0"))
                                                                           (rule "applyEq" (formula "8") (term "0,1,0,2,1,1,3,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "8") (term "0,2,1,1,3,0,0,0"))
                                                                           (rule "add_literals" (formula "8") (term "1,0,2,1,1,3,0,0,0"))
                                                                           (rule "times_zero_1" (formula "8") (term "0,2,1,1,3,0,0,0"))
                                                                           (rule "applyEq" (formula "33") (term "0,1,1,1,0,0,1,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "33") (term "1,1,0,0,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "33") (term "1,1,1,0,0,1,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "33") (term "1,1,0,0,1,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "20") (term "0,1,0,2,1,1,3,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "20") (term "0,2,1,1,3,0,0,0"))
                                                                           (rule "add_literals" (formula "20") (term "1,0,2,1,1,3,0,0,0"))
                                                                           (rule "times_zero_1" (formula "20") (term "0,2,1,1,3,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "33") (term "0,1,1,1,1,0,0,1,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "33") (term "1,1,1,0,0,1,0,1,0"))
                                                                           (rule "add_literals" (formula "33") (term "1,1,1,1,1,0,0,1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "33") (term "1,1,1,1,0,0,1,0,1,0"))
                                                                           (rule "add_zero_right" (formula "33") (term "1,1,1,0,0,1,0,1,0"))
                                                                           (rule "applyEq" (formula "33") (term "0,1,1,1,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "33") (term "1,1,0,0,0"))
                                                                           (rule "add_literals" (formula "33") (term "1,1,1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "33") (term "1,1,1,0,0,0"))
                                                                           (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "1,1,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,1,0,0,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "10") (term "0,1,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0"))
                                                                           (rule "add_literals" (formula "10") (term "1,0,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,1,0,1,1,0,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_homoEq" (formula "42") (term "1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "42") (term "0,1,1,0,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,0,1,1,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "1,1,0,0,0,1,1,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,1,0,0,0,1,1,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,1,0,0,0,1,1,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,0,0,0,1,1,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "33") (term "0,1,1,1,0,0,0,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "33") (term "1,1,0,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "33") (term "1,1,1,1,0,0,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "33") (term "1,1,1,0,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "33") (term "1,1,0,0,0,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "42") (term "0,1,1,0,0,0,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "42") (term "0,1,1,0,0,1,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,0,0,1,0,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,1,1,0"))
                                                                           (rule "jmod_axiom" (formula "19") (term "0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                                                                           (rule "jdiv_axiom_inline" (formula "19") (term "0,0,0,0,0"))
                                                                           (rule "times_zero_2" (formula "19") (term "0,0,2,0,0,0,0,0"))
                                                                           (rule "qeq_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "19"))
                                                                           (rule "div_literals" (formula "19") (term "0,0,0,0,0"))
                                                                           (rule "times_zero_2" (formula "19") (term "0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "19"))
                                                                           (rule "jmod_axiom" (formula "9") (term "0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "9") (term "0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0"))
                                                                           (rule "jdiv_axiom_inline" (formula "9") (term "0,0,0,0,0"))
                                                                           (rule "qeq_literals" (formula "9") (term "0,0,0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "div_literals" (formula "9") (term "0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "9") (term "0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "jmod_axiom" (formula "7") (term "0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "7") (term "0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0"))
                                                                           (rule "jdiv_axiom_inline" (formula "7") (term "0,0,0,0,0"))
                                                                           (rule "div_literals" (formula "7") (term "1,0,0,0,0,0"))
                                                                           (rule "qeq_literals" (formula "7") (term "0,0,0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "times_zero_2" (formula "7") (term "0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "10") (term "1"))
                                                                           (rule "add_literals" (formula "10") (term "1,1"))
                                                                           (rule "applyEqRigid" (formula "42") (term "0,1,0,1,1,0,0,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,0,1,1,0,0,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,0,1,1,0,1,1,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,1,0,1,1,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,0,1,1,0,1,1,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,0,1,1,0,1,1,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "0,1,1,0,1,1,1,1,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,2,1,1,0,1,1,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,2,1,1,0,1,1,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,0,2,1,1,0,1,1,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,0,0,2,1,1,0,1,1,1,1,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,2,1,0,1,1,1,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,2,1,0,1,1,1,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,0,2,1,0,1,1,1,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,0,0,2,1,0,1,1,1,1,1,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,2,1,1,0,0,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,2,1,1,0,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,0,2,1,1,0,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,0,0,2,1,1,0,0,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "20") (term "0,1,0,2,2,0,3,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "20") (term "0,2,2,0,3,0,0,0"))
                                                                           (rule "add_literals" (formula "20") (term "1,0,2,2,0,3,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "14") (term "0,1,1") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "14") (term "1"))
                                                                           (rule "add_literals" (formula "14") (term "1,1,1"))
                                                                           (rule "applyEq" (formula "20") (term "0,1,0,2,1,0,3,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "20") (term "0,2,1,0,3,0,0,0"))
                                                                           (rule "add_literals" (formula "20") (term "1,0,2,1,0,3,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "37") (term "0,1,1") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "37") (term "1"))
                                                                           (rule "add_literals" (formula "37") (term "1,1"))
                                                                           (rule "times_zero_1" (formula "37") (term "1"))
                                                                           (rule "applyEqRigid" (formula "36") (term "1,1") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor2" (formula "36") (term "1"))
                                                                           (rule "add_literals" (formula "36") (term "1,1"))
                                                                           (rule "applyEqRigid" (formula "8") (term "0,1,0,2,1,0,3,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "8") (term "0,2,1,0,3,0,0,0"))
                                                                           (rule "add_literals" (formula "8") (term "1,0,2,1,0,3,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "8") (term "0,1,0,2,2,0,3,0,0,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "8") (term "0,2,2,0,3,0,0,0"))
                                                                           (rule "add_literals" (formula "8") (term "1,0,2,2,0,3,0,0,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,0,1,0,1,1,1,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,1,1,1,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,0,1,0,1,1,1,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,0,1,0,1,1,1,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "0,1,0,1,1,1,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "25") (term "1,1") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor2" (formula "25") (term "1"))
                                                                           (rule "add_literals" (formula "25") (term "1,1"))
                                                                           (rule "applyEq" (formula "29") (term "0,1,1") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "29") (term "1"))
                                                                           (rule "add_literals" (formula "29") (term "1,1"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,0,0,1,1,0,0,1,1,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,1,1,0,0,1,1,0,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,0,0,1,1,0,0,1,1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,0,0,1,1,0,0,1,1,0,1,0"))
                                                                           (rule "add_zero_right" (formula "42") (term "0,0,1,1,0,0,1,1,0,1,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,0,0,1,1,1,1,1,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,1,1,1,1,1,0,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,0,0,1,1,1,1,1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,0,0,1,1,1,1,1,0,1,0"))
                                                                           (rule "add_zero_right" (formula "42") (term "0,0,1,1,1,1,1,0,1,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,2,0,1,1,1,0,1,1,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,2,0,1,1,1,0,1,1,0,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,0,2,0,1,1,1,0,1,1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,0,0,2,0,1,1,1,0,1,1,0,1,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,2,0,1,1,0,1,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "42") (term "0,1,0,0,1,1,1,0,1,1,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,1,1,1,0,1,1,0,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,0,0,1,1,1,0,1,1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,0,0,1,1,1,0,1,1,0,1,0"))
                                                                           (rule "add_zero_right" (formula "42") (term "0,0,1,1,1,0,1,1,0,1,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,2,0,1,1,0,0,1,1,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,2,0,1,1,0,0,1,1,0,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,0,2,0,1,1,0,0,1,1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,0,0,2,0,1,1,0,0,1,1,0,1,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,2,0,1,1,1,1,1,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,2,0,1,1,1,1,1,0,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,0,2,0,1,1,1,1,1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,0,0,2,0,1,1,1,1,1,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "42") (term "0,1,0,0,1,1,0,1,0,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,1,1,0,1,0,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,0,0,1,1,0,1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,0,0,1,1,0,1,0,1,0"))
                                                                           (rule "add_zero_right" (formula "42") (term "0,0,1,1,0,1,0,1,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,1,0,1,1,0,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "42") (term "0,1,1,0,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,2,0,0,0,0,1,1,0,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,2,0,0,0,0,1,1,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,1,0,0,2,0,0,0,0,1,1,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,1,0,0,2,0,0,0,0,1,1,0,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "42") (term "0,1,0,0,0,0,0,1,1,0,0,1,1,0") (ifseqformula "13"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                                                                           (rule "mul_literals" (formula "38") (term "1"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "42") (term "1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "42") (term "0,1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "42") (term "0,1,1,0,0,1,1,0"))
                                                                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "15"))
                                                                           (rule "leq_literals" (formula "16") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "16"))
                                                                           (rule "true_left" (formula "16"))
                                                                           (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "37"))
                                                                           (rule "leq_literals" (formula "20") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "20"))
                                                                           (rule "true_left" (formula "20"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "36"))
                                                                           (rule "qeq_literals" (formula "15") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "15"))
                                                                           (rule "closeFalse" (formula "15"))
                                                                        )
                                                                        (branch "self.a.length = 1 FALSE"
                                                                           (rule "replace_known_right" (formula "49") (term "0,0,1,0") (ifseqformula "46"))
                                                                           (builtin "One Step Simplification" (formula "49"))
                                                                           (rule "replace_known_right" (formula "48") (term "0,0,1,0") (ifseqformula "46"))
                                                                           (builtin "One Step Simplification" (formula "48"))
                                                                           (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "46"))
                                                                           (rule "add_literals" (formula "28") (term "1"))
                                                                           (rule "inEqSimp_contradEq7" (formula "46") (ifseqformula "28"))
                                                                           (rule "mul_literals" (formula "46") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "46") (term "0,0"))
                                                                           (rule "leq_literals" (formula "46") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "false_right" (formula "46"))
                                                                           (rule "methodCallReturn" (formula "19") (term "1"))
                                                                           (rule "assignment" (formula "19") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "19"))
                                                                           (rule "methodCallReturn" (formula "6") (term "1"))
                                                                           (rule "assignment" (formula "6") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "methodCallEmpty" (formula "3") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "3"))
                                                                           (rule "commute_or" (formula "35") (term "0,1,1,0,1,1,0"))
                                                                           (rule "emptyModality" (formula "11") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "closeFalse" (formula "11"))
                                                                        )
                                                                     )
                                                                     (branch "jmod(l_338 * 4 + k_29 * -3, 2) = 0 FALSE"
                                                                        (rule "replace_known_right" (formula "4") (term "0,0,1,0") (ifseqformula "44"))
                                                                        (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "44"))
                                                                        (builtin "One Step Simplification" (formula "5"))
                                                                        (rule "replace_known_right" (formula "15") (term "0,0,1,0") (ifseqformula "44"))
                                                                        (builtin "One Step Simplification" (formula "15"))
                                                                        (rule "replace_known_right" (formula "16") (term "0,0,0") (ifseqformula "44"))
                                                                        (builtin "One Step Simplification" (formula "16"))
                                                                        (rule "jmod_axiom" (formula "44") (term "0"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "44"))
                                                                        (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                                        (rule "ifthenelse_split" (formula "8") (term "0,0"))
                                                                        (branch "jmod(l_338 * 2 + k_29 * -1, 2) = 0 TRUE"
                                                                           (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "8"))
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "8"))
                                                                           (builtin "One Step Simplification" (formula "18"))
                                                                           (rule "jmod_axiom" (formula "8") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "8"))
                                                                           (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                           (rule "newSym_eq" (formula "8") (inst "newSymDef=add(l_338, mul(k_29, Z(neglit(1(#)))))") (inst "l=l_339"))
                                                                           (rule "polySimp_addAssoc" (formula "8") (term "1"))
                                                                           (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "8"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "0"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                                           (rule "polySimp_homoEq" (formula "9"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "9") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0"))
                                                                           (rule "add_literals" (formula "9") (term "1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "9") (term "1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                                           (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "9") (term "0,0"))
                                                                           (rule "polySimp_sepPosMonomial" (formula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "1"))
                                                                           (rule "applyEqRigid" (formula "35") (term "1,0,0,1,0,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "35") (term "1,1,0,0,1,1,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "57") (term "1,0,2,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,0,0,1,1,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "0,0,1,1,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "1,1,0,0,1,1,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "7") (term "0,1,0,2,1,1,3,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,2,1,1,3,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "7") (term "0,2,1,1,3,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "35") (term "1,1,0,0,1,1,1,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "20") (term "0,1,0,2,2,1,3,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,2,2,1,3,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "20") (term "0,2,2,1,3,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,1,0,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,0,0,0,0"))
                                                                           (rule "applyEq" (formula "35") (term "1,0,0,0,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "1,1,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "7") (term "0,1,0,2,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,2,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "7") (term "0,2,0,0,0"))
                                                                           (rule "applyEq" (formula "7") (term "0,1,0,2,2,1,3,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,2,2,1,3,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "7") (term "0,2,2,1,3,0,0,0"))
                                                                           (rule "applyEq" (formula "35") (term "1,0,0,0,0,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "35") (term "0,0,1,0,1,0,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "35") (term "0,1,1,1,1,0,0,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,1,0,0,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "35") (term "1,1,1,0,0,1,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "33") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "35") (term "0,2,1,0,1,0,1,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,0,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "1,1,0,0,0,1,0,1,0"))
                                                                           (rule "applyEq" (formula "20") (term "0,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "22") (term "0,1,1") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                                           (rule "polySimp_addComm1" (formula "22") (term "1"))
                                                                           (rule "applyEqRigid" (formula "35") (term "0,2,1,0,1,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "35") (term "1,1,0,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,1,1,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,1,1,1,1,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,1,0,1,1,1,1,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "35") (term "0,2,1,0,1,1,1,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "35") (term "1,1,0,0,1,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "35") (term "1,1,0,0,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "9"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "40"))
                                                                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                                           (rule "applyEq" (formula "50") (term "0,1,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "50") (term "0,0,0"))
                                                                           (rule "applyEq" (formula "35") (term "1,1,0,1,1,0,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,0,0,1,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,0,0,1,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "33") (term "1,1,0,0,0,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "35") (term "0,1,1,1,0,1,1,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "35") (term "1,1,0,1,1,0,1,1,0"))
                                                                           (rule "applyEq" (formula "35") (term "1,0,0,0,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "9"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "12"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,1,0,0,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,0,1,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,0,1,0,0,1,1,0"))
                                                                           (rule "applyEq" (formula "35") (term "0,1,1,1,0,0,0,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "35") (term "1,1,0,0,0,0,1,0"))
                                                                           (rule "applyEq" (formula "42") (term "0,1,1,0,0,0,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "1,0,0,0,0,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "35") (term "1,0,0,1,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,1,0,0,0,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,0,0,0,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "21") (term "0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "21"))
                                                                           (rule "applyEqRigid" (formula "35") (term "0,1,1,1,0,0,1,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "35") (term "1,1,0,0,1,0,1,1,0"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "1,1,0,0,0,1,0"))
                                                                           (rule "applyEq" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "3") (term "1,0,0,0,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "35") (term "1,0,1,0,0,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "35") (term "1,0,0,0,1,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "35") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "20") (term "0,1,0,2,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,2,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "20") (term "0,2,0,0,0"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,0,0,1,1,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "1,0,0,1,1,0,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "35") (term "1,1,0,0,1,0,1,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "35") (term "1,1,0,1,1,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,1,0,1,0,1,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0,1,1,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,0,1,0,1,1,0,1,0"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,0,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,1,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "1,1,0,0,0,1,1,1,1,0"))
                                                                           (rule "applyEq" (formula "7") (term "1,0,0,0,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,1,0,0,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "1,0,0,1,1,1,0"))
                                                                           (rule "applyEq" (formula "44") (term "1,1,0,0,0,2,0,1,1,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "35") (term "0,0,1,1,1,0,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "44") (term "1,0,0,0,0,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "20") (term "0,1,0,2,1,1,3,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,2,1,1,3,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "20") (term "0,2,1,1,3,0,0,0"))
                                                                           (rule "applyEq" (formula "44") (term "1,1,0,0,0,1,0,1,1,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "35") (term "0,1,1,1,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "35") (term "1,1,0,0,0"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,2,0,1,1,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                           (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                                           (rule "polySimp_addComm1" (formula "13") (term "1"))
                                                                           (rule "applyEq" (formula "44") (term "1,1,0,0,0,0,1,0,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "46") (term "0,1,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "46") (term "0,0,0"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,1,0,1,1,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,1,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "8") (term "0,1,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,2,1,1,0,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,1,1,0,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,1,1,0,0,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "35") (term "0,2,1,1,0,1,0,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "57") (term "1,0,2,1") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "39") (term "0,1,1") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                                           (rule "polySimp_addComm0" (formula "39") (term "1"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,2,1,1,0,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,1,1,0,1,1,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,1,1,0,1,1,1,1,0"))
                                                                           (rule "applyEq" (formula "44") (term "1,1,0,0,0,2,1,1,0,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "35") (term "0,1,1,0,1,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,0,1,0,1,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,1,1,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "0,1,0,1,1,1,1,1,0"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,0,1,1,0,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,1,0,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "0,1,1,0,0,0,1,1,0"))
                                                                           (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                                           (rule "polySimp_addComm0" (formula "31") (term "1"))
                                                                           (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,2,1,1,0,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,0,1,1,0,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,1,0,1,1,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "0,1,1,0,1,1,1,1,0"))
                                                                           (rule "applyEq" (formula "44") (term "1,1,0,0,0,2,1,0,1,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "26") (term "0,1,1") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                           (rule "polySimp_addComm0" (formula "26") (term "1"))
                                                                           (rule "applyEqRigid" (formula "8") (term "0,1,1") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                           (rule "polySimp_addComm1" (formula "8") (term "1"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "8") (term "0,1"))
                                                                           (rule "add_literals" (formula "8") (term "1,0,1"))
                                                                           (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,1,1,1,1,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "7") (term "0,1,0,2,2,0,3,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,2,2,0,3,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "7") (term "0,2,2,0,3,0,0,0"))
                                                                           (rule "applyEq" (formula "7") (term "0,1,0,2,1,0,3,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "7") (term "1,0,2,1,0,3,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "7") (term "0,2,1,0,3,0,0,0"))
                                                                           (rule "applyEq" (formula "38") (term "0,1,1") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                                           (rule "polySimp_addComm0" (formula "38") (term "1"))
                                                                           (rule "applyEqRigid" (formula "20") (term "0,1,0,2,1,0,3,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,2,1,0,3,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "20") (term "0,2,1,0,3,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "35") (term "0,1,1,1,0,1,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "35") (term "0,1,1,1,1,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,2,1,0,1,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,1,0,1,1,1,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,1,0,1,1,1,1,1,0"))
                                                                           (rule "applyEq" (formula "20") (term "0,1,0,2,2,0,3,0,0,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,2,2,0,3,0,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "20") (term "0,2,2,0,3,0,0,0"))
                                                                           (rule "applyEqRigid" (formula "46") (term "0,1,1") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                                           (rule "polySimp_addComm0" (formula "46") (term "1"))
                                                                           (rule "applyEq" (formula "14") (term "0,1,1") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                           (rule "polySimp_addComm1" (formula "14") (term "1"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,1,1,1,1,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,1,1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,1,1,1,1,0,0,1,1,0"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,2,0,0,1,1,1,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,0,0,1,1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,0,0,1,1,1,0,0,1,1,0"))
                                                                           (rule "applyEq" (formula "44") (term "1,1,0,0,0,2,0,1,1,0,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,0,0,1,1,0,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "0,0,1,1,0,1,0,1,0"))
                                                                           (rule "applyEq" (formula "35") (term "0,0,1,1,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "35") (term "0,0,1,1,1,1,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,2,0,0,1,1,1,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,0,0,1,1,0,0,1,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0,0,1,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "0,0,1,1,0,0,1,1,0,1,0"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,0,0,1,1,1,0,1,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,1,0,1,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "0,0,1,1,1,0,1,1,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,0,0,0,1,1,1,0,0,1,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,1,1,1,0,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,1,1,0,0,1,1,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,1,1,0,0,2,0,1,1,0,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,0,0,1,1,1,1,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,1,1,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "44") (term "0,0,1,1,1,1,1,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "0,1,1,1,0,0,2,0,1,1,1,0,1,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,0,1,1,1,0,1,1,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,0,1,1,1,0,1,1,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,2,0,1,1,1,0,1,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "44") (term "1,1,0,0,0,2,0,1,1,1,1,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,2,0,1,1,0,0,1,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,0,1,1,0,0,1,1,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,0,1,1,0,0,1,1,0,1,0"))
                                                                           (rule "applyEq" (formula "35") (term "0,0,1,1,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "44") (term "1,1,0,0,0,2,0,1,1,0,0,1,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEqRigid" (formula "35") (term "0,1,0,1,1,0,0,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "35") (term "0,2,0,0,1,1,0,1,1,1,1,1,0") (ifseqformula "9"))
                                                                           (rule "applyEq" (formula "44") (term "0,1,1,1,0,0,2,0,1,1,1,1,1,0,1,0") (ifseqformula "9"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,2,0,1,1,1,1,1,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0,2,0,1,1,1,1,1,0,1,0"))
                                                                           (rule "applyEqRigid" (formula "35") (term "0,2,0,0,0,1,1,0,0,1,0") (ifseqformula "9"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                                           (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                                           (rule "mul_literals" (formula "40") (term "0,1"))
                                                                           (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_339") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                           (rule "leq_literals" (formula "16") (term "0,0"))
                                                                           (builtin "One Step Simplification" (formula "16"))
                                                                           (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                                           (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                                           (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                           (rule "leq_literals" (formula "16") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "16"))
                                                                           (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=mul(l_338, Z(2(#)))") (inst "elimGcdRightDiv=mul(l_339, Z(3(#)))"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                                                           (rule "leq_literals" (formula "21") (term "0,0"))
                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                           (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "21") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                           (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                           (rule "leq_literals" (formula "21") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_338") (inst "elimGcdRightDiv=l_339"))
                                                                           (rule "leq_literals" (formula "12") (term "0,0"))
                                                                           (builtin "One Step Simplification" (formula "12"))
                                                                           (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                                           (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "12") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                                           (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "12") (term "0,0"))
                                                                           (rule "leq_literals" (formula "12") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "12"))
                                                                           (rule "elimGcdEq" (formula "46") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=jdiv(add(mul(l_339, Z(neglit(6(#)))),
         mul(l_338, Z(4(#)))),
     Z(2(#)))") (inst "elimGcdRightDiv=add(mul(l_339, Z(neglit(3(#)))), mul(l_338, Z(2(#))))"))
                                                                           (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                                           (rule "add_literals" (formula "46") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "46") (term "0,1,0,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "46") (term "0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "46") (term "1,1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "46") (term "1,0,1,0"))
                                                                           (rule "add_zero_right" (formula "46") (term "0,1,0"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "46") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "46") (term "1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "46") (term "0,1,0"))
                                                                           (rule "qeq_literals" (formula "46") (term "1,0"))
                                                                           (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                                                                           (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "46") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "46") (term "0,0"))
                                                                           (rule "add_literals" (formula "46") (term "1,0,0"))
                                                                           (rule "times_zero_1" (formula "46") (term "0,0"))
                                                                           (rule "leq_literals" (formula "46") (term "0"))
                                                                           (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "46") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "46") (term "1,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "46") (term "0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "46") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0" (formula "46") (term "0,0"))
                                                                           (rule "add_literals" (formula "46") (term "1,0,0"))
                                                                           (rule "times_zero_1" (formula "46") (term "0,0"))
                                                                           (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "equality_comparison_simple" (formula "20") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "20"))
                                                                           (rule "methodCallReturn" (formula "2") (term "1"))
                                                                           (rule "assignment" (formula "2") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "ifthenelse_split" (formula "47") (term "0,1,0"))
                                                                           (branch "self.a.length = 1 TRUE"
                                                                              (rule "replace_known_left" (formula "49") (term "0,0,1,0") (ifseqformula "1"))
                                                                              (builtin "One Step Simplification" (formula "49"))
                                                                              (rule "replace_known_left" (formula "50") (term "0,0,1,0") (ifseqformula "1"))
                                                                              (builtin "One Step Simplification" (formula "50"))
                                                                              (rule "applyEq" (formula "49") (term "0,1,0,0") (ifseqformula "1"))
                                                                              (rule "applyEq" (formula "50") (term "0,1,0,0") (ifseqformula "1"))
                                                                              (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                                                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "23"))
                                                                              (rule "mul_literals" (formula "23") (term "1,0"))
                                                                              (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                                              (rule "add_literals" (formula "23") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "23") (term "0,0"))
                                                                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "29"))
                                                                              (rule "true_left" (formula "29"))
                                                                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "14"))
                                                                              (rule "mul_literals" (formula "14") (term "1,0"))
                                                                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                                              (rule "add_literals" (formula "14") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "14") (term "0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                                                              (rule "polySimp_mulLiterals" (formula "23") (term "1"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                                                              (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                                                              (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_338") (inst "elimGcdRightDiv=l_339"))
                                                                              (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
                                                                              (rule "leq_literals" (formula "14") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "14"))
                                                                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "14") (term "0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "14") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "14") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "14"))
                                                                              (rule "elimGcdLeq_antec" (formula "23") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=mul(l_338, Z(2(#)))") (inst "elimGcdRightDiv=mul(l_339, Z(3(#)))"))
                                                                              (rule "leq_literals" (formula "23") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "23"))
                                                                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                                                              (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                                                                              (rule "neg_literal" (formula "23") (term "0,0,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                                              (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                              (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                                              (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "23") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "23"))
                                                                              (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "14"))
                                                                              (rule "applyEq" (formula "45") (term "0,1,0,0,1,1,0,1,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,1,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "45") (term "1,1,0,0,1,1,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "45") (term "1,0,0,1,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "45") (term "0,0,1,1,0,1,1,0"))
                                                                              (rule "applyEq" (formula "45") (term "0,1,1,1,0,0,2,0,1,1,0,1,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "45") (term "1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "45") (term "1,1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "45") (term "1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                              (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "13"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "24"))
                                                                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "24") (term "0"))
                                                                              (rule "add_literals" (formula "24") (term "1,0"))
                                                                              (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                              (rule "applyEqRigid" (formula "44") (term "0,1,1,0,0,1,0,1,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "44") (term "1,0,0,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "44") (term "1,1,0,0,1,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "44") (term "0,1,1,0,0,1,1,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "44") (term "1,0,0,1,1,1,0"))
                                                                              (rule "add_literals" (formula "44") (term "1,1,1,0,0,1,1,1,0"))
                                                                              (rule "times_zero_1" (formula "44") (term "1,1,0,0,1,1,1,0"))
                                                                              (rule "add_literals" (formula "44") (term "1,0,0,1,1,1,0"))
                                                                              (rule "applyEq" (formula "46") (term "0,1,0,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "46") (term "0,0"))
                                                                              (rule "add_literals" (formula "46") (term "1,0,0"))
                                                                              (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "14"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                                                              (rule "add_literals" (formula "14") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "14") (term "0"))
                                                                              (rule "leq_literals" (formula "14"))
                                                                              (rule "true_left" (formula "14"))
                                                                              (rule "applyEq" (formula "32") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "32") (term "1,1,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "32") (term "1,1,0,0,0,1,0"))
                                                                              (rule "applyEqRigid" (formula "8") (term "0,1,0,2,0,0,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "8") (term "0,2,0,0,0"))
                                                                              (rule "add_literals" (formula "8") (term "1,0,2,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "34") (term "0,1,1,1,0,0,0,0,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "34") (term "1,1,0,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "34") (term "1,1,1,1,0,0,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "34") (term "1,1,1,0,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "34") (term "1,1,0,0,0,0,1,0"))
                                                                              (rule "applyEq" (formula "43") (term "0,1,1,1,0,1,1,1,1,1,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "43") (term "1,1,0,1,1,1,1,1,1,0"))
                                                                              (rule "add_literals" (formula "43") (term "1,1,1,0,1,1,1,1,1,1,0"))
                                                                              (rule "times_zero_1" (formula "43") (term "1,1,0,1,1,1,1,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "8") (term "0,1,0,2,2,1,3,0,0,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "8") (term "0,2,2,1,3,0,0,0"))
                                                                              (rule "add_literals" (formula "8") (term "1,0,2,2,1,3,0,0,0"))
                                                                              (rule "times_zero_1" (formula "8") (term "0,2,2,1,3,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "21") (term "0,1,0,2,2,1,3,0,0,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "21") (term "0,2,2,1,3,0,0,0"))
                                                                              (rule "add_literals" (formula "21") (term "1,0,2,2,1,3,0,0,0"))
                                                                              (rule "times_zero_1" (formula "21") (term "0,2,2,1,3,0,0,0"))
                                                                              (rule "applyEq" (formula "43") (term "0,1,1,0,0,0,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "43") (term "1,0,0,0,0"))
                                                                              (rule "add_literals" (formula "43") (term "1,1,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "43") (term "1,0,0,0,0"))
                                                                              (rule "applyEq" (formula "34") (term "0,1,1,1,0,0,1,0,1,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "34") (term "1,1,0,0,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "34") (term "1,1,1,0,0,1,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "34") (term "1,1,0,0,1,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "43") (term "0,1,1,1,0,0,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "43") (term "1,1,0,0,0"))
                                                                              (rule "add_literals" (formula "43") (term "1,1,1,1,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "13"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "14"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                                                              (rule "add_literals" (formula "14") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "14") (term "0"))
                                                                              (rule "qeq_literals" (formula "14"))
                                                                              (rule "true_left" (formula "14"))
                                                                              (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,1,0,1,1,0,0,1,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_homoEq" (formula "42") (term "1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "0,1,1,0,0,1,1,0"))
                                                                              (rule "applyEq" (formula "40") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "40") (term "1,1,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "40") (term "1,1,1,0,0,0,1,0"))
                                                                              (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "13"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "21"))
                                                                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "21") (term "0"))
                                                                              (rule "add_literals" (formula "21") (term "1,0"))
                                                                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                              (rule "applyEq" (formula "33") (term "0,1,1,1,1,0,0,1,0,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "33") (term "1,1,1,0,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "33") (term "1,1,1,1,1,0,0,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "33") (term "1,1,1,1,0,0,1,0,1,0"))
                                                                              (rule "add_zero_right" (formula "33") (term "1,1,1,0,0,1,0,1,0"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,1,0,0,0,0,1,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,1,0,0,0,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,1,0,0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "48") (term "0,1,0,0,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "48") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "48") (term "1,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,0,1,1,1,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "42") (term "1,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,1,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,1,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "add_zero_right" (formula "42") (term "1,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "applyEq" (formula "8") (term "0,1,0,2,1,1,3,0,0,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "8") (term "0,2,1,1,3,0,0,0"))
                                                                              (rule "add_literals" (formula "8") (term "1,0,2,1,1,3,0,0,0"))
                                                                              (rule "times_zero_1" (formula "8") (term "0,2,1,1,3,0,0,0"))
                                                                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "13"))
                                                                              (rule "applyEqRigid" (formula "42") (term "0,1,1,0,1,0,1,1,0,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,0,1,0,1,1,0,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,0,1,0,1,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,0,1,0,1,1,0,1,0"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,1,0,1,0,0,1,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,0,1,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,0,1,0,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "40") (term "0,1,1,0,0,0,0,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "40") (term "1,0,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "40") (term "1,1,1,0,0,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "40") (term "1,1,0,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "40") (term "1,0,0,0,0,1,0"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,0,1,0,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "42") (term "1,1,0,0,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,1,1,0,0,0,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,1,1,0,0,0,1,0,1,0"))
                                                                              (rule "add_zero_right" (formula "42") (term "1,1,0,0,0,1,0,1,0"))
                                                                              (rule "applyEq" (formula "33") (term "0,1,1,1,0,1,1,0,1,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "33") (term "1,1,0,1,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "33") (term "1,1,1,0,1,1,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "33") (term "1,1,0,1,1,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "33") (term "0,1,1,1,0,0,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "33") (term "1,1,0,0,0"))
                                                                              (rule "add_literals" (formula "33") (term "1,1,1,1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "33") (term "1,1,1,0,0,0"))
                                                                              (rule "add_zero_right" (formula "33") (term "1,1,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "9") (term "0,1,0,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0"))
                                                                              (rule "add_literals" (formula "9") (term "1,0,0"))
                                                                              (rule "times_zero_1" (formula "9") (term "0,0"))
                                                                              (rule "jdiv_axiom_inline" (formula "9") (term "0"))
                                                                              (rule "times_zero_2" (formula "9") (term "0,0,2,0"))
                                                                              (rule "qeq_literals" (formula "9") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "9"))
                                                                              (rule "div_literals" (formula "9") (term "0"))
                                                                              (rule "polySimp_homoEq" (formula "9"))
                                                                              (rule "mul_literals" (formula "9") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "9") (term "0"))
                                                                              (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "42") (term "1,1,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,1,1,0,0,0,1,0"))
                                                                              (rule "applyEqRigid" (formula "20") (term "0,1,0,2,0,0,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "20") (term "0,2,0,0,0"))
                                                                              (rule "add_literals" (formula "20") (term "1,0,2,0,0,0"))
                                                                              (rule "applyEq" (formula "20") (term "0,1,0,2,1,1,3,0,0,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "20") (term "0,2,1,1,3,0,0,0"))
                                                                              (rule "add_literals" (formula "20") (term "1,0,2,1,1,3,0,0,0"))
                                                                              (rule "times_zero_1" (formula "20") (term "0,2,1,1,3,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "13"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "38"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "38") (term "0"))
                                                                              (rule "add_literals" (formula "38") (term "1,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "38") (term "1,0"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,1,0,0,0,0,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,1,0,1,1,0,0,1,1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "0,1,1,0,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "9") (term "1,0") (ifseqformula "13"))
                                                                              (rule "polySimp_pullOutFactor2" (formula "9") (term "0"))
                                                                              (rule "add_literals" (formula "9") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "9") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "9"))
                                                                              (rule "true_left" (formula "9"))
                                                                              (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "36") (term "1"))
                                                                              (rule "add_literals" (formula "36") (term "1,1"))
                                                                              (rule "times_zero_1" (formula "36") (term "1"))
                                                                              (rule "applyEq" (formula "43") (term "0,1,1") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "43") (term "1"))
                                                                              (rule "add_literals" (formula "43") (term "1,1"))
                                                                              (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "28") (term "1"))
                                                                              (rule "add_literals" (formula "28") (term "1,1"))
                                                                              (rule "applyEqRigid" (formula "13") (term "0,1,1") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "1"))
                                                                              (rule "add_literals" (formula "13") (term "1,1,1"))
                                                                              (rule "applyEqRigid" (formula "8") (term "0,1,0,2,2,0,3,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "8") (term "0,2,2,0,3,0,0,0"))
                                                                              (rule "add_literals" (formula "8") (term "1,0,2,2,0,3,0,0,0"))
                                                                              (rule "applyEq" (formula "41") (term "0,1,0,1,0,1,1,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,0,1,1,1,1,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,0,1,0,1,1,1,1,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,0,1,0,1,1,1,1,1,0"))
                                                                              (rule "add_zero_right" (formula "41") (term "0,1,0,1,1,1,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "41") (term "0,1,1,1,0,0,2,1,1,0,0,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "41") (term "1,1,0,0,2,1,1,0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,1,0,0,2,1,1,0,0,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,1,0,0,2,1,1,0,0,0,1,1,0"))
                                                                              (rule "applyEq" (formula "41") (term "0,1,0,1,1,0,0,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,1,0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,0,1,1,0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "0,1,1,0,0,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "35") (term "1,1") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor2" (formula "35") (term "1"))
                                                                              (rule "add_literals" (formula "35") (term "1,1"))
                                                                              (rule "applyEq" (formula "8") (term "0,1,0,2,1,0,3,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "8") (term "0,2,1,0,3,0,0,0"))
                                                                              (rule "add_literals" (formula "8") (term "1,0,2,1,0,3,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "24") (term "1,1") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor2" (formula "24") (term "1"))
                                                                              (rule "add_literals" (formula "24") (term "1,1"))
                                                                              (rule "applyEq" (formula "41") (term "0,1,0,1,1,0,1,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,1,0,1,1,1,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,0,1,1,0,1,1,1,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,0,1,1,0,1,1,1,1,0"))
                                                                              (rule "add_zero_right" (formula "41") (term "0,1,1,0,1,1,1,1,0"))
                                                                              (rule "applyEq" (formula "19") (term "0,1,0,2,2,0,3,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "19") (term "0,2,2,0,3,0,0,0"))
                                                                              (rule "add_literals" (formula "19") (term "1,0,2,2,0,3,0,0,0"))
                                                                              (rule "applyEq" (formula "41") (term "0,1,1,1,0,0,2,1,0,1,1,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "41") (term "1,1,0,0,2,1,0,1,1,1,1,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,1,0,0,2,1,0,1,1,1,1,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,1,0,0,2,1,0,1,1,1,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "19") (term "0,1,0,2,1,0,3,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "19") (term "0,2,1,0,3,0,0,0"))
                                                                              (rule "add_literals" (formula "19") (term "1,0,2,1,0,3,0,0,0"))
                                                                              (rule "applyEq" (formula "41") (term "0,1,1,1,0,0,2,1,1,0,1,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "41") (term "1,1,0,0,2,1,1,0,1,1,1,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,1,0,0,2,1,1,0,1,1,1,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,1,0,0,2,1,1,0,1,1,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "41") (term "0,1,1,1,0,0,2,0,1,1,0,1,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "41") (term "1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,1,0,0,2,0,1,1,0,1,0,1,0"))
                                                                              (rule "applyEqRigid" (formula "41") (term "0,1,0,0,1,1,0,0,1,1,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,1,1,0,0,1,1,0,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,0,0,1,1,0,0,1,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,0,0,1,1,0,0,1,1,0,1,0"))
                                                                              (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,0,1,1,0,1,0"))
                                                                              (rule "applyEq" (formula "41") (term "0,1,1,1,0,0,2,0,1,1,0,0,1,1,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "41") (term "1,1,0,0,2,0,1,1,0,0,1,1,0,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,1,0,0,2,0,1,1,0,0,1,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,1,0,0,2,0,1,1,0,0,1,1,0,1,0"))
                                                                              (rule "applyEqRigid" (formula "41") (term "0,1,1,1,0,0,2,0,1,1,1,1,1,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "41") (term "1,1,0,0,2,0,1,1,1,1,1,0,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,1,0,0,2,0,1,1,1,1,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,1,0,0,2,0,1,1,1,1,1,0,1,0"))
                                                                              (rule "applyEqRigid" (formula "41") (term "0,1,0,0,1,1,1,0,1,1,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,1,1,1,0,1,1,0,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,0,0,1,1,1,0,1,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,0,0,1,1,1,0,1,1,0,1,0"))
                                                                              (rule "add_zero_right" (formula "41") (term "0,0,1,1,1,0,1,1,0,1,0"))
                                                                              (rule "applyEqRigid" (formula "41") (term "0,1,1,1,0,0,2,0,1,1,1,0,1,1,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "41") (term "1,1,0,0,2,0,1,1,1,0,1,1,0,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,1,0,0,2,0,1,1,1,0,1,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,1,0,0,2,0,1,1,1,0,1,1,0,1,0"))
                                                                              (rule "applyEq" (formula "41") (term "0,1,0,0,1,1,1,1,1,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,1,1,1,1,1,0,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,0,0,1,1,1,1,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,0,0,1,1,1,1,1,0,1,0"))
                                                                              (rule "add_zero_right" (formula "41") (term "0,0,1,1,1,1,1,0,1,0"))
                                                                              (rule "applyEqRigid" (formula "41") (term "0,1,0,0,1,1,0,1,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,1,1,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,0,0,1,1,0,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,0,0,1,1,0,1,0,1,0"))
                                                                              (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,1,0,1,0"))
                                                                              (rule "applyEqRigid" (formula "41") (term "0,1,1,0,0,1,0,1,1,0,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "41") (term "1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "add_zero_right" (formula "41") (term "1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "41") (term "0,1,1,1,0,0,2,0,0,0,0,1,1,0,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "41") (term "1,1,0,0,2,0,0,0,0,1,1,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,1,0,0,2,0,0,0,0,1,1,0,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,1,0,0,2,0,0,0,0,1,1,0,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "41") (term "0,1,0,0,0,0,0,1,1,0,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                                                              (rule "add_zero_right" (formula "41") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                                                                              (rule "mul_literals" (formula "37") (term "1"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "41") (term "1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "41") (term "0,1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "41") (term "0,1,1,0,0,1,1,0"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "37"))
                                                                              (rule "qeq_literals" (formula "14") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "14"))
                                                                              (rule "closeFalse" (formula "14"))
                                                                           )
                                                                           (branch "self.a.length = 1 FALSE"
                                                                              (rule "replace_known_right" (formula "49") (term "0,0,1,0") (ifseqformula "47"))
                                                                              (builtin "One Step Simplification" (formula "49"))
                                                                              (rule "replace_known_right" (formula "50") (term "0,0,1,0") (ifseqformula "47"))
                                                                              (builtin "One Step Simplification" (formula "50"))
                                                                              (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                                                              (rule "add_literals" (formula "28") (term "1"))
                                                                              (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                                                              (rule "mul_literals" (formula "47") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "47") (term "0,0"))
                                                                              (rule "leq_literals" (formula "47") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "47"))
                                                                              (rule "false_right" (formula "47"))
                                                                              (rule "methodCallEmpty" (formula "3") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "3"))
                                                                              (rule "emptyModality" (formula "11") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "11"))
                                                                              (rule "true_left" (formula "11"))
                                                                              (rule "emptyModality" (formula "10") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "10"))
                                                                              (rule "closeFalse" (formula "10"))
                                                                           )
                                                                        )
                                                                        (branch "jmod(l_338 * 2 + k_29 * -1, 2) = 0 FALSE"
                                                                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "44"))
                                                                           (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "44"))
                                                                           (builtin "One Step Simplification" (formula "17"))
                                                                           (rule "jmod_axiom" (formula "44") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "44"))
                                                                           (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                                           (rule "shift_paren_or" (formula "33") (term "0,0,1,0,1,0"))
                                                                           (rule "inEqSimp_or_tautInEq2" (formula "33") (term "0,0,0,1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "33") (term "1,1,0,0,0,1,0,1,0"))
                                                                           (rule "add_literals" (formula "33") (term "0,1,1,0,0,0,1,0,1,0"))
                                                                           (rule "add_zero_left" (formula "33") (term "1,1,0,0,0,1,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0,0,1,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "33") (term "0,1,0,0,0,1,0,1,0"))
                                                                           (rule "add_literals" (formula "33") (term "1,0,1,0,0,0,1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "33") (term "0,1,0,0,0,1,0,1,0"))
                                                                           (rule "leq_literals" (formula "33") (term "1,0,0,0,1,0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "equality_comparison_simple" (formula "18") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "18"))
                                                                           (rule "methodCallReturn" (formula "2") (term "1"))
                                                                           (rule "assignment" (formula "2") (term "1"))
                                                                           (builtin "One Step Simplification" (formula "2"))
                                                                           (rule "cnf_rightDist" (formula "42") (term "1,1,1,1,1,0"))
                                                                           (rule "cnf_rightDist" (formula "42") (term "0,1,0"))
                                                                           (rule "commute_or" (formula "42") (term "1,0,1,0"))
                                                                           (rule "shift_paren_or" (formula "42") (term "0,0,1,0"))
                                                                           (rule "commute_or_2" (formula "42") (term "0,0,0,1,0"))
                                                                           (rule "shift_paren_or" (formula "42") (term "0,0,0,0,1,0"))
                                                                           (rule "commute_or_2" (formula "42") (term "0,0,0,0,0,1,0"))
                                                                           (rule "shift_paren_or" (formula "42") (term "0,0,0,0,0,0,1,0"))
                                                                           (rule "commute_or" (formula "42") (term "0,0,0,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "42") (term "0,0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "42") (term "1,1,0,0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "42") (term "0,1,1,0,0,0,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "0,0,1,1,0,0,0,0,0,0,1,0"))
                                                                           (rule "add_zero_left" (formula "42") (term "0,1,1,0,0,0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0,0,0,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "42") (term "0,1,0,0,0,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "42") (term "1,0,1,0,0,0,0,0,0,1,0"))
                                                                           (rule "times_zero_1" (formula "42") (term "0,1,0,0,0,0,0,0,1,0"))
                                                                           (rule "leq_literals" (formula "42") (term "1,0,0,0,0,0,0,1,0"))
                                                                           (builtin "One Step Simplification" (formula "42"))
                                                                           (rule "ifthenelse_split" (formula "46") (term "0,1,0"))
                                                                           (branch "self.a.length = 1 TRUE"
                                                                              (rule "replace_known_left" (formula "49") (term "0,0,1,0") (ifseqformula "1"))
                                                                              (builtin "One Step Simplification" (formula "49"))
                                                                              (rule "replace_known_left" (formula "48") (term "0,0,1,0") (ifseqformula "1"))
                                                                              (builtin "One Step Simplification" (formula "48"))
                                                                              (rule "applyEq" (formula "49") (term "0,1,0,0") (ifseqformula "1"))
                                                                              (rule "applyEq" (formula "48") (term "0,1,0,0") (ifseqformula "1"))
                                                                              (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "21"))
                                                                              (rule "mul_literals" (formula "21") (term "1,0"))
                                                                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                                              (rule "add_literals" (formula "21") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "21") (term "0,0"))
                                                                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                              (rule "mul_literals" (formula "12") (term "1,0"))
                                                                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                                              (rule "add_literals" (formula "12") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "12") (term "0,0"))
                                                                              (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "27"))
                                                                              (rule "true_left" (formula "27"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                                              (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "20"))
                                                                              (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "22"))
                                                                              (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "22") (term "0"))
                                                                              (rule "add_literals" (formula "22") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "22") (term "0"))
                                                                              (rule "leq_literals" (formula "22"))
                                                                              (rule "true_left" (formula "22"))
                                                                              (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "21"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "20"))
                                                                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "20") (term "0"))
                                                                              (rule "add_literals" (formula "20") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "20") (term "0"))
                                                                              (rule "qeq_literals" (formula "20"))
                                                                              (rule "true_left" (formula "20"))
                                                                              (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "11"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,0,0,1,1,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,1,1,0,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,1,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,0,0,1,1,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,0,0,1,1,0,1,1,0"))
                                                                              (rule "add_zero_right" (formula "42") (term "0,0,1,1,0,1,1,0"))
                                                                              (rule "applyEq" (formula "8") (term "1,0,0,0,0,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "33") (term "1,1,0,0,1,1,1,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEq" (formula "42") (term "1,1,0,1,0,1,1,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "45") (term "0,1,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "45") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "45") (term "1,0,0,0"))
                                                                              (rule "applyEq" (formula "33") (term "0,1,1,1,0,1,1,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,1,1,0,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "33") (term "1,1,0,1,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "33") (term "1,1,1,0,1,1,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "33") (term "1,1,0,1,1,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "42") (term "1,1,0,0,0,1,0,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "20") (term "0,1,0,2,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,2,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "20") (term "0,2,0,0,0"))
                                                                              (rule "add_literals" (formula "20") (term "1,0,2,0,0,0"))
                                                                              (rule "applyEq" (formula "31") (term "1,1,0,0,0,0,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "44") (term "0,1,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "44") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "44") (term "1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "44") (term "0,0,0"))
                                                                              (rule "jdiv_axiom_inline" (formula "44") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "div_literals" (formula "44") (term "0,0"))
                                                                              (rule "mul_literals" (formula "44") (term "0"))
                                                                              (rule "polySimp_homoEq" (formula "44"))
                                                                              (rule "times_zero_2" (formula "44") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "44") (term "0"))
                                                                              (rule "applyEq" (formula "42") (term "1,1,0,0,0,2,0,1,1,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "33") (term "0,1,1,1,0,0,1,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "33") (term "1,1,0,0,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "33") (term "1,1,1,0,0,1,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "33") (term "1,1,0,0,1,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,1,0,1,1,0,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_homoEq" (formula "42") (term "1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "0,1,1,0,0,1,1,0"))
                                                                              (rule "applyEq" (formula "42") (term "1,0,0,0,0,1,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "20") (term "0,1,0,2,2,1,3,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,2,2,1,3,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "20") (term "0,2,2,1,3,0,0,0"))
                                                                              (rule "add_literals" (formula "20") (term "1,0,2,2,1,3,0,0,0"))
                                                                              (rule "times_zero_1" (formula "20") (term "0,2,2,1,3,0,0,0"))
                                                                              (rule "applyEq" (formula "33") (term "0,2,1,0,1,1,1,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEq" (formula "33") (term "1,1,0,0,1,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "42") (term "0,1,1,0,0,0,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                              (rule "applyEq" (formula "42") (term "1,1,0,0,0,0,1,0,0,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "33") (term "1,0,0,0,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,1,0,0,1,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,0,0,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,0,0,1,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "20") (term "0,0,0,0,1,0") (ifseqformula "12"))
                                                                              (rule "applyEq" (formula "33") (term "1,1,0,0,1,0,1,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,1,0,1,0,1,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,0,1,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,0,1,0,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,0,1,0,1,0,1,0"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,2,0,1,1,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                              (rule "applyEq" (formula "33") (term "1,0,0,1,1,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "33") (term "1,1,0,0,1,1,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "40") (term "0,1,1,0,0,0,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "40") (term "1,0,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "40") (term "1,1,1,0,0,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "40") (term "1,1,0,0,0,0,1,0"))
                                                                              (rule "add_zero_right" (formula "40") (term "1,0,0,0,0,1,0"))
                                                                              (rule "applyEqRigid" (formula "33") (term "1,1,0,1,1,0,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,0,1,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "42") (term "1,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,1,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,1,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "add_zero_right" (formula "42") (term "1,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "56") (term "1,0,2,0") (ifseqformula "12"))
                                                                              (rule "applyEq" (formula "33") (term "1,1,0,0,1,0,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "33") (term "1,0,0,1,0,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "31") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "31") (term "1,1,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "31") (term "1,1,0,0,0,1,0"))
                                                                              (rule "applyEqRigid" (formula "40") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "40") (term "1,1,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "40") (term "1,1,1,0,0,0,1,0"))
                                                                              (rule "applyEq" (formula "8") (term "0,1,0,2,1,1,3,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,2,1,1,3,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "8") (term "0,2,1,1,3,0,0,0"))
                                                                              (rule "add_literals" (formula "8") (term "1,0,2,1,1,3,0,0,0"))
                                                                              (rule "times_zero_1" (formula "8") (term "0,2,1,1,3,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "42") (term "1,1,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,1,1,0,0,0,1,0"))
                                                                              (rule "applyEq" (formula "33") (term "0,0,1,1,1,0,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                              (rule "polySimp_homoEq" (formula "21"))
                                                                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "21") (term "0"))
                                                                              (rule "add_literals" (formula "21") (term "1,0"))
                                                                              (rule "applyEq" (formula "33") (term "0,0,1,0,1,0,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "33") (term "0,2,1,0,1,0,1,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,1,0,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,0,0,0,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "8") (term "0,1,0,2,2,1,3,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,2,2,1,3,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "8") (term "0,2,2,1,3,0,0,0"))
                                                                              (rule "add_literals" (formula "8") (term "1,0,2,2,1,3,0,0,0"))
                                                                              (rule "times_zero_1" (formula "8") (term "0,2,2,1,3,0,0,0"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,1,1,1,0,1,1,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0,1,1,1,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,1,0,1,1,1,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,1,1,0,1,1,1,1,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,1,1,0,1,1,1,1,1,0"))
                                                                              (rule "applyEq" (formula "33") (term "1,1,0,0,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEq" (formula "33") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "33") (term "1,1,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "33") (term "1,1,1,1,0,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "33") (term "1,1,0,0,0,1,0"))
                                                                              (rule "applyEqRigid" (formula "8") (term "0,1,0,2,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,2,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "8") (term "0,2,0,0,0"))
                                                                              (rule "add_literals" (formula "8") (term "1,0,2,0,0,0"))
                                                                              (rule "applyEq" (formula "33") (term "0,2,1,0,1,0,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEq" (formula "33") (term "1,0,0,0,0,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "33") (term "1,1,0,1,1,1,1,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEqRigid" (formula "33") (term "1,0,0,0,0") (ifseqformula "12"))
                                                                              (rule "applyEq" (formula "33") (term "0,1,1,1,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "33") (term "1,1,0,0,0"))
                                                                              (rule "add_literals" (formula "33") (term "1,1,1,1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "33") (term "1,1,1,0,0,0"))
                                                                              (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "33") (term "1,0,0,0,1,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "49") (term "0,1,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "49") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "49") (term "1,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "42") (term "0,1,1,0,1,0,0,1,1,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,0,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "1,0,1,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,0,1,0,0,1,1,0"))
                                                                              (rule "applyEq" (formula "20") (term "0,1,0,2,1,1,3,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,2,1,1,3,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "20") (term "0,2,1,1,3,0,0,0"))
                                                                              (rule "add_literals" (formula "20") (term "1,0,2,1,1,3,0,0,0"))
                                                                              (rule "times_zero_1" (formula "20") (term "0,2,1,1,3,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,0") (ifseqformula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "42") (term "1,1,0,0,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,1,1,1,0,0,0"))
                                                                              (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "12"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "11"))
                                                                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "11") (term "0"))
                                                                              (rule "add_literals" (formula "11") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "11") (term "0"))
                                                                              (rule "qeq_literals" (formula "11"))
                                                                              (rule "true_left" (formula "11"))
                                                                              (rule "applyEq" (formula "41") (term "0,1,1,0,0,1,1,1,0") (ifseqformula "11"))
                                                                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "41") (term "1,0,0,1,1,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,1,1,0,0,1,1,1,0"))
                                                                              (rule "times_zero_1" (formula "41") (term "1,1,0,0,1,1,1,0"))
                                                                              (rule "add_literals" (formula "41") (term "1,0,0,1,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "11"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "12"))
                                                                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "12") (term "0"))
                                                                              (rule "add_literals" (formula "12") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "12") (term "0"))
                                                                              (rule "leq_literals" (formula "12"))
                                                                              (rule "true_left" (formula "12"))
                                                                              (rule "applyEq" (formula "3") (term "1,0,0,0,0,0") (ifseqformula "11"))
                                                                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "11"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "36"))
                                                                              (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                                              (rule "add_literals" (formula "36") (term "1,1,0"))
                                                                              (rule "applyEq" (formula "4") (term "1,0,0,0,0,1,0") (ifseqformula "11"))
                                                                              (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "11"))
                                                                              (rule "applyEqRigid" (formula "40") (term "0,1,1,0,0,0,0,1,1,0") (ifseqformula "11"))
                                                                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "40") (term "1,0,0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "40") (term "1,1,1,0,0,0,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "40") (term "1,1,0,0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "40") (term "1,0,0,0,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "40") (term "0,1,1,1,0,0,1,0,1,1,0,0,1,1,0") (ifseqformula "11"))
                                                                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "40") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "40") (term "1,1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "40") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "40") (term "0,1,1,0,0,1,1,0"))
                                                                              (rule "applyEqRigid" (formula "42") (term "0,1,0") (ifseqformula "11"))
                                                                              (rule "polySimp_mulLiterals" (formula "42") (term "1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "42") (term "0"))
                                                                              (rule "add_literals" (formula "42") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "closeTrue" (formula "42"))
                                                                           )
                                                                           (branch "self.a.length = 1 FALSE"
                                                                              (rule "replace_known_right" (formula "48") (term "0,0,1,0") (ifseqformula "46"))
                                                                              (builtin "One Step Simplification" (formula "48"))
                                                                              (rule "replace_known_right" (formula "49") (term "0,0,1,0") (ifseqformula "46"))
                                                                              (builtin "One Step Simplification" (formula "49"))
                                                                              (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "46"))
                                                                              (rule "add_literals" (formula "26") (term "1"))
                                                                              (rule "inEqSimp_contradEq7" (formula "46") (ifseqformula "26"))
                                                                              (rule "mul_literals" (formula "46") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "46") (term "0,0"))
                                                                              (rule "leq_literals" (formula "46") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "46"))
                                                                              (rule "false_right" (formula "46"))
                                                                              (rule "cnf_rightDist" (formula "33") (term "0,1,1,1,0"))
                                                                              (rule "commute_or_2" (formula "33") (term "1,0,1,1,1,0"))
                                                                              (rule "cnf_rightDist" (formula "33") (term "1,1,1,1,0"))
                                                                              (rule "commute_or_2" (formula "33") (term "1,1,1,1,1,0"))
                                                                              (rule "shift_paren_or" (formula "33") (term "0,0,1,1,1,0"))
                                                                              (rule "commute_or_2" (formula "33") (term "0,0,0,1,1,1,0"))
                                                                              (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "shift_paren_or" (formula "33") (term "0,1,0,1,1,1,0"))
                                                                              (rule "inEqSimp_or_tautInEq2" (formula "33") (term "0,0,1,0,1,1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "33") (term "1,1,0,0,1,0,1,1,1,0"))
                                                                              (rule "add_literals" (formula "33") (term "0,1,1,0,0,1,0,1,1,1,0"))
                                                                              (rule "add_zero_left" (formula "33") (term "1,1,0,0,1,0,1,1,1,0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0,1,0,1,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "33") (term "0,1,0,0,1,0,1,1,1,0"))
                                                                              (rule "add_literals" (formula "33") (term "1,0,1,0,0,1,0,1,1,1,0"))
                                                                              (rule "times_zero_1" (formula "33") (term "0,1,0,0,1,0,1,1,1,0"))
                                                                              (rule "leq_literals" (formula "33") (term "1,0,0,1,0,1,1,1,0"))
                                                                              (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "methodCallEmpty" (formula "3") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "3"))
                                                                              (rule "cnf_rightDist" (formula "42") (term "0,1,1,1,1,1,0"))
                                                                              (rule "commute_or" (formula "42") (term "0,0,1,1,1,1,1,0"))
                                                                              (rule "cnf_rightDist" (formula "42") (term "0,1,0"))
                                                                              (rule "commute_or_2" (formula "42") (term "1,0,1,0"))
                                                                              (rule "shift_paren_or" (formula "33") (term "0,1,1,1,1,1,0"))
                                                                              (builtin "One Step Simplification" (formula "33"))
                                                                              (rule "emptyModality" (formula "9") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "9"))
                                                                              (rule "true_left" (formula "9"))
                                                                              (rule "emptyModality" (formula "8") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "8"))
                                                                              (rule "true_left" (formula "8"))
                                                                              (rule "shift_paren_or" (formula "40") (term "0,1,0,1,0"))
                                                                              (rule "commute_or" (formula "40") (term "0,0,1,0,1,0"))
                                                                              (rule "shift_paren_or" (formula "31") (term "0,1,1,1,1,0"))
                                                                              (rule "commute_or_2" (formula "31") (term "0,0,1,1,1,1,0"))
                                                                              (rule "inEqSimp_or_tautInEq2" (formula "31") (term "0,0,0,1,1,1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "31") (term "1,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "add_literals" (formula "31") (term "0,1,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "add_zero_left" (formula "31") (term "1,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0,0,1,1,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "31") (term "0,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "add_literals" (formula "31") (term "1,0,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "times_zero_1" (formula "31") (term "0,1,0,0,0,1,1,1,1,0"))
                                                                              (rule "leq_literals" (formula "31") (term "1,0,0,0,1,1,1,1,0"))
                                                                              (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "ifElseSplit" (formula "47"))
                                                                              (branch "if x_3880 true"
                                                                                 (builtin "One Step Simplification" (formula "48"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                              (branch "if x_3880 false"
                                                                                 (builtin "One Step Simplification" (formula "48"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "ifElse" (formula "44") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "44"))
                                                                                 (rule "methodCallReturn" (formula "7") (term "1"))
                                                                                 (rule "assignment" (formula "7") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "7"))
                                                                                 (rule "cnf_rightDist" (formula "40") (term "1,1,1,0"))
                                                                                 (rule "commute_or" (formula "40") (term "1,1,1,1,0"))
                                                                                 (rule "cnf_rightDist" (formula "40") (term "0,0,1,0"))
                                                                                 (rule "commute_or_2" (formula "40") (term "1,0,0,1,0"))
                                                                                 (rule "shift_paren_or" (formula "40") (term "0,1,1,1,0"))
                                                                                 (rule "commute_or_2" (formula "40") (term "0,0,1,1,1,0"))
                                                                                 (rule "shift_paren_or" (formula "40") (term "0,0,0,1,0"))
                                                                                 (rule "commute_or_2" (formula "40") (term "0,0,0,0,1,0"))
                                                                                 (rule "commute_or_2" (formula "40") (term "0,0,0,0,0,1,0"))
                                                                                 (rule "commute_or" (formula "40") (term "0,0,0,0,0,0,1,0"))
                                                                                 (rule "shift_paren_or" (formula "40") (term "0,1,0,0,1,0"))
                                                                                 (rule "shift_paren_or" (formula "40") (term "0,0,0,1,1,1,0"))
                                                                                 (rule "methodCallEmpty" (formula "4") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "4"))
                                                                                 (rule "methodCallEmpty" (formula "5") (term "1"))
                                                                                 (rule "methodCallEmpty" (formula "13") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "13"))
                                                                                 (rule "shift_paren_or" (formula "40") (term "0,0,1,0,0,1,0"))
                                                                                 (builtin "One Step Simplification" (formula "40"))
                                                                                 (rule "methodCallEmpty" (formula "14") (term "1"))
                                                                                 (rule "shift_paren_or" (formula "40") (term "0,0,0,0,1,1,1,0"))
                                                                                 (rule "commute_or" (formula "40") (term "0,0,0,0,0,1,1,1,0"))
                                                                                 (builtin "One Step Simplification" (formula "40"))
                                                                                 (rule "methodCallReturn" (formula "6") (term "1"))
                                                                                 (rule "assignment" (formula "6") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "6"))
                                                                                 (rule "methodCallReturn" (formula "15") (term "1"))
                                                                                 (rule "assignment" (formula "15") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "15"))
                                                                                 (rule "methodCallReturn" (formula "16") (term "1"))
                                                                                 (rule "assignment" (formula "16") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "16"))
                                                                                 (rule "methodCallEmpty" (formula "2") (term "1"))
                                                                                 (rule "cnf_rightDist" (formula "40") (term "1,1,1,1,0"))
                                                                                 (rule "commute_or_2" (formula "40") (term "1,1,1,1,1,0"))
                                                                                 (rule "shift_paren_or" (formula "40") (term "0,1,1,1,1,1,0"))
                                                                                 (rule "commute_or" (formula "40") (term "0,0,1,1,1,1,1,0"))
                                                                                 (rule "shift_paren_and" (formula "31") (term "0,1,1,0"))
                                                                                 (rule "cnf_rightDist" (formula "40") (term "0,1,1,1,1,0"))
                                                                                 (rule "commute_or_2" (formula "40") (term "1,0,1,1,1,1,0"))
                                                                                 (rule "shift_paren_or" (formula "40") (term "0,0,1,1,1,1,0"))
                                                                                 (rule "commute_or_2" (formula "40") (term "0,0,0,1,1,1,1,0"))
                                                                                 (rule "commute_or" (formula "40") (term "0,0,0,0,1,1,1,1,0"))
                                                                                 (rule "shift_paren_or" (formula "40") (term "0,1,0,1,1,1,1,0"))
                                                                                 (rule "inEqSimp_or_tautInEq0" (formula "40") (term "0,0,1,0,1,1,1,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "40") (term "1,1,0,0,1,0,1,1,1,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "40") (term "0,1,1,0,0,1,0,1,1,1,1,0"))
                                                                                 (rule "add_literals" (formula "40") (term "0,0,1,1,0,0,1,0,1,1,1,1,0"))
                                                                                 (rule "add_zero_left" (formula "40") (term "0,1,1,0,0,1,0,1,1,1,1,0"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "40") (term "1,0,0,1,0,1,1,1,1,0"))
                                                                                 (rule "polySimp_pullOutFactor1" (formula "40") (term "0,1,0,0,1,0,1,1,1,1,0"))
                                                                                 (rule "add_literals" (formula "40") (term "1,0,1,0,0,1,0,1,1,1,1,0"))
                                                                                 (rule "times_zero_1" (formula "40") (term "0,1,0,0,1,0,1,1,1,1,0"))
                                                                                 (rule "leq_literals" (formula "40") (term "1,0,0,1,0,1,1,1,1,0"))
                                                                                 (builtin "One Step Simplification" (formula "40"))
                                                                                 (rule "emptyModality" (formula "3") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "3"))
                                                                                 (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "3"))
                                                                                 (rule "applyEqRigid" (formula "2") (term "0,0") (ifseqformula "3"))
                                                                                 (rule "jmod_axiom" (formula "3") (term "0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                                                 (rule "polySimp_sepNegMonomial" (formula "3") (term "0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                                                                 (rule "shift_paren_and" (formula "31") (term "1,1,0"))
                                                                                 (rule "cnf_rightDist" (formula "31") (term "0"))
                                                                                 (rule "distr_forallAnd" (formula "31"))
                                                                                 (rule "andLeft" (formula "31"))
                                                                                 (rule "commute_or" (formula "32") (term "0"))
                                                                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                                                                 (rule "commute_or_2" (formula "31") (term "0,0"))
                                                                                 (rule "shift_paren_or" (formula "31") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "31"))
                                                                                 (rule "cnf_rightDist" (formula "32") (term "0"))
                                                                                 (rule "distr_forallAnd" (formula "32"))
                                                                                 (rule "andLeft" (formula "32"))
                                                                                 (rule "commute_or_2" (formula "33") (term "0"))
                                                                                 (rule "shift_paren_or" (formula "33") (term "0,0"))
                                                                                 (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                                                                 (rule "shift_paren_or" (formula "33") (term "0,0,0,0"))
                                                                                 (rule "inEqSimp_or_tautInEq2" (formula "33") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "33") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "33") (term "0,1,1,0,0,0,0,0"))
                                                                                 (rule "add_zero_left" (formula "33") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1" (formula "33") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "33") (term "1,0,1,0,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "33") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "leq_literals" (formula "33") (term "1,0,0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "33"))
                                                                                 (rule "true_left" (formula "33"))
                                                                                 (rule "cnf_rightDist" (formula "32") (term "0"))
                                                                                 (rule "distr_forallAnd" (formula "32"))
                                                                                 (rule "andLeft" (formula "32"))
                                                                                 (rule "commute_or_2" (formula "33") (term "0"))
                                                                                 (rule "shift_paren_or" (formula "33") (term "0,0"))
                                                                                 (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                                                                 (rule "shift_paren_or" (formula "33") (term "0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "33"))
                                                                                 (rule "jdiv_axiom" (formula "45") (term "0,0"))
                                                                                 (rule "eqSymm" (formula "1"))
                                                                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                                                                 (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                                                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0,2,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,2,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,2,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "18"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "eqSymm" (formula "1"))
                                                                                 (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "1"))
                                                                                 (rule "polyDiv_pullOut" (formula "46") (term "0,0") (inst "polyDivCoeff=mul(k_29, Z(neglit(2(#))))"))
                                                                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,2,0,0"))
                                                                                 (rule "equal_literals" (formula "46") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "46"))
                                                                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0,0"))
                                                                                 (rule "add_literals" (formula "46") (term "1,1,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "46") (term "0"))
                                                                                 (rule "polySimp_addComm0" (formula "46") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "46") (term "0"))
                                                                                 (rule "polySimp_homoEq" (formula "46"))
                                                                                 (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "46") (term "0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                                                 (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                                                                                 (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "46") (term "1,0,0"))
                                                                                 (rule "polySimp_sepNegMonomial" (formula "46"))
                                                                                 (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                                 (rule "polyDiv_pullOut" (formula "1") (term "1") (inst "polyDivCoeff=mul(k_29, Z(neglit(2(#))))"))
                                                                                 (rule "equal_literals" (formula "1") (term "0,1"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                                                                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1"))
                                                                                 (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1"))
                                                                                 (rule "polySimp_addComm0" (formula "1") (term "1"))
                                                                                 (rule "polyDiv_pullOut" (formula "1") (term "1,1") (inst "polyDivCoeff=mul(l_338, Z(2(#)))"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,1,1"))
                                                                                 (rule "equal_literals" (formula "1") (term "0,1,1"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,1"))
                                                                                 (rule "polySimp_addComm0" (formula "1") (term "1,1"))
                                                                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1"))
                                                                                 (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,1,1"))
                                                                                 (rule "add_literals" (formula "1") (term "1,0,0,1,1,1"))
                                                                                 (rule "times_zero_1" (formula "1") (term "0,0,1,1,1"))
                                                                                 (rule "add_zero_left" (formula "1") (term "0,1,1,1"))
                                                                                 (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                                                 (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                                                                                 (rule "polyDiv_pullOut" (formula "46") (term "0,0") (inst "polyDivCoeff=mul(l_338, Z(2(#)))"))
                                                                                 (rule "equal_literals" (formula "46") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "46"))
                                                                                 (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "46") (term "0"))
                                                                                 (rule "polySimp_addComm0" (formula "46") (term "1,0"))
                                                                                 (rule "polySimp_addComm1" (formula "46") (term "0,1,1,0"))
                                                                                 (rule "polySimp_pullOutFactor0" (formula "46") (term "0,0,1,1,0"))
                                                                                 (rule "add_literals" (formula "46") (term "1,0,0,1,1,0"))
                                                                                 (rule "times_zero_1" (formula "46") (term "0,0,1,1,0"))
                                                                                 (rule "add_zero_left" (formula "46") (term "0,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "46") (term "0"))
                                                                                 (rule "polySimp_homoEq" (formula "46"))
                                                                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                                                 (rule "polySimp_mulAssoc" (formula "46") (term "0,1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "46") (term "0,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0"))
                                                                                 (rule "polySimp_mulAssoc" (formula "46") (term "0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                                                 (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                                                 (rule "polySimp_pullOutFactor0" (formula "46") (term "0,0,0"))
                                                                                 (rule "add_literals" (formula "46") (term "1,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "46") (term "0,0,0"))
                                                                                 (rule "add_zero_left" (formula "46") (term "0,0"))
                                                                                 (rule "polySimp_sepNegMonomial" (formula "46"))
                                                                                 (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                                 (rule "cnf_rightDist" (formula "33") (term "0"))
                                                                                 (rule "distr_forallAnd" (formula "33"))
                                                                                 (rule "andLeft" (formula "33"))
                                                                                 (rule "shift_paren_and" (formula "44") (term "1,1,1,0"))
                                                                                 (rule "jdiv_axiom" (formula "46") (term "0,0"))
                                                                                 (rule "eqSymm" (formula "1"))
                                                                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                                                                 (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                                                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,0,2,0"))
                                                                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0,2,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,2,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,2,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                                                 (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "10"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "eqSymm" (formula "1"))
                                                                                 (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "1"))
                                                                                 (rule "polyDiv_pullOut" (formula "47") (term "0,0") (inst "polyDivCoeff=mul(k_29, Z(neglit(1(#))))"))
                                                                                 (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0,0,2,0,0"))
                                                                                 (rule "equal_literals" (formula "47") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "47"))
                                                                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,0,0"))
                                                                                 (rule "add_literals" (formula "47") (term "1,1,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "47") (term "0"))
                                                                                 (rule "polySimp_addComm0" (formula "47") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "47") (term "0"))
                                                                                 (rule "polySimp_homoEq" (formula "47"))
                                                                                 (rule "polySimp_mulComm0" (formula "47") (term "0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "47") (term "0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                                                 (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                                                                 (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "47") (term "1,0,0"))
                                                                                 (rule "polySimp_sepNegMonomial" (formula "47"))
                                                                                 (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                 (rule "polyDiv_pullOut" (formula "1") (term "1") (inst "polyDivCoeff=mul(k_29, Z(neglit(1(#))))"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,1"))
                                                                                 (rule "equal_literals" (formula "1") (term "0,1"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                                                                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1"))
                                                                                 (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,0,1"))
                                                                                 (rule "polySimp_addComm0" (formula "1") (term "1"))
                                                                                 (rule "polyDiv_pullOut" (formula "1") (term "1,1") (inst "polyDivCoeff=l_338"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,1,1"))
                                                                                 (rule "equal_literals" (formula "1") (term "0,1,1"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1"))
                                                                                 (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,1,1"))
                                                                                 (rule "add_literals" (formula "1") (term "1,0,0,0,1,1"))
                                                                                 (rule "times_zero_1" (formula "1") (term "0,0,0,1,1"))
                                                                                 (rule "add_zero_left" (formula "1") (term "0,0,1,1"))
                                                                                 (rule "polySimp_addComm0" (formula "1") (term "1,1"))
                                                                                 (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                                                 (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                                                                                 (rule "polyDiv_pullOut" (formula "47") (term "0,0") (inst "polyDivCoeff=l_338"))
                                                                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,2,0,0"))
                                                                                 (rule "equal_literals" (formula "47") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "47"))
                                                                                 (rule "polySimp_mulComm0" (formula "47") (term "0"))
                                                                                 (rule "polySimp_addComm0" (formula "47") (term "1,0"))
                                                                                 (rule "polySimp_addComm1" (formula "47") (term "0,1,1,0"))
                                                                                 (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0,1,1,0"))
                                                                                 (rule "add_literals" (formula "47") (term "1,0,0,1,1,0"))
                                                                                 (rule "times_zero_1" (formula "47") (term "0,0,1,1,0"))
                                                                                 (rule "add_zero_left" (formula "47") (term "0,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "47") (term "0"))
                                                                                 (rule "polySimp_homoEq" (formula "47"))
                                                                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "47") (term "0,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                                                                 (rule "polySimp_mulAssoc" (formula "47") (term "0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "47") (term "0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                                                 (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                                                 (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0,0"))
                                                                                 (rule "add_literals" (formula "47") (term "1,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "47") (term "0,0,0"))
                                                                                 (rule "add_zero_left" (formula "47") (term "0,0"))
                                                                                 (rule "polySimp_sepNegMonomial" (formula "47"))
                                                                                 (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                 (rule "methodCallEmpty" (formula "9") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "9"))
                                                                                 (rule "ifthenelse_to_or_left" (formula "45") (term "1,0,0,0,1,1,0"))
                                                                                 (rule "nnf_notAnd" (formula "45") (term "0,0,1,0,0,0,1,1,0"))
                                                                                 (builtin "One Step Simplification" (formula "45"))
                                                                                 (rule "nnf_notAnd" (formula "45") (term "0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "add_literals" (formula "45") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "add_zero_left" (formula "45") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulAssoc" (formula "45") (term "0,1,0,0,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,0,0,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "45") (term "0,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "mul_literals" (formula "45") (term "0,0,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                 (rule "emptyModality" (formula "6") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "6"))
                                                                                 (rule "eqSymm" (formula "6"))
                                                                                 (builtin "One Step Simplification" (formula "6"))
                                                                                 (rule "notLeft" (formula "6"))
                                                                                 (rule "emptyModality" (formula "6") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "6"))
                                                                                 (rule "eqSymm" (formula "6"))
                                                                                 (builtin "One Step Simplification" (formula "6"))
                                                                                 (rule "notLeft" (formula "6"))
                                                                                 (rule "emptyModality" (formula "13") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "13"))
                                                                                 (rule "eqSymm" (formula "13"))
                                                                                 (builtin "One Step Simplification" (formula "13"))
                                                                                 (rule "notLeft" (formula "13"))
                                                                                 (rule "replace_known_right" (formula "15") (term "0,0,3,0,0,0") (ifseqformula "44"))
                                                                                 (builtin "One Step Simplification" (formula "15"))
                                                                                 (rule "emptyModality" (formula "13") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "13"))
                                                                                 (rule "eqSymm" (formula "13"))
                                                                                 (builtin "One Step Simplification" (formula "13"))
                                                                                 (rule "notLeft" (formula "13"))
                                                                                 (rule "methodCallEmpty" (formula "6") (term "1"))
                                                                                 (rule "methodCallEmpty" (formula "13") (term "1"))
                                                                                 (rule "emptyModality" (formula "4") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "4"))
                                                                                 (rule "notLeft" (formula "4"))
                                                                                 (rule "apply_eq_boolean_rigid" (formula "4") (term "1") (ifseqformula "42"))
                                                                                 (builtin "One Step Simplification" (formula "4"))
                                                                                 (rule "notLeft" (formula "4"))
                                                                                 (rule "apply_eq_boolean" (formula "5") (term "0,0") (ifseqformula "42"))
                                                                                 (rule "commute_or_2" (formula "29") (term "0"))
                                                                                 (rule "ifElse" (formula "49") (term "1"))
                                                                                 (builtin "One Step Simplification" (formula "49"))
                                                                                 (rule "ifElseSplit" (formula "50"))
                                                                                 (branch "if x_3881 true"
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "closeFalse" (formula "1"))
                                                                                 )
                                                                                 (branch "if x_3881 false"
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (builtin "One Step Simplification" (formula "51"))
                                                                                    (rule "true_left" (formula "1"))
                                                                                    (rule "ifElseUnfold" (formula "51") (term "1") (inst "#boolv=x_2"))
                                                                                    (rule "variableDeclaration" (formula "51") (term "1") (newnames "x_3885"))
                                                                                    (rule "cnf_rightDist" (formula "28") (term "0"))
                                                                                    (rule "ifElseUnfold" (formula "48") (term "1") (inst "#boolv=x_2"))
                                                                                    (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_3886"))
                                                                                    (rule "commute_or" (formula "39") (term "1,1,0,0,0,1,1,0"))
                                                                                    (rule "distr_forallAnd" (formula "28"))
                                                                                    (rule "andLeft" (formula "28"))
                                                                                    (rule "commute_or_2" (formula "29") (term "0"))
                                                                                    (rule "shift_paren_or" (formula "30") (term "0,0"))
                                                                                    (rule "shift_paren_or" (formula "28") (term "0"))
                                                                                    (rule "commute_or_2" (formula "28") (term "0,0"))
                                                                                    (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                                                                    (rule "inEqSimp_or_tautInEq0" (formula "28") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "28") (term "0,1,1,0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "28") (term "1,1,0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "28") (term "1,0,1,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "28") (term "0,1,0,0,0,0"))
                                                                                    (rule "leq_literals" (formula "28") (term "1,0,0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "28"))
                                                                                    (rule "true_left" (formula "28"))
                                                                                    (rule "shift_paren_or" (formula "28") (term "0,0"))
                                                                                    (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                                                                    (rule "commute_or_2" (formula "29") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_or_tautInEq2" (formula "29") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "29") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "29") (term "0,1,1,0,0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "29") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "29") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "29") (term "1,0,1,0,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "29") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "leq_literals" (formula "29") (term "1,0,0,0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "29"))
                                                                                    (rule "true_left" (formula "29"))
                                                                                    (rule "ifthenelse_to_or_left" (formula "38") (term "1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "38") (term "1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "38") (term "1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "times_zero_2" (formula "38") (term "1,0,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "add_zero_right" (formula "38") (term "0,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "38") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "times_zero_1" (formula "38") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "add_zero_right" (formula "38") (term "0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "38") (term "1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_invertEq" (formula "38") (term "1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "times_zero_2" (formula "38") (term "1,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "38") (term "0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "38") (term "0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                                                                    (rule "cnf_rightDist" (formula "38") (term "1,1,0,0,0,1,1,0"))
                                                                                    (rule "div_axiom" (formula "2") (term "1,1") (inst "quotient=quotient_55"))
                                                                                    (rule "equal_literals" (formula "2") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "mul_literals" (formula "2") (term "1,1,1,1"))
                                                                                    (rule "qeq_literals" (formula "2") (term "0,1"))
                                                                                    (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "andLeft" (formula "2"))
                                                                                    (rule "andLeft" (formula "2"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "1"))
                                                                                    (rule "add_literals" (formula "4") (term "0,1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "3"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                                    (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "2"))
                                                                                    (rule "eqSymm" (formula "49"))
                                                                                    (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "2"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "1"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                                                                                    (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "2"))
                                                                                    (rule "polySimp_addComm1" (formula "5") (term "1"))
                                                                                    (rule "polySimp_addComm0" (formula "5") (term "0,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                                    (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "49"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "49") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulAssoc" (formula "49") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "49") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                                                                    (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "49") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "49") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "49"))
                                                                                    (rule "false_right" (formula "49"))
                                                                                    (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "4"))
                                                                                    (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "applyEq" (formula "42") (term "0,1,0,0,1,1,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,1,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "0,0,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1,1,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,0,0,0,1,1,0,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "42") (term "0,0,0,1,1,0,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "42") (term "0,1,1,0,1,1,1,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,1,1,1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "1,0,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,1,1,1,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,0,1,0,1,1,1,0,0,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "42") (term "0,1,0,1,1,1,0,0,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "3"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "10"))
                                                                                    (rule "applyEqRigid" (formula "29") (term "1,1,0,0,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "29") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "29") (term "0,1,0,0,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "42") (term "1,1,0,1,0,1,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,1,0,1,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,0,1,1,1,1,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0,0,0,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,1,0,0,0,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,1,0,0,0,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0,0,0,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,0,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,0,1,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,1,0,0,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,1,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "1,1,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "0,1,1,0,0,0,1,0,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,0,1,1,0,0,0,1,0,1,0"))
                                                                                    (rule "applyEq" (formula "42") (term "1,1,0,0,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "1,0,0,0,0,0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "42") (term "0,1,1,1,1,0,1,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,1,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,1,1,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,1,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,1,1,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "42") (term "1,1,1,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "42") (term "0,1,0,0,1,0,1,1,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "42") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "16") (term "0,0,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,1,0,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0,0,1,0,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,1,0,0,1,0,1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0,0,1,0,1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,1,0,0,1,0,1,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "1,1,0,0,1,0,1,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "0,1,1,0,0,1,0,1,1,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,0,1,1,0,0,1,0,1,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "42") (term "0,1,1,0,0,1,0,1,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,1,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0,0,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,1,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "1,1,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "0,1,1,0,0,0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,0,1,1,0,0,0,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "31") (term "0,1,1,1,0,0,0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "31") (term "1,1,1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "31") (term "1,1,1,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,1,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "31") (term "0,1,1,1,0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "31") (term "1,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "31") (term "0,1,1,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "31") (term "0,0,1,1,0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "31") (term "0,1,1,0,0,0,0"))
                                                                                    (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,1,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "0,1,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,0,1,1,0,0,0"))
                                                                                    (rule "applyEqRigid" (formula "32") (term "1,1,0,0,0,0") (ifseqformula "3"))
                                                                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                                                                    (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,2,0,1,0,1,1,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0,0,2,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,1,0,0,2,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,1,0,0,2,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0,0,2,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,2,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "16") (term "0,1,0,2,0,0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,2,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,2,0,0,0"))
                                                                                    (rule "mul_literals" (formula "16") (term "0,1,0,2,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,2,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "16") (term "0,2,0,0,0"))
                                                                                    (rule "applyEqRigid" (formula "42") (term "1,1,0,0,0,2,0,1,1,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "1,0,0,0,2,0,1,1,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,1,0,0,0,2,0,1,1,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,2,0,1,1,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "42") (term "1,1,0,0,2,0,1,1,0,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "32") (term "1,1,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "32") (term "1,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "32") (term "0,1,0,0,1,0"))
                                                                                    (rule "applyEqRigid" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                                                    (rule "applyEqRigid" (formula "32") (term "0,1,1,1,0,0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "32") (term "1,1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "32") (term "0,1,1,1,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "32") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "32") (term "0,1,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "32") (term "0,0,1,1,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "32") (term "0,1,1,0,0,0"))
                                                                                    (rule "applyEq" (formula "42") (term "1,0,0,0,0,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "applyEqRigid" (formula "42") (term "1,1,0,0,0,1,0,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "1,0,0,0,1,0,1,1,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,1,0,0,0,1,0,1,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "42") (term "0,1,1,0,1,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "42") (term "1,0,1,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "17") (term "0"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "0"))
                                                                                    (rule "mul_literals" (formula "17") (term "0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "17"))
                                                                                    (rule "applyEqRigid" (formula "42") (term "1,0,0,0,0,0,0,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "applyEqRigid" (formula "33") (term "0,1,1,1,0,0,0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,1,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,1,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "0,1,1,1,0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "33") (term "1,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1,1,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "33") (term "0,0,1,1,0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "33") (term "0,1,1,0,0,0,0"))
                                                                                    (rule "applyEq" (formula "42") (term "1,1,0,0,0,2,0,1,0,1,1,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "1,0,0,0,2,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,1,0,0,0,2,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "42") (term "0,1,1,0,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "42") (term "1,0,0,0,1,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "60") (term "1,0,2,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "60") (term "0,2,0"))
                                                                                    (rule "add_literals" (formula "60") (term "0,0,2,0"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "applyEqRigid" (formula "29") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "0,1,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "29") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "applyEqRigid" (formula "32") (term "0,2,1,0,1,0") (ifseqformula "3"))
                                                                                    (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                                                    (rule "applyEqRigid" (formula "32") (term "1,0,0,0,0,0,0") (ifseqformula "3"))
                                                                                    (rule "applyEqRigid" (formula "44") (term "1,0,0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                                                                    (rule "applyEqRigid" (formula "42") (term "0,1,1,0,0,1,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "42") (term "1,0,0,1,0,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "2") (term "0,0") (ifseqformula "3"))
                                                                                    (rule "applyEq" (formula "42") (term "1,1,0,0,0,0,1,1,1,1,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "1,0,0,0,0,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,1,0,0,0,0,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "42") (term "0,1,1,1,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0,0,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,1,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "1,1,0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "0,1,1,0,0,1,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,0,1,1,0,0,1,0,0,1,0"))
                                                                                    (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "3"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                                                    (rule "add_literals" (formula "5") (term "1,0"))
                                                                                    (rule "times_zero_1" (formula "5") (term "0"))
                                                                                    (rule "qeq_literals" (formula "5"))
                                                                                    (rule "true_left" (formula "5"))
                                                                                    (rule "applyEqRigid" (formula "41") (term "0,1,1,1,0,0,0,0,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,1,0,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,1,0,0,0,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "41") (term "0,1,1,1,0,0,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "41") (term "1,1,0,0,0,0,0,0,1,0"))
                                                                                    (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                                                    (rule "applyEqRigid" (formula "41") (term "0,1,1,0,0,0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "41") (term "1,0,0,0,0"))
                                                                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                                    (rule "add_literals" (formula "4") (term "1,0"))
                                                                                    (rule "times_zero_1" (formula "4") (term "0"))
                                                                                    (rule "leq_literals" (formula "4"))
                                                                                    (rule "true_left" (formula "4"))
                                                                                    (rule "applyEqRigid" (formula "51") (term "0,1,0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "51") (term "0,0"))
                                                                                    (rule "applyEqRigid" (formula "14") (term "0,1,0,2,1,1,3,0,0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,2,1,1,3,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,2,1,1,3,0,0,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "0,1,0,2,1,1,3,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,2,1,1,3,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "14") (term "0,2,1,1,3,0,0,0"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,1,1,0,0,0,0,0,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,0,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,0,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,0,0,0,1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,0,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "1,1,0,0,0,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,1,1,0,0,0,0,0,1,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,1,1,0,0,0,0,0,1,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,1,1,0,0,0,0,0,1,1,1,0"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,1,0,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "1,0,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,0,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,1,0,0,0,0,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,1,0,0,0,0,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "0,1,1,0,0,1,1,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "40") (term "1,0,0,1,1,0,0,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "30") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "30") (term "0,1,1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "30") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "36"))
                                                                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                                                                    (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                                                                    (rule "add_literals" (formula "36") (term "0,0,0"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,1,0,0,0,0,1,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "40") (term "1,0,0,0,0,1,0,1,0"))
                                                                                    (rule "applyEqRigid" (formula "38") (term "0,1,1,0,0,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "38") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "38") (term "0,0,1,0,0,0,0,1,0"))
                                                                                    (rule "add_zero_left" (formula "38") (term "0,1,0,0,0,0,1,0"))
                                                                                    (rule "applyEqRigid" (formula "14") (term "0,1,0,2,2,1,3,0,0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,2,2,1,3,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,2,2,1,3,0,0,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "0,1,0,2,2,1,3,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,2,2,1,3,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "14") (term "0,2,2,1,3,0,0,0"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,1,0,0,0,1,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,1,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "1,0,0,0,1,1,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,0,0,1,1,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,1,0,0,0,1,1,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,1,0,0,0,1,1,1,1,0"))
                                                                                    (rule "applyEq" (formula "16") (term "0,1,1") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "16") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "16") (term "1"))
                                                                                    (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                                                                                    (rule "add_literals" (formula "16") (term "0,0,1"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "0,1,1,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,1,1,0,0,0,1,0,0,0,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "9") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                                                    (rule "polySimp_addAssoc" (formula "9") (term "0,1"))
                                                                                    (rule "add_literals" (formula "9") (term "0,0,1"))
                                                                                    (rule "add_zero_left" (formula "9") (term "0,1"))
                                                                                    (rule "applyEq" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,0,1,0,0,1,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,0,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "35") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "35") (term "1"))
                                                                                    (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "10") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "10") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "10") (term "1"))
                                                                                    (rule "polySimp_addAssoc" (formula "10") (term "0,1"))
                                                                                    (rule "add_literals" (formula "10") (term "0,0,1"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "0,1,0,1,1,0,0,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,1,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,1,1,0,0,1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,0,1,1,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,1,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "0,1,1,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,0,0,1,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,0,1,1,0,0,1,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,0,1,1,0,0,1,1,1,0"))
                                                                                    (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "1"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0,1"))
                                                                                    (rule "applyEq" (formula "40") (term "1,1,0,0,0,2,1,1,1,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0,2,1,1,1,1,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,1,0,0,0,2,1,1,1,1,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "0,1,1,1,0,0,2,1,1,1,0,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,2,1,1,1,0,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,2,1,1,1,0,1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,2,1,1,1,0,1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,2,1,1,1,0,1,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0,2,1,1,1,0,1,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "0,1,1,1,0,0,2,1,1,1,1,1,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,2,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,2,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,2,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,2,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0,2,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,1,1,0,0,2,1,1,0,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,2,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,2,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,2,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,2,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0,2,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,0,1,1,1,1,1,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,0,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "0,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,0,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,0,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "34") (term "0,1,1") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "34") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "34") (term "1"))
                                                                                    (rule "applyEqRigid" (formula "31") (term "0,2,1,1,0") (ifseqformula "3"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "0,1,1,1,0,0,2,1,0,0,1,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,2,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,2,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,2,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,2,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0,2,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "1,1,0,0,0,2,1,1,0,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0,2,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,1,0,0,0,2,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "20") (term "0,1,1") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "20") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "20") (term "1"))
                                                                                    (rule "applyEqRigid" (formula "30") (term "0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "applyEqRigid" (formula "25") (term "0,1,1") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "25") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "0,1,0,1,1,1,1,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,0,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "0,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,0,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,0,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,0,1,1,0,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,0,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "0,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,0,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,0,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,1,1,0,0,2,1,1,0,0,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,2,1,1,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,2,1,1,0,0,1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,2,1,1,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,2,1,1,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0,2,1,1,0,0,1,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "0,1,1,1,0,0,2,1,1,1,1,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,2,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,2,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,2,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,2,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0,2,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "1,1,0,0,0,2,1,1,1,1,1,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0,2,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,1,0,0,0,2,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,0,1,1,1,0,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,1,1,0,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,1,1,1,0,1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,0,1,1,1,0,1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,1,1,0,1,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "0,1,1,1,0,1,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,1,0,1,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,0,1,1,1,0,1,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,0,1,1,1,0,1,1,1,0"))
                                                                                    (rule "applyEq" (formula "40") (term "1,1,0,0,0,2,1,0,0,1,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0,2,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,1,0,0,0,2,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "4") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "4") (term "1"))
                                                                                    (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "4") (term "0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,1"))
                                                                                    (rule "add_literals" (formula "4") (term "1,1,0,1"))
                                                                                    (rule "applyEqRigid" (formula "42") (term "1,1") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "1"))
                                                                                    (rule "add_literals" (formula "42") (term "0,1"))
                                                                                    (rule "applyEq" (formula "14") (term "0,1,0,2,0,3,0,0,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,2,0,3,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,2,0,3,0,0,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "0,1,0,2,0,3,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,2,0,3,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "14") (term "0,2,0,3,0,0,0"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "1,1,0,0,0,2,1,1,1,1,1,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0,2,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,1,0,0,0,2,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,1,1,0,0,2,1,1,1,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,2,1,1,1,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,2,1,1,1,1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,2,1,1,1,1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,2,1,1,1,1,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0,2,1,1,1,1,1,1,0"))
                                                                                    (rule "applyEq" (formula "40") (term "1,1,0,0,0,2,1,1,1,0,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0,2,1,1,1,0,1,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,1,0,0,0,2,1,1,1,0,1,1,1,0"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,0,1,1,1,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,1,1,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,1,1,1,1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,0,1,1,1,1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,1,1,1,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "0,1,1,1,1,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,1,1,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,0,1,1,1,1,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,0,1,1,1,1,1,1,0"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "1,1,0,0,0,2,1,1,0,0,1,1,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0,2,1,1,0,0,1,1,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,1,0,0,0,2,1,1,0,0,1,1,1,0"))
                                                                                    (rule "applyEq" (formula "58") (term "1,0,2,1") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "58") (term "0,2,1"))
                                                                                    (rule "add_literals" (formula "58") (term "0,0,2,1"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "0,1,0,0,1,1,1,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,1,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,1,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,1,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,1,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "0,0,1,1,1,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,1,1,0,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,0,0,1,1,1,0,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,0,0,1,1,1,0,1,0"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "1,1,0,0,0,2,0,1,1,1,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0,2,0,1,1,1,0,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,1,0,0,0,2,0,1,1,1,0,1,0"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,0,0,1,1,1,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "0,0,1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,1,1,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,0,0,1,1,1,0,0,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,0,0,1,1,1,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,0,0,1,1,0,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "40") (term "0,0,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,1,0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,0,0,0,1,1,0,0,0,1,0"))
                                                                                    (rule "add_zero_left" (formula "40") (term "0,0,0,1,1,0,0,0,1,0"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "1,1,0,0,0,2,0,1,1,1,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0,2,0,1,1,1,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,1,0,0,0,2,0,1,1,1,0,0,1,0"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "0,1,1,1,0,0,2,0,1,1,0,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,2,0,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,2,0,1,1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,2,0,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,2,0,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0,2,0,1,1,0,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "40") (term "1,1,0,0,0,2,0,1,1,0,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0,2,0,1,1,0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "0,1,0,0,0,2,0,1,1,0,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "40") (term "0,1,1,1,0,0,2,0,1,1,1,0,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,2,0,1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,2,0,1,1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,2,0,1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,2,0,1,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0,2,0,1,1,1,0,0,1,0"))
                                                                                    (rule "applyEqRigid" (formula "40") (term "0,1,1,1,0,0,2,0,1,1,1,0,1,0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,2,0,1,1,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,2,0,1,1,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,2,0,1,1,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,2,0,1,1,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0,2,0,1,1,1,0,1,0"))
                                                                                    (rule "applyEqRigid" (formula "29") (term "0,1,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "applyEq" (formula "29") (term "0,2,0,0,0,1,1,0") (ifseqformula "3"))
                                                                                    (rule "bsum_induction_lower2_concrete" (formula "31") (term "0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "31") (term "0,1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "31") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,1,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,1,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1,1,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                                    (rule "mul_literals" (formula "12") (term "1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                                                    (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "36") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "36") (term "0,1"))
                                                                                    (rule "bsum_induction_lower2_concrete" (formula "30") (term "1,1,0"))
                                                                                    (rule "eqSymm" (formula "30") (term "1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "30") (term "0,1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "30") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,1,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,1,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,1,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "30") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,1,0"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "31") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "31") (term "0,1,1,0"))
                                                                                    (rule "bsum_induction_lower2_concrete" (formula "29") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "29") (term "1,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "29") (term "0,1,1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "29") (term "1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "30") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "30") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "30") (term "0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "30") (term "0,1,1,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "29") (term "1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "31") (term "0,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "30") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "30") (term "1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "30") (term "1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,0"))
                                                                                    (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_55") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "leq_literals" (formula "12") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "12") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "12") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=mul(l_338, Z(2(#)))") (inst "elimGcdRightDiv=add(Z(2(#)), mul(quotient_55, Z(3(#))))"))
                                                                                    (rule "leq_literals" (formula "15") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                                                    (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "15") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "15") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_338") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_55)"))
                                                                                    (rule "leq_literals" (formula "8") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "8") (term "0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "8") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "8") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "8"))
                                                                                    (rule "elimGcdEq" (formula "42") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=jdiv(add(Z(2(#)), mul(quotient_55, Z(2(#)))), Z(2(#)))") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_55)"))
                                                                                    (builtin "One Step Simplification" (formula "42"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                                                                    (rule "add_literals" (formula "42") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,0,0,1,0"))
                                                                                    (rule "add_zero_left" (formula "42") (term "0,0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "42") (term "0,1,0"))
                                                                                    (rule "add_literals" (formula "42") (term "1,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "42") (term "0,1,0"))
                                                                                    (rule "qeq_literals" (formula "42") (term "1,0"))
                                                                                    (builtin "One Step Simplification" (formula "42"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "42") (term "0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "42") (term "0,0"))
                                                                                    (rule "add_literals" (formula "42") (term "1,0,0"))
                                                                                    (rule "times_zero_1" (formula "42") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "42") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "42"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "42") (term "0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "42") (term "0,0"))
                                                                                    (rule "add_literals" (formula "42") (term "1,0,0"))
                                                                                    (rule "times_zero_1" (formula "42") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "42"))
                                                                                    (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=quotient_55"))
                                                                                    (rule "equal_literals" (formula "2") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "2"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                                                                                    (rule "div_literals" (formula "2") (term "0,0,1,0"))
                                                                                    (rule "add_zero_left" (formula "2") (term "0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                                    (rule "add_literals" (formula "2") (term "1,0"))
                                                                                    (rule "times_zero_1" (formula "2") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "true_left" (formula "2"))
                                                                                    (rule "emptyModality" (formula "6") (term "1"))
                                                                                    (builtin "One Step Simplification" (formula "6"))
                                                                                    (rule "true_left" (formula "6"))
                                                                                    (rule "methodCallEmpty" (formula "12") (term "1"))
                                                                                    (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "emptyModality" (formula "5") (term "1"))
                                                                                    (builtin "One Step Simplification" (formula "5"))
                                                                                    (rule "eqSymm" (formula "5"))
                                                                                    (builtin "One Step Simplification" (formula "5"))
                                                                                    (rule "notLeft" (formula "5"))
                                                                                    (rule "emptyModality" (formula "10") (term "1"))
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "eqSymm" (formula "10"))
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "notLeft" (formula "10"))
                                                                                    (rule "compound_inequality_comparison_1" (formula "49") (term "1") (inst "#v0=x_3886"))
                                                                                    (rule "variableDeclarationAssign" (formula "49") (term "1"))
                                                                                    (rule "variableDeclaration" (formula "49") (term "1") (newnames "x_3887"))
                                                                                    (rule "compound_inequality_comparison_1" (formula "46") (term "1") (inst "#v0=x_3887"))
                                                                                    (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                                                                    (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_3888"))
                                                                                    (rule "commute_and" (formula "36") (term "1,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "commute_or" (formula "36") (term "0,0,1,0,1,1,1,0"))
                                                                                    (rule "ifElseUnfold" (formula "47") (term "1") (inst "#boolv=x_2"))
                                                                                    (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_3889"))
                                                                                    (rule "ifElseUnfold" (formula "48") (term "1") (inst "#boolv=x_2"))
                                                                                    (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_3890"))
                                                                                    (rule "commute_or" (formula "27") (term "0,0,0,0"))
                                                                                    (rule "commute_and" (formula "36") (term "0,0,2,0,1,1,0,1,1,0"))
                                                                                    (rule "commute_and" (formula "36") (term "0,0,2,0,1,0,1,1,0,0,1,1,0"))
                                                                                    (rule "commute_and" (formula "23") (term "0,0,0,1,0"))
                                                                                    (rule "commute_or" (formula "36") (term "0,0,0,0,0,0,1,0"))
                                                                                    (rule "commute_and" (formula "36") (term "0,0,0,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "commute_or" (formula "36") (term "0,0,0,0,0,1,1,1,0"))
                                                                                    (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "26"))
                                                                                    (rule "commute_or" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
                                                                                    (rule "commute_or" (formula "25") (term "0,0,0,0"))
                                                                                    (rule "jdiv_axiom" (formula "1") (term "0"))
                                                                                    (rule "eqSymm" (formula "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "0,0,0,2,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,0,0,0,2,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                    (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "6"))
                                                                                    (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=l_338"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                                                                    (rule "equal_literals" (formula "1") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polySimp_homoEq" (formula "1"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                    (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=mul(quotient_55, Z(neglit(1(#))))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                                                                    (rule "equal_literals" (formula "1") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                    (rule "div_literals" (formula "1") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "true_left" (formula "1"))
                                                                                    (rule "commute_and" (formula "36") (term "0,0,2,1,1,0,1,0,0,0,1,1,0"))
                                                                                    (rule "jdiv_axiom" (formula "3") (term "0"))
                                                                                    (rule "eqSymm" (formula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0,2,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "0,0,2,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "0,0,0,2,0"))
                                                                                    (rule "mul_literals" (formula "3") (term "0,0,0,0,2,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,2,0"))
                                                                                    (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                                    (rule "inEqSimp_subsumption5" (formula "3") (term "0,0") (ifseqformula "12"))
                                                                                    (rule "greater_literals" (formula "3") (term "0,0,0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "greater_literals" (formula "3") (term "0,0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "3") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                                    (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=mul(l_338, Z(2(#)))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0"))
                                                                                    (rule "equal_literals" (formula "3") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "3"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "3") (term "1,0,0,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "3") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "3") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "3"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                                    (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=mul(quotient_55, Z(neglit(3(#))))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0"))
                                                                                    (rule "equal_literals" (formula "3") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                                                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                                    (rule "div_literals" (formula "3") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "true_left" (formula "3"))
                                                                                    (rule "commute_and" (formula "36") (term "0,0,2,1,1,1,1,1,0,0,1,1,0"))
                                                                                    (rule "commute_and" (formula "36") (term "0,0,2,1,0,0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "commute_and" (formula "36") (term "0,0,2,1,1,1,1,1,0,0,0,1,1,0"))
                                                                                    (rule "commute_and" (formula "36") (term "0,0,2,1,1,1,1,1,1,0"))
                                                                                    (rule "commute_and" (formula "36") (term "0,0,2,1,1,1,0,1,1,1,0"))
                                                                                    (rule "commute_and" (formula "36") (term "0,0,2,1,1,0,0,1,1,1,0"))
                                                                                    (rule "commute_and" (formula "36") (term "0,0,2,0,1,1,0,0,0,1,0"))
                                                                                    (rule "commute_and" (formula "36") (term "0,0,2,0,1,1,1,0,0,1,0"))
                                                                                    (rule "commute_and" (formula "36") (term "0,0,2,0,1,1,1,0,1,0"))
                                                                                    (rule "ifthenelse_to_or_left" (formula "27") (term "1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "27") (term "1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "1,0,1,1,1,0"))
                                                                                    (rule "add_zero_right" (formula "27") (term "0,1,1,1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "27") (term "1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "27") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "27") (term "0,0,1,0,1,0"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "27") (term "1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "27") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "27") (term "0,1,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "0,1,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "27") (term "0,1,1,0,1,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "27") (term "0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,0"))
                                                                                    (rule "add_zero_left" (formula "27") (term "0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,0"))
                                                                                    (rule "ifthenelse_to_or_left" (formula "25") (term "1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "25") (term "1,0,1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "25") (term "1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "25") (term "1,0,1,1,1,0"))
                                                                                    (rule "add_zero_right" (formula "25") (term "0,1,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "25") (term "1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,1,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "25") (term "0,1,1,1,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "25") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "25") (term "0,1,0,1,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "25") (term "0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,0"))
                                                                                    (rule "add_zero_left" (formula "25") (term "0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,0"))
                                                                                    (rule "commute_or_2" (formula "36") (term "0,0,0,0,0,1,0"))
                                                                                    (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                                                                    (rule "inEqSimp_or_tautInEq0" (formula "26") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "26") (term "1,1,0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "26") (term "1,0,1,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "26") (term "0,1,0,0,0,0"))
                                                                                    (rule "leq_literals" (formula "26") (term "1,0,0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "26"))
                                                                                    (rule "true_left" (formula "26"))
                                                                                    (rule "emptyModality" (formula "10") (term "1"))
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "jmod_axiom" (formula "10") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "10") (term "0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                                                                                    (rule "elimGcdEq" (formula "10") (term "0,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=jdiv(add(Z(1(#)), mul(quotient_55, Z(2(#)))), Z(2(#)))") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_55)"))
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "add_zero_left" (formula "10") (term "1,1,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "10") (term "1,1,1,0,0"))
                                                                                    (rule "add_zero_left" (formula "10") (term "1,1,0,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "10") (term "1,0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "10") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "10") (term "0,1,0,0,0"))
                                                                                    (rule "qeq_literals" (formula "10") (term "1,0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                                                                    (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                                                                    (rule "equal_literals" (formula "10") (term "0,1,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                                                                    (rule "leq_literals" (formula "10") (term "0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "eqSymm" (formula "10"))
                                                                                    (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "notLeft" (formula "10"))
                                                                                    (rule "assignmentModulo" (formula "48") (term "1"))
                                                                                    (builtin "One Step Simplification" (formula "48"))
                                                                                    (rule "equal_literals" (formula "48") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "48"))
                                                                                    (rule "translateJavaMod" (formula "48") (term "0,1,0"))
                                                                                    (rule "assignmentModulo" (formula "45") (term "1"))
                                                                                    (builtin "One Step Simplification" (formula "45"))
                                                                                    (rule "equal_literals" (formula "45") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "45"))
                                                                                    (rule "translateJavaMod" (formula "45") (term "0,1,0"))
                                                                                    (rule "compound_inequality_comparison_1" (formula "46") (term "1") (inst "#v0=x_3890"))
                                                                                    (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                                                                    (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_3891"))
                                                                                    (rule "compound_inequality_comparison_1" (formula "47") (term "1") (inst "#v0=x_3891"))
                                                                                    (rule "variableDeclarationAssign" (formula "47") (term "1"))
                                                                                    (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_3892"))
                                                                                    (rule "cnf_rightDist" (formula "34") (term "1,0,0,1,1,0"))
                                                                                    (rule "cnf_rightDist" (formula "34") (term "0,1,1,0,0,0,1,1,0"))
                                                                                    (rule "jdiv_axiom" (formula "39") (term "0"))
                                                                                    (rule "eqSymm" (formula "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,0,0,2,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                    (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "10"))
                                                                                    (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                                                    (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                                    (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1"))
                                                                                    (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                                                                                    (rule "polyDiv_pullOut" (formula "40") (term "0") (inst "polyDivCoeff=quotient_55"))
                                                                                    (rule "equal_literals" (formula "40") (term "0,0"))
                                                                                    (builtin "One Step Simplification" (formula "40"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "40"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "40") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "40") (term "1,0,0,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                                                                    (rule "div_literals" (formula "40") (term "0,0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                                                                    (rule "add_literals" (formula "40") (term "1,0"))
                                                                                    (rule "times_zero_1" (formula "40") (term "0"))
                                                                                    (builtin "One Step Simplification" (formula "40"))
                                                                                    (rule "closeTrue" (formula "40"))
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "!even_sk_549 = TRUE | !self.a.<created> = TRUE FALSE"
                                                                     (builtin "One Step Simplification" (formula "53"))
                                                                     (rule "orRight" (formula "52"))
                                                                     (rule "orRight" (formula "54"))
                                                                     (rule "notRight" (formula "53"))
                                                                     (rule "notRight" (formula "53"))
                                                                     (rule "orRight" (formula "54"))
                                                                     (rule "close" (formula "54") (ifseqformula "2"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "k_29 + 1 >= 1 + left * 2 + right * -1 FALSE"
                                                            (rule "polySimp_homoEq" (formula "3") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                                                            (rule "polySimp_elimSub" (formula "30") (term "0,0,0,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "24") (term "0,0,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "24") (term "0,0,0,0,0"))
                                                            (rule "polySimp_elimSub" (formula "22") (term "0,0,0,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "16") (term "1,0"))
                                                            (rule "polySimp_homoEq" (formula "27"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "32") (term "0,0,1,1,0"))
                                                            (rule "polySimp_homoEq" (formula "19"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "32") (term "0,0,0,0,0"))
                                                            (rule "polySimp_homoEq" (formula "12"))
                                                            (rule "polySimp_homoEq" (formula "46"))
                                                            (rule "times_zero_2" (formula "46") (term "1,0"))
                                                            (rule "add_zero_right" (formula "46") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                            (rule "inEqSimp_ltRight" (formula "41"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "40"))
                                                            (rule "inEqSimp_ltRight" (formula "40"))
                                                            (rule "times_zero_1" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "41"))
                                                            (rule "inEqSimp_leqRight" (formula "41"))
                                                            (rule "inEqSimp_geqRight" (formula "42"))
                                                            (rule "inEqSimp_geqRight" (formula "44"))
                                                            (rule "inEqSimp_ltToLeq" (formula "26"))
                                                            (rule "inEqSimp_gtToGeq" (formula "19"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21"))
                                                            (rule "inEqSimp_ltToLeq" (formula "34"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "38") (term "1,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "1,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "9") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "22") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "45") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "45") (term "0,2,2,1,0"))
                                                            (rule "polySimp_addComm0" (formula "45") (term "1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "0,0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "45") (term "0"))
                                                            (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "0,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,1,0"))
                                                            (rule "add_literals" (formula "38") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "38") (term "0,0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,1,1,0"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0,1,0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,1,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "4") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "applyEq" (formula "11") (term "1") (ifseqformula "10"))
                                                            (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "41") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_428"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "eqSymm" (formula "1") (term "0,1"))
                                                            (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "10") (term "0,1,1,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_429"))
                                                            (rule "eqSymm" (formula "10") (term "0,1"))
                                                            (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "42") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_430"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "eqSymm" (formula "1") (term "0,1"))
                                                            (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "polySimp_sepPosMonomial" (formula "36"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                                            (rule "polySimp_mulAssoc" (formula "36") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "0,1"))
                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "36"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                            (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "36"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                            (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "1,0,0"))
                                                            (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "36"))
                                                            (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,0"))
                                                            (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                            (rule "add_literals" (formula "22") (term "0,0"))
                                                            (rule "applyEq" (formula "11") (term "0,2,0,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "39") (term "1,1,0,0,0,1,0") (ifseqformula "36"))
                                                            (rule "polySimp_addAssoc" (formula "39") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "39") (term "0,1,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "39") (term "1,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "39") (term "1,1,1,0,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "39") (term "1,1,0,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "39") (term "1,0,0,0,1,0"))
                                                            (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "36"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                            (rule "applyEq" (formula "9") (term "0,2,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "39") (term "1,0,1,0,0,1,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "12") (term "1,0,0,1,0") (ifseqformula "36"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                                            (rule "applyEq" (formula "47") (term "0,2,1,3,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "36"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                            (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "36"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                            (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                            (rule "add_literals" (formula "37") (term "0,0"))
                                                            (rule "applyEq" (formula "47") (term "0,2,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "17") (term "0") (ifseqformula "36"))
                                                            (rule "inEqSimp_homoInEq1" (formula "17"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                            (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                            (rule "add_literals" (formula "17") (term "0,0"))
                                                            (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "36"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2" (formula "28") (term "0,0,0"))
                                                            (rule "add_literals" (formula "28") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "28") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "28") (term "0,0"))
                                                            (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "36"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                            (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "36"))
                                                            (rule "polySimp_addAssoc" (formula "16") (term "1"))
                                                            (rule "applyEq" (formula "48") (term "0,1,0,0,1,0") (ifseqformula "36"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "48") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0,1,0"))
                                                            (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "36"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                                            (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                                            (rule "applyEq" (formula "15") (term "0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "9") (term "0,2,1,3,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "41") (term "1,0,1,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "12") (term "0,1,0,0,0") (ifseqformula "36"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,0"))
                                                            (rule "applyEq" (formula "41") (term "1,1,0,0,0") (ifseqformula "36"))
                                                            (rule "polySimp_addAssoc" (formula "41") (term "1,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "41") (term "0,1,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "41") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "41") (term "1,1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "41") (term "1,1,0,0,0"))
                                                            (rule "add_zero_right" (formula "41") (term "1,0,0,0"))
                                                            (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,1") (ifseqformula "36"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,1,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,1"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,0,1"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,1,0,1"))
                                                            (rule "applyEq" (formula "11") (term "0,2,1,3,0,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "36"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor2" (formula "25") (term "0,1,0"))
                                                            (rule "add_literals" (formula "25") (term "1,0,1,0"))
                                                            (rule "times_zero_1" (formula "25") (term "0,1,0"))
                                                            (rule "add_zero_left" (formula "25") (term "1,0"))
                                                            (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "36"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                            (rule "applyEq" (formula "48") (term "0,2,1,1,0,0") (ifseqformula "36"))
                                                            (rule "applyEq" (formula "48") (term "0,0,0,0") (ifseqformula "36"))
                                                            (rule "polySimp_homoEq" (formula "48") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0"))
                                                            (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0,0,1") (ifseqformula "36"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0,1"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,1,0,0,1"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,0,1,0,0,1"))
                                                            (rule "applyEq" (formula "41") (term "1,0,1,1,0") (ifseqformula "36"))
                                                            (rule "polySimp_addAssoc" (formula "41") (term "0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "41") (term "0,0,1,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,1,0"))
                                                            (rule "add_literals" (formula "41") (term "1,1,0,1,1,0"))
                                                            (rule "times_zero_1" (formula "41") (term "1,0,1,1,0"))
                                                            (rule "add_zero_right" (formula "41") (term "0,1,1,0"))
                                                            (rule "applyEq" (formula "8") (term "0,1,0,0") (ifseqformula "36"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                            (rule "applyEq" (formula "12") (term "0,0,0,0,0,1") (ifseqformula "36"))
                                                            (rule "polySimp_homoEq" (formula "12") (term "0,0,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,0,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1"))
                                                            (rule "applyEq" (formula "12") (term "0,2,1,1,0,0,0,1") (ifseqformula "36"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                            (rule "mul_literals" (formula "5") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                            (rule "bsum_induction_upper_concrete" (formula "33") (term "1,1,0"))
                                                            (rule "polySimp_homoEq" (formula "33") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "33") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                            (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                            (rule "mul_literals" (formula "22") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "28"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                                                            (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "9") (term "1,0,2,0,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "47") (term "1,0,2,1,3,0,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "41") (term "1,1,0,1,0,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "22") (term "0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "4") (term "0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "11") (term "1,0,2,0,0,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "3") (term "0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "47") (term "1,0,2,0,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "6") (term "0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "23") (term "0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "9") (term "1,0,2,1,3,0,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "39") (term "1,1,0,1,0,0,1,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "12") (term "0,0,1,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "11") (term "1,0,2,1,3,0,0,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "48") (term "1,0,2,1,1,0,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "28"))
                                                            (rule "applyEq" (formula "12") (term "1,0,2,1,1,0,0,0,1") (ifseqformula "28"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                            (rule "applyEq" (formula "17") (term "0") (ifseqformula "28"))
                                                            (rule "bsum_induction_upper_concrete" (formula "48") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "48") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "0,1,0,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "48") (term "0,0,1,0,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "48") (term "0,0,0,0,0,1,0,0"))
                                                            (rule "applyEq" (formula "48") (term "1,0,0,0,1,0,0") (ifseqformula "28"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                            (rule "applyEq" (formula "29") (term "0") (ifseqformula "28"))
                                                            (rule "inEqSimp_homoInEq1" (formula "29"))
                                                            (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                            (rule "add_literals" (formula "29") (term "1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                                                            (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "28"))
                                                            (rule "polySimp_sepNegMonomial" (formula "12") (term "0,0,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,0,1"))
                                                            (rule "applyEq" (formula "12") (term "0,0,0,0,0,1") (ifseqformula "28"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,1,0,0,1"))
                                                            (rule "applyEq" (formula "12") (term "0,0,0,1,0,0,1") (ifseqformula "28"))
                                                            (rule "polySimp_sepPosMonomial" (formula "33") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "0,1,1,0"))
                                                            (rule "bsum_induction_upper_concrete" (formula "41") (term "1,1,0"))
                                                            (rule "polySimp_homoEq" (formula "41") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "41") (term "0,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "8") (term "0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "1,0,1"))
                                                            (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "28"))
                                                            (rule "polySimp_sepPosMonomial" (formula "20"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                            (rule "mul_literals" (formula "20") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                            (rule "applyEq" (formula "6") (term "0") (ifseqformula "20"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                                            (rule "applyEq" (formula "46") (term "1,0,2,1,3,0,0") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,2,1,3,0,0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0,0,2,1,3,0,0"))
                                                            (rule "applyEq" (formula "4") (term "0") (ifseqformula "20"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                            (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                            (rule "applyEq" (formula "3") (term "0") (ifseqformula "20"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                            (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "20"))
                                                            (rule "applyEq" (formula "40") (term "1,1,0,1,0,0") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "40") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "40") (term "0,1,0,1,0,0"))
                                                            (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                                                            (rule "add_literals" (formula "15") (term "0,0,1"))
                                                            (rule "add_zero_left" (formula "15") (term "0,1"))
                                                            (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                                            (rule "applyEq" (formula "46") (term "1,0,2,0,0") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,2,0,0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0,0,2,0,0"))
                                                            (rule "applyEq" (formula "10") (term "1,0,2,1,3,0,0,0") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,2,1,3,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "10") (term "0,0,2,1,3,0,0,0"))
                                                            (rule "applyEq" (formula "10") (term "1,0,2,0,0,0") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,2,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "10") (term "0,0,2,0,0,0"))
                                                            (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "20"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,0"))
                                                            (rule "applyEq" (formula "8") (term "1,0,2,1,3,0,0") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,2,1,3,0,0"))
                                                            (rule "polySimp_addComm0" (formula "8") (term "0,0,2,1,3,0,0"))
                                                            (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "20"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0"))
                                                            (rule "applyEq" (formula "8") (term "1,0,2,0,0") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,2,0,0"))
                                                            (rule "polySimp_addComm0" (formula "8") (term "0,0,2,0,0"))
                                                            (rule "applyEq" (formula "16") (term "0") (ifseqformula "20"))
                                                            (rule "inEqSimp_homoInEq1" (formula "16"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                            (rule "mul_literals" (formula "16") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                            (rule "add_literals" (formula "16") (term "0,0"))
                                                            (rule "applyEq" (formula "22") (term "0") (ifseqformula "20"))
                                                            (rule "inEqSimp_homoInEq0" (formula "22"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                            (rule "add_literals" (formula "22") (term "0,0,0"))
                                                            (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                            (rule "add_literals" (formula "21") (term "0,0"))
                                                            (rule "applyEq" (formula "38") (term "1,1,0,1,0,0,1,0") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "1,0,1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "38") (term "0,1,0,1,0,0,1,0"))
                                                            (rule "applyEq" (formula "11") (term "0,0,0,1,0,0,1") (ifseqformula "20"))
                                                            (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0,1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0,0,1"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0,1,0,0,1"))
                                                            (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1,0,0,1"))
                                                            (rule "applyEq" (formula "47") (term "1,0,0,0,1,0,0") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,1,0,0"))
                                                            (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "1"))
                                                            (rule "polySimp_addComm0" (formula "35") (term "0,1"))
                                                            (rule "applyEq" (formula "27") (term "1") (ifseqformula "20"))
                                                            (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "23") (term "0,0,0"))
                                                            (rule "applyEq" (formula "11") (term "1,0,2,1,1,0,0,0,1") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,2,1,1,0,0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "11") (term "0,0,2,1,1,0,0,0,1"))
                                                            (rule "applyEq" (formula "11") (term "0,0,0,0,0,1") (ifseqformula "20"))
                                                            (rule "polySimp_homoEq" (formula "11") (term "0,0,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0,0,0,1"))
                                                            (rule "applyEq" (formula "47") (term "1,0,2,1,1,0,0,0") (ifseqformula "20"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0,2,1,1,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "47") (term "0,0,2,1,1,0,0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "47") (term "0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,0,0"))
                                                            (rule "applyEq" (formula "47") (term "0,0,0,0,0") (ifseqformula "27"))
                                                            (rule "polySimp_homoEq" (formula "47") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "47") (term "0,0,0,0,0,0,0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "40") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "40") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "24") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_91"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "eqSymm" (formula "24") (term "0,1"))
                                                            (rule "applyEqRigid" (formula "24") (term "1,0,1") (ifseqformula "25"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                            (rule "mul_literals" (formula "14") (term "0,1"))
                                                            (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "47") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_431"))
                                                            (rule "eqSymm" (formula "1") (term "0,1"))
                                                            (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "48"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "12") (term "0,0,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0,0,0,1,0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "0,1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "49") (term "0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                            (rule "bsum_induction_lower2_concrete" (formula "41") (term "0,0,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "41") (term "0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "41") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,1,0"))
                                                            (rule "polySimp_homoEq" (formula "41") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "41") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "12") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0,1"))
                                                            (rule "polySimp_sepNegMonomial" (formula "48"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "41") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "0,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "41") (term "0,0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "41") (term "0,0,0,1,0"))
                                                            (rule "polySimp_homoEq" (formula "41") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "41") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "41") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "41") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,1,0"))
                                                            (rule "inEqSimp_contradEq7" (formula "12") (term "0,0,1,1") (ifseqformula "5"))
                                                            (rule "polySimp_addComm0" (formula "12") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,1,1"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,0,1,1,1"))
                                                            (rule "mul_literals" (formula "12") (term "0,0,1,0,0,0,1,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1,1,1"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0,0,1,1,1"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,1,1"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,1,1"))
                                                            (rule "add_zero_right" (formula "12") (term "0,0,0,1,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,1"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1,1,1"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,1,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0,1,1,1"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,1,1"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,1,1"))
                                                            (rule "add_zero_right" (formula "12") (term "0,0,0,1,1,1"))
                                                            (rule "leq_literals" (formula "12") (term "0,0,1,1,1"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "polySimp_addComm0" (formula "12") (term "1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "7"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "4"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0"))
                                                            (rule "add_zero_right" (formula "4") (term "0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0"))
                                                            (rule "add_literals" (formula "4") (term "0"))
                                                            (rule "leq_literals" (formula "4"))
                                                            (rule "closeFalse" (formula "4"))
                                                         )
                                                      )
                                                      (branch "right - left = 1"
                                                         (rule "orLeft" (formula "3"))
                                                         (branch " k_29 <= left * 2 + right * -1 | ( k_29 >= 1 + right | PrefixSumRec::even(store(heapAfter_upsweep_0, self.a, arr(right), int::select(heapAfter_upsweep_0, self.a, arr(left)) + int::select(heapAfter_upsweep_0, self.a, arr(right))), k_29) = TRUE)"
                                                            (rule "orLeft" (formula "3"))
                                                            (branch "k_29 <= left * 2 + right * -1"
                                                               (rule "polySimp_elimSub" (formula "33") (term "0,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "31") (term "0,0,0,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "23") (term "0,0,0,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "17") (term "0"))
                                                               (rule "polySimp_elimSub" (formula "25") (term "0,0,0,0,0"))
                                                               (rule "polySimp_homoEq" (formula "20"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                               (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                                                               (rule "polySimp_elimSub" (formula "25") (term "0,0,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "16") (term "1,0"))
                                                               (rule "polySimp_elimSub" (formula "33") (term "0,0,0,0,0"))
                                                               (rule "polySimp_homoEq" (formula "12"))
                                                               (rule "polySimp_homoEq" (formula "45"))
                                                               (rule "polySimp_homoEq" (formula "28"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                                               (rule "polySimp_homoEq" (formula "17"))
                                                               (rule "polySimp_elimSub" (formula "12") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                               (rule "inEqSimp_ltRight" (formula "41"))
                                                               (rule "mul_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "40"))
                                                               (rule "inEqSimp_leqRight" (formula "39"))
                                                               (rule "inEqSimp_leqRight" (formula "41"))
                                                               (rule "inEqSimp_ltRight" (formula "41"))
                                                               (rule "times_zero_1" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_geqRight" (formula "42"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "20"))
                                                               (rule "inEqSimp_ltToLeq" (formula "34"))
                                                               (rule "inEqSimp_ltToLeq" (formula "26"))
                                                               (rule "inEqSimp_gtToGeq" (formula "18"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "38") (term "1,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "30") (term "1,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "43") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "21") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "1,0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,2,1,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,2,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "3") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "22") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "0,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "0,0,0,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "0,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "0,0,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "0,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "0,0,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "38") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "38") (term "0,0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "8"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,1,0"))
                                                               (rule "add_literals" (formula "38") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "38") (term "0,0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "30") (term "0,1,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,1,1,0"))
                                                               (rule "add_literals" (formula "30") (term "1,1,0,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "44") (term "0,1,0,0,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                                               (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                               (rule "add_zero_left" (formula "3") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,1,0,0"))
                                                               (rule "applyEq" (formula "10") (term "1") (ifseqformula "9"))
                                                               (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "40") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_350"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "eqSymm" (formula "1") (term "0,1"))
                                                               (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "41"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "polySimp_sepPosMonomial" (formula "26"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                               (rule "polySimp_mulAssoc" (formula "26") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "0,1"))
                                                               (rule "applyEq" (formula "44") (term "0,2,1,3,0,0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "7") (term "0,2,1,3,0,0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "26"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0"))
                                                               (rule "applyEq" (formula "7") (term "0,2,0,0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "44") (term "0,2,0,0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "26"))
                                                               (rule "polySimp_addAssoc" (formula "22") (term "1,0"))
                                                               (rule "polySimp_pullOutFactor2" (formula "22") (term "0,1,0"))
                                                               (rule "add_literals" (formula "22") (term "1,0,1,0"))
                                                               (rule "times_zero_1" (formula "22") (term "0,1,0"))
                                                               (rule "add_zero_left" (formula "22") (term "1,0"))
                                                               (rule "applyEq" (formula "14") (term "0") (ifseqformula "26"))
                                                               (rule "inEqSimp_homoInEq1" (formula "14"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                               (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                               (rule "add_literals" (formula "14") (term "0,0"))
                                                               (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "26"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,0,0"))
                                                               (rule "applyEq" (formula "37") (term "1,0,1,0,0,1,0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "26"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                               (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "26"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                               (rule "add_literals" (formula "27") (term "1,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                               (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0"))
                                                               (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "26"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                                               (rule "applyEq" (formula "39") (term "1,1,0,0,0") (ifseqformula "26"))
                                                               (rule "polySimp_addComm1" (formula "39") (term "1,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,0,0"))
                                                               (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "26"))
                                                               (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2" (formula "34") (term "0,0,0"))
                                                               (rule "add_literals" (formula "34") (term "1,0,0,0"))
                                                               (rule "times_zero_1" (formula "34") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "34") (term "0,0"))
                                                               (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "26"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                               (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "26"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                               (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "35") (term "0,0,0"))
                                                               (rule "applyEq" (formula "45") (term "0,1,0,0,1,0") (ifseqformula "26"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,1,0"))
                                                               (rule "add_literals" (formula "45") (term "1,1,0,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,1,0"))
                                                               (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "26"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,0,0"))
                                                               (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "37") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                                                               (rule "polySimp_addComm1" (formula "37") (term "1,0,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,0,0,1,0"))
                                                               (rule "applyEq" (formula "39") (term "1,0,1,0,0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "12") (term "0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "26"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0,0"))
                                                               (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "18") (term "0,0,0"))
                                                               (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "26"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
                                                               (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "19") (term "0,0"))
                                                               (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "26"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                               (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "26"))
                                                               (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                               (rule "applyEq" (formula "45") (term "0,1,0,0,0,1,0,0") (ifseqformula "26"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "45") (term "1,1,0,0,0,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,0,1,0,0"))
                                                               (rule "applyEq" (formula "39") (term "1,0,1,1,0") (ifseqformula "26"))
                                                               (rule "polySimp_addComm1" (formula "39") (term "0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0"))
                                                               (rule "applyEq" (formula "45") (term "0,2,0,0,0,0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "45") (term "0,2,1,3,0,0,0,0") (ifseqformula "26"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                               (rule "mul_literals" (formula "5") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                               (rule "bsum_induction_upper_concrete" (formula "31") (term "1,1,0"))
                                                               (rule "polySimp_homoEq" (formula "31") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "31") (term "0,1,0,1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "23"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                               (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "23"))
                                                               (rule "polySimp_addComm1" (formula "13") (term "1"))
                                                               (rule "add_literals" (formula "13") (term "0,1"))
                                                               (rule "applyEq" (formula "7") (term "1,0,2,1,3,0,0") (ifseqformula "23"))
                                                               (rule "polySimp_addComm0" (formula "7") (term "0,2,1,3,0,0"))
                                                               (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "23"))
                                                               (rule "add_literals" (formula "19") (term "0"))
                                                               (rule "qeq_literals" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                               (rule "applyEq" (formula "43") (term "1,0,2,1,3,0,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm0" (formula "43") (term "0,2,1,3,0,0"))
                                                               (rule "applyEq" (formula "7") (term "1,0,2,0,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm0" (formula "7") (term "0,2,0,0"))
                                                               (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm0" (formula "12") (term "0"))
                                                               (rule "applyEq" (formula "38") (term "1,1,0,1,0,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm0" (formula "38") (term "1,0,1,0,0"))
                                                               (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                               (rule "applyEq" (formula "36") (term "1,1,0,1,0,0,1,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm0" (formula "36") (term "1,0,1,0,0,1,0"))
                                                               (rule "applyEq" (formula "43") (term "1,0,2,0,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm0" (formula "43") (term "0,2,0,0"))
                                                               (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "22"))
                                                               (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                               (rule "add_literals" (formula "18") (term "0,0"))
                                                               (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "22"))
                                                               (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "22"))
                                                               (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                               (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0"))
                                                               (rule "applyEq" (formula "36") (term "1,0,1,0,0,0,1,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,1,0"))
                                                               (rule "add_literals" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                                               (rule "applyEq" (formula "38") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0"))
                                                               (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
                                                               (rule "applyEq" (formula "44") (term "1,0,2,1,3,0,0,0,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,2,1,3,0,0,0,0"))
                                                               (rule "applyEq" (formula "38") (term "1,0,0,1,1,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,0"))
                                                               (rule "add_literals" (formula "38") (term "0,0,0,1,1,0"))
                                                               (rule "applyEq" (formula "44") (term "1,0,2,0,0,0,0") (ifseqformula "22"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,2,0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                               (rule "applyEq" (formula "14") (term "0") (ifseqformula "22"))
                                                               (rule "qeq_literals" (formula "14"))
                                                               (rule "closeFalse" (formula "14"))
                                                            )
                                                            (branch " k_29 >= 1 + right | PrefixSumRec::even(store(heapAfter_upsweep_0, self.a, arr(right), int::select(heapAfter_upsweep_0, self.a, arr(left)) + int::select(heapAfter_upsweep_0, self.a, arr(right))), k_29) = TRUE"
                                                               (rule "orLeft" (formula "3"))
                                                               (branch "k_29 >= 1 + right"
                                                                  (rule "polySimp_elimSub" (formula "33") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "31") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "23") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "17") (term "0"))
                                                                  (rule "polySimp_elimSub" (formula "25") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "20"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                  (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_elimSub" (formula "25") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_elimSub" (formula "33") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "12"))
                                                                  (rule "polySimp_homoEq" (formula "45"))
                                                                  (rule "polySimp_homoEq" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_homoEq" (formula "17"))
                                                                  (rule "polySimp_elimSub" (formula "12") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                                  (rule "inEqSimp_geqRight" (formula "43"))
                                                                  (rule "inEqSimp_ltRight" (formula "42"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_leqRight" (formula "42"))
                                                                  (rule "inEqSimp_leqRight" (formula "42"))
                                                                  (rule "inEqSimp_leqRight" (formula "41"))
                                                                  (rule "inEqSimp_ltRight" (formula "42"))
                                                                  (rule "times_zero_1" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "18"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "34"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "43") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "1,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "21") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,2,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,2,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "22") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "0,0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                  (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,1,0"))
                                                                  (rule "add_literals" (formula "38") (term "1,1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,1,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "30") (term "1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "44") (term "0,1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "4") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,1,0,0"))
                                                                  (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,1,0,0"))
                                                                  (rule "applyEq" (formula "10") (term "1") (ifseqformula "9"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "40") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_349"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "eqSymm" (formula "1") (term "0,1"))
                                                                  (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "41"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "26") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "0,1"))
                                                                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "26"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "26"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor2" (formula "34") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "34") (term "1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "34") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "34") (term "0,0"))
                                                                  (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "35") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "26"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0"))
                                                                  (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "23") (term "0,0"))
                                                                  (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "27") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                                  (rule "add_literals" (formula "27") (term "1,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                                  (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "27") (term "0,0"))
                                                                  (rule "applyEq" (formula "44") (term "0,2,1,3,0,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "26"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                                                  (rule "applyEq" (formula "44") (term "0,2,0,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "26"))
                                                                  (rule "polySimp_addAssoc" (formula "22") (term "1,0"))
                                                                  (rule "polySimp_pullOutFactor2" (formula "22") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "22") (term "1,0,1,0"))
                                                                  (rule "times_zero_1" (formula "22") (term "0,1,0"))
                                                                  (rule "add_zero_left" (formula "22") (term "1,0"))
                                                                  (rule "applyEq" (formula "39") (term "1,1,0,0,0") (ifseqformula "26"))
                                                                  (rule "polySimp_addComm1" (formula "39") (term "1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,0,0"))
                                                                  (rule "applyEq" (formula "45") (term "0,1,0,0,1,0") (ifseqformula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "45") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "26"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "14"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,1,3,0,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "37") (term "1,0,1,0,0,1,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,0,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "39") (term "1,0,1,0,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "1,0,0"))
                                                                  (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                  (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "26"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "applyEq" (formula "37") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                                                                  (rule "polySimp_addComm1" (formula "37") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "26"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                  (rule "applyEq" (formula "45") (term "0,1,0,0,0,1,0,0") (ifseqformula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "45") (term "1,1,0,0,0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,0,1,0,0"))
                                                                  (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "26"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                                  (rule "applyEq" (formula "39") (term "1,0,1,1,0") (ifseqformula "26"))
                                                                  (rule "polySimp_addComm1" (formula "39") (term "0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0"))
                                                                  (rule "applyEq" (formula "45") (term "0,2,0,0,0,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "45") (term "0,2,1,3,0,0,0,0") (ifseqformula "26"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                  (rule "bsum_induction_upper_concrete" (formula "31") (term "1,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "31") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "31") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "18"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                                                  (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "37") (term "1,1,0,1,0,0,1,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "37") (term "0,1,0,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "7") (term "1,0,2,1,3,0,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,2,1,3,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "7") (term "0,0,2,1,3,0,0"))
                                                                  (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "18"))
                                                                  (rule "applyEq" (formula "39") (term "1,1,0,1,0,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "39") (term "0,1,0,1,0,0"))
                                                                  (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0"))
                                                                  (rule "applyEq" (formula "44") (term "1,0,2,1,3,0,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,2,1,3,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,0,2,1,3,0,0"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "44") (term "1,0,2,0,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,2,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,0,2,0,0"))
                                                                  (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                                                  (rule "applyEq" (formula "7") (term "1,0,2,0,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,2,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "7") (term "0,0,2,0,0"))
                                                                  (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "9") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                                                                  (rule "add_literals" (formula "13") (term "0,0,1"))
                                                                  (rule "add_zero_left" (formula "13") (term "0,1"))
                                                                  (rule "applyEq" (formula "37") (term "1,0,1,0,0,0,1,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "37") (term "0,0,0,1,0,0,0,1,0"))
                                                                  (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "39") (term "1,0,1,0,0,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0"))
                                                                  (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0"))
                                                                  (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "21") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "18"))
                                                                  (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "26") (term "0,1"))
                                                                  (rule "applyEq" (formula "39") (term "1,0,0,1,1,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "39") (term "0,0,0,0,1,1,0"))
                                                                  (rule "add_zero_left" (formula "39") (term "0,0,0,1,1,0"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,2,1,3,0,0,0,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,2,1,3,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "45") (term "0,0,2,1,3,0,0,0,0"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,2,0,0,0,0") (ifseqformula "18"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,2,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "45") (term "0,0,2,0,0,0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "23"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                  (rule "applyEq" (formula "18") (term "0") (ifseqformula "23"))
                                                                  (rule "polySimp_homoEq" (formula "18"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                                  (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "23"))
                                                                  (rule "add_literals" (formula "35") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                                                  (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                  (rule "bsum_induction_upper_concrete" (formula "45") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "45") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "45") (term "0,1,0,0,0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "45") (term "0,0,1,0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "45") (term "0,0,0,0,0,1,0,0,0"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,0,0,1,0,0,0") (ifseqformula "23"))
                                                                  (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "45") (term "0,0,0,0,0,1,0,0,0"))
                                                                  (rule "add_zero_left" (formula "45") (term "0,0,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "23"))
                                                                  (rule "qeq_literals" (formula "14"))
                                                                  (rule "closeFalse" (formula "14"))
                                                               )
                                                               (branch " PrefixSumRec::even(store(heapAfter_upsweep_0, self.a, arr(right), int::select(heapAfter_upsweep_0, self.a, arr(left)) + int::select(heapAfter_upsweep_0, self.a, arr(right))), k_29) = TRUE"
                                                                  (rule "polySimp_homoEq" (formula "45"))
                                                                  (rule "polySimp_elimSub" (formula "25") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_homoEq" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_elimSub" (formula "33") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "20"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                                  (rule "polySimp_elimSub" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_elimSub" (formula "33") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "12"))
                                                                  (rule "polySimp_elimSub" (formula "25") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "17") (term "0"))
                                                                  (rule "polySimp_elimSub" (formula "31") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "23") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "12") (term "0,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "17"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                                  (rule "inEqSimp_leqRight" (formula "42"))
                                                                  (rule "inEqSimp_ltRight" (formula "40"))
                                                                  (rule "times_zero_1" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_ltRight" (formula "42"))
                                                                  (rule "times_zero_1" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_leqRight" (formula "40"))
                                                                  (rule "inEqSimp_geqRight" (formula "42"))
                                                                  (rule "inEqSimp_leqRight" (formula "42"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "18"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "34"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "1,1,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "43") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,2,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,2,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "21") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "22") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "30") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "0,0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,1,0"))
                                                                  (rule "add_literals" (formula "38") (term "1,1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "30") (term "0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,1,1,0"))
                                                                  (rule "add_literals" (formula "30") (term "1,1,0,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "44") (term "0,1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "5") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,1,0,0"))
                                                                  (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,1,0,0"))
                                                                  (rule "applyEq" (formula "10") (term "1") (ifseqformula "9"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "40") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_346"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "eqSymm" (formula "1") (term "0,1"))
                                                                  (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "41"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "9") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_347"))
                                                                  (rule "eqSymm" (formula "9") (term "0,1"))
                                                                  (rule "applyEqRigid" (formula "9") (term "1,0,1") (ifseqformula "10"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "35"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "35") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "0,1"))
                                                                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "35"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0"))
                                                                  (rule "applyEq" (formula "45") (term "0,2,0,0") (ifseqformula "35"))
                                                                  (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "35"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "45") (term "0,2,1,3,0,0") (ifseqformula "35"))
                                                                  (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "35"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                  (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "21") (term "1,0,0"))
                                                                  (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "35"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "20") (term "0,0"))
                                                                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "20") (term "0,0"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,0,0") (ifseqformula "35"))
                                                                  (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "35"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                  (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "35"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "1"))
                                                                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "35"))
                                                                  (rule "applyEq" (formula "9") (term "0,2,0,0,0") (ifseqformula "35"))
                                                                  (rule "applyEq" (formula "40") (term "1,1,0,0,0") (ifseqformula "35"))
                                                                  (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "40") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "40") (term "1,1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "40") (term "1,1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "40") (term "1,0,0,0"))
                                                                  (rule "applyEq" (formula "9") (term "0,2,1,3,0,0,0") (ifseqformula "35"))
                                                                  (rule "applyEq" (formula "38") (term "1,0,1,0,0,1,0") (ifseqformula "35"))
                                                                  (rule "applyEq" (formula "38") (term "1,1,0,0,0,1,0") (ifseqformula "35"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "1,0,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "38") (term "1,0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "38") (term "1,1,1,0,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "38") (term "1,1,0,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "38") (term "1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "46") (term "0,1,0,0,1,0") (ifseqformula "35"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "46") (term "1,1,0,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "35"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "35"))
                                                                  (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor2" (formula "27") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "27") (term "1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "27") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "27") (term "0,0"))
                                                                  (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "35"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                                  (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0"))
                                                                  (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "35"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "1,0"))
                                                                  (rule "polySimp_pullOutFactor2" (formula "23") (term "0,1,0"))
                                                                  (rule "add_literals" (formula "23") (term "1,0,1,0"))
                                                                  (rule "times_zero_1" (formula "23") (term "0,1,0"))
                                                                  (rule "add_zero_left" (formula "23") (term "1,0"))
                                                                  (rule "applyEq" (formula "7") (term "0,2,1,3,0,0") (ifseqformula "35"))
                                                                  (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "35"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                  (rule "applyEq" (formula "40") (term "1,0,1,0,0") (ifseqformula "35"))
                                                                  (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "35"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "36") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                                  (rule "add_literals" (formula "36") (term "1,1,0"))
                                                                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "35"))
                                                                  (rule "applyEq" (formula "40") (term "1,0,1,1,0") (ifseqformula "35"))
                                                                  (rule "polySimp_addAssoc" (formula "40") (term "0,1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "40") (term "0,0,1,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,1,0"))
                                                                  (rule "add_literals" (formula "40") (term "1,1,0,1,1,0"))
                                                                  (rule "times_zero_1" (formula "40") (term "1,0,1,1,0"))
                                                                  (rule "add_zero_right" (formula "40") (term "0,1,1,0"))
                                                                  (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "35"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "applyEq" (formula "46") (term "0,1,0,0,0,1,0,0") (ifseqformula "35"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,0,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "46") (term "1,1,0,0,0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "1,0,0,0,0,1,0,0"))
                                                                  (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "35"))
                                                                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                                  (rule "applyEq" (formula "46") (term "0,2,1,3,0,0,0,0") (ifseqformula "35"))
                                                                  (rule "applyEq" (formula "46") (term "0,2,0,0,0,0") (ifseqformula "35"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                  (rule "mul_literals" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                  (rule "bsum_induction_upper_concrete" (formula "32") (term "1,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "19"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                                  (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                                  (rule "applyEq" (formula "38") (term "1,1,0,1,0,0,1,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "38") (term "1,0,1,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "38") (term "0,1,0,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                                  (rule "applyEq" (formula "40") (term "1,1,0,1,0,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "40") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,1,0,1,0,0"))
                                                                  (rule "applyEq" (formula "9") (term "1,0,2,1,3,0,0,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,2,1,3,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "9") (term "0,0,2,1,3,0,0,0"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,2,0,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,2,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "45") (term "0,0,2,0,0"))
                                                                  (rule "applyEq" (formula "7") (term "1,0,2,1,3,0,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,2,1,3,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "7") (term "0,0,2,1,3,0,0"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,2,1,3,0,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "45") (term "0,2,1,3,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "45") (term "0,0,2,1,3,0,0"))
                                                                  (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "19"))
                                                                  (rule "applyEq" (formula "9") (term "1,0,2,0,0,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,2,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "9") (term "0,0,2,0,0,0"))
                                                                  (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0"))
                                                                  (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,1"))
                                                                  (rule "add_zero_left" (formula "14") (term "0,1"))
                                                                  (rule "applyEq" (formula "7") (term "1,0,2,0,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,2,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "7") (term "0,0,2,0,0"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "35") (term "0,1"))
                                                                  (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "22") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "46") (term "1,0,2,1,3,0,0,0,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,2,1,3,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "46") (term "0,0,2,1,3,0,0,0,0"))
                                                                  (rule "applyEq" (formula "46") (term "1,0,2,0,0,0,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,2,0,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "46") (term "0,0,2,0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "19"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "19"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "21"))
                                                                  (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                                  (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                                  (rule "add_literals" (formula "21") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "19"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "24"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "19"))
                                                                  (rule "polySimp_homoEq" (formula "24"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                  (rule "add_literals" (formula "24") (term "0,0"))
                                                                  (rule "bsum_induction_upper_concrete" (formula "46") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "46") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "0,1,0,0,0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "46") (term "0,0,1,0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0,0,1,0,0,0"))
                                                                  (rule "applyEq" (formula "46") (term "1,0,0,0,1,0,0,0") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0,1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0,0,1,0,0,0"))
                                                                  (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                  (rule "applyEq" (formula "28") (term "0") (ifseqformula "19"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "0,1,1,0"))
                                                                  (rule "bsum_induction_lower2_concrete" (formula "40") (term "1,1,0"))
                                                                  (rule "eqSymm" (formula "40") (term "1,0"))
                                                                  (rule "polySimp_elimSub" (formula "40") (term "0,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "40") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,1,1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,1,0,1,0"))
                                                                  (rule "mul_literals" (formula "40") (term "0,1,0,0,0,1,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0,1,0"))
                                                                  (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,1,0"))
                                                                  (rule "add_zero_left" (formula "40") (term "0,0,0,1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,0,1,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                                                                  (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "19"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,1"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "26"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1"))
                                                                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "44") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_348"))
                                                                  (rule "eqSymm" (formula "1") (term "0,1"))
                                                                  (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "23") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_82"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "eqSymm" (formula "23") (term "0,1"))
                                                                  (rule "applyEqRigid" (formula "23") (term "1,0,1") (ifseqformula "24"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                  (rule "mul_literals" (formula "20") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                                  (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                                                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "24"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                  (rule "applyEqRigid" (formula "14") (term "1,1") (ifseqformula "24"))
                                                                  (rule "polySimp_addComm0" (formula "14") (term "1"))
                                                                  (rule "applyEqRigid" (formula "2") (term "1,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,2,0,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,2,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,2,0,0,0"))
                                                                  (rule "applyEq" (formula "7") (term "1,0,2,1,3,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,2,1,3,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,2,1,3,0,0"))
                                                                  (rule "applyEqRigid" (formula "38") (term "1,1,0,1,0,0,1,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addComm1" (formula "38") (term "1,0,1,0,0,1,0"))
                                                                  (rule "add_literals" (formula "38") (term "0,1,0,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "1") (term "1,0,2,1,3,0,0,0") (ifseqformula "24"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,2,1,3,0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,2,1,3,0,0,0"))
                                                                  (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "24"))
                                                                  (rule "qeq_literals" (formula "20"))
                                                                  (rule "true_left" (formula "20"))
                                                                  (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "23"))
                                                                  (rule "mul_literals" (formula "20") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "20") (term "0"))
                                                                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "22"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "13"))
                                                                  (rule "mul_literals" (formula "13") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0"))
                                                                  (rule "applyEqRigid" (formula "15") (term "0,1,0") (ifseqformula "22"))
                                                                  (rule "mul_literals" (formula "15") (term "1,0"))
                                                                  (rule "add_literals" (formula "15") (term "0"))
                                                                  (rule "leq_literals" (formula "15"))
                                                                  (rule "closeFalse" (formula "15"))
                                                               )
                                                            )
                                                         )
                                                         (branch " if (k_29 >= 1 + left * 2 + right * -1) then (self.a[k_29]) else (0) = bsum{int i;}(1 + left * 2 + right * -1, k_29, self.a[i]) * -1 + int::select(store(heapAfter_upsweep_0, self.a, arr(right), int::select(heapAfter_upsweep_0, self.a, arr(left)) + int::select(heapAfter_upsweep_0, self.a, arr(right))), self.a, arr(k_29))"
                                                            (rule "polySimp_elimSub" (formula "33") (term "0,0,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "31") (term "0,0,0,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "17") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                                                            (rule "polySimp_elimSub" (formula "33") (term "0,0,0,0,0"))
                                                            (rule "polySimp_homoEq" (formula "45"))
                                                            (rule "polySimp_elimSub" (formula "23") (term "0,0,0,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "25") (term "0,0,0,0,0"))
                                                            (rule "polySimp_homoEq" (formula "20"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                            (rule "polySimp_homoEq" (formula "28"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                                            (rule "polySimp_homoEq" (formula "12"))
                                                            (rule "polySimp_elimSub" (formula "25") (term "0,0,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "16") (term "1,0"))
                                                            (rule "polySimp_homoEq" (formula "3"))
                                                            (rule "polySimp_homoEq" (formula "17"))
                                                            (rule "polySimp_elimSub" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                            (rule "inEqSimp_geqRight" (formula "43"))
                                                            (rule "inEqSimp_ltRight" (formula "42"))
                                                            (rule "times_zero_1" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "42"))
                                                            (rule "inEqSimp_leqRight" (formula "42"))
                                                            (rule "inEqSimp_leqRight" (formula "41"))
                                                            (rule "inEqSimp_ltRight" (formula "42"))
                                                            (rule "times_zero_1" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "20"))
                                                            (rule "inEqSimp_ltToLeq" (formula "34"))
                                                            (rule "inEqSimp_gtToGeq" (formula "18"))
                                                            (rule "inEqSimp_ltToLeq" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "38") (term "1,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "1,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "43") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,2,1,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "21") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "4") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "22") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,2,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "1,0,1,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "0,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "36") (term "0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "36") (term "0,0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "0,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "30") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                            (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,1,0"))
                                                            (rule "add_literals" (formula "38") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "38") (term "0,0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                            (rule "add_literals" (formula "5") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "5") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "5") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "30") (term "0,1,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,1,1,0"))
                                                            (rule "add_literals" (formula "30") (term "1,1,0,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "30") (term "1,0,0,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "4") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,1,0,0"))
                                                            (rule "applyEq" (formula "10") (term "1") (ifseqformula "9"))
                                                            (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "40") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_351"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "eqSymm" (formula "1") (term "0,1"))
                                                            (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "polySimp_sepPosMonomial" (formula "26"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                            (rule "polySimp_mulAssoc" (formula "26") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "0,1"))
                                                            (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "26"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                            (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0"))
                                                            (rule "applyEq" (formula "9") (term "0,1,0,0,1,0") (ifseqformula "26"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "9") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,1,0"))
                                                            (rule "applyEq" (formula "14") (term "0") (ifseqformula "26"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0"))
                                                            (rule "applyEq" (formula "44") (term "0,2,0,0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "26"))
                                                            (rule "polySimp_addAssoc" (formula "22") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor2" (formula "22") (term "0,1,0"))
                                                            (rule "add_literals" (formula "22") (term "1,0,1,0"))
                                                            (rule "times_zero_1" (formula "22") (term "0,1,0"))
                                                            (rule "add_zero_left" (formula "22") (term "1,0"))
                                                            (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "26"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                            (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "26"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                            (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "35") (term "0,0,0"))
                                                            (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "26"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0"))
                                                            (rule "applyEq" (formula "37") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                                                            (rule "polySimp_addComm1" (formula "37") (term "1,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,0,0,1,0"))
                                                            (rule "applyEq" (formula "7") (term "0,2,1,3,0,0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "45") (term "0,1,0,0,1,0") (ifseqformula "26"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,1,0"))
                                                            (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "26"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                            (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "1,0,0"))
                                                            (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "26"))
                                                            (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2" (formula "34") (term "0,0,0"))
                                                            (rule "add_literals" (formula "34") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "34") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "34") (term "0,0"))
                                                            (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "26"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0"))
                                                            (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                            (rule "applyEq" (formula "12") (term "0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "37") (term "1,0,1,0,0,1,0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "26"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                            (rule "add_literals" (formula "18") (term "0,0,0"))
                                                            (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "26"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
                                                            (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "19") (term "0,0"))
                                                            (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "26"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                                            (rule "applyEq" (formula "39") (term "1,0,1,0,0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "44") (term "0,2,1,3,0,0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "7") (term "0,2,0,0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "39") (term "1,1,0,0,0") (ifseqformula "26"))
                                                            (rule "polySimp_addComm1" (formula "39") (term "1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,0,0"))
                                                            (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "26"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                            (rule "applyEq" (formula "39") (term "1,0,1,1,0") (ifseqformula "26"))
                                                            (rule "polySimp_addComm1" (formula "39") (term "0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0"))
                                                            (rule "applyEq" (formula "45") (term "0,1,0,0,0,1,0,0") (ifseqformula "26"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0,0,0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0,0,1,0,0"))
                                                            (rule "applyEq" (formula "9") (term "0,1,0,0,0,1,0,0") (ifseqformula "26"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0,1,0,0"))
                                                            (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "26"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                            (rule "applyEq" (formula "9") (term "0,2,1,3,0,0,0,0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "45") (term "0,2,1,3,0,0,0,0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "45") (term "0,2,0,0,0,0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "9") (term "0,2,0,0,0,0") (ifseqformula "26"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "mul_literals" (formula "3") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "bsum_induction_upper_concrete" (formula "31") (term "1,1,0"))
                                                            (rule "polySimp_homoEq" (formula "31") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "31") (term "0,1,0,1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "23"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                            (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "23"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                            (rule "applyEq" (formula "7") (term "1,0,2,1,3,0,0") (ifseqformula "23"))
                                                            (rule "polySimp_addComm0" (formula "7") (term "0,2,1,3,0,0"))
                                                            (rule "applyEq" (formula "7") (term "1,0,2,0,0") (ifseqformula "23"))
                                                            (rule "polySimp_addComm0" (formula "7") (term "0,2,0,0"))
                                                            (rule "applyEq" (formula "44") (term "1,0,2,0,0") (ifseqformula "23"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,2,0,0"))
                                                            (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "23"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "1"))
                                                            (rule "add_literals" (formula "13") (term "0,1"))
                                                            (rule "applyEq" (formula "37") (term "1,1,0,1,0,0,1,0") (ifseqformula "23"))
                                                            (rule "polySimp_addComm0" (formula "37") (term "1,0,1,0,0,1,0"))
                                                            (rule "applyEq" (formula "44") (term "1,0,2,1,3,0,0") (ifseqformula "23"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,2,1,3,0,0"))
                                                            (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "23"))
                                                            (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                            (rule "add_literals" (formula "18") (term "0,0"))
                                                            (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "23"))
                                                            (rule "add_literals" (formula "19") (term "0"))
                                                            (rule "qeq_literals" (formula "19"))
                                                            (rule "true_left" (formula "19"))
                                                            (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "22"))
                                                            (rule "polySimp_addComm0" (formula "12") (term "0"))
                                                            (rule "applyEq" (formula "38") (term "1,1,0,1,0,0") (ifseqformula "22"))
                                                            (rule "polySimp_addComm0" (formula "38") (term "1,0,1,0,0"))
                                                            (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "22"))
                                                            (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "22"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                                            (rule "applyEq" (formula "38") (term "1,0,1,0,0,0") (ifseqformula "22"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0,1,0,0,0"))
                                                            (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "22"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,0"))
                                                            (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "22"))
                                                            (rule "polySimp_addComm0" (formula "25") (term "1"))
                                                            (rule "applyEq" (formula "36") (term "1,0,1,0,0,0,1,0") (ifseqformula "22"))
                                                            (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                                            (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "22"))
                                                            (rule "applyEq" (formula "38") (term "1,0,0,1,1,0") (ifseqformula "22"))
                                                            (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,0"))
                                                            (rule "add_literals" (formula "38") (term "0,0,0,1,1,0"))
                                                            (rule "applyEq" (formula "9") (term "1,0,2,1,3,0,0,0,0") (ifseqformula "22"))
                                                            (rule "polySimp_addComm0" (formula "9") (term "0,2,1,3,0,0,0,0"))
                                                            (rule "applyEq" (formula "9") (term "1,0,2,0,0,0,0") (ifseqformula "22"))
                                                            (rule "polySimp_addComm0" (formula "9") (term "0,2,0,0,0,0"))
                                                            (rule "applyEq" (formula "44") (term "1,0,2,1,3,0,0,0,0") (ifseqformula "22"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,2,1,3,0,0,0,0"))
                                                            (rule "applyEq" (formula "44") (term "1,0,2,0,0,0,0") (ifseqformula "22"))
                                                            (rule "polySimp_addComm0" (formula "44") (term "0,2,0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                            (rule "applyEq" (formula "14") (term "0") (ifseqformula "22"))
                                                            (rule "qeq_literals" (formula "14"))
                                                            (rule "closeFalse" (formula "14"))
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: int[]::select(store(heapAfter_upsweep_0, self.a, arr(right), int::select(heapAfter_upsweep_0, self.a, arr(left)) + int::select(heapAfter_upsweep_0, self.a, arr(right))), self, a) = self.a FALSE"
                                                      (rule "polySimp_elimSub" (formula "16") (term "0,1"))
                                                      (rule "polySimp_elimSub" (formula "15") (term "1,0"))
                                                      (rule "polySimp_elimSub" (formula "13") (term "0,0"))
                                                      (rule "polySimp_elimSub" (formula "22") (term "0,0,0,0,0,1,0"))
                                                      (rule "polySimp_homoEq" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "0,0,1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "24") (term "0,0,0,0,0"))
                                                      (rule "polySimp_elimSub" (formula "32") (term "0,0,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "45"))
                                                      (rule "polySimp_elimSub" (formula "11") (term "0,1"))
                                                      (rule "polySimp_elimSub" (formula "32") (term "0,0,0,0,0"))
                                                      (rule "polySimp_homoEq" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "2") (term "1"))
                                                      (rule "polySimp_elimSub" (formula "30") (term "0,0,0,0,0,1,0"))
                                                      (rule "polySimp_homoEq" (formula "16") (term "1"))
                                                      (rule "polySimp_homoEq" (formula "11"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "38"))
                                                      (rule "inEqSimp_ltRight" (formula "39"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltRight" (formula "41"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "40"))
                                                      (rule "inEqSimp_leqRight" (formula "41"))
                                                      (rule "inEqSimp_geqRight" (formula "42"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19"))
                                                      (rule "inEqSimp_ltToLeq" (formula "25"))
                                                      (rule "inEqSimp_gtToGeq" (formula "17"))
                                                      (rule "inEqSimp_ltToLeq" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "37") (term "1,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "1,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "43") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "20") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "0,2,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "0,2,1,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "7") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "21") (term "1,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,0,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "0,0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,0,1,1,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,1,0"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,0,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "37") (term "0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,1,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,1,1,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,0,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "44") (term "0,1,0,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "44") (term "0,0,0,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "9") (term "1") (ifseqformula "8"))
                                                      (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "40") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_246"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "eqSymm" (formula "1") (term "0,1"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "8") (term "0,1,1,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_247"))
                                                      (rule "eqSymm" (formula "8") (term "0,1"))
                                                      (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "23") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_248"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "eqSymm" (formula "23") (term "0,1"))
                                                      (rule "polySimp_sepPosMonomial" (formula "35"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                      (rule "polySimp_mulAssoc" (formula "35") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "35") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "35") (term "0,1"))
                                                      (rule "applyEq" (formula "24") (term "0,1,0,1") (ifseqformula "35"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                      (rule "applyEq" (formula "9") (term "0,1,0,0,0") (ifseqformula "35"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "35"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "35"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                                      (rule "applyEq" (formula "42") (term "0,2,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "42") (term "0,2,1,3,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "35"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0"))
                                                      (rule "applyEq" (formula "46") (term "0,2,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "35"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "35"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "applyEq" (formula "40") (term "1,0,1,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "8") (term "0,2,0,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "47") (term "0,1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "47") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "8") (term "0,2,1,3,0,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "35"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "27") (term "0,0,0"))
                                                      (rule "add_literals" (formula "27") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "27") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "27") (term "0,0"))
                                                      (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "35"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "22") (term "0,1,0"))
                                                      (rule "add_literals" (formula "22") (term "1,0,1,0"))
                                                      (rule "times_zero_1" (formula "22") (term "0,1,0"))
                                                      (rule "add_zero_left" (formula "22") (term "1,0"))
                                                      (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "35"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,0,0"))
                                                      (rule "applyEq" (formula "38") (term "1,1,0,0,0,1,0") (ifseqformula "35"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "38") (term "1,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "38") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "38") (term "1,1,0,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "1,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "46") (term "0,2,1,3,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "38") (term "1,0,1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "9") (term "1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                      (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,1") (ifseqformula "35"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,1"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,1,0,1"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,1,0,1"))
                                                      (rule "applyEq" (formula "12") (term "0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "35"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "35"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                                      (rule "applyEq" (formula "14") (term "0") (ifseqformula "35"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0"))
                                                      (rule "applyEq" (formula "40") (term "1,1,0,0,0") (ifseqformula "35"))
                                                      (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "40") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "40") (term "1,1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "40") (term "1,0,0,0"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "35"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                      (rule "applyEq" (formula "9") (term "0,1,0,0,0,1,0,0,1") (ifseqformula "35"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0,1,0,0,1"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,0,1,0,0,1"))
                                                      (rule "applyEq" (formula "40") (term "1,0,1,1,0") (ifseqformula "35"))
                                                      (rule "polySimp_addAssoc" (formula "40") (term "0,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0,0,1,1,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,1,0"))
                                                      (rule "add_literals" (formula "40") (term "1,1,0,1,1,0"))
                                                      (rule "times_zero_1" (formula "40") (term "1,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "40") (term "0,1,1,0"))
                                                      (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "35"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "applyEq" (formula "47") (term "0,1,0,0,0,1,0,0") (ifseqformula "35"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "47") (term "1,1,0,0,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "47") (term "0,2,1,3,0,0,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "9") (term "0,2,0,0,0,0,1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "47") (term "0,2,0,1,0,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "9") (term "0,2,0,1,0,0,0,1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "47") (term "0,2,0,0,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "47") (term "0,2,1,3,0,1,0,0,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "9") (term "0,2,1,3,0,0,0,0,1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "9") (term "0,2,1,3,0,1,0,0,0,1") (ifseqformula "35"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "mul_literals" (formula "6") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                      (rule "bsum_induction_upper_concrete" (formula "32") (term "1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "32") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "32") (term "0,1,0,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "24") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                      (rule "mul_literals" (formula "19") (term "1"))
                                                      (rule "polySimp_sepPosMonomial" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                                                      (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "46") (term "1,0,2,0,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "19") (term "0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "46") (term "1,0,2,1,3,0,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "38") (term "1,1,0,1,0,0,1,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "8") (term "1,0,2,1,3,0,0,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "40") (term "1,1,0,1,0,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "42") (term "1,0,2,1,3,0,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "9") (term "1,0,0,1,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "8") (term "1,0,2,0,0,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "42") (term "1,0,2,0,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "9") (term "1,0,2,1,3,0,0,0,0,1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "47") (term "1,0,2,1,3,0,0,0,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "47") (term "1,0,2,1,3,0,1,0,0,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "9") (term "1,0,2,0,0,0,0,1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "47") (term "1,0,2,0,0,0,0") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "9") (term "1,0,2,0,1,0,0,0,1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "9") (term "1,0,2,1,3,0,1,0,0,0,1") (ifseqformula "27"))
                                                      (rule "applyEq" (formula "47") (term "1,0,2,0,1,0,0,0") (ifseqformula "27"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "27"))
                                                      (rule "bsum_induction_upper_concrete" (formula "47") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "0,1,0,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "47") (term "0,0,1,0,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,0,0,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "47") (term "1,0,0,0,1,0,0,0") (ifseqformula "27"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "27"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                      (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                      (rule "applyEq" (formula "14") (term "0") (ifseqformula "27"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,0,0,1"))
                                                      (rule "applyEq" (formula "9") (term "0,0,0,1,0,0,1") (ifseqformula "27"))
                                                      (rule "bsum_induction_upper_concrete" (formula "40") (term "1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "40") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "40") (term "0,1,0,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "32") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
                                                      (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "27"))
                                                      (rule "polySimp_sepPosMonomial" (formula "17"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                      (rule "mul_literals" (formula "17") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                      (rule "applyEq" (formula "45") (term "1,0,2,1,3,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "45") (term "0,2,1,3,0,0"))
                                                      (rule "polySimp_addComm0" (formula "45") (term "0,0,2,1,3,0,0"))
                                                      (rule "applyEq" (formula "7") (term "1,0,2,0,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,2,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "7") (term "0,0,2,0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq0" (formula "19"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "8") (term "1,0,0,1,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "8") (term "0,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "7") (term "1,0,2,1,3,0,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,2,1,3,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "7") (term "0,0,2,1,3,0,0,0"))
                                                      (rule "applyEq" (formula "39") (term "1,1,0,1,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "39") (term "0,1,0,1,0,0"))
                                                      (rule "applyEq" (formula "41") (term "1,0,2,1,3,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,3,0,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "0,0,2,1,3,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                      (rule "add_literals" (formula "18") (term "0,0"))
                                                      (rule "applyEq" (formula "41") (term "1,0,2,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,2,0,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "0,0,2,0,0"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                                                      (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                      (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0,0"))
                                                      (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "17"))
                                                      (rule "polySimp_homoEq" (formula "23") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                                                      (rule "add_literals" (formula "23") (term "0,0,1"))
                                                      (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0,1"))
                                                      (rule "add_literals" (formula "12") (term "0,0,1"))
                                                      (rule "add_zero_left" (formula "12") (term "0,1"))
                                                      (rule "applyEq" (formula "13") (term "0") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "13"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                      (rule "add_literals" (formula "13") (term "0,0"))
                                                      (rule "applyEq" (formula "37") (term "1,1,0,1,0,0,1,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "1,0,1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "37") (term "0,1,0,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "45") (term "1,0,2,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "45") (term "0,2,0,0"))
                                                      (rule "polySimp_addComm0" (formula "45") (term "0,0,2,0,0"))
                                                      (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                                                      (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "20") (term "0,0,0"))
                                                      (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "1"))
                                                      (rule "polySimp_addComm0" (formula "34") (term "0,1"))
                                                      (rule "applyEq" (formula "8") (term "0,0,0,1,0,0,1") (ifseqformula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0,1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,0,0,1"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,1,0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,1,0,0,1"))
                                                      (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,1,0,0,1"))
                                                      (rule "applyEq" (formula "26") (term "1") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "8") (term "1,0,2,0,0,0,0,1") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,2,0,0,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "8") (term "0,0,2,0,0,0,0,1"))
                                                      (rule "applyEq" (formula "8") (term "1,0,2,1,3,0,0,0,0,1") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,2,1,3,0,0,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "8") (term "0,0,2,1,3,0,0,0,0,1"))
                                                      (rule "applyEq" (formula "8") (term "1,0,2,1,3,0,1,0,0,0,1") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,2,1,3,0,1,0,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "8") (term "0,0,2,1,3,0,1,0,0,0,1"))
                                                      (rule "applyEq" (formula "46") (term "1,0,0,0,1,0,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "8") (term "1,0,2,0,1,0,0,0,1") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0,2,0,1,0,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "8") (term "0,0,2,0,1,0,0,0,1"))
                                                      (rule "applyEq" (formula "46") (term "1,0,2,1,3,0,1,0,0,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,2,1,3,0,1,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0,2,1,3,0,1,0,0,0,0"))
                                                      (rule "applyEq" (formula "46") (term "1,0,2,0,0,0,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,2,0,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0,2,0,0,0,0,0"))
                                                      (rule "applyEq" (formula "46") (term "1,0,2,0,1,0,0,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,2,0,1,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0,2,0,1,0,0,0,0"))
                                                      (rule "applyEq" (formula "46") (term "1,0,2,1,3,0,0,0,0,0") (ifseqformula "17"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,2,1,3,0,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0,2,1,3,0,0,0,0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "39") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "46") (term "0,0,0,1,0,0") (ifseqformula "26"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,0,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0,1,0,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "23") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                      (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "21") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_64"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "0,1"))
                                                      (rule "applyEqRigid" (formula "21") (term "1,0,1") (ifseqformula "22"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "8") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                      (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "46") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_249"))
                                                      (rule "eqSymm" (formula "1") (term "0,1"))
                                                      (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                      (rule "mul_literals" (formula "12") (term "0,1"))
                                                      (rule "polySimp_sepNegMonomial" (formula "9") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "47"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                      (rule "bsum_induction_lower2_concrete" (formula "40") (term "0,0,1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "40") (term "0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1,1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "40") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "40") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "0,1,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "40") (term "0,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "0,0,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "0,0,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,1,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "0,1,0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "47") (term "0,0,1,0,0,1,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "0,0,0,1,1"))
                                                      (rule "replace_known_left" (formula "47") (term "0,0,1,1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "1"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "0,0,0,1,0"))
                                                      (rule "polySimp_homoEq" (formula "40") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "40") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,1,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "24") (term "1") (ifseqformula "14"))
                                                      (rule "mul_literals" (formula "24") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "24") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "24") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "notLeft" (formula "24"))
                                                      (rule "apply_eq_boolean_rigid" (formula "23") (term "1,0,1") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "9") (term "0,1,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "9") (term "0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "14"))
                                                      (rule "leq_literals" (formula "19") (term "0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "selectOfStore" (formula "41") (term "0"))
                                                      (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "11")))
                                                      (rule "closeTrue" (formula "41"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (builtin "One Step Simplification" (formula "39"))
                                                (builtin "Use Dependency Contract" (formula "39") (ifInst ""  (formula "15")) (ifInst ""  (formula "28")) (ifInst ""  (formula "20")) (contract "PrefixSumRec[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                (rule "wellFormedStorePrimitiveArray" (formula "32") (term "1,0,0,0,0,0"))
                                                (rule "wellFormedAnonEQ" (formula "32") (term "1,0,0,0,0,0") (ifseqformula "28"))
                                                (rule "wellFormedAnonEQ" (formula "32") (term "0,1,0,0,0,0,0") (ifseqformula "20"))
                                                (rule "commuteUnion" (formula "32") (term "0,1,0"))
                                                (rule "replace_known_left" (formula "32") (term "1,1") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "19")) (ifInst ""  (formula "27")) (ifInst ""  (formula "34")) (ifInst ""  (formula "7")) (ifInst ""  (formula "15")) (ifInst ""  (formula "40")))
                                                (rule "notLeft" (formula "32"))
                                                (rule "polySimp_elimSub" (formula "22") (term "0,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "30") (term "0,0,0,0,0"))
                                                (rule "polySimp_homoEq" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "22") (term "0,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "28") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_homoEq" (formula "9"))
                                                (rule "polySimp_elimSub" (formula "14") (term "0,1"))
                                                (rule "polySimp_elimSub" (formula "11") (term "0,0"))
                                                (rule "polySimp_elimSub" (formula "30") (term "0,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "20") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_homoEq" (formula "25"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "32") (term "0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "32") (term "0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_homoEq" (formula "14") (term "1"))
                                                (rule "inEqSimp_leqRight" (formula "36"))
                                                (rule "inEqSimp_leqRight" (formula "38"))
                                                (rule "inEqSimp_ltRight" (formula "38"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "39"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "13"))
                                                (rule "inEqSimp_ltToLeq" (formula "15"))
                                                (rule "inEqSimp_ltToLeq" (formula "21"))
                                                (rule "inEqSimp_ltToLeq" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "1,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "1,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                (rule "polySimp_addComm0" (formula "16") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                (rule "polySimp_addComm0" (formula "17") (term "1,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "17") (term "0,1,0,1"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,1,1,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,0,0,1,0,0"))
                                                (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0,0"))
                                                (rule "applyEq" (formula "5") (term "1") (ifseqformula "4"))
                                                (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "17") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_224"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "eqSymm" (formula "17") (term "0,1"))
                                                (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "37") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_225"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "1") (term "0,1"))
                                                (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "polySimp_sepPosMonomial" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                (rule "polySimp_mulAssoc" (formula "22") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,1"))
                                                (rule "applyEq" (formula "37") (term "0,1,1,0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "33") (term "1,0,1,0,0,1,0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "35") (term "1,0,1,0,0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "33") (term "1,1,0,0,0,1,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "33") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "22"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0"))
                                                (rule "applyEq" (formula "35") (term "1,1,0,0,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "35") (term "1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,0,0"))
                                                (rule "applyEq" (formula "37") (term "1,0,1,0,0,0,0,0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "22"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                                                (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "22"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "1"))
                                                (rule "applyEq" (formula "19") (term "0,1,0,1") (ifseqformula "22"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                (rule "polySimp_pullOutFactor2" (formula "30") (term "0,0,0"))
                                                (rule "add_literals" (formula "30") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "30") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "30") (term "0,0"))
                                                (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "22"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "1,0"))
                                                (rule "polySimp_pullOutFactor2" (formula "17") (term "0,1,0"))
                                                (rule "add_literals" (formula "17") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "17") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "17") (term "1,0"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0"))
                                                (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "22"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "applyEq" (formula "41") (term "0,2,0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "41") (term "0,2,1,3,0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "22"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0"))
                                                (rule "applyEq" (formula "37") (term "1,1,0,0,0,0,0,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "37") (term "1,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,0,0,0,0,0"))
                                                (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "22"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "22"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "applyEq" (formula "35") (term "1,0,1,1,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                (rule "bsum_induction_upper_concrete" (formula "27") (term "1,1,0"))
                                                (rule "polySimp_homoEq" (formula "27") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0,1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "19") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "30"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "17") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_55"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "eqSymm" (formula "17") (term "0,1"))
                                                (rule "applyEqRigid" (formula "17") (term "1,0,1") (ifseqformula "18"))
                                                (rule "polySimp_sepPosMonomial" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                (rule "mul_literals" (formula "13") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                                (rule "applyEq" (formula "42") (term "1,0,2,0") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0,2,0"))
                                                (rule "polySimp_addComm0" (formula "42") (term "0,0,2,0"))
                                                (rule "applyEq" (formula "42") (term "1,0,2,1,3,0") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0,2,1,3,0"))
                                                (rule "polySimp_addComm0" (formula "42") (term "0,0,2,1,3,0"))
                                                (rule "applyEq" (formula "15") (term "0") (ifseqformula "13"))
                                                (rule "inEqSimp_homoInEq0" (formula "15"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0"))
                                                (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                                (rule "applyEq" (formula "38") (term "1,0,1,1,0") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "38") (term "0,0,1,1,0"))
                                                (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "1"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0,1"))
                                                (rule "add_literals" (formula "8") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "8") (term "0,1"))
                                                (rule "applyEq" (formula "38") (term "1,1,0,1,0,0,0,0,0") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "38") (term "0,1,0,1,0,0,0,0,0"))
                                                (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                (rule "applyEq" (formula "34") (term "1,1,0,1,0,0,1,0") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,1,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                (rule "add_literals" (formula "14") (term "0,0"))
                                                (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "13"))
                                                (rule "polySimp_homoEq" (formula "20") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,1"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,1"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                                (rule "add_literals" (formula "20") (term "0,0,1"))
                                                (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "13"))
                                                (rule "applyEq" (formula "36") (term "1,1,0,1,0,0") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "1,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "36") (term "0,1,0,1,0,0"))
                                                (rule "applyEq" (formula "36") (term "1,0,1,0,0,0") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0"))
                                                (rule "applyEq" (formula "38") (term "1,0,1,0,0,0,0,0,0") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "38") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,0,0,0,0"))
                                                (rule "applyEq" (formula "34") (term "1,0,1,0,0,0,1,0") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "31") (term "1") (ifseqformula "13"))
                                                (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "1"))
                                                (rule "polySimp_addComm0" (formula "23") (term "0,1"))
                                                (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "16") (term "0,0,0"))
                                                (rule "applyEq" (formula "36") (term "1,0,0,1,1,0") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "13"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "add_literals" (formula "9") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                (rule "mul_literals" (formula "32") (term "0,1"))
                                                (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "1"))
                                                (rule "add_literals" (formula "32") (term "0,1"))
                                                (rule "polySimp_sepPosMonomial" (formula "28") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,0,1"))
                                                (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "13"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                (rule "add_literals" (formula "3") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "19") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                (rule "mul_literals" (formula "6") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                (rule "mul_literals" (formula "13") (term "1"))
                                                (rule "disjointToElementOf" (formula "37") (inst "fv=fv") (inst "ov=ov"))
                                                (rule "allRight" (formula "37") (inst "sk=ov_1"))
                                                (rule "allRight" (formula "37") (inst "sk=fv_1"))
                                                (rule "orRight" (formula "37"))
                                                (rule "notRight" (formula "37"))
                                                (rule "notRight" (formula "38"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                (rule "bsum_induction_upper_concrete" (formula "36") (term "1,1,0"))
                                                (rule "polySimp_homoEq" (formula "36") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "36") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                (rule "polySimp_sepPosMonomial" (formula "36") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "0,1,1,0"))
                                                (rule "elementOfSingleton" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_contradEq7" (formula "21") (term "1") (ifseqformula "11"))
                                                (rule "mul_literals" (formula "21") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "21") (term "0,0,1"))
                                                (rule "leq_literals" (formula "21") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "notLeft" (formula "21"))
                                                (rule "apply_eq_boolean_rigid" (formula "20") (term "1,0,1") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "11"))
                                                (rule "leq_literals" (formula "16") (term "0"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "newSym_eq" (formula "30") (inst "newSymDef=add(Z(neglit(1(#))), mul(mbyAtPre, Z(0(#))))") (inst "l=l_152"))
                                                (rule "times_zero_1" (formula "30") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "30") (term "1,1"))
                                                (rule "polySimp_addComm0" (formula "30") (term "1"))
                                                (rule "applyEq" (formula "34") (term "0,1,1,0,0,0,1,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "32") (term "0") (ifseqformula "30"))
                                                (rule "inEqSimp_homoInEq0" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "applyEq" (formula "3") (term "0,1,1,0,0,0,0,0,2") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0,0,0,2"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0,0,0,2"))
                                                (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0,0,0,2"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1,0,0,0,0,0,2"))
                                                (rule "polySimp_addComm0" (formula "3") (term "0,1,0,0,0,0,0,2"))
                                                (rule "applyEq" (formula "36") (term "0,1,1,0,0,1,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "36") (term "0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "36") (term "0,1,1,0,0,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "36") (term "0,1,0,0,0"))
                                                (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                                                (rule "polySimp_homoEq" (formula "31"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "applyEq" (formula "36") (term "0,1,0,0,0,1,1,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                (rule "mul_literals" (formula "31") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                (rule "applyEqRigid" (formula "36") (term "1,1,0,1,0,0") (ifseqformula "31"))
                                                (rule "polySimp_addComm1" (formula "36") (term "1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,1,0,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,1,0,1,0,0"))
                                                (rule "applyEq" (formula "34") (term "1,1,0,1,0,0,1,0") (ifseqformula "31"))
                                                (rule "polySimp_addComm1" (formula "34") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,1,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "31"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,0"))
                                                (rule "applyEq" (formula "3") (term "1,1,0,1,0,0,0,0,2") (ifseqformula "31"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1,0,1,0,0,0,0,2"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,1,0,0,0,0,2"))
                                                (rule "add_literals" (formula "3") (term "0,0,1,0,1,0,0,0,0,2"))
                                                (rule "applyEq" (formula "36") (term "1,1,0,0,0") (ifseqformula "31"))
                                                (rule "polySimp_addComm1" (formula "36") (term "1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1,0,0,0"))
                                                (rule "add_literals" (formula "36") (term "1,1,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "36") (term "1,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "36") (term "0,1,0,0,0"))
                                                (rule "applyEq" (formula "36") (term "1,1,0,0,1,0") (ifseqformula "31"))
                                                (rule "polySimp_addComm1" (formula "36") (term "1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "36") (term "1,1,0,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "36") (term "1,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "36") (term "0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "31"))
                                                (rule "inEqSimp_homoInEq0" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0"))
                                                (rule "applyEqRigid" (formula "4") (term "1,0,0") (ifseqformula "31"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                (rule "applyEq" (formula "3") (term "1,1,0,0,0,0,0,2") (ifseqformula "31"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1,0,0,0,0,0,2"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0,0,0,0,2"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,0,0,0,0,2"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,0,0,0,0,0,2"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,1,0,0,0,0,0,2"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,1,0,0,0,0,0,2"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,1,0,0,0,0,0,2"))
                                                (rule "add_literals" (formula "3") (term "0,1,0,0,0,0,0,2"))
                                                (rule "applyEqRigid" (formula "3") (term "1,0,1,1,2") (ifseqformula "31"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,1,1,2"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,1,2"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,1,1,2"))
                                                (rule "applyEq" (formula "34") (term "1,1,0,0,0,1,0") (ifseqformula "31"))
                                                (rule "polySimp_addComm1" (formula "34") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,1,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "34") (term "0,1,0,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "31"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0"))
                                                (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "31"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0"))
                                                (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "31"))
                                                (rule "polySimp_addComm0" (formula "10") (term "1"))
                                                (rule "applyEq" (formula "42") (term "1,0,2,0") (ifseqformula "31"))
                                                (rule "polySimp_addComm1" (formula "42") (term "0,2,0"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0,0,2,0"))
                                                (rule "add_literals" (formula "42") (term "0,0,0,2,0"))
                                                (rule "applyEq" (formula "42") (term "1,0,2,1,3,0") (ifseqformula "31"))
                                                (rule "polySimp_addComm1" (formula "42") (term "0,2,1,3,0"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0,0,2,1,3,0"))
                                                (rule "add_literals" (formula "42") (term "0,0,0,2,1,3,0"))
                                                (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "31"))
                                                (rule "inEqSimp_homoInEq1" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "add_literals" (formula "11") (term "0,0"))
                                                (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "31"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "1"))
                                                (rule "add_literals" (formula "15") (term "0,1"))
                                                (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "31"))
                                                (rule "polySimp_addComm1" (formula "22") (term "1"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                                (rule "add_literals" (formula "22") (term "0,0,1"))
                                                (rule "applyEq" (formula "36") (term "1,0,0,0,1,1,0") (ifseqformula "31"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                (rule "mul_literals" (formula "32") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                (rule "mul_literals" (formula "16") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                (rule "bsum_induction_lower2_concrete" (formula "36") (term "0,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "36") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,1,0"))
                                                (rule "polySimp_homoEq" (formula "36") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "36") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "0,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "36") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,0"))
                                                (rule "polySimp_homoEq" (formula "36") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "36") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "36") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "36") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "32"))
                                                (rule "greater_literals" (formula "11") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "mul_literals" (formula "11") (term "1,0"))
                                                (rule "leq_literals" (formula "11") (term "0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "elimGcdEq" (formula "14") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=result") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_152)"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "add_literals" (formula "14") (term "1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "14") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1"))
                                                (rule "add_literals" (formula "14") (term "1,0,0,1"))
                                                (rule "times_zero_1" (formula "14") (term "0,0,1"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "14") (term "0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "14") (term "0,1,0"))
                                                (rule "add_literals" (formula "14") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "14") (term "0,1,0"))
                                                (rule "qeq_literals" (formula "14") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0"))
                                                (rule "add_literals" (formula "14") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "0,0"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "applyEq" (formula "26") (term "0,1,1,0,0,1,0") (ifseqformula "14"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_homoInEq1" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "0,0"))
                                                (rule "applyEq" (formula "24") (term "0,1,1,0,0,0,1,0") (ifseqformula "14"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "3") (term "0,1,1,0,0,0,1,0,2") (ifseqformula "14"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,0,1,0,2"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,0,1,0,2"))
                                                (rule "mul_literals" (formula "3") (term "0,1,1,0,0,0,1,0,2"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1,0,0,0,1,0,2"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,1,0,0,0,1,0,2"))
                                                (rule "add_literals" (formula "3") (term "0,0,1,0,0,0,1,0,2"))
                                                (rule "applyEq" (formula "26") (term "0,1,1,0,0,0") (ifseqformula "14"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,1,0,0,0"))
                                                (rule "applyEq" (formula "26") (term "0,1,0,0,0,1,1,0") (ifseqformula "14"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                (rule "elementOfUnion" (formula "3"))
                                                (rule "elementOfSingleton" (formula "3") (term "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "selectOfAnonEQ" (formula "25") (term "1,1,1,0") (ifseqformula "23"))
                                                (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "39")))
                                                (rule "polySimp_homoEq" (formula "25") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "25") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "25") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0,1,1,0"))
                                                (rule "elementOfInfiniteUnion" (formula "25") (term "0,0,0,1,0"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,0,1,0"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "castDel" (formula "25") (term "1,0,0,1,1,0,0,0,0,1,0"))
                                                (rule "castDel" (formula "25") (term "0,0,0,0,0,0,1,0"))
                                                (rule "castDel" (formula "25") (term "0,0,1,0,0,0,0,1,0"))
                                                (rule "instanceof_static_type" (formula "25") (term "0,1,0,0,0,1,0"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "selectOfAnonEQ" (formula "40") (term "0,3,0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "39")))
                                                (rule "selectCreatedOfAnonEQ" (formula "40") (term "0,0,1,0,0,3,0") (ifseqformula "23"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "polySimp_addComm0" (formula "40") (term "3,0"))
                                                (rule "elementOfInfiniteUnion" (formula "40") (term "0,0,1,3,0"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "elementOfSingleton" (formula "40") (term "1,0,0,0,1,3,0"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "castDel" (formula "40") (term "0,0,1,0,0,0,1,3,0"))
                                                (rule "castDel" (formula "40") (term "1,0,0,1,1,0,0,0,1,3,0"))
                                                (rule "castDel" (formula "40") (term "0,0,0,0,0,1,3,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "40") (term "0,1,0,0,0,1,3,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1,0,0,0,1,3,0"))
                                                (rule "add_literals" (formula "40") (term "1,1,0,0,1,0,0,0,1,3,0"))
                                                (rule "times_zero_1" (formula "40") (term "1,0,0,1,0,0,0,1,3,0"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,1,0,0,0,1,3,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0,0,0,1,3,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0,0,0,1,3,0"))
                                                (rule "add_literals" (formula "40") (term "1,1,0,0,0,0,0,1,3,0"))
                                                (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0,1,3,0"))
                                                (rule "add_literals" (formula "40") (term "0,0,0,0,0,1,3,0"))
                                                (rule "leq_literals" (formula "40") (term "0,0,0,0,1,3,0"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "ifthenelse_negated" (formula "40") (term "1,3,0"))
                                                (rule "selectOfAnonEQ" (formula "8") (term "0") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "38")))
                                                (rule "selectCreatedOfAnonEQ" (formula "8") (term "0,0,1,0,0") (ifseqformula "23"))
                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "12")))
                                                (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "elementOfInfiniteUnion" (formula "8") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "elementOfSingleton" (formula "8") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "selectOfAnonEQ" (formula "7") (term "0") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "37")) (ifInst ""  (formula "11")))
                                                (rule "elementOfInfiniteUnion" (formula "7") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "elementOfSingleton" (formula "7") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "selectOfAnonEQ" (formula "32") (term "1,0,1,0") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "37")))
                                                (rule "elementOfInfiniteUnion" (formula "32") (term "0,0,1,0,1,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "elementOfSingleton" (formula "32") (term "1,0,0,0,1,0,1,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "castDel" (formula "32") (term "1,0,0,1,1,0,0,0,1,0,1,0"))
                                                (rule "castDel" (formula "32") (term "0,0,0,0,0,1,0,1,0"))
                                                (rule "castDel" (formula "32") (term "0,0,1,0,0,0,1,0,1,0"))
                                                (rule "instanceof_static_type" (formula "32") (term "0,1,0,0,1,0,1,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "elementOfUnion" (formula "3"))
                                                (rule "elementOfInfiniteUnion" (formula "3") (term "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "elementOfSingleton" (formula "3") (term "1,0,1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "elementOfInfiniteUnion" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "exLeft" (formula "3") (inst "sk=k_27"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "notLeft" (formula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "4"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "elementOfSingleton" (formula "5"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "closeTrue" (formula "39"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "allRight" (formula "39") (inst "sk=f_3") (userinteraction))
                                          (rule "allRight" (formula "39") (inst "sk=o_3") (userinteraction))
                                          (rule "orRight" (formula "39"))
                                          (rule "orRight" (formula "39"))
                                          (rule "andRight" (formula "40"))
                                          (branch "Case 1"
                                             (rule "notRight" (formula "40"))
                                             (rule "orLeft" (formula "15"))
                                             (branch "!even(left) = TRUE"
                                                (rule "notLeft" (formula "15"))
                                                (rule "eqSymm" (formula "41"))
                                                (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                (rule "polySimp_elimSub" (formula "12") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "25"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "28") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "30") (term "0,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "30") (term "0,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "20") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "22") (term "0,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "22") (term "0,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "10") (term "0,1"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,0"))
                                                (rule "polySimp_homoEq" (formula "10"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "36"))
                                                (rule "inEqSimp_ltRight" (formula "37"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "39"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "38"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "14"))
                                                (rule "inEqSimp_ltToLeq" (formula "21"))
                                                (rule "inEqSimp_ltToLeq" (formula "29"))
                                                (rule "inEqSimp_ltToLeq" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "1,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "1,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "17") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,1,1,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "39") (term "0,0,1,0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "39") (term "0,1,0"))
                                                (rule "replace_known_right" (formula "39") (term "0,1,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "6") (term "1") (ifseqformula "5"))
                                                (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "36") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_165"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "1") (term "0,1"))
                                                (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "36") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_166"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "1") (term "0,1"))
                                                (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "polySimp_sepPosMonomial" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                (rule "polySimp_mulAssoc" (formula "22") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,1"))
                                                (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "22"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "1"))
                                                (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "22"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0"))
                                                (rule "applyEq" (formula "33") (term "1,1,0,0,0,1,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "33") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "22"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "1,0"))
                                                (rule "polySimp_pullOutFactor2" (formula "19") (term "0,1,0"))
                                                (rule "add_literals" (formula "19") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "19") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "19") (term "1,0"))
                                                (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "41") (term "0,2,1,3,0,0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "22"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0"))
                                                (rule "applyEq" (formula "33") (term "1,0,1,0,0,1,0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "11") (term "0") (ifseqformula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0"))
                                                (rule "applyEq" (formula "35") (term "1,1,0,0,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "35") (term "1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,0,0"))
                                                (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "22"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "16") (term "0,0"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "16") (term "0,0"))
                                                (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "22"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,0,0"))
                                                (rule "applyEq" (formula "41") (term "0,2,0,0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                (rule "polySimp_pullOutFactor2" (formula "30") (term "0,0,0"))
                                                (rule "add_literals" (formula "30") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "30") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "30") (term "0,0"))
                                                (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "22"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0,0"))
                                                (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0"))
                                                (rule "applyEq" (formula "35") (term "1,0,1,0,0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "22"))
                                                (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "22"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "22"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                (rule "applyEq" (formula "35") (term "1,0,1,1,0") (ifseqformula "22"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                (rule "bsum_induction_upper_concrete" (formula "27") (term "1,1,0"))
                                                (rule "polySimp_homoEq" (formula "27") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "19") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_44"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "eqSymm" (formula "19") (term "0,1"))
                                                (rule "applyEqRigid" (formula "19") (term "1,0,1") (ifseqformula "20"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                (rule "mul_literals" (formula "32") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "31"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                (rule "polySimp_sepPosMonomial" (formula "15"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                (rule "mul_literals" (formula "15") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                (rule "applyEq" (formula "11") (term "0") (ifseqformula "15"))
                                                (rule "inEqSimp_homoInEq1" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                (rule "add_literals" (formula "11") (term "0,0"))
                                                (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "1"))
                                                (rule "add_literals" (formula "32") (term "0,1"))
                                                (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "15"))
                                                (rule "applyEq" (formula "42") (term "1,0,2,0,0") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0,2,0,0"))
                                                (rule "polySimp_addComm0" (formula "42") (term "0,0,2,0,0"))
                                                (rule "applyEq" (formula "36") (term "1,1,0,1,0,0") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "1,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "36") (term "0,1,0,1,0,0"))
                                                (rule "applyEq" (formula "42") (term "1,0,2,1,3,0,0") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0,2,1,3,0,0"))
                                                (rule "polySimp_addComm0" (formula "42") (term "0,0,2,1,3,0,0"))
                                                (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                                (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "1"))
                                                (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                                                (rule "add_literals" (formula "10") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "10") (term "0,1"))
                                                (rule "applyEq" (formula "34") (term "1,1,0,1,0,0,1,0") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,1,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "36") (term "1,0,1,0,0,0") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0"))
                                                (rule "applyEq" (formula "31") (term "1") (ifseqformula "15"))
                                                (rule "applyEq" (formula "34") (term "1,0,1,0,0,0,1,0") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "18") (term "0,0,0"))
                                                (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "1"))
                                                (rule "polySimp_addComm0" (formula "23") (term "0,1"))
                                                (rule "applyEq" (formula "36") (term "1,0,0,1,1,0") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "36") (term "0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "36") (term "0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "15"))
                                                (rule "inEqSimp_homoInEq0" (formula "17"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "28") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,0,1"))
                                                (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "15"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                (rule "add_literals" (formula "3") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                (rule "mul_literals" (formula "15") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                (rule "mul_literals" (formula "8") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                (rule "bsum_induction_upper_concrete" (formula "34") (term "1,1,0"))
                                                (rule "polySimp_homoEq" (formula "34") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "34") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,0"))
                                                (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "15") (term "0"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "newSym_eq" (formula "28") (inst "newSymDef=add(Z(neglit(1(#))), mul(mbyAtPre, Z(0(#))))") (inst "l=l_119"))
                                                (rule "times_zero_1" (formula "28") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "28") (term "1,1"))
                                                (rule "polySimp_addComm0" (formula "28") (term "1"))
                                                (rule "applyEq" (formula "34") (term "0,1,1,0,0,1,0") (ifseqformula "28"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "30") (term "0") (ifseqformula "28"))
                                                (rule "inEqSimp_homoInEq0" (formula "30"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                (rule "mul_literals" (formula "30") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                (rule "add_literals" (formula "30") (term "0,0,0"))
                                                (rule "applyEq" (formula "32") (term "0,1,1,0,0,0,1,0") (ifseqformula "28"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "0,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "34") (term "0,1,1,0,0,0") (ifseqformula "28"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,1,0,0,0"))
                                                (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "28"))
                                                (rule "polySimp_homoEq" (formula "29"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0"))
                                                (rule "applyEq" (formula "34") (term "0,1,0,0,0,1,1,0") (ifseqformula "28"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                (rule "mul_literals" (formula "29") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                (rule "applyEqRigid" (formula "16") (term "1,0,0") (ifseqformula "29"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0"))
                                                (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "29"))
                                                (rule "polySimp_addComm0" (formula "9") (term "1"))
                                                (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "29"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "applyEqRigid" (formula "40") (term "1,0,2,0,0") (ifseqformula "29"))
                                                (rule "polySimp_addComm1" (formula "40") (term "0,2,0,0"))
                                                (rule "polySimp_addAssoc" (formula "40") (term "0,0,2,0,0"))
                                                (rule "add_literals" (formula "40") (term "0,0,0,2,0,0"))
                                                (rule "applyEqRigid" (formula "34") (term "1,1,0,0,0") (ifseqformula "29"))
                                                (rule "polySimp_addComm1" (formula "34") (term "1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,1,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,1,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,1,0,0,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,1,0,0,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,1,0,0,0"))
                                                (rule "applyEqRigid" (formula "40") (term "1,0,2,1,3,0,0") (ifseqformula "29"))
                                                (rule "polySimp_addComm1" (formula "40") (term "0,2,1,3,0,0"))
                                                (rule "polySimp_addAssoc" (formula "40") (term "0,0,2,1,3,0,0"))
                                                (rule "add_literals" (formula "40") (term "0,0,0,2,1,3,0,0"))
                                                (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "29"))
                                                (rule "inEqSimp_homoInEq1" (formula "10"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                (rule "add_literals" (formula "10") (term "0,0"))
                                                (rule "applyEq" (formula "32") (term "1,1,0,0,0,1,0") (ifseqformula "29"))
                                                (rule "polySimp_addComm1" (formula "32") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "32") (term "1,1,0,1,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "32") (term "1,0,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "32") (term "1,1,0,1,0,0,1,0") (ifseqformula "29"))
                                                (rule "polySimp_addComm1" (formula "32") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,1,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "34") (term "1,1,0,1,0,0") (ifseqformula "29"))
                                                (rule "polySimp_addComm1" (formula "34") (term "1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,1,0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,1,0,1,0,0"))
                                                (rule "applyEq" (formula "34") (term "1,1,0,0,1,0") (ifseqformula "29"))
                                                (rule "polySimp_addComm1" (formula "34") (term "1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "34") (term "0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "29"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                                (rule "add_literals" (formula "30") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "30") (term "0"))
                                                (rule "add_literals" (formula "30") (term "1,1,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "1,0"))
                                                (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "29"))
                                                (rule "inEqSimp_homoInEq1" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0"))
                                                (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "29"))
                                                (rule "inEqSimp_homoInEq0" (formula "15"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0"))
                                                (rule "applyEqRigid" (formula "20") (term "1,1") (ifseqformula "29"))
                                                (rule "polySimp_addComm1" (formula "20") (term "1"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                                (rule "add_literals" (formula "20") (term "0,0,1"))
                                                (rule "applyEqRigid" (formula "14") (term "1,1") (ifseqformula "29"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "1"))
                                                (rule "add_literals" (formula "14") (term "0,1"))
                                                (rule "applyEqRigid" (formula "34") (term "1,0,0,0,1,1,0") (ifseqformula "29"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                (rule "mul_literals" (formula "30") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                (rule "mul_literals" (formula "15") (term "0,1"))
                                                (rule "bsum_induction_lower2_concrete" (formula "34") (term "0,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "34") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,1,0"))
                                                (rule "polySimp_homoEq" (formula "34") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "34") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,0"))
                                                (rule "polySimp_homoEq" (formula "34") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "30"))
                                                (rule "greater_literals" (formula "10") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "mul_literals" (formula "10") (term "1,0"))
                                                (rule "leq_literals" (formula "10") (term "0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "elimGcdEq" (formula "13") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=result") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_119)"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                (rule "add_literals" (formula "13") (term "1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "13") (term "0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,0"))
                                                (rule "add_literals" (formula "13") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "13") (term "0,1,0"))
                                                (rule "qeq_literals" (formula "13") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "13") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,1"))
                                                (rule "add_literals" (formula "13") (term "1,0,0,1"))
                                                (rule "times_zero_1" (formula "13") (term "0,0,1"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0"))
                                                (rule "add_literals" (formula "13") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "13") (term "0,0"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "applyEq" (formula "22") (term "0,1,1,0,0,0,1,0") (ifseqformula "13"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "13"))
                                                (rule "inEqSimp_homoInEq1" (formula "20"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                (rule "add_literals" (formula "20") (term "0,0"))
                                                (rule "applyEq" (formula "24") (term "0,1,1,0,0,1,0") (ifseqformula "13"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "24") (term "0,1,1,0,0,0") (ifseqformula "13"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,1,0,0,0"))
                                                (rule "applyEq" (formula "24") (term "0,1,0,0,0,1,1,0") (ifseqformula "13"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                (rule "selectOfStore" (formula "38") (term "0"))
                                                (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "37")))
                                                (rule "selectOfAnonEQ" (formula "23") (term "1,1,1,0") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "37")))
                                                (rule "polySimp_homoEq" (formula "23") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "23") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "23") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0,1,1,0"))
                                                (rule "elementOfInfiniteUnion" (formula "23") (term "0,0,0,1,0"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "elementOfSingleton" (formula "23") (term "1,0,0,0,0,1,0"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "castDel" (formula "23") (term "1,0,0,1,1,0,0,0,0,1,0"))
                                                (rule "castDel" (formula "23") (term "0,0,0,0,0,0,1,0"))
                                                (rule "castDel" (formula "23") (term "0,0,1,0,0,0,0,1,0"))
                                                (rule "instanceof_static_type" (formula "23") (term "0,1,0,0,0,1,0"))
                                                (builtin "One Step Simplification" (formula "23"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "0") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "36")) (ifInst ""  (formula "11")))
                                                (rule "elementOfInfiniteUnion" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "0") (ifseqformula "29"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "35")))
                                                (rule "selectCreatedOfAnonEQ" (formula "6") (term "0,0,1,0,0") (ifseqformula "20"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "10")))
                                                (rule "elementOfInfiniteUnion" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "31") (term "1,0,1,0") (ifseqformula "20"))
                                                (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "36")))
                                                (rule "elementOfInfiniteUnion" (formula "31") (term "0,0,1,0,1,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "elementOfSingleton" (formula "31") (term "1,0,0,0,1,0,1,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "castDel" (formula "31") (term "0,0,1,0,0,0,1,0,1,0"))
                                                (rule "castDel" (formula "31") (term "1,0,0,1,1,0,0,0,1,0,1,0"))
                                                (rule "castDel" (formula "31") (term "0,0,0,0,0,1,0,1,0"))
                                                (rule "instanceof_static_type" (formula "31") (term "0,1,0,0,1,0,1,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "selectOfAnonEQ" (formula "37") (term "0") (ifseqformula "29"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "elementOfInfiniteUnion" (formula "37") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "elementOfSingleton" (formula "37") (term "1,0,0,0,0"))
                                                (rule "eqSymm" (formula "37") (term "1,1,0,0,0,0"))
                                                (rule "eqSymm" (formula "37") (term "0,1,0,0,0,0"))
                                                (rule "replace_known_right" (formula "37") (term "0,1,0,0,0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "selectOfAnonEQ" (formula "6") (term "0") (ifseqformula "20"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "35")) (ifInst ""  (formula "10")))
                                                (rule "elementOfInfiniteUnion" (formula "6") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "elementOfSingleton" (formula "6") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "selectOfAnonEQ" (formula "30") (term "1,1,1,1,0") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")))
                                                (rule "elementOfInfiniteUnion" (formula "30") (term "0,0,1,1,1,1,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "elementOfSingleton" (formula "30") (term "1,0,0,0,1,1,1,1,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "castDel" (formula "30") (term "1,0,0,1,1,0,0,0,1,1,1,1,0"))
                                                (rule "castDel" (formula "30") (term "0,0,1,0,0,0,1,1,1,1,0"))
                                                (rule "castDel" (formula "30") (term "0,0,0,0,0,1,1,1,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "30") (term "0,1,0,0,0,1,1,1,1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "30") (term "0,0,1,0,0,0,1,1,1,1,0"))
                                                (rule "add_literals" (formula "30") (term "1,0,0,1,0,0,0,1,1,1,1,0"))
                                                (rule "times_zero_1" (formula "30") (term "0,0,1,0,0,0,1,1,1,1,0"))
                                                (rule "qeq_literals" (formula "30") (term "0,1,0,0,0,1,1,1,1,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0,0,1,1,1,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0,0,1,1,1,1,0"))
                                                (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0,1,1,1,1,0"))
                                                (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1,1,1,1,0"))
                                                (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1,1,1,1,0"))
                                                (rule "instanceof_static_type" (formula "30") (term "0,1,0,0,1,1,1,1,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "30") (term "0,0,1,0,0,1,1,1,1,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_167"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "eqSymm" (formula "30") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,0,1,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,1,1,1,1,0"))
                                                (rule "inEqSimp_subsumption6" (formula "31") (term "0,0,0,1,1,1,1,0") (ifseqformula "26"))
                                                (rule "greater_literals" (formula "31") (term "0,0,0,0,0,1,1,1,1,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "mul_literals" (formula "31") (term "1,0,0,0,0,1,1,1,1,0"))
                                                (rule "leq_literals" (formula "31") (term "0,0,0,0,1,1,1,1,0"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "selectOfAnonEQ" (formula "37") (term "0") (ifseqformula "19"))
                                                (builtin "One Step Simplification" (formula "37"))
                                                (rule "orRight" (formula "37"))
                                                (rule "notRight" (formula "37"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "elementOfInfiniteUnion" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "exLeft" (formula "1") (inst "sk=k_16"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "elementOfSingleton" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "close" (formula "42") (ifseqformula "3"))
                                             )
                                             (branch "right - left = 1"
                                                (rule "eqSymm" (formula "41"))
                                                (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                (rule "polySimp_elimSub" (formula "10") (term "0,1"))
                                                (rule "polySimp_elimSub" (formula "12") (term "0,0"))
                                                (rule "polySimp_homoEq" (formula "26"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "0,0,1,1,0"))
                                                (rule "polySimp_homoEq" (formula "18"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "0,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "31") (term "0,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "29") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "21") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "31") (term "0,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "15") (term "0"))
                                                (rule "polySimp_homoEq" (formula "10"))
                                                (rule "polySimp_homoEq" (formula "15"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                                                (rule "inEqSimp_ltRight" (formula "37"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "37"))
                                                (rule "inEqSimp_ltRight" (formula "39"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "38"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16"))
                                                (rule "inEqSimp_gtToGeq" (formula "14"))
                                                (rule "inEqSimp_ltToLeq" (formula "30"))
                                                (rule "inEqSimp_ltToLeq" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_addComm0" (formula "26") (term "1,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "1,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "17") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                (rule "polySimp_addComm0" (formula "18") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,1,1,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "32") (term "1,1,0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,1,1,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "40") (term "1,1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "39") (term "0,0,1,0") (ifseqformula "4"))
                                                (rule "eqSymm" (formula "39") (term "0,1,0"))
                                                (rule "replace_known_right" (formula "39") (term "0,1,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "false_right" (formula "39"))
                                                (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "6") (term "1") (ifseqformula "5"))
                                                (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "36") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_168"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "1") (term "0,1"))
                                                (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "polySimp_sepPosMonomial" (formula "30"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                (rule "polySimp_mulAssoc" (formula "30") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "30") (term "0,1"))
                                                (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0"))
                                                (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0"))
                                                (rule "applyEq" (formula "33") (term "1,0,1,0,0,1,0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0"))
                                                (rule "applyEq" (formula "33") (term "1,1,0,0,0,1,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "33") (term "1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "33") (term "1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "40") (term "0,2,1,3,0,0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                                (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                (rule "polySimp_pullOutFactor2" (formula "22") (term "0,0,0"))
                                                (rule "add_literals" (formula "22") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "22") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "22") (term "0,0"))
                                                (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                (rule "applyEq" (formula "35") (term "1,1,0,0,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "35") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "35") (term "1,1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "35") (term "1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "1,0,0,0"))
                                                (rule "applyEq" (formula "8") (term "0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "40") (term "0,2,0,0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "1,0"))
                                                (rule "polySimp_pullOutFactor2" (formula "18") (term "0,1,0"))
                                                (rule "add_literals" (formula "18") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "18") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "18") (term "1,0"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "30"))
                                                (rule "inEqSimp_homoInEq1" (formula "10"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "35") (term "1,0,1,0,0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0"))
                                                (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "applyEq" (formula "35") (term "1,0,1,1,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,1,0"))
                                                (rule "add_literals" (formula "35") (term "1,1,0,1,1,0"))
                                                (rule "times_zero_1" (formula "35") (term "1,0,1,1,0"))
                                                (rule "add_zero_right" (formula "35") (term "0,1,1,0"))
                                                (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                (rule "bsum_induction_upper_concrete" (formula "27") (term "1,1,0"))
                                                (rule "polySimp_homoEq" (formula "27") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0,1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "19"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "19"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                (rule "applyEq" (formula "35") (term "1,1,0,1,0,0") (ifseqformula "19"))
                                                (rule "polySimp_addComm0" (formula "35") (term "1,0,1,0,0"))
                                                (rule "applyEq" (formula "40") (term "1,0,2,1,3,0,0") (ifseqformula "19"))
                                                (rule "polySimp_addComm0" (formula "40") (term "0,2,1,3,0,0"))
                                                (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "19"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                (rule "add_literals" (formula "14") (term "0,0"))
                                                (rule "applyEq" (formula "40") (term "1,0,2,0,0") (ifseqformula "19"))
                                                (rule "polySimp_addComm0" (formula "40") (term "0,2,0,0"))
                                                (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "19"))
                                                (rule "add_literals" (formula "15") (term "0"))
                                                (rule "qeq_literals" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "18"))
                                                (rule "polySimp_addComm0" (formula "8") (term "0"))
                                                (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "18"))
                                                (rule "polySimp_addComm0" (formula "21") (term "0"))
                                                (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "18"))
                                                (rule "polySimp_addComm1" (formula "9") (term "1"))
                                                (rule "add_literals" (formula "9") (term "0,1"))
                                                (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "18"))
                                                (rule "applyEq" (formula "32") (term "1,1,0,1,0,0,1,0") (ifseqformula "18"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "18"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0"))
                                                (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "18"))
                                                (rule "polySimp_addComm0" (formula "29") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                (rule "applyEq" (formula "22") (term "0") (ifseqformula "18"))
                                                (rule "inEqSimp_homoInEq1" (formula "22"))
                                                (rule "mul_literals" (formula "22") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "0,0"))
                                                (rule "add_zero_left" (formula "22") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "10"))
                                                (rule "closeFalse" (formula "10"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "notRight" (formula "40"))
                                             (rule "orLeft" (formula "15"))
                                             (branch "!even(left) = TRUE"
                                                (rule "notLeft" (formula "15"))
                                                (rule "selectOfStore" (formula "41") (term "1") (userinteraction))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "castDel" (formula "41") (term "1,1") (userinteraction))
                                                (rule "ifthenelse_split" (formula "41") (term "1") (userinteraction))
                                                (branch "self.a = o_3 & arr(right) = f_3 TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "eqSymm" (formula "42") (term "1,1,0"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "eqSymm" (formula "2"))
                                                   (rule "replace_known_left" (formula "42") (term "0,1,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "polySimp_elimSub" (formula "32") (term "0,0,0,0,0"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                                                   (rule "polySimp_homoEq" (formula "19"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                   (rule "polySimp_elimSub" (formula "16") (term "1,0"))
                                                   (rule "polySimp_homoEq" (formula "27"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                                   (rule "polySimp_elimSub" (formula "24") (term "0,0,0,0,0"))
                                                   (rule "polySimp_elimSub" (formula "24") (term "0,0,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "22") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "12") (term "0,1"))
                                                   (rule "polySimp_elimSub" (formula "32") (term "0,0,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "30") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_homoEq" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                   (rule "inEqSimp_ltRight" (formula "41"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "40"))
                                                   (rule "inEqSimp_ltRight" (formula "40"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "40"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18"))
                                                   (rule "inEqSimp_gtToGeq" (formula "16"))
                                                   (rule "inEqSimp_ltToLeq" (formula "31"))
                                                   (rule "inEqSimp_ltToLeq" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "1,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "27") (term "1,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "19") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,1,0"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "1,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,1,1,0"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0"))
                                                   (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "8") (term "1") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "42") (term "2,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "castDel" (formula "41") (term "0,0,1,0"))
                                                   (rule "castDel" (formula "41") (term "0,0,0"))
                                                   (rule "castDel" (formula "41") (term "1,0,0,1,1,0"))
                                                   (rule "replace_known_right" (formula "41") (term "0,1,1,0") (ifseqformula "38"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0"))
                                                   (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "41") (term "0,1,0"))
                                                   (rule "add_literals" (formula "41") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "41") (term "0,1,0"))
                                                   (rule "qeq_literals" (formula "41") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "instanceof_static_type" (formula "41") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "41"))
                                                   (rule "inEqSimp_leqRight" (formula "41"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "38") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_222"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "1") (term "0,1"))
                                                   (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "40") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_223"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "1") (term "0,1"))
                                                   (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "41"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "25"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "25") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "0,1"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "25"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "0,0"))
                                                   (rule "add_zero_left" (formula "3") (term "0"))
                                                   (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "25"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                                   (rule "applyEq" (formula "14") (term "0") (ifseqformula "25"))
                                                   (rule "inEqSimp_homoInEq1" (formula "14"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                   (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0"))
                                                   (rule "applyEq" (formula "36") (term "1,0,1,0,0,1,0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "25"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "19") (term "0,0"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "38") (term "1,1,0,0,0") (ifseqformula "25"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,0,0"))
                                                   (rule "applyEq" (formula "38") (term "1,0,1,0,0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "25"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0"))
                                                   (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "25"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0,0"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                   (rule "applyEq" (formula "44") (term "0,2,0") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "25"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                   (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "1,0,0"))
                                                   (rule "applyEq" (formula "36") (term "1,1,0,0,0,1,0") (ifseqformula "25"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "25"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor2" (formula "22") (term "0,1,0"))
                                                   (rule "add_literals" (formula "22") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "22") (term "0,1,0"))
                                                   (rule "add_zero_left" (formula "22") (term "1,0"))
                                                   (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "25"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                                   (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                                   (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "25"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor2" (formula "33") (term "0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "1,0,0,0"))
                                                   (rule "times_zero_1" (formula "33") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "33") (term "0,0"))
                                                   (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "25"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                   (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "25"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                   (rule "applyEq" (formula "44") (term "0,2,1,1") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "25"))
                                                   (rule "applyEq" (formula "38") (term "1,0,1,1,0") (ifseqformula "25"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "bsum_induction_upper_concrete" (formula "30") (term "1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "30") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "30") (term "0,1,0,1,0"))
                                                   (rule "inEqSimp_invertInEq1" (formula "3"))
                                                   (rule "times_zero_2" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "18"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                                   (rule "applyEq" (formula "14") (term "0") (ifseqformula "18"))
                                                   (rule "inEqSimp_homoInEq1" (formula "14"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                   (rule "add_literals" (formula "14") (term "0,0"))
                                                   (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                                                   (rule "add_literals" (formula "13") (term "0,0,1"))
                                                   (rule "add_zero_left" (formula "13") (term "0,1"))
                                                   (rule "applyEq" (formula "38") (term "1,1,0,1,0,0") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "38") (term "0,1,0,1,0,0"))
                                                   (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "44") (term "1,0,2,0") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,2,0"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,0,2,0"))
                                                   (rule "applyEq" (formula "36") (term "1,1,0,1,0,0,1,0") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "1,0,1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "36") (term "0,1,0,1,0,0,1,0"))
                                                   (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                                   (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                   (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                   (rule "add_literals" (formula "19") (term "0,0"))
                                                   (rule "applyEq" (formula "38") (term "1,0,1,0,0,0") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,0"))
                                                   (rule "applyEq" (formula "36") (term "1,0,1,0,0,0,1,0") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "1"))
                                                   (rule "polySimp_addComm0" (formula "25") (term "0,1"))
                                                   (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                   (rule "add_zero_left" (formula "21") (term "0,0,0"))
                                                   (rule "applyEq" (formula "8") (term "1,0,1") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "8") (term "0,0,1"))
                                                   (rule "applyEq" (formula "44") (term "1,0,2,1,1") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,2,1,1"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "0,0,2,1,1"))
                                                   (rule "applyEq" (formula "38") (term "1,0,0,1,1,0") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "38") (term "0,0,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                   (rule "applyEq" (formula "20") (term "0") (ifseqformula "18"))
                                                   (rule "inEqSimp_homoInEq0" (formula "20"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "30") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                   (rule "mul_literals" (formula "34") (term "0,1"))
                                                   (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "1"))
                                                   (rule "add_literals" (formula "34") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                   (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "1,0,1"))
                                                   (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                                                   (rule "add_literals" (formula "6") (term "0,0,1"))
                                                   (rule "add_zero_left" (formula "6") (term "0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "32"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                   (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "21") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_54"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "eqSymm" (formula "21") (term "0,1"))
                                                   (rule "applyEqRigid" (formula "21") (term "1,0,1") (ifseqformula "22"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                   (rule "mul_literals" (formula "11") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                   (rule "mul_literals" (formula "18") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                   (rule "bsum_induction_upper_concrete" (formula "37") (term "1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "37") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "37") (term "0,1,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "37") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "0,1,1,0"))
                                                   (rule "narrowSelectArrayType" (formula "43") (term "0") (ifseqformula "14"))
                                                   (rule "polySimp_homoEq" (formula "43"))
                                                   (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "43"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                   (rule "polySimp_mulAssoc" (formula "43") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "43") (term "0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "43") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "43") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq5" (formula "3") (ifseqformula "25"))
                                                   (rule "mul_literals" (formula "3") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "3") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch "self.a = o_3 & arr(right) = f_3 FALSE"
                                                   (rule "eqSymm" (formula "42"))
                                                   (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                   (rule "eqSymm" (formula "41") (term "1"))
                                                   (rule "eqSymm" (formula "41") (term "0"))
                                                   (rule "polySimp_elimSub" (formula "30") (term "0,0,0,0,0"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "1,0"))
                                                   (rule "polySimp_elimSub" (formula "28") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "20") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "10") (term "0,1"))
                                                   (rule "polySimp_homoEq" (formula "25"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                                   (rule "polySimp_elimSub" (formula "22") (term "0,0,1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "17"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                   (rule "polySimp_elimSub" (formula "12") (term "0,0"))
                                                   (rule "polySimp_elimSub" (formula "30") (term "0,0,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "22") (term "0,0,0,0,0"))
                                                   (rule "polySimp_homoEq" (formula "10"))
                                                   (rule "inEqSimp_ltRight" (formula "39"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "36"))
                                                   (rule "inEqSimp_ltRight" (formula "37"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "38"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "21"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16"))
                                                   (rule "inEqSimp_gtToGeq" (formula "14"))
                                                   (rule "inEqSimp_ltToLeq" (formula "29"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "25") (term "1,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "33") (term "1,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "17") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,1,1,0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "33") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "33") (term "0,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,1,1,0"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                   (rule "applyEq" (formula "6") (term "1") (ifseqformula "5"))
                                                   (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "35") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_211"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "1") (term "0,1"))
                                                   (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "37") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_212"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "1") (term "0,1"))
                                                   (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "38"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "30"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                   (rule "polySimp_mulAssoc" (formula "30") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "0,1"))
                                                   (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "30"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "1"))
                                                   (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "30"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor2" (formula "19") (term "0,1,0"))
                                                   (rule "add_literals" (formula "19") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "19") (term "0,1,0"))
                                                   (rule "add_zero_left" (formula "19") (term "1,0"))
                                                   (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "30"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0"))
                                                   (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "30"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor2" (formula "22") (term "0,0,0"))
                                                   (rule "add_literals" (formula "22") (term "1,0,0,0"))
                                                   (rule "times_zero_1" (formula "22") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "22") (term "0,0"))
                                                   (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "30"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0"))
                                                   (rule "applyEq" (formula "41") (term "0,1,1,0,0,0") (ifseqformula "30"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,0,0,0"))
                                                   (rule "add_literals" (formula "41") (term "1,1,0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0,0,0"))
                                                   (rule "applyEq" (formula "11") (term "0") (ifseqformula "30"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0"))
                                                   (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "30"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "16") (term "0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0"))
                                                   (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "30"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                   (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,0"))
                                                   (rule "applyEq" (formula "41") (term "1,0,1,0,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "35") (term "1,1,0,0,0") (ifseqformula "30"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "35") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "35") (term "1,1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "35") (term "1,1,0,0,0"))
                                                   (rule "add_zero_right" (formula "35") (term "1,0,0,0"))
                                                   (rule "applyEq" (formula "33") (term "1,0,1,0,0,1,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "30"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,0,0"))
                                                   (rule "applyEq" (formula "33") (term "1,1,0,0,0,1,0") (ifseqformula "30"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "33") (term "1,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,1,0,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "33") (term "1,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "9") (term "0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "35") (term "1,0,1,0,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "42") (term "0,1,1") (ifseqformula "30"))
                                                   (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "30"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "30"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "applyEq" (formula "35") (term "1,0,1,1,0") (ifseqformula "30"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,1,0"))
                                                   (rule "add_literals" (formula "35") (term "1,1,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                   (rule "mul_literals" (formula "5") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                   (rule "bsum_induction_upper_concrete" (formula "27") (term "1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "27") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "22"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "1"))
                                                   (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "41") (term "1,1,0,1,0,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "35") (term "1,1,0,1,0,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "33") (term "1,1,0,1,0,0,1,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "42") (term "1,0,1,1") (ifseqformula "22"))
                                                   (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "22"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                   (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                   (rule "applyEq" (formula "11") (term "0") (ifseqformula "22"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "22"))
                                                   (rule "polySimp_sepPosMonomial" (formula "27") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "0,1,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "15"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                   (rule "mul_literals" (formula "15") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                   (rule "applyEq" (formula "11") (term "0") (ifseqformula "15"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                   (rule "add_literals" (formula "11") (term "0,0"))
                                                   (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "15"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                   (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "15"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                   (rule "add_literals" (formula "16") (term "0,0"))
                                                   (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "15"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                                                   (rule "add_literals" (formula "10") (term "0,0,1"))
                                                   (rule "add_zero_left" (formula "10") (term "0,1"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "15"))
                                                   (rule "inEqSimp_homoInEq0" (formula "17"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0"))
                                                   (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "15"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                   (rule "applyEq" (formula "41") (term "1,1,0,1,0,0") (ifseqformula "15"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "41") (term "0,1,0,1,0,0"))
                                                   (rule "applyEq" (formula "33") (term "1,1,0,1,0,0,1,0") (ifseqformula "15"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "1,0,1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "33") (term "0,1,0,1,0,0,1,0"))
                                                   (rule "applyEq" (formula "35") (term "1,1,0,1,0,0") (ifseqformula "15"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "35") (term "0,1,0,1,0,0"))
                                                   (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "42") (term "1,0,1,1") (ifseqformula "15"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "0,1,1"))
                                                   (rule "polySimp_addComm0" (formula "42") (term "0,0,1,1"))
                                                   (rule "applyEq" (formula "22") (term "1") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "15"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                   (rule "add_zero_left" (formula "18") (term "0,0,0"))
                                                   (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "15"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "1"))
                                                   (rule "polySimp_addComm0" (formula "30") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,0,1"))
                                                   (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "22"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                   (rule "add_literals" (formula "3") (term "0,0,1"))
                                                   (rule "add_zero_left" (formula "3") (term "0,1"))
                                                   (rule "bsum_induction_upper_concrete" (formula "34") (term "1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "34") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,1,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                   (rule "mul_literals" (formula "15") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                   (rule "mul_literals" (formula "8") (term "0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,0"))
                                                   (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "18") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_50"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "eqSymm" (formula "18") (term "0,1"))
                                                   (rule "applyEqRigid" (formula "18") (term "1,0,1") (ifseqformula "19"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                   (rule "bsum_induction_lower2_concrete" (formula "34") (term "0,0,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "34") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "34") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "0,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "34") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,0"))
                                                   (rule "polySimp_homoEq" (formula "34") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "15") (term "0"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "15"))
                                                   (rule "mul_literals" (formula "10") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                   (rule "add_literals" (formula "10") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                   (rule "mul_literals" (formula "10") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "10"))
                                                   (rule "leq_literals" (formula "3") (term "0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "newSym_eq" (formula "20") (inst "newSymDef=add(Z(neglit(1(#))), mul(mbyAtPre, Z(0(#))))") (inst "l=l_149"))
                                                   (rule "times_zero_1" (formula "20") (term "1,1,1"))
                                                   (rule "add_literals" (formula "20") (term "1,1"))
                                                   (rule "polySimp_addComm0" (formula "20") (term "1"))
                                                   (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "20"))
                                                   (rule "polySimp_homoEq" (formula "21"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,0,0"))
                                                   (rule "applyEq" (formula "40") (term "0,1,1,0,0,0") (ifseqformula "20"))
                                                   (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,0,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,1,0,0,0"))
                                                   (rule "applyEq" (formula "30") (term "0") (ifseqformula "20"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                   (rule "add_literals" (formula "30") (term "0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "21"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                   (rule "mul_literals" (formula "21") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                   (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "21"))
                                                   (rule "inEqSimp_homoInEq1" (formula "10"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                   (rule "add_literals" (formula "10") (term "0,0"))
                                                   (rule "applyEq" (formula "34") (term "1,1,0,1,0,0") (ifseqformula "21"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,1,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,1,0,1,0,0"))
                                                   (rule "applyEq" (formula "40") (term "1,1,0,1,0,0") (ifseqformula "21"))
                                                   (rule "polySimp_addComm1" (formula "40") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,1,0,0"))
                                                   (rule "add_literals" (formula "40") (term "0,0,1,0,1,0,0"))
                                                   (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "21"))
                                                   (rule "inEqSimp_homoInEq0" (formula "15"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0"))
                                                   (rule "applyEq" (formula "32") (term "1,1,0,1,0,0,1,0") (ifseqformula "21"))
                                                   (rule "polySimp_addComm1" (formula "32") (term "1,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,1,0,1,0,0,1,0"))
                                                   (rule "applyEqRigid" (formula "16") (term "1,0,0") (ifseqformula "21"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0,0"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "21"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0,0"))
                                                   (rule "applyEqRigid" (formula "1") (term "1,0,0") (ifseqformula "21"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "21"))
                                                   (rule "polySimp_addComm0" (formula "8") (term "1"))
                                                   (rule "applyEqRigid" (formula "41") (term "1,0,1,1") (ifseqformula "21"))
                                                   (rule "polySimp_addComm1" (formula "41") (term "0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1"))
                                                   (rule "add_literals" (formula "41") (term "0,0,0,1,1"))
                                                   (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "21"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "1"))
                                                   (rule "add_literals" (formula "14") (term "0,1"))
                                                   (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "21"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "1"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                                                   (rule "add_literals" (formula "29") (term "0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                   (rule "mul_literals" (formula "15") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                   (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "30"))
                                                   (rule "greater_literals" (formula "10") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "mul_literals" (formula "10") (term "1,0"))
                                                   (rule "leq_literals" (formula "10") (term "0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "elimGcdEq" (formula "13") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=result") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_149)"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "add_literals" (formula "13") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,0"))
                                                   (rule "add_literals" (formula "13") (term "1,0,1,0"))
                                                   (rule "times_zero_1" (formula "13") (term "0,1,0"))
                                                   (rule "qeq_literals" (formula "13") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
                                                   (rule "add_zero_left" (formula "13") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,1"))
                                                   (rule "add_literals" (formula "13") (term "1,0,0,1"))
                                                   (rule "times_zero_1" (formula "13") (term "0,0,1"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0"))
                                                   (rule "add_literals" (formula "13") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "13") (term "0,0"))
                                                   (rule "leq_literals" (formula "13") (term "0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "applyEq" (formula "23") (term "0,1,1,0,0,0,1,0") (ifseqformula "13"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "applyEq" (formula "21") (term "0") (ifseqformula "13"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                   (rule "add_literals" (formula "21") (term "0,0"))
                                                   (rule "applyEq" (formula "25") (term "0,1,1,0,0,1,0") (ifseqformula "13"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,1,0,0,1,0"))
                                                   (rule "applyEq" (formula "25") (term "0,1,1,0,0,0") (ifseqformula "13"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,1,0,0,0"))
                                                   (rule "applyEq" (formula "25") (term "0,1,0,0,0,1,1,0") (ifseqformula "13"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                   (rule "selectOfAnonEQ" (formula "24") (term "1,1,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "37")))
                                                   (rule "polySimp_homoEq" (formula "24") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "24") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "24") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "0,1,1,0"))
                                                   (rule "elementOfInfiniteUnion" (formula "24") (term "0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "castDel" (formula "24") (term "1,0,0,1,1,0,0,0,0,1,0"))
                                                   (rule "castDel" (formula "24") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "castDel" (formula "24") (term "0,0,1,0,0,0,0,1,0"))
                                                   (rule "instanceof_static_type" (formula "24") (term "0,1,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "selectOfAnonEQ" (formula "32") (term "1,0,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "37")))
                                                   (rule "elementOfInfiniteUnion" (formula "32") (term "0,0,1,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "elementOfSingleton" (formula "32") (term "1,0,0,0,1,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "castDel" (formula "32") (term "1,0,0,1,1,0,0,0,1,0,1,0"))
                                                   (rule "castDel" (formula "32") (term "0,0,0,0,0,1,0,1,0"))
                                                   (rule "castDel" (formula "32") (term "0,0,1,0,0,0,1,0,1,0"))
                                                   (rule "instanceof_static_type" (formula "32") (term "0,1,0,0,1,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "selectOfAnonEQ" (formula "40") (term "0") (ifseqformula "30"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "40") (term "0,0,1,1,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "4")))
                                                   (rule "elementOfInfiniteUnion" (formula "40") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "elementOfSingleton" (formula "40") (term "1,0,0,0,0"))
                                                   (rule "eqSymm" (formula "40") (term "1,1,0,0,0,0"))
                                                   (rule "selectOfAnonEQ" (formula "6") (term "0") (ifseqformula "30"))
                                                   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "36")))
                                                   (rule "selectCreatedOfAnonEQ" (formula "6") (term "0,0,1,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "11")))
                                                   (rule "applyEq" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "elementOfInfiniteUnion" (formula "6") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "elementOfSingleton" (formula "6") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "selectOfAnonEQ" (formula "5") (term "0") (ifseqformula "21"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "35")) (ifInst ""  (formula "10")))
                                                   (rule "elementOfInfiniteUnion" (formula "5") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "selectOfAnonEQ" (formula "30") (term "1,0,1,1,0") (ifseqformula "28"))
                                                   (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")))
                                                   (rule "selectCreatedOfAnonEQ" (formula "30") (term "0,0,1,0,1,0,1,1,0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "polySimp_homoEq" (formula "30") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "30") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "0,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "30") (term "0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "0,0,1,1,0"))
                                                   (rule "elementOfInfiniteUnion" (formula "30") (term "0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "elementOfSingleton" (formula "30") (term "1,0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "castDel" (formula "30") (term "0,0,0,0,0,0,1,0"))
                                                   (rule "castDel" (formula "30") (term "0,0,1,0,0,0,0,1,0"))
                                                   (rule "castDel" (formula "30") (term "1,0,0,1,1,0,0,0,0,1,0"))
                                                   (rule "instanceof_static_type" (formula "30") (term "0,1,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "selectOfAnonEQ" (formula "38") (term "2,0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "4")))
                                                   (rule "elementOfInfiniteUnion" (formula "38") (term "0,0,2,0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "elementOfSingleton" (formula "38") (term "1,0,0,0,2,0"))
                                                   (rule "eqSymm" (formula "38") (term "1,1,0,0,0,2,0"))
                                                   (rule "selectOfAnonEQ" (formula "30") (term "1,0,1,0,1,1,0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")))
                                                   (rule "elementOfInfiniteUnion" (formula "30") (term "0,0,1,0,1,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "elementOfSingleton" (formula "30") (term "1,0,0,0,1,0,1,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "castDel" (formula "30") (term "0,0,0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "castDel" (formula "30") (term "0,0,1,0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "castDel" (formula "30") (term "1,0,0,1,1,0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "30") (term "0,1,0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "30") (term "0,0,1,0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "add_literals" (formula "30") (term "1,0,0,1,0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "times_zero_1" (formula "30") (term "0,0,1,0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "qeq_literals" (formula "30") (term "0,1,0,0,0,1,0,1,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "instanceof_static_type" (formula "30") (term "0,1,0,0,1,0,1,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "30") (term "0,0,1,0,0,1,0,1,0,1,1,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_213"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "eqSymm" (formula "30") (term "0,1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "inEqSimp_subsumption6" (formula "31") (term "0,0,0,1,0,1,0,1,1,0") (ifseqformula "26"))
                                                   (rule "mul_literals" (formula "31") (term "1,1,0,0,0,0,1,0,1,0,1,1,0"))
                                                   (rule "greater_literals" (formula "31") (term "0,0,0,0,0,1,0,1,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "leq_literals" (formula "31") (term "0,0,0,0,1,0,1,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "selectOfAnonEQ" (formula "31") (term "2,0,1,0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "36")))
                                                   (rule "elementOfInfiniteUnion" (formula "31") (term "0,0,2,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "elementOfSingleton" (formula "31") (term "1,0,0,0,2,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "castDel" (formula "31") (term "1,0,0,1,1,0,0,0,2,0,1,0"))
                                                   (rule "castDel" (formula "31") (term "0,0,1,0,0,0,2,0,1,0"))
                                                   (rule "castDel" (formula "31") (term "0,0,0,0,0,2,0,1,0"))
                                                   (rule "instanceof_static_type" (formula "31") (term "0,1,0,0,2,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "selectOfAnonEQ" (formula "31") (term "2,0,0,1,1,0") (ifseqformula "20"))
                                                   (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "36")))
                                                   (rule "elementOfInfiniteUnion" (formula "31") (term "0,0,2,0,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "elementOfSingleton" (formula "31") (term "1,0,0,0,2,0,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "castDel" (formula "31") (term "1,0,0,1,1,0,0,0,2,0,0,1,1,0"))
                                                   (rule "castDel" (formula "31") (term "0,0,1,0,0,0,2,0,0,1,1,0"))
                                                   (rule "castDel" (formula "31") (term "0,0,0,0,0,2,0,0,1,1,0"))
                                                   (rule "instanceof_static_type" (formula "31") (term "0,1,0,0,2,0,0,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "commute_and" (formula "37") (term "1,0"))
                                                   (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "15"))
                                                   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "36")))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "inEqSimp_gtToGeq" (formula "15"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0"))
                                                   (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "16") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_51"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "eqSymm" (formula "16") (term "0,1"))
                                                   (rule "applyEqRigid" (formula "16") (term "1,0,1") (ifseqformula "17"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                   (rule "mul_literals" (formula "15") (term "1"))
                                                   (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "34"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "andLeft" (formula "34"))
                                                   (rule "andLeft" (formula "34"))
                                                   (rule "notLeft" (formula "34"))
                                                   (rule "inEqSimp_gtToGeq" (formula "34"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0"))
                                                   (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "35") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_52"))
                                                   (rule "eqSymm" (formula "35") (term "0,1"))
                                                   (rule "applyEqRigid" (formula "35") (term "1,0,1") (ifseqformula "36"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                   (rule "mul_literals" (formula "34") (term "1"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0,0,1,0") (ifseqformula "30"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "35") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "replace_known_left" (formula "35") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "elementOfInfiniteUnion" (formula "35") (term "0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "elementOfSingleton" (formula "35") (term "1,0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectOfAnonEQ" (formula "37") (term "0") (ifseqformula "30"))
                                                   (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "40")))
                                                   (rule "selectCreatedOfAnonEQ" (formula "37") (term "0,0,1,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "9")))
                                                   (rule "elementOfInfiniteUnion" (formula "37") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "elementOfSingleton" (formula "37") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "37"))
                                                   (rule "selectOfAnonEQ" (formula "34") (term "0,0") (ifseqformula "30"))
                                                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
                                                   (rule "selectCreatedOfAnonEQ" (formula "34") (term "0,0,1,0,0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "9")))
                                                   (rule "elementOfInfiniteUnion" (formula "34") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "elementOfSingleton" (formula "34") (term "1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "selectOfAnonEQ" (formula "35") (term "0,0,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "replace_known_left" (formula "35") (term "0,1,1,0,0,0,1,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "elementOfInfiniteUnion" (formula "35") (term "0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "elementOfSingleton" (formula "35") (term "1,0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "selectOfAnonEQ" (formula "34") (term "0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")) (ifInst ""  (formula "9")))
                                                   (rule "elementOfInfiniteUnion" (formula "34") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "elementOfSingleton" (formula "34") (term "1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "15")))
                                                   (rule "true_left" (formula "34"))
                                                   (rule "selectOfAnonEQ" (formula "36") (term "0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "39")) (ifInst ""  (formula "9")))
                                                   (rule "elementOfInfiniteUnion" (formula "36") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "36"))
                                                   (rule "elementOfSingleton" (formula "36") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "40")))
                                                   (rule "false_right" (formula "36"))
                                                   (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "25"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "notLeft" (formula "25"))
                                                   (rule "inEqSimp_gtToGeq" (formula "25"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "25") (term "0,0"))
                                                   (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "26") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_53"))
                                                   (rule "eqSymm" (formula "26") (term "0,1"))
                                                   (rule "applyEqRigid" (formula "26") (term "1,0,1") (ifseqformula "27"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                   (rule "mul_literals" (formula "25") (term "1"))
                                                   (rule "selectOfAnonEQ" (formula "38") (term "0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "41")) (ifInst ""  (formula "9")))
                                                   (rule "elementOfInfiniteUnion" (formula "38") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "elementOfSingleton" (formula "38") (term "1,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "42")))
                                                   (rule "false_right" (formula "38"))
                                                   (rule "selectOfAnonEQ" (formula "26") (term "0,0,1,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "replace_known_right" (formula "26") (term "0,0,1,0,0,0,1,0") (ifseqformula "40"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "replace_known_left" (formula "26") (term "0,1,0,0,0,1,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "elementOfInfiniteUnion" (formula "26") (term "0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "selectOfAnonEQ" (formula "25") (term "0,0") (ifseqformula "22"))
                                                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "40")) (ifInst ""  (formula "9")))
                                                   (rule "elementOfInfiniteUnion" (formula "25") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "15")))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "cut_direct" (formula "42") (term "0"))
                                                   (branch "CUT: o_3 = self.a TRUE"
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "replace_known_left" (formula "44") (term "0,1,0,0,0,2,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "1")))
                                                      (rule "replace_known_left" (formula "42") (term "1,1,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "applyEq" (formula "44") (term "1,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
                                                      (rule "replace_known_left" (formula "35") (term "0,1,0,2,0,1,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")))
                                                      (rule "replace_known_left" (formula "25") (term "0,1,0,0,1,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "applyEq" (formula "44") (term "1,1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "44") (term "1,2,2,0") (ifseqformula "1"))
                                                      (rule "ifthenelse_negated" (formula "35") (term "1,0,1,0,1,1,0"))
                                                      (rule "methodBodyExpand" (formula "3") (term "1"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "methodBodyExpand" (formula "2") (term "1"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "17"))
                                                      (rule "leq_literals" (formula "7") (term "0"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "methodBodyExpand" (formula "14") (term "1"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "nnf_ex2all" (formula "42"))
                                                      (rule "shift_paren_and" (formula "33") (term "0,0,1,0"))
                                                      (rule "nnf_imp2or" (formula "26") (term "0"))
                                                      (rule "nnf_imp2or" (formula "36") (term "0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "shift_paren_and" (formula "24") (term "0,0,1,0"))
                                                      (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "36") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "36") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                                      (rule "nnf_notAnd" (formula "26") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_notLeq" (formula "26") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "36") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "36") (term "0,0,0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "0,1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,0,1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,0,0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,1,0,1,0,0"))
                                                      (rule "methodBodyExpand" (formula "35") (term "1"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "methodBodyExpand" (formula "18") (term "1"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "commute_and" (formula "24") (term "0,0,0,1,0"))
                                                      (rule "shift_paren_and" (formula "44") (term "0,0,0,0,2,0"))
                                                      (rule "shift_paren_and" (formula "44") (term "0,0,0,0,0"))
                                                      (rule "methodBodyExpand" (formula "37") (term "1"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "36") (term "0,0"))
                                                      (rule "commute_or" (formula "26") (term "0,0,0"))
                                                      (rule "methodBodyExpand" (formula "27") (term "1"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "shift_paren_or" (formula "1") (term "0,0"))
                                                      (rule "commute_or" (formula "1") (term "0,0,0"))
                                                      (rule "returnUnfold" (formula "4") (term "1") (inst "#v0=x_2"))
                                                      (rule "variableDeclarationAssign" (formula "4") (term "1"))
                                                      (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_2450"))
                                                      (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_2"))
                                                      (rule "variableDeclarationAssign" (formula "3") (term "1"))
                                                      (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_2451"))
                                                      (rule "commute_and" (formula "44") (term "0,0,0,0,0,2,0"))
                                                      (rule "shift_paren_and" (formula "26") (term "0,0,1,0"))
                                                      (rule "shift_paren_and" (formula "36") (term "0,0,1,0"))
                                                      (rule "shift_paren_and" (formula "36") (term "0,1,1,1,1,0"))
                                                      (rule "shift_paren_and" (formula "36") (term "0,2,0,0,1,1,0"))
                                                      (rule "shift_paren_and" (formula "36") (term "0,2,0,1,0"))
                                                      (rule "commute_and" (formula "26") (term "0,0,0,1,0"))
                                                      (rule "commute_and" (formula "36") (term "0,0,1,1,1,1,0"))
                                                      (rule "commute_and" (formula "36") (term "0,0,2,0,0,1,1,0"))
                                                      (rule "commute_and" (formula "36") (term "0,0,2,0,1,0"))
                                                      (rule "ifthenelse_to_or_left" (formula "26") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "26") (term "1,0,1,0"))
                                                      (rule "polySimp_homoEq" (formula "26") (term "1,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "26") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "0,1,1,0,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "26") (term "1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "0,1,1,1,1,0"))
                                                      (rule "nnf_notAnd" (formula "26") (term "0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "nnf_notAnd" (formula "26") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,0,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,1,0,0,0,1,0"))
                                                      (rule "commute_or" (formula "26") (term "1,1,0"))
                                                      (rule "cnf_rightDist" (formula "26") (term "1,1,0"))
                                                      (rule "cnf_rightDist" (formula "26") (term "0,1,1,0"))
                                                      (rule "commute_or" (formula "26") (term "0,0,1,1,0"))
                                                      (rule "cnf_rightDist" (formula "26") (term "0"))
                                                      (rule "distr_forallAnd" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "commute_or" (formula "27") (term "0"))
                                                      (rule "shift_paren_or" (formula "26") (term "0"))
                                                      (rule "commute_or_2" (formula "26") (term "0,0"))
                                                      (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "ifthenelse_to_or_left" (formula "37") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "37") (term "1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "37") (term "1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,1,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "37") (term "1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,1,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,0,1,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,1,1,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "37") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,1,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,0,1,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,1,0,1,0"))
                                                      (rule "nnf_notAnd" (formula "37") (term "0,0,1,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,0,1,0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,1,1,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,1,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,0,1,1,0,0,0,1,0"))
                                                      (rule "commute_or" (formula "37") (term "1,1,0"))
                                                      (rule "cnf_rightDist" (formula "27") (term "0"))
                                                      (rule "distr_forallAnd" (formula "27"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "commute_or_2" (formula "28") (term "0"))
                                                      (rule "returnUnfold" (formula "37") (term "1") (inst "#v0=x_2"))
                                                      (rule "variableDeclarationAssign" (formula "37") (term "1"))
                                                      (rule "variableDeclaration" (formula "37") (term "1") (newnames "x_2452"))
                                                      (rule "ifElseUnfold" (formula "15") (term "1") (inst "#boolv=x_2"))
                                                      (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_2453"))
                                                      (rule "shift_paren_or" (formula "28") (term "0,0"))
                                                      (rule "commute_or" (formula "28") (term "0,0,0"))
                                                      (rule "compound_equality_comparison_1" (formula "4") (term "1") (inst "#v0=x_2451"))
                                                      (rule "variableDeclarationAssign" (formula "4") (term "1"))
                                                      (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_2454"))
                                                      (rule "compound_equality_comparison_1" (formula "3") (term "1") (inst "#v0=x_2452"))
                                                      (rule "variableDeclarationAssign" (formula "3") (term "1"))
                                                      (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_2455"))
                                                      (rule "ifthenelse_to_or_left" (formula "26") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "26") (term "1,0,1,0"))
                                                      (rule "polySimp_homoEq" (formula "26") (term "1,1,1,0"))
                                                      (rule "times_zero_2" (formula "26") (term "1,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,1,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "26") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,1,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "26") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "26") (term "0,1,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,1,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,1,1,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "26") (term "0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,0,1,0,0,1,0"))
                                                      (rule "cnf_rightDist" (formula "38") (term "1,1,0"))
                                                      (rule "cnf_rightDist" (formula "27") (term "0"))
                                                      (rule "distr_forallAnd" (formula "27"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "commute_or_2" (formula "28") (term "0"))
                                                      (rule "ifthenelse_to_or_left" (formula "39") (term "1,0,1,0"))
                                                      (rule "polySimp_homoEq" (formula "39") (term "1,1,1,0,1,0"))
                                                      (rule "times_zero_2" (formula "39") (term "1,0,1,1,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,1,1,1,0,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "39") (term "1,1,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,1,1,1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,1,1,1,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "39") (term "0,1,1,1,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,1,1,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "0,1,1,1,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "0,1,1,1,1,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "39") (term "0,0,1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,1,0,1,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,1,0,1,0"))
                                                      (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,0,1,0"))
                                                      (rule "add_zero_left" (formula "39") (term "0,0,0,0,1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "1,0,0,1,0,1,0"))
                                                      (rule "shift_paren_or" (formula "27") (term "0"))
                                                      (rule "shift_paren_or" (formula "28") (term "0,0"))
                                                      (rule "commute_or_2" (formula "27") (term "0,0"))
                                                      (rule "commute_or" (formula "28") (term "0,0,0"))
                                                      (rule "inEqSimp_or_tautInEq1" (formula "28") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,1,1,0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,1,1,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1,0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "1,0,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "0,1,0,0,0"))
                                                      (rule "leq_literals" (formula "28") (term "1,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "commute_or_2" (formula "27") (term "0,0,0"))
                                                      (rule "inEqSimp_or_tautInEq2" (formula "27") (term "0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "1,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "27") (term "0,1,1,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "27") (term "1,1,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "27") (term "1,0,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "27") (term "0,1,0,0,0,0"))
                                                      (rule "leq_literals" (formula "27") (term "1,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "cnf_rightDist" (formula "26") (term "0"))
                                                      (rule "distr_forallAnd" (formula "26"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "cnf_rightDist" (formula "38") (term "0,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "10"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "ifthenelse_to_or_left" (formula "28") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "28") (term "1,1,1,0"))
                                                      (rule "times_zero_2" (formula "28") (term "1,0,1,1,1,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0,1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "28") (term "1,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1,0,1,0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,1,0,1,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0,1,0,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "28") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1,1,1,0"))
                                                      (rule "polySimp_invertEq" (formula "28") (term "1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,1,0"))
                                                      (rule "times_zero_2" (formula "28") (term "1,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "0,1,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "28") (term "0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,0,1,0,0,1,0"))
                                                      (rule "commute_or_2" (formula "27") (term "0"))
                                                      (rule "commute_or" (formula "38") (term "0,0,1,1,0"))
                                                      (rule "boxToDiamond" (formula "18") (term "1"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "notLeft" (formula "18"))
                                                      (rule "boxToDiamond" (formula "38") (term "1"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "notLeft" (formula "38"))
                                                      (rule "boxToDiamond" (formula "28") (term "1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "notLeft" (formula "28"))
                                                      (rule "cnf_rightDist" (formula "36") (term "0,1,0"))
                                                      (rule "shift_paren_or" (formula "25") (term "0"))
                                                      (rule "ifthenelse_split" (formula "46") (term "0"))
                                                      (branch " exists int k; ( k >= 1 + left & k <= -2 + l_149 * 2 + left & !PrefixSumRec::even(heapAfter_upsweep, k) = TRUE & arr(k) = f_3) & !f_3 = <created> TRUE"
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "exLeft" (formula "1") (inst "sk=k_26"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "eqSymm" (formula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "applyEqRigid" (formula "42") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "false_right" (formula "42"))
                                                         (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "polySimp_homoEq" (formula "49"))
                                                         (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                         (rule "applyEq" (formula "50") (term "2,1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "50") (term "2,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "4") (term "1,0,1,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "castDel" (formula "4") (term "0,1,0,0"))
                                                         (rule "castDel" (formula "4") (term "0,0,0,0"))
                                                         (rule "castDel" (formula "4") (term "1,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0"))
                                                         (rule "instanceof_static_type" (formula "4") (term "0,0,1"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "polySimp_sepPosMonomial" (formula "49"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "49") (term "0,0,1"))
                                                         (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "41") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_216"))
                                                         (rule "eqSymm" (formula "1") (term "0,1"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "42"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,1,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,0,1,1,0"))
                                                         (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "5") (term "0,1") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_217"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "eqSymm" (formula "5") (term "0,1"))
                                                         (rule "narrowSelectArrayType" (formula "52") (term "0") (ifseqformula "37"))
                                                         (rule "eqSymm" (formula "52"))
                                                         (rule "narrowSelectArrayType" (formula "52") (term "0") (ifseqformula "15"))
                                                         (rule "eqSymm" (formula "52"))
                                                         (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "51"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                                         (rule "add_literals" (formula "3") (term "0,0,1"))
                                                         (rule "inEqSimp_contradEq7" (formula "51") (ifseqformula "3"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                                                         (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                                         (rule "add_literals" (formula "51") (term "0,0"))
                                                         (rule "leq_literals" (formula "51") (term "0"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,0,1,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "6") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "2"))
                                                         (rule "mul_literals" (formula "14") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                         (rule "add_literals" (formula "14") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                         (rule "mul_literals" (formula "14") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "polySimp_addLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "38"))
                                                         (rule "greater_literals" (formula "3") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1,0"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                         (rule "mul_literals" (formula "12") (term "0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "2"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                         (rule "mul_literals" (formula "21") (term "0,1"))
                                                         (rule "ifthenelse_to_or_left" (formula "44") (term "1,1,1,1,0"))
                                                         (rule "polySimp_homoEq" (formula "44") (term "1,0,1,1,1,1,0"))
                                                         (rule "polySimp_homoEq" (formula "44") (term "1,1,1,1,1,1,0"))
                                                         (rule "times_zero_2" (formula "44") (term "1,0,1,1,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,1,1,1,1,1,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,1,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,1,0,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,1,0,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,1,0,1,1,1,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "44") (term "1,1,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,1,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,1,1,1,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "44") (term "0,1,1,1,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,1,1,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "0,1,1,1,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "0,1,1,1,1,1,1,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "44") (term "1,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "44") (term "0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "44") (term "0,0,0,0,1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,1,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "commute_or_2" (formula "44") (term "1,0,1,0"))
                                                         (rule "commute_or_2" (formula "33") (term "0,0"))
                                                         (rule "compound_equality_comparison_1" (formula "43") (term "1") (inst "#v0=x_2453"))
                                                         (rule "variableDeclarationAssign" (formula "43") (term "1"))
                                                         (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_2456"))
                                                         (rule "equality_comparison_simple" (formula "23") (term "1"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "polySimp_homoEq" (formula "23") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "23") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0"))
                                                         (rule "elimGcdEq" (formula "23") (term "0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_149") (inst "elimGcdRightDiv=Z(1(#))"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "1,0,0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "23") (term "1,0,1,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "23") (term "1,0,0,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "0,1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,1,0,0,1,0"))
                                                         (rule "leq_literals" (formula "23") (term "0,0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "qeq_literals" (formula "23") (term "0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "equal_literals" (formula "23") (term "0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "shift_paren_or" (formula "34") (term "0,0"))
                                                         (rule "assignmentModulo" (formula "9") (term "1"))
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "equal_literals" (formula "9") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "9"))
                                                         (rule "translateJavaMod" (formula "9") (term "0,0"))
                                                         (rule "assignmentModulo" (formula "8") (term "1"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "equal_literals" (formula "8") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "translateJavaMod" (formula "8") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "44") (term "0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "35") (term "0"))
                                                         (rule "ifthenelse_to_or_left" (formula "44") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_homoEq" (formula "44") (term "1,1,1,1,0,1,1,0"))
                                                         (rule "times_zero_2" (formula "44") (term "1,0,1,1,1,1,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,1,1,1,1,0,1,1,0"))
                                                         (rule "polySimp_homoEq" (formula "44") (term "1,0,1,1,0,1,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,1,0,1,1,0,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,1,0,1,1,0,1,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,1,0,1,1,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,1,0,1,1,0,1,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "44") (term "1,1,1,1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,1,1,1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,1,1,1,0,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "44") (term "0,1,1,1,1,1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,1,1,1,1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "0,1,1,1,1,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "0,1,1,1,1,1,0,1,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "44") (term "1,0,1,1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1,1,0,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "44") (term "0,0,1,1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,1,1,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,1,1,0,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,0,0,1,1,0,1,1,0"))
                                                         (rule "add_zero_left" (formula "44") (term "0,0,0,0,1,1,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,1,1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,0,0,1,1,0,1,1,0"))
                                                         (rule "ifthenelse_to_or_left" (formula "44") (term "1,0,0,1,1,0"))
                                                         (rule "polySimp_homoEq" (formula "44") (term "1,1,1,0,0,1,1,0"))
                                                         (rule "times_zero_2" (formula "44") (term "1,0,1,1,1,0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,1,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_homoEq" (formula "44") (term "1,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,1,0,1,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,1,0,1,0,0,1,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,1,0,1,0,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,1,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "44") (term "1,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,1,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,1,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "44") (term "0,1,1,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,1,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "0,1,1,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "0,1,1,1,1,0,0,1,1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "44") (term "1,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,1,0,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "44") (term "0,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,1,0,0,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                                         (rule "add_zero_left" (formula "44") (term "0,0,0,0,1,0,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "1,0,0,1,0,0,1,1,0"))
                                                         (rule "methodBodyExpand" (formula "1") (term "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "distr_forallAnd" (formula "35"))
                                                         (rule "andLeft" (formula "35"))
                                                         (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "methodBodyExpand" (formula "5") (term "1"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "shift_paren_or" (formula "45") (term "0,1,0,1,0"))
                                                         (rule "ifElseUnfold" (formula "50") (term "1") (inst "#boolv=x_2"))
                                                         (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_2457"))
                                                         (rule "ifElseUnfold" (formula "49") (term "1") (inst "#boolv=x_2"))
                                                         (rule "variableDeclaration" (formula "49") (term "1") (newnames "x_2458"))
                                                         (rule "ifElseUnfold" (formula "48") (term "1") (inst "#boolv=x_2"))
                                                         (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_2459"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "45") (term "1,1,1,0"))
                                                         (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                                                         (rule "ifthenelse_to_or_left" (formula "45") (term "1,1,0,1,0"))
                                                         (rule "polySimp_homoEq" (formula "45") (term "1,0,1,1,0,1,0"))
                                                         (rule "polySimp_homoEq" (formula "45") (term "1,1,1,1,0,1,0"))
                                                         (rule "times_zero_2" (formula "45") (term "1,0,1,1,1,1,0,1,0"))
                                                         (rule "add_zero_right" (formula "45") (term "0,1,1,1,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "45") (term "0,1,0,1,1,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "45") (term "0,0,1,0,1,1,0,1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "45") (term "1,1,1,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "0,1,1,1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "0,1,1,1,1,0,1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "45") (term "1,0,1,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "0,1,0,1,1,0,1,0"))
                                                         (rule "inEqSimp_notGeq" (formula "45") (term "0,0,1,1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,1,1,0,1,0"))
                                                         (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,1,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,1,1,0,1,0"))
                                                         (rule "add_literals" (formula "45") (term "0,0,0,0,0,1,1,0,1,0"))
                                                         (rule "add_zero_left" (formula "45") (term "0,0,0,0,1,1,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,1,1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "45") (term "1,0,0,1,1,0,1,0"))
                                                         (rule "commute_or_2" (formula "36") (term "0"))
                                                         (rule "commute_or_2" (formula "45") (term "0,0,0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "commute_or" (formula "34") (term "0,0,0,0"))
                                                         (rule "inEqSimp_or_tautInEq1" (formula "34") (term "0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "1,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,1,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,1,1,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "34") (term "0,1,0,0,0,0"))
                                                         (rule "add_literals" (formula "34") (term "1,0,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "34") (term "0,1,0,0,0,0"))
                                                         (rule "leq_literals" (formula "34") (term "1,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "shift_paren_or" (formula "34") (term "0"))
                                                         (rule "commute_or_2" (formula "44") (term "1,1,1,1,0"))
                                                         (rule "assignmentModulo" (formula "43") (term "1"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "equal_literals" (formula "43") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "translateJavaMod" (formula "43") (term "0,0"))
                                                         (rule "commute_or_2" (formula "34") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "35") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "44") (term "0,0,1,0,1,0"))
                                                         (rule "inEqSimp_or_tautInEq2" (formula "44") (term "0,0,0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "1,1,0,0,0,1,0,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,1,1,0,0,0,1,0,1,0"))
                                                         (rule "add_zero_left" (formula "44") (term "1,1,0,0,0,1,0,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,1,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "44") (term "0,1,0,0,0,1,0,1,0"))
                                                         (rule "add_literals" (formula "44") (term "1,0,1,0,0,0,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "0,1,0,0,0,1,0,1,0"))
                                                         (rule "leq_literals" (formula "44") (term "1,0,0,0,1,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "cut_direct" (formula "6") (term "0"))
                                                         (branch "CUT: left >= -2 + l_149 * 2 + k_26 TRUE"
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "2"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0"))
                                                            (rule "polySimp_addLiterals" (formula "6") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "inEqSimp_contradInEq5" (formula "6") (ifseqformula "40"))
                                                            (rule "greater_literals" (formula "6") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "mul_literals" (formula "6") (term "1,0"))
                                                            (rule "qeq_literals" (formula "6") (term "0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "closeFalse" (formula "6"))
                                                         )
                                                         (branch "CUT: left >= -2 + l_149 * 2 + k_26 FALSE"
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "inEqSimp_geqRight" (formula "46"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                            (rule "applyEqRigid" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                            (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0"))
                                                            (rule "add_zero_right" (formula "4") (term "0"))
                                                            (rule "polySimp_pullOutFactor3" (formula "4") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "4") (term "0"))
                                                            (rule "mul_literals" (formula "4") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                            (rule "mul_literals" (formula "4") (term "1"))
                                                            (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "41"))
                                                            (rule "mul_literals" (formula "4") (term "1,1,0"))
                                                            (rule "greater_literals" (formula "4") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "leq_literals" (formula "4") (term "0"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "23") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0"))
                                                            (rule "add_literals" (formula "23") (term "1,0,0"))
                                                            (rule "times_zero_1" (formula "23") (term "0,0"))
                                                            (rule "add_zero_left" (formula "23") (term "0"))
                                                            (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "16"))
                                                            (rule "leq_literals" (formula "23") (term "0"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                                                            (rule "mul_literals" (formula "17") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                            (rule "add_literals" (formula "17") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                            (rule "mul_literals" (formula "17") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "17"))
                                                            (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                            (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "13") (term "0,0"))
                                                            (rule "qeq_literals" (formula "13") (term "0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor3b" (formula "13") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                                            (rule "mul_literals" (formula "13") (term "0,1"))
                                                            (rule "shift_paren_or" (formula "37") (term "0,0,0"))
                                                            (rule "equality_comparison_simple" (formula "10") (term "1"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "equality_comparison_simple" (formula "9") (term "1"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "shift_paren_or" (formula "46") (term "0,1,1,1,0"))
                                                            (rule "cnf_rightDist" (formula "46") (term "1,0,1,1,0"))
                                                            (rule "cnf_rightDist" (formula "46") (term "0,0,1,1,0"))
                                                            (rule "returnUnfold" (formula "2") (term "1") (inst "#v0=x_2"))
                                                            (rule "variableDeclarationAssign" (formula "2") (term "1"))
                                                            (rule "variableDeclaration" (formula "2") (term "1") (newnames "x_2460"))
                                                            (rule "equality_comparison_simple" (formula "51") (term "1"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "equality_comparison_simple" (formula "50") (term "1"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "equality_comparison_simple" (formula "49") (term "1"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "ifthenelse_to_or_left" (formula "46") (term "1,1,1,1,1,0"))
                                                            (rule "polySimp_homoEq" (formula "46") (term "1,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_homoEq" (formula "46") (term "1,1,1,1,1,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,1,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,1,1,1,1,1,1,1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "46") (term "1,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "0,1,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "46") (term "1,1,1,1,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "0,1,1,1,1,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "0,1,1,1,1,1,1,1,0"))
                                                            (rule "nnf_notAnd" (formula "46") (term "0,0,1,1,1,1,1,0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "nnf_notAnd" (formula "46") (term "0,0,0,1,1,1,1,1,0"))
                                                            (rule "inEqSimp_notGeq" (formula "46") (term "1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "0,1,0,0,1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,0,1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,0,1,0,0,1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0,0,0,1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "0,1,1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,0,1,1,0,0,0,1,1,1,1,1,0"))
                                                            (rule "inEqSimp_notLeq" (formula "46") (term "0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "commute_or" (formula "37") (term "0,0,0,0"))
                                                            (rule "inEqSimp_or_tautInEq1" (formula "37") (term "0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "1,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,1,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "37") (term "0,0,1,1,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "37") (term "1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "37") (term "0,1,0,0,0,0"))
                                                            (rule "add_literals" (formula "37") (term "1,0,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "37") (term "0,1,0,0,0,0"))
                                                            (rule "leq_literals" (formula "37") (term "1,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "37"))
                                                            (rule "true_left" (formula "37"))
                                                            (rule "boxToDiamond" (formula "25") (term "1"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "notLeft" (formula "25"))
                                                            (rule "commute_or" (formula "44") (term "1,1,1,1,1,1,0"))
                                                            (rule "commute_or_2" (formula "44") (term "1,0,0,1,1,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "equality_comparison_simple" (formula "43") (term "1"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x_2"))
                                                            (rule "variableDeclarationAssign" (formula "6") (term "1"))
                                                            (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_2461"))
                                                            (rule "commute_or" (formula "44") (term "0,0,1,1,1,0"))
                                                            (rule "commute_or_2" (formula "44") (term "1,1,0,1,1,0"))
                                                            (rule "shift_paren_or" (formula "44") (term "0,0,0,1,1,0"))
                                                            (rule "inEqSimp_or_tautInEq2" (formula "44") (term "0,0,0,0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "1,1,0,0,0,0,1,1,0"))
                                                            (rule "add_literals" (formula "44") (term "0,1,1,0,0,0,0,1,1,0"))
                                                            (rule "add_zero_left" (formula "44") (term "1,1,0,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "44") (term "0,1,0,0,0,0,1,1,0"))
                                                            (rule "add_literals" (formula "44") (term "1,0,1,0,0,0,0,1,1,0"))
                                                            (rule "times_zero_1" (formula "44") (term "0,1,0,0,0,0,1,1,0"))
                                                            (rule "leq_literals" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "shift_paren_or" (formula "44") (term "0,1,0,1,1,0"))
                                                            (rule "commute_or" (formula "44") (term "0,0,1,0,1,1,0"))
                                                            (rule "cnf_rightDist" (formula "44") (term "1,1,1,1,1,1,0"))
                                                            (rule "cnf_rightDist" (formula "44") (term "0,1,1,1,1,1,1,0"))
                                                            (rule "commute_or" (formula "44") (term "0,0,1,1,1,1,1,1,0"))
                                                            (rule "cnf_rightDist" (formula "44") (term "1,1,1,1,0"))
                                                            (rule "commute_or" (formula "44") (term "1,1,1,1,1,0"))
                                                            (rule "shift_paren_or" (formula "44") (term "0,1,1,1,1,0"))
                                                            (rule "commute_or_2" (formula "44") (term "0,0,1,1,1,1,0"))
                                                            (rule "shift_paren_or" (formula "44") (term "0,0,0,1,1,1,1,0"))
                                                            (rule "shift_paren_or" (formula "44") (term "0,0,0,0,1,1,1,1,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "methodCallReturn" (formula "10") (term "1"))
                                                            (rule "assignment" (formula "10") (term "1"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "cnf_rightDist" (formula "44") (term "1,1,1,1,1,0"))
                                                            (rule "commute_or_2" (formula "44") (term "1,1,1,1,1,1,0"))
                                                            (rule "shift_paren_or" (formula "44") (term "0,1,1,1,1,1,1,0"))
                                                            (rule "commute_or" (formula "44") (term "0,0,1,1,1,1,1,1,0"))
                                                            (rule "methodCallReturn" (formula "9") (term "1"))
                                                            (rule "assignment" (formula "9") (term "1"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "cnf_rightDist" (formula "44") (term "0,1,1,1,1,1,0"))
                                                            (rule "commute_or_2" (formula "44") (term "1,0,1,1,1,1,1,0"))
                                                            (rule "shift_paren_or" (formula "44") (term "0,0,1,1,1,1,1,0"))
                                                            (rule "commute_or_2" (formula "44") (term "0,0,0,1,1,1,1,1,0"))
                                                            (rule "inEqSimp_or_tautInEq2" (formula "44") (term "0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "1,1,0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "add_literals" (formula "44") (term "0,1,1,0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "add_zero_left" (formula "44") (term "1,1,0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "44") (term "0,1,0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "add_literals" (formula "44") (term "1,0,1,0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "times_zero_1" (formula "44") (term "0,1,0,0,0,0,1,1,1,1,1,0"))
                                                            (rule "leq_literals" (formula "44") (term "1,0,0,0,0,1,1,1,1,1,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "shift_paren_or" (formula "44") (term "0,0,1,1,1,1,1,0"))
                                                            (rule "commute_or" (formula "44") (term "0,0,0,1,1,1,1,1,0"))
                                                            (rule "compound_equality_comparison_1" (formula "2") (term "1") (inst "#v0=x_2461"))
                                                            (rule "variableDeclarationAssign" (formula "2") (term "1"))
                                                            (rule "variableDeclaration" (formula "2") (term "1") (newnames "x_2462"))
                                                            (rule "shift_paren_and" (formula "44") (term "0,1,1,0"))
                                                            (rule "shift_paren_and" (formula "44") (term "1,1,1,1,0"))
                                                            (rule "shift_paren_and" (formula "44") (term "1,1,1,0"))
                                                            (rule "methodCallReturn" (formula "43") (term "1"))
                                                            (rule "assignment" (formula "43") (term "1"))
                                                            (builtin "One Step Simplification" (formula "43"))
                                                            (rule "shift_paren_and" (formula "44") (term "0,1,1,1,0"))
                                                            (rule "ifthenelse_to_or_left" (formula "44") (term "1,0,1,0"))
                                                            (rule "polySimp_homoEq" (formula "44") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_homoEq" (formula "44") (term "1,1,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,1,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,1,1,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "44") (term "0,0,1,1,1,0,1,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "44") (term "1,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,1,0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "0,1,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,1,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,0,1,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "44") (term "0,0,1,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "0,0,0,1,1,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "0,0,1,1,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "0,0,1,1,0,1,0,1,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "44") (term "1,1,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,1,1,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,1,1,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "0,1,1,1,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,1,1,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,0,1,1,1,1,0,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "44") (term "0,0,1,1,1,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "0,0,0,1,1,1,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "0,0,1,1,1,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "0,0,1,1,1,1,0,1,0"))
                                                            (rule "nnf_notAnd" (formula "44") (term "0,0,1,0,1,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "nnf_notAnd" (formula "44") (term "0,0,0,1,0,1,0"))
                                                            (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "0,1,0,0,1,0,0,0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,0,1,0,0,1,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0,1,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,0,0,0,1,0,1,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,0,0,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "0,1,1,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,1,0,0,0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,0,1,1,0,0,0,1,0,1,0"))
                                                            (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,1,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,1,0,1,0"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,1,0,1,0"))
                                                            (rule "commute_or" (formula "44") (term "1,1,0,1,0"))
                                                            (rule "compound_equality_comparison_1" (formula "6") (term "1") (inst "#v0=x_2462"))
                                                            (rule "variableDeclarationAssign" (formula "6") (term "1"))
                                                            (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_2463"))
                                                            (rule "cnf_rightDist" (formula "44") (term "1,1,0,1,0"))
                                                            (rule "cnf_rightDist" (formula "44") (term "0,1,1,0,1,0"))
                                                            (rule "commute_or" (formula "44") (term "0,0,1,1,0,1,0"))
                                                            (rule "cnf_rightDist" (formula "44") (term "0,1,0"))
                                                            (rule "commute_or" (formula "44") (term "1,0,1,0"))
                                                            (rule "shift_paren_or" (formula "44") (term "0,0,1,0"))
                                                            (rule "commute_or_2" (formula "44") (term "0,0,0,1,0"))
                                                            (rule "shift_paren_or" (formula "44") (term "0,0,0,0,1,0"))
                                                            (rule "shift_paren_or" (formula "44") (term "0,0,0,0,0,1,0"))
                                                            (rule "commute_or_2" (formula "44") (term "0,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_or_tautInEq0" (formula "44") (term "0,0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "44") (term "1,1,0,0,0,0,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "44") (term "0,1,1,0,0,0,0,0,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "44") (term "1,1,0,0,0,0,0,0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "44") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                                            (rule "add_literals" (formula "44") (term "1,0,1,0,0,0,0,0,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "44") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                                            (rule "leq_literals" (formula "44") (term "1,0,0,0,0,0,0,0,1,0"))
                                                            (builtin "One Step Simplification" (formula "44"))
                                                            (rule "methodCallEmpty" (formula "10") (term "1"))
                                                            (rule "methodCallEmpty" (formula "9") (term "1"))
                                                            (rule "ifthenelse_split" (formula "50") (term "0,1,0"))
                                                            (branch "self.a.length = 1 TRUE"
                                                               (rule "replace_known_left" (formula "49") (term "0,0,1,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "replace_known_left" (formula "50") (term "0,0,1,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "50") (term "0,1,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "12"))
                                                               (rule "mul_literals" (formula "12") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                               (rule "add_literals" (formula "12") (term "0,0"))
                                                               (rule "add_zero_left" (formula "12") (term "0"))
                                                               (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "27"))
                                                               (rule "true_left" (formula "27"))
                                                               (rule "applyEq" (formula "48") (term "0,1,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "16"))
                                                               (rule "mul_literals" (formula "16") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                               (rule "mul_literals" (formula "16") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "12"))
                                                               (rule "qeq_literals" (formula "19") (term "0"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "closeFalse" (formula "19"))
                                                            )
                                                            (branch "self.a.length = 1 FALSE"
                                                               (rule "replace_known_right" (formula "49") (term "0,0,1,0") (ifseqformula "50"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "replace_known_right" (formula "48") (term "0,0,1,0") (ifseqformula "50"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "50"))
                                                               (rule "add_literals" (formula "26") (term "1"))
                                                               (rule "inEqSimp_contradEq7" (formula "50") (ifseqformula "26"))
                                                               (rule "mul_literals" (formula "50") (term "1,0,0"))
                                                               (rule "add_literals" (formula "50") (term "0,0"))
                                                               (rule "leq_literals" (formula "50") (term "0"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "false_right" (formula "50"))
                                                               (rule "cnf_rightDist" (formula "44") (term "0,1,0"))
                                                               (rule "commute_or_2" (formula "44") (term "1,0,1,0"))
                                                               (rule "shift_paren_or" (formula "44") (term "0,1,0,1,0"))
                                                               (rule "commute_or" (formula "44") (term "0,0,1,0,1,0"))
                                                               (rule "assignmentModulo" (formula "2") (term "1"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "equal_literals" (formula "2") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "translateJavaMod" (formula "2") (term "0,1,0"))
                                                               (rule "cnf_rightDist" (formula "44") (term "0,0,1,0"))
                                                               (rule "commute_or_2" (formula "44") (term "1,0,0,1,0"))
                                                               (rule "shift_paren_or" (formula "44") (term "0,0,0,1,0"))
                                                               (rule "commute_or_2" (formula "44") (term "0,0,0,0,1,0"))
                                                               (rule "commute_or_2" (formula "44") (term "0,0,0,0,0,1,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "shift_paren_or" (formula "44") (term "0,1,0,0,1,0"))
                                                               (rule "commute_or" (formula "44") (term "0,0,1,0,0,1,0"))
                                                               (rule "methodCallEmpty" (formula "43") (term "1"))
                                                               (rule "ifElse" (formula "50") (term "1"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "shift_paren_and" (formula "44") (term "1,1,0"))
                                                               (rule "shift_paren_and" (formula "44") (term "0,1,1,0"))
                                                               (rule "shift_paren_and" (formula "44") (term "0,0,1,1,0"))
                                                               (rule "cnf_rightDist" (formula "44") (term "0"))
                                                               (rule "distr_forallAnd" (formula "44"))
                                                               (rule "andLeft" (formula "44"))
                                                               (rule "commute_or" (formula "45") (term "0"))
                                                               (rule "cnf_rightDist" (formula "44") (term "0"))
                                                               (rule "distr_forallAnd" (formula "44"))
                                                               (rule "andLeft" (formula "44"))
                                                               (rule "commute_or_2" (formula "45") (term "0"))
                                                               (rule "shift_paren_or" (formula "45") (term "0,0"))
                                                               (rule "commute_or_2" (formula "45") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "45") (term "0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "cnf_rightDist" (formula "46") (term "0"))
                                                               (rule "distr_forallAnd" (formula "46"))
                                                               (rule "andLeft" (formula "46"))
                                                               (rule "commute_or_2" (formula "47") (term "0"))
                                                               (rule "shift_paren_or" (formula "47") (term "0,0"))
                                                               (rule "commute_or_2" (formula "47") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "47") (term "0,0,0,0"))
                                                               (rule "shift_paren_or" (formula "47") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_or_tautInEq2" (formula "47") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "47") (term "1,1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "47") (term "0,1,1,0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "47") (term "1,1,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0,0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "47") (term "0,1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "47") (term "1,0,1,0,0,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "47") (term "0,1,0,0,0,0,0,0"))
                                                               (rule "leq_literals" (formula "47") (term "1,0,0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "47"))
                                                               (rule "true_left" (formula "47"))
                                                               (rule "cnf_rightDist" (formula "44") (term "0"))
                                                               (rule "distr_forallAnd" (formula "44"))
                                                               (rule "andLeft" (formula "44"))
                                                               (rule "commute_or_2" (formula "45") (term "0"))
                                                               (rule "shift_paren_or" (formula "44") (term "0"))
                                                               (rule "commute_or_2" (formula "44") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "45") (term "0,0"))
                                                               (rule "commute_or_2" (formula "45") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "45") (term "0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "cnf_rightDist" (formula "47") (term "0"))
                                                               (rule "distr_forallAnd" (formula "47"))
                                                               (rule "andLeft" (formula "47"))
                                                               (rule "commute_or_2" (formula "48") (term "0"))
                                                               (rule "shift_paren_or" (formula "48") (term "0,0"))
                                                               (rule "commute_or_2" (formula "48") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                                               (rule "shift_paren_or" (formula "48") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_or_tautInEq2" (formula "48") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "1,1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "48") (term "0,1,1,0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "48") (term "1,1,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0,0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "48") (term "0,1,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "48") (term "1,0,1,0,0,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "48") (term "0,1,0,0,0,0,0,0"))
                                                               (rule "leq_literals" (formula "48") (term "1,0,0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "true_left" (formula "48"))
                                                               (rule "assignmentModulo" (formula "6") (term "1"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "equal_literals" (formula "6") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "translateJavaMod" (formula "6") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "47") (term "0"))
                                                               (rule "distr_forallAnd" (formula "47"))
                                                               (rule "andLeft" (formula "47"))
                                                               (rule "commute_or_2" (formula "48") (term "0"))
                                                               (rule "shift_paren_or" (formula "48") (term "0,0"))
                                                               (rule "commute_or_2" (formula "48") (term "0,0,0"))
                                                               (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                                               (rule "commute_or_2" (formula "48") (term "0,0,0,0,0"))
                                                               (rule "shift_paren_or" (formula "48") (term "0,0,0,0,0,0"))
                                                               (rule "inEqSimp_or_tautInEq2" (formula "48") (term "0,0,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "48") (term "1,1,0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "48") (term "0,1,1,0,0,0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "48") (term "1,1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "48") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "48") (term "1,0,1,0,0,0,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "48") (term "0,1,0,0,0,0,0,0,0"))
                                                               (rule "leq_literals" (formula "48") (term "1,0,0,0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "true_left" (formula "48"))
                                                               (rule "ifthenelse_split" (formula "10") (term "0,0"))
                                                               (branch "jmod(left, 2) = 0 TRUE"
                                                                  (rule "replace_known_left" (formula "44") (term "0,0,0") (ifseqformula "10"))
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "jmod_axiom" (formula "10") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "10"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                  (rule "newSym_eq" (formula "10") (inst "newSymDef=mul(left, Z(0(#)))") (inst "l=l_151"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "10") (term "1"))
                                                                  (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                                                                  (rule "eqSymm" (formula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,0,0,1,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "37") (term "1,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0"))
                                                                  (rule "applyEq" (formula "47") (term "1,0,0,0,0,0,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "0,2,2,1,0,1,1,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "47") (term "0,2,2,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "36") (term "1,1,1,0,0,0,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "36") (term "1,1,0,0,0,0"))
                                                                  (rule "applyEq" (formula "49") (term "1,0,0,1,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "applyEq" (formula "49") (term "1,0,0,0,0,1,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                  (rule "applyEq" (formula "46") (term "1,1,1,0,0,0,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "46") (term "1,1,0,0,0,0"))
                                                                  (rule "applyEq" (formula "48") (term "1,1,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "46") (term "1,0,0,0,0,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "48") (term "1,1,1,0,0,0,0,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "48") (term "1,1,0,0,0,0,0"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,1,0,1,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "1,1,0,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "49") (term "1,0,0,0,0,1,0,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,1,0,0,0,1,0,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,0,1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "48") (term "0,2,1,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "0,2,1,1,0,1,1,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "43") (term "1,1,1,0,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "43") (term "1,1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "47") (term "1,1,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                  (rule "applyEq" (formula "34") (term "1,0,0,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "9") (term "1,0,0,0,0,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0"))
                                                                  (rule "applyEq" (formula "46") (term "0,2,2,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "46") (term "0,2,1,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "20") (term "0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "36") (term "1,1,0,0,0,0,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "34") (term "1,1,1,0,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "1,1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "48") (term "1,0,0,0,0,0,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,1,0,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "1,1,0,1,0,1,0"))
                                                                  (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "1"))
                                                                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "16"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,0,0,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                  (rule "applyEq" (formula "49") (term "1,0,0,0,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,0,0,1,1,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,1,0,0,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,0"))
                                                                  (rule "applyEq" (formula "47") (term "1,1,1,0,0,0,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "47") (term "1,1,0,0,0,0"))
                                                                  (rule "applyEq" (formula "49") (term "0,2,1,1,0,1,1,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "48") (term "0,2,2,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "37") (term "1,1,1,0,0,0,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "37") (term "1,1,0,0,0,0"))
                                                                  (rule "applyEq" (formula "47") (term "0,2,1,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,0,0,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "43") (term "1,1,0,0,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,0,0,1,1,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "46") (term "1,1,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "47") (term "1,1,1,0,0,0,0,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "47") (term "1,1,0,0,0,0,0"))
                                                                  (rule "applyEq" (formula "49") (term "0,2,2,1,0,1,1,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,1,0,0,0,1,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,0,1,1,0,1,0"))
                                                                  (rule "applyEq" (formula "37") (term "1,1,0,0,0,0,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,1,0,0,2,1,1,1,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,2,1,1,1,0,0,1,0"))
                                                                  (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "40") (term "1"))
                                                                  (rule "applyEq" (formula "49") (term "0,2,1,1,0,1,1,1,0,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,0,0,0,2,1,1,1,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,0,0,1,1,1,0,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "0,2,2,1,0,1,1,1,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "0,2,1,1,0,1,1,1,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,0,0,1,1,1,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "0,1,1,1,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "0,2,2,1,0,1,1,1,0,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "0,1,1,1,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,0,0,0,2,1,1,1,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,1,0,0,2,1,1,1,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,2,1,1,1,1,0"))
                                                                  (rule "applyEq" (formula "49") (term "1,0,0,0,2,0,1,1,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,1,0,0,2,0,1,1,0,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,2,0,1,1,0,0,0,1,0"))
                                                                  (rule "applyEq" (formula "49") (term "1,0,0,0,2,0,1,1,0,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "36") (term "1,0,0,1,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "36") (term "0,0,1,1,0"))
                                                                  (rule "applyEq" (formula "49") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "49") (term "1,1,1,0,0,2,0,1,1,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,2,0,1,1,1,0,1,0"))
                                                                  (rule "applyEq" (formula "49") (term "0,0,1,1,1,0,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "46") (term "1,0,0,0,2,0,0,1,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "47") (term "1,0,0,0,2,0,0,1,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "46") (term "0,0,0,1,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "48") (term "0,0,0,1,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "47") (term "0,0,0,1,1,0") (ifseqformula "11"))
                                                                  (rule "applyEq" (formula "47") (term "1,1,1,0,0,2,0,0,1,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "47") (term "1,1,0,0,2,0,0,1,1,0"))
                                                                  (rule "applyEq" (formula "46") (term "1,1,1,0,0,2,0,0,1,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "46") (term "1,1,0,0,2,0,0,1,1,0"))
                                                                  (rule "applyEq" (formula "48") (term "1,1,1,0,0,2,0,0,1,1,0") (ifseqformula "11"))
                                                                  (rule "polySimp_addComm1" (formula "48") (term "1,1,0,0,2,0,0,1,1,0"))
                                                                  (rule "applyEq" (formula "48") (term "1,0,0,0,2,0,0,1,1,0") (ifseqformula "11"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                  (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                  (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                  (rule "mul_literals" (formula "26") (term "0,1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                                  (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_149") (inst "elimGcdRightDiv=add(Z(1(#)), mul(l_151, Z(neglit(1(#)))))"))
                                                                  (rule "leq_literals" (formula "16") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                  (rule "leq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "elimGcdLeq_antec" (formula "26") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_149") (inst "elimGcdRightDiv=add(Z(1(#)), l_151)"))
                                                                  (rule "leq_literals" (formula "26") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                                                  (rule "neg_literal" (formula "26") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                                                  (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "26") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                                                  (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "26") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "26") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_151") (inst "elimGcdRightDiv=Z(1(#))"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                                                  (rule "leq_literals" (formula "20") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "20") (term "0,0"))
                                                                  (rule "leq_literals" (formula "20") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                  (rule "mul_literals" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "42"))
                                                                  (rule "mul_literals" (formula "3") (term "1,1,0"))
                                                                  (rule "greater_literals" (formula "3") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "leq_literals" (formula "3") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "true_left" (formula "3"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "4"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                  (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "25") (term "0"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "25") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                  (rule "add_literals" (formula "25") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                                  (rule "mul_literals" (formula "25") (term "1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "25") (ifseqformula "20"))
                                                                  (rule "greater_literals" (formula "25") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "mul_literals" (formula "25") (term "1,0"))
                                                                  (rule "leq_literals" (formula "25") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "true_left" (formula "25"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "26"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                                  (rule "add_literals" (formula "16") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "16") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor3" (formula "16") (term "0"))
                                                                  (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "21"))
                                                                  (rule "mul_literals" (formula "16") (term "1,1,0"))
                                                                  (rule "greater_literals" (formula "16") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "leq_literals" (formula "16") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "true_left" (formula "16"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "4"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                  (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=mul(l_149, Z(3(#)))") (inst "elimGcdRightDiv=add(Z(4(#)), mul(l_151, Z(neglit(1(#)))))"))
                                                                  (rule "leq_literals" (formula "15") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                  (rule "leq_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "1") (ifseqformula "43"))
                                                                  (rule "mul_literals" (formula "1") (term "1,1,0"))
                                                                  (rule "greater_literals" (formula "1") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "leq_literals" (formula "1") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "4"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0"))
                                                                  (rule "add_literals" (formula "20") (term "1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                                  (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=mul(l_149, Z(2(#)))") (inst "elimGcdRightDiv=add(Z(4(#)), mul(l_151, Z(neglit(1(#)))))"))
                                                                  (rule "leq_literals" (formula "20") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "20") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "20") (term "0,0"))
                                                                  (rule "leq_literals" (formula "20") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                                                                  (rule "mul_literals" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                  (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                                  (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_149") (inst "elimGcdRightDiv=add(Z(3(#)), mul(l_151, Z(neglit(1(#)))))"))
                                                                  (rule "leq_literals" (formula "19") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                  (rule "leq_literals" (formula "19") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0"))
                                                                  (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "17") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "17") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "28"))
                                                                  (rule "mul_literals" (formula "43") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                                  (rule "add_literals" (formula "43") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                                  (rule "mul_literals" (formula "43") (term "1"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "15") (ifseqformula "28"))
                                                                  (rule "greater_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                                                  (rule "add_literals" (formula "15") (term "1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                  (rule "mul_literals" (formula "15") (term "1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "23"))
                                                                  (rule "greater_literals" (formula "15") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "mul_literals" (formula "15") (term "1,0"))
                                                                  (rule "leq_literals" (formula "15") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                  (rule "true_left" (formula "15"))
                                                                  (rule "inEqSimp_exactShadow1" (formula "20") (ifseqformula "28"))
                                                                  (rule "greater_literals" (formula "20") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                                  (rule "add_literals" (formula "20") (term "1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                  (rule "mul_literals" (formula "20") (term "1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "23"))
                                                                  (rule "greater_literals" (formula "20") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "mul_literals" (formula "20") (term "1,0"))
                                                                  (rule "leq_literals" (formula "20") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "true_left" (formula "20"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "28"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor3b" (formula "18") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                  (rule "mul_literals" (formula "18") (term "1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "23"))
                                                                  (rule "mul_literals" (formula "18") (term "1,1,0"))
                                                                  (rule "greater_literals" (formula "18") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "leq_literals" (formula "18") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "emptyModality" (formula "12") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "closeFalse" (formula "12"))
                                                               )
                                                               (branch "jmod(left, 2) = 0 FALSE"
                                                                  (rule "replace_known_right" (formula "43") (term "0,0,0") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "jmod_axiom" (formula "49") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "49"))
                                                                  (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                                  (rule "ifthenelse_split" (formula "9") (term "0,0"))
                                                                  (branch "jmod(-2 + l_149 * 2 + left, 2) = 0 TRUE"
                                                                     (rule "jmod_axiom" (formula "9") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "9"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                     (rule "newSym_eq" (formula "9") (inst "newSymDef=add(add(Z(neglit(1(#))), l_149), mul(left, Z(0(#))))") (inst "l=l_150"))
                                                                     (rule "times_zero_1" (formula "9") (term "1,1,1"))
                                                                     (rule "add_zero_right" (formula "9") (term "1,1"))
                                                                     (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                                                     (rule "polySimp_addComm0" (formula "9") (term "0,1"))
                                                                     (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "9"))
                                                                     (rule "polySimp_homoEq" (formula "10"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                                                                     (rule "mul_literals" (formula "10") (term "0,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                                     (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                     (rule "add_literals" (formula "10") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "10"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "1"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,1,0,0,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,0"))
                                                                     (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                                     (rule "applyEq" (formula "49") (term "0,2,1,1,0,1,1,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "1,0,0,1,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "36") (term "1,1,0,0,0,0,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "47") (term "1,1,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "47") (term "0,2,2,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "37") (term "1,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0"))
                                                                     (rule "applyEq" (formula "48") (term "0,2,2,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "47") (term "1,1,1,0,0,0,0,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "1,1,0,0,0,0,0"))
                                                                     (rule "applyEq" (formula "47") (term "1,1,1,0,0,0,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "1,1,0,0,0,0"))
                                                                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                     (rule "applyEq" (formula "43") (term "1,1,1,0,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "43") (term "1,1,0,0,0,1,0"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,1,0,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "1,1,0,1,0,1,0"))
                                                                     (rule "applyEq" (formula "48") (term "1,0,0,0,0,0,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "0,2,1,1,0,1,1,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,0,0,1,1,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "46") (term "1,0,0,0,0,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,1,0,0,0,1,0,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,0,1,0,0,0,1,0"))
                                                                     (rule "applyEq" (formula "47") (term "0,2,1,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "0,2,2,1,0,1,1,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,1,0,1,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "1,1,0,1,0,0,1,0"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,0,0,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "37") (term "1,1,1,0,0,0,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "37") (term "1,1,0,0,0,0"))
                                                                     (rule "applyEq" (formula "49") (term "1,0,0,0,0,1,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "36") (term "1,1,1,0,0,0,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "36") (term "1,1,0,0,0,0"))
                                                                     (rule "applyEq" (formula "48") (term "1,1,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "10"))
                                                                     (rule "eqSymm" (formula "51"))
                                                                     (rule "applyEq" (formula "49") (term "1,0,0,1,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "34") (term "1,0,0,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "46") (term "0,2,2,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "17") (term "1"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,0,0,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "1,0,0,0,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "46") (term "0,2,1,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "1,0,0,0,0,1,0,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "46") (term "1,1,1,0,0,0,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "46") (term "1,1,0,0,0,0"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,0,0,1,1,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "43") (term "1,1,0,0,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "47") (term "1,0,0,0,0,0,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "34") (term "1,1,1,0,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "1,1,0,0,0,1,0"))
                                                                     (rule "applyEq" (formula "48") (term "1,1,1,0,0,0,0,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "48") (term "1,1,0,0,0,0,0"))
                                                                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                     (rule "applyEq" (formula "48") (term "0,2,1,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,1,0,0,0,1,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,0,1,1,0,1,0"))
                                                                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                     (rule "applyEq" (formula "37") (term "1,1,0,0,0,0,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "46") (term "1,1,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "16"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                     (rule "applyEq" (formula "26") (term "0") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                                     (rule "applyEq" (formula "49") (term "0,2,2,1,0,1,1,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "51") (term "0") (ifseqformula "10"))
                                                                     (rule "eqSymm" (formula "51"))
                                                                     (rule "applyEq" (formula "49") (term "0,1,1,1,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "0,2,2,1,0,1,1,1,0,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,1,0,0,2,1,1,1,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,2,1,1,1,0,0,1,0"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,1,0,0,2,1,1,1,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,2,1,1,1,1,0"))
                                                                     (rule "applyEq" (formula "49") (term "0,1,1,1,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "0,2,1,1,0,1,1,1,0,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "1,0,0,0,2,1,1,1,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "1,0,0,0,2,1,1,1,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "0,2,1,1,0,1,1,1,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,0,0,1,1,1,0,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "0,2,2,1,0,1,1,1,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "40") (term "1"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,0,0,1,1,1,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "36") (term "1,0,0,1,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "36") (term "0,0,1,1,0"))
                                                                     (rule "applyEq" (formula "49") (term "1,0,0,0,2,0,1,1,0,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,1,0,0,2,0,1,1,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,2,0,1,1,1,0,1,0"))
                                                                     (rule "applyEq" (formula "49") (term "1,0,0,0,2,0,1,1,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "0,0,1,1,1,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "49") (term "1,1,1,0,0,2,0,1,1,0,0,0,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "49") (term "1,1,0,0,2,0,1,1,0,0,0,1,0"))
                                                                     (rule "applyEq" (formula "47") (term "1,0,0,0,2,0,0,1,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "46") (term "1,0,0,0,2,0,0,1,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "46") (term "0,0,0,1,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "47") (term "1,1,1,0,0,2,0,0,1,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "1,1,0,0,2,0,0,1,1,0"))
                                                                     (rule "applyEq" (formula "47") (term "0,0,0,1,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "48") (term "0,0,0,1,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "46") (term "1,1,1,0,0,2,0,0,1,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "46") (term "1,1,0,0,2,0,0,1,1,0"))
                                                                     (rule "applyEq" (formula "48") (term "1,0,0,0,2,0,0,1,1,0") (ifseqformula "10"))
                                                                     (rule "applyEq" (formula "48") (term "1,1,1,0,0,2,0,0,1,1,0") (ifseqformula "10"))
                                                                     (rule "polySimp_addComm1" (formula "48") (term "1,1,0,0,2,0,0,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                                                     (rule "mul_literals" (formula "4") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                     (rule "mul_literals" (formula "3") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                                     (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                                     (rule "mul_literals" (formula "26") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                     (rule "elimGcdLeq_antec" (formula "26") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_149") (inst "elimGcdRightDiv=add(Z(1(#)), l_150)"))
                                                                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                                                     (rule "neg_literal" (formula "26") (term "0,0,0,0,0,1,0"))
                                                                     (rule "leq_literals" (formula "26") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                                                     (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "26") (term "0,0"))
                                                                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                                                     (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "26") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "26") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_149") (inst "elimGcdRightDiv=add(Z(1(#)), mul(l_150, Z(neglit(1(#)))))"))
                                                                     (rule "leq_literals" (formula "16") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                                     (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                                     (rule "add_zero_left" (formula "16") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                                     (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                     (rule "leq_literals" (formula "16") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_150") (inst "elimGcdRightDiv=Z(1(#))"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                                                     (rule "leq_literals" (formula "20") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                                     (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "20") (term "0,0"))
                                                                     (rule "leq_literals" (formula "20") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "elimGcdEq" (formula "51") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=jdiv(mul(l_150, Z(2(#))), Z(2(#)))") (inst "elimGcdRightDiv=l_150"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,0,1,0"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,0,0,1"))
                                                                     (rule "add_literals" (formula "51") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor0" (formula "51") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "51") (term "1,0,1,0"))
                                                                     (rule "times_zero_1" (formula "51") (term "0,1,0"))
                                                                     (rule "qeq_literals" (formula "51") (term "1,0"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor0" (formula "51") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "51") (term "1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "51") (term "0,0,1"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor0" (formula "51") (term "0,0"))
                                                                     (rule "add_literals" (formula "51") (term "1,0,0"))
                                                                     (rule "times_zero_1" (formula "51") (term "0,0"))
                                                                     (rule "leq_literals" (formula "51") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "26"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                     (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                                     (rule "add_literals" (formula "16") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "16") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor3" (formula "16") (term "0"))
                                                                     (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "21"))
                                                                     (rule "greater_literals" (formula "16") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "mul_literals" (formula "16") (term "1,0"))
                                                                     (rule "leq_literals" (formula "16") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "true_left" (formula "16"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                                                                     (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0"))
                                                                     (rule "add_literals" (formula "19") (term "1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                                     (rule "add_literals" (formula "19") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                     (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                                     (rule "mul_literals" (formula "19") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                                     (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=mul(l_149, Z(2(#)))") (inst "elimGcdRightDiv=add(Z(4(#)), mul(l_150, Z(neglit(1(#)))))"))
                                                                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                                                     (rule "leq_literals" (formula "19") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                     (rule "leq_literals" (formula "19") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "4"))
                                                                     (rule "mul_literals" (formula "18") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                                     (rule "add_literals" (formula "18") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                     (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                     (rule "mul_literals" (formula "18") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                     (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_149") (inst "elimGcdRightDiv=add(Z(3(#)), mul(l_150, Z(neglit(1(#)))))"))
                                                                     (rule "leq_literals" (formula "18") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                                     (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                                     (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                     (rule "leq_literals" (formula "18") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "18"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "16") (term "0,0"))
                                                                     (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "16") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "16") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "true_left" (formula "16"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "27"))
                                                                     (rule "mul_literals" (formula "42") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                                     (rule "add_literals" (formula "42") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                                     (rule "mul_literals" (formula "42") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "4"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0"))
                                                                     (rule "add_literals" (formula "15") (term "1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                     (rule "add_literals" (formula "15") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                     (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                     (rule "mul_literals" (formula "15") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                     (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=mul(l_149, Z(3(#)))") (inst "elimGcdRightDiv=add(Z(4(#)), mul(l_150, Z(neglit(1(#)))))"))
                                                                     (rule "leq_literals" (formula "15") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                                                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                     (rule "leq_literals" (formula "15") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                                                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                     (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "3") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                                     (rule "mul_literals" (formula "3") (term "1"))
                                                                     (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "44"))
                                                                     (rule "mul_literals" (formula "3") (term "1,1,0"))
                                                                     (rule "greater_literals" (formula "3") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "leq_literals" (formula "3") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "true_left" (formula "3"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "4"))
                                                                     (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "0"))
                                                                     (rule "add_literals" (formula "27") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "27") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "27") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                     (rule "add_literals" (formula "27") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                                     (rule "mul_literals" (formula "27") (term "1"))
                                                                     (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "22"))
                                                                     (rule "greater_literals" (formula "27") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "mul_literals" (formula "27") (term "1,0"))
                                                                     (rule "leq_literals" (formula "27") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "true_left" (formula "27"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "mul_literals" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_subsumption6" (formula "1") (ifseqformula "44"))
                                                                     (rule "greater_literals" (formula "1") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0"))
                                                                     (rule "leq_literals" (formula "1") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "28"))
                                                                     (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                                     (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "18") (term "1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                                     (rule "add_literals" (formula "18") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor3b" (formula "18") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                     (rule "mul_literals" (formula "18") (term "1"))
                                                                     (rule "inEqSimp_subsumption6" (formula "18") (ifseqformula "23"))
                                                                     (rule "greater_literals" (formula "18") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "mul_literals" (formula "18") (term "1,0"))
                                                                     (rule "leq_literals" (formula "18") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "true_left" (formula "18"))
                                                                     (rule "inEqSimp_exactShadow1" (formula "15") (ifseqformula "28"))
                                                                     (rule "greater_literals" (formula "15") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                     (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                                     (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                                     (rule "add_literals" (formula "15") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                                                                     (rule "add_literals" (formula "15") (term "1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                     (rule "mul_literals" (formula "15") (term "1"))
                                                                     (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "23"))
                                                                     (rule "greater_literals" (formula "15") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                     (rule "mul_literals" (formula "15") (term "1,0"))
                                                                     (rule "leq_literals" (formula "15") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                     (rule "true_left" (formula "15"))
                                                                     (rule "inEqSimp_exactShadow1" (formula "20") (ifseqformula "28"))
                                                                     (rule "greater_literals" (formula "20") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                     (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "20") (term "1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                                     (rule "add_literals" (formula "20") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                                     (rule "add_literals" (formula "20") (term "1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                     (rule "mul_literals" (formula "20") (term "1"))
                                                                     (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "23"))
                                                                     (rule "mul_literals" (formula "20") (term "1,1,0"))
                                                                     (rule "greater_literals" (formula "20") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "leq_literals" (formula "20") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "true_left" (formula "20"))
                                                                     (rule "emptyModality" (formula "12") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "true_left" (formula "12"))
                                                                     (rule "emptyModality" (formula "11") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "closeFalse" (formula "11"))
                                                                  )
                                                                  (branch "jmod(-2 + l_149 * 2 + left, 2) = 0 FALSE"
                                                                     (rule "jmod_axiom" (formula "49") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "49") (term "1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "49"))
                                                                     (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                                     (rule "ifthenelse_to_or_left" (formula "46") (term "1,0"))
                                                                     (rule "polySimp_homoEq" (formula "46") (term "1,0,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "46") (term "1,1,1,0"))
                                                                     (rule "mul_literals" (formula "46") (term "1,0,1,1,1,0"))
                                                                     (rule "add_zero_right" (formula "46") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "46") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1,0,1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "46") (term "1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "46") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "46") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "46") (term "1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "46") (term "0,1,0,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "46") (term "0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,1,0"))
                                                                     (rule "add_literals" (formula "46") (term "0,0,0,0,0,1,0"))
                                                                     (rule "add_zero_left" (formula "46") (term "0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "46") (term "1,0,0,1,0"))
                                                                     (rule "emptyModality" (formula "10") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "true_left" (formula "10"))
                                                                     (rule "emptyModality" (formula "9") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "true_left" (formula "9"))
                                                                     (rule "ifElseSplit" (formula "49"))
                                                                     (branch "if x_2453 true"
                                                                        (builtin "One Step Simplification" (formula "50"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch "if x_2453 false"
                                                                        (builtin "One Step Simplification" (formula "50"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "true_left" (formula "1"))
                                                                        (rule "cnf_rightDist" (formula "45") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "45"))
                                                                        (rule "andLeft" (formula "45"))
                                                                        (rule "commute_or_2" (formula "46") (term "0"))
                                                                        (rule "equality_comparison_simple" (formula "2") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "ifthenelse_to_or_left" (formula "43") (term "1,0"))
                                                                        (rule "polySimp_homoEq" (formula "43") (term "1,1,1,0"))
                                                                        (rule "times_zero_2" (formula "43") (term "1,0,1,1,1,0"))
                                                                        (rule "add_zero_right" (formula "43") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "43") (term "1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "43") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "43") (term "0,0,0,1,0,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "43") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "43") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "43") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "43") (term "1,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "43") (term "0,1,0,1,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "43") (term "0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,1,0"))
                                                                        (rule "add_literals" (formula "43") (term "0,0,0,0,0,1,0"))
                                                                        (rule "add_zero_left" (formula "43") (term "0,0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,0"))
                                                                        (rule "ifthenelse_to_or_left" (formula "42") (term "1,0"))
                                                                        (rule "polySimp_homoEq" (formula "42") (term "1,0,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "42") (term "1,1,1,0"))
                                                                        (rule "times_zero_2" (formula "42") (term "1,0,1,1,1,0"))
                                                                        (rule "add_zero_right" (formula "42") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "42") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "42") (term "0,0,0,1,0,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "42") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "42") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "42") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "42") (term "1,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "42") (term "0,1,0,1,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "42") (term "0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,1,0"))
                                                                        (rule "add_literals" (formula "42") (term "0,0,0,0,0,1,0"))
                                                                        (rule "add_zero_left" (formula "42") (term "0,0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "42") (term "1,0,0,1,0"))
                                                                        (rule "shift_paren_or" (formula "46") (term "0,0"))
                                                                        (rule "cnf_rightDist" (formula "44") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "44"))
                                                                        (rule "andLeft" (formula "44"))
                                                                        (rule "commute_or_2" (formula "47") (term "0,0,0"))
                                                                        (rule "cnf_rightDist" (formula "46") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "46"))
                                                                        (rule "andLeft" (formula "46"))
                                                                        (rule "commute_or_2" (formula "45") (term "0"))
                                                                        (rule "commute_or_2" (formula "47") (term "0"))
                                                                        (rule "shift_paren_or" (formula "44") (term "0"))
                                                                        (rule "commute_or_2" (formula "44") (term "0,0"))
                                                                        (rule "commute_or_2" (formula "44") (term "0,0,0"))
                                                                        (rule "commute_or_2" (formula "44") (term "0,0,0,0"))
                                                                        (rule "commute_or_2" (formula "44") (term "0,0,0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "44"))
                                                                        (rule "shift_paren_or" (formula "48") (term "0,0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "48"))
                                                                        (rule "cnf_rightDist" (formula "43") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "43"))
                                                                        (rule "andLeft" (formula "43"))
                                                                        (rule "commute_or_2" (formula "44") (term "0"))
                                                                        (rule "shift_paren_or" (formula "46") (term "0,0"))
                                                                        (rule "shift_paren_or" (formula "48") (term "0,0"))
                                                                        (rule "equality_comparison_simple" (formula "6") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "6"))
                                                                        (rule "shift_paren_or" (formula "43") (term "0"))
                                                                        (rule "commute_or_2" (formula "43") (term "0,0"))
                                                                        (rule "commute_or_2" (formula "43") (term "0,0,0"))
                                                                        (rule "commute_or_2" (formula "43") (term "0,0,0,0"))
                                                                        (rule "commute_or_2" (formula "43") (term "0,0,0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "43"))
                                                                        (rule "shift_paren_or" (formula "44") (term "0,0"))
                                                                        (rule "shift_paren_or" (formula "46") (term "0,0,0"))
                                                                        (rule "shift_paren_or" (formula "48") (term "0,0,0"))
                                                                        (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_or_tautInEq2" (formula "48") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "48") (term "1,1,0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "48") (term "0,1,1,0,0,0,0,0"))
                                                                        (rule "add_zero_left" (formula "48") (term "1,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "48") (term "0,1,0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "48") (term "1,0,1,0,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "48") (term "0,1,0,0,0,0,0"))
                                                                        (rule "leq_literals" (formula "48") (term "1,0,0,0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "48"))
                                                                        (rule "true_left" (formula "48"))
                                                                        (rule "cnf_rightDist" (formula "42") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "42"))
                                                                        (rule "andLeft" (formula "42"))
                                                                        (rule "commute_or_2" (formula "43") (term "0"))
                                                                        (rule "shift_paren_or" (formula "45") (term "0,0,0"))
                                                                        (rule "shift_paren_or" (formula "47") (term "0,0,0,0"))
                                                                        (rule "emptyModality" (formula "41") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "eqSymm" (formula "41"))
                                                                        (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "notLeft" (formula "41"))
                                                                        (rule "replace_known_right" (formula "41") (term "0,0,0,0,1,1,1,0") (ifseqformula "50"))
                                                                        (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "replace_known_right" (formula "48") (term "0,1,0,1,0") (ifseqformula "50"))
                                                                        (builtin "One Step Simplification" (formula "48"))
                                                                        (rule "replace_known_right" (formula "47") (term "0,1,0,1,1,1,0,1,0") (ifseqformula "50"))
                                                                        (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "50")))
                                                                        (rule "replace_known_right" (formula "43") (term "0,0,0,0,1,1,0") (ifseqformula "50"))
                                                                        (builtin "One Step Simplification" (formula "43"))
                                                                        (rule "replace_known_right" (formula "45") (term "0,0,0,0,1,1,0") (ifseqformula "50"))
                                                                        (builtin "One Step Simplification" (formula "45"))
                                                                        (rule "ifElseUnfold" (formula "57") (term "1") (inst "#boolv=x_2"))
                                                                        (rule "variableDeclaration" (formula "57") (term "1") (newnames "x_2464"))
                                                                        (rule "shift_paren_or" (formula "42") (term "0,0"))
                                                                        (rule "shift_paren_or" (formula "44") (term "0,0,0,0"))
                                                                        (rule "shift_paren_or" (formula "46") (term "0,0,0,0,0"))
                                                                        (rule "inEqSimp_or_tautInEq2" (formula "46") (term "0,0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "46") (term "1,1,0,0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "46") (term "0,1,1,0,0,0,0,0,0"))
                                                                        (rule "add_zero_left" (formula "46") (term "1,1,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "46") (term "0,1,0,0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "46") (term "1,0,1,0,0,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "46") (term "0,1,0,0,0,0,0,0"))
                                                                        (rule "leq_literals" (formula "46") (term "1,0,0,0,0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "46"))
                                                                        (rule "true_left" (formula "46"))
                                                                        (rule "shift_paren_or" (formula "41") (term "0"))
                                                                        (rule "ifElseSplit" (formula "55"))
                                                                        (branch "if x_2458 true"
                                                                           (builtin "One Step Simplification" (formula "56"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch "if x_2458 false"
                                                                           (builtin "One Step Simplification" (formula "56"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "true_left" (formula "1"))
                                                                           (rule "commute_or_2" (formula "41") (term "0,0"))
                                                                           (rule "ifElseSplit" (formula "54"))
                                                                           (branch "if x_2459 true"
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                           (branch "if x_2459 false"
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (builtin "One Step Simplification" (formula "55"))
                                                                              (rule "true_left" (formula "1"))
                                                                              (rule "commute_or_2" (formula "41") (term "0,0,0"))
                                                                              (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                                                              (rule "shift_paren_or" (formula "44") (term "0,0,0,0,0"))
                                                                              (rule "inEqSimp_or_tautInEq2" (formula "44") (term "0,0,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "44") (term "1,1,0,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "44") (term "0,1,1,0,0,0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "44") (term "1,1,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "44") (term "0,1,0,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "44") (term "1,0,1,0,0,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "44") (term "0,1,0,0,0,0,0,0"))
                                                                              (rule "leq_literals" (formula "44") (term "1,0,0,0,0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "true_left" (formula "44"))
                                                                              (rule "commute_or_2" (formula "41") (term "0,0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "41"))
                                                                              (rule "methodCallReturn" (formula "2") (term "1"))
                                                                              (rule "assignment" (formula "2") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "cnf_rightDist" (formula "45") (term "0"))
                                                                              (rule "distr_forallAnd" (formula "45"))
                                                                              (rule "andLeft" (formula "45"))
                                                                              (rule "shift_paren_or" (formula "42") (term "0,0,0,0"))
                                                                              (rule "inEqSimp_or_tautInEq2" (formula "42") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "42") (term "0,1,1,0,0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "42") (term "1,1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "42") (term "0,1,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "42") (term "1,0,1,0,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "42") (term "0,1,0,0,0,0,0"))
                                                                              (rule "leq_literals" (formula "42") (term "1,0,0,0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "42"))
                                                                              (rule "true_left" (formula "42"))
                                                                              (rule "commute_or_2" (formula "45") (term "0"))
                                                                              (rule "shift_paren_or" (formula "44") (term "0"))
                                                                              (rule "commute_or_2" (formula "44") (term "0,0"))
                                                                              (rule "commute_or_2" (formula "44") (term "0,0,0"))
                                                                              (rule "inEqSimp_or_tautInEq0" (formula "44") (term "0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "44") (term "1,1,0,0,0,0"))
                                                                              (rule "add_literals" (formula "44") (term "0,1,1,0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "44") (term "1,1,0,0,0,0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "44") (term "1,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "44") (term "0,1,0,0,0,0"))
                                                                              (rule "add_literals" (formula "44") (term "1,0,1,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "44") (term "0,1,0,0,0,0"))
                                                                              (rule "leq_literals" (formula "44") (term "1,0,0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "true_left" (formula "44"))
                                                                              (rule "shift_paren_or" (formula "44") (term "0,0"))
                                                                              (rule "jdiv_axiom" (formula "49") (term "0,0"))
                                                                              (rule "eqSymm" (formula "1"))
                                                                              (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "17"))
                                                                              (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1"))
                                                                              (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "1"))
                                                                              (rule "ifthenelse_to_or_left" (formula "46") (term "1,0"))
                                                                              (rule "eqSymm" (formula "46") (term "1,0,1,0"))
                                                                              (rule "eqSymm" (formula "46") (term "1,1,1,0"))
                                                                              (rule "inEqSimp_notGeq" (formula "46") (term "0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,1,0"))
                                                                              (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "46") (term "0,0,0,0,0,1,0"))
                                                                              (rule "add_zero_left" (formula "46") (term "0,0,0,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "46") (term "1,0,0,1,0"))
                                                                              (rule "shift_paren_or" (formula "45") (term "0,0,0"))
                                                                              (rule "commute_or_2" (formula "45") (term "0,0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "inEqSimp_or_tautInEq1" (formula "45") (term "0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "45") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "45") (term "0,1,1,0,0,0"))
                                                                              (rule "add_literals" (formula "45") (term "0,0,1,1,0,0,0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "45") (term "0,1,0,0,0"))
                                                                              (rule "add_literals" (formula "45") (term "1,0,1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "45") (term "0,1,0,0,0"))
                                                                              (rule "leq_literals" (formula "45") (term "1,0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "true_left" (formula "45"))
                                                                              (rule "jdiv_axiom" (formula "48") (term "0,0"))
                                                                              (rule "eqSymm" (formula "1"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "0,0,0,2,0"))
                                                                              (rule "mul_literals" (formula "1") (term "0,0,0,0,2,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                              (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "14"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1"))
                                                                              (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "1"))
                                                                              (rule "polyDiv_pullOut" (formula "49") (term "0,0") (inst "polyDivCoeff=l_149"))
                                                                              (rule "equal_literals" (formula "49") (term "0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "49"))
                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "49") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "49") (term "0,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "49") (term "1,1,0,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "49") (term "1,0,0,0,1,0"))
                                                                              (rule "add_zero_right" (formula "49") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "49") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "49") (term "0"))
                                                                              (rule "polySimp_homoEq" (formula "49"))
                                                                              (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "49") (term "0,1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                                                              (rule "polySimp_mulAssoc" (formula "49") (term "0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "49") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "49") (term "1,1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "49") (term "1,0,0,0"))
                                                                              (rule "add_literals" (formula "49") (term "0,0,0"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "49"))
                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                                              (rule "polyDiv_pullOut" (formula "1") (term "1") (inst "polyDivCoeff=l_149"))
                                                                              (rule "equal_literals" (formula "1") (term "0,1"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                                                                              (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1"))
                                                                              (rule "add_literals" (formula "1") (term "1,1,0,0,0,1"))
                                                                              (rule "times_zero_1" (formula "1") (term "1,0,0,0,1"))
                                                                              (rule "add_zero_right" (formula "1") (term "0,0,0,1"))
                                                                              (rule "polySimp_addComm0" (formula "1") (term "1"))
                                                                              (rule "polyDiv_pullOut" (formula "1") (term "1,1") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,1,1"))
                                                                              (rule "equal_literals" (formula "1") (term "0,1,1"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "mul_literals" (formula "1") (term "1,0,0,1,1"))
                                                                              (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1"))
                                                                              (rule "add_literals" (formula "1") (term "0,0,0,1,1"))
                                                                              (rule "add_zero_left" (formula "1") (term "0,0,1,1"))
                                                                              (rule "polySimp_addComm0" (formula "1") (term "1,1"))
                                                                              (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                                                              (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                                                                              (rule "polyDiv_pullOut" (formula "49") (term "0,0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                                                              (rule "equal_literals" (formula "49") (term "0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "49"))
                                                                              (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "49") (term "1,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "49") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "49") (term "0,0,1,0"))
                                                                              (rule "add_literals" (formula "49") (term "0,0,0,1,0"))
                                                                              (rule "add_zero_left" (formula "49") (term "0,0,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "49") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "49") (term "0"))
                                                                              (rule "mul_literals" (formula "49") (term "0,0"))
                                                                              (rule "polySimp_homoEq" (formula "49"))
                                                                              (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                                              (rule "mul_literals" (formula "49") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                                              (rule "add_literals" (formula "49") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "49") (term "0,0"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "49"))
                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                                              (rule "methodCallReturn" (formula "8") (term "1"))
                                                                              (rule "assignment" (formula "8") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "8"))
                                                                              (rule "ifElseUnfold" (formula "50") (term "1") (inst "#boolv=x_2"))
                                                                              (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_2465"))
                                                                              (rule "cnf_rightDist" (formula "46") (term "0"))
                                                                              (rule "compound_inequality_comparison_1" (formula "54") (term "1") (inst "#v0=x_2465"))
                                                                              (rule "variableDeclarationAssign" (formula "54") (term "1"))
                                                                              (rule "variableDeclaration" (formula "54") (term "1") (newnames "x_2466"))
                                                                              (rule "distr_forallAnd" (formula "46"))
                                                                              (rule "andLeft" (formula "46"))
                                                                              (rule "methodCallEmpty" (formula "4") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "commute_or_2" (formula "47") (term "0"))
                                                                              (rule "shift_paren_or" (formula "46") (term "0"))
                                                                              (rule "commute_or_2" (formula "46") (term "0,0"))
                                                                              (rule "commute_or_2" (formula "46") (term "0,0,0"))
                                                                              (rule "commute_or_2" (formula "46") (term "0,0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "46"))
                                                                              (rule "shift_paren_or" (formula "47") (term "0,0"))
                                                                              (rule "shift_paren_or" (formula "47") (term "0,0,0"))
                                                                              (rule "shift_paren_or" (formula "47") (term "0,0,0,0"))
                                                                              (rule "inEqSimp_or_tautInEq2" (formula "47") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "47") (term "1,1,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "47") (term "0,1,1,0,0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "47") (term "1,1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "47") (term "0,1,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "47") (term "1,0,1,0,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "47") (term "0,1,0,0,0,0,0"))
                                                                              (rule "leq_literals" (formula "47") (term "1,0,0,0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "47"))
                                                                              (rule "true_left" (formula "47"))
                                                                              (rule "ifElseUnfold" (formula "53") (term "1") (inst "#boolv=x_2"))
                                                                              (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_2467"))
                                                                              (rule "ifElseUnfold" (formula "52") (term "1") (inst "#boolv=x_2"))
                                                                              (rule "variableDeclaration" (formula "52") (term "1") (newnames "x_2468"))
                                                                              (rule "div_axiom" (formula "2") (term "1") (inst "quotient=quotient_30"))
                                                                              (rule "qeq_literals" (formula "2") (term "0,1,1"))
                                                                              (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "equal_literals" (formula "2") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "mul_literals" (formula "2") (term "1,1,1"))
                                                                              (rule "andLeft" (formula "2"))
                                                                              (rule "andLeft" (formula "2"))
                                                                              (rule "polySimp_addComm1" (formula "4") (term "1"))
                                                                              (rule "add_literals" (formula "4") (term "0,1"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "3"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                              (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "2"))
                                                                              (rule "eqSymm" (formula "52"))
                                                                              (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
                                                                              (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "2"))
                                                                              (rule "polySimp_addComm1" (formula "1") (term "1"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                              (rule "mul_literals" (formula "4") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                              (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "52"))
                                                                              (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "3"))
                                                                              (rule "polySimp_mulAssoc" (formula "52") (term "1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "52") (term "0,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0"))
                                                                              (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "52") (term "0,0"))
                                                                              (rule "leq_literals" (formula "52") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "52"))
                                                                              (rule "false_right" (formula "52"))
                                                                              (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "4"))
                                                                              (rule "applyEq" (formula "38") (term "1,1,1,0,0,0,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "38") (term "1,1,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "38") (term "0,1,1,0,0,0,0"))
                                                                              (rule "add_literals" (formula "38") (term "0,0,1,1,0,0,0,0"))
                                                                              (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "50") (term "1,1,1,0,0,0,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "50") (term "1,1,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "50") (term "0,1,1,0,0,0,0"))
                                                                              (rule "add_literals" (formula "50") (term "0,0,1,1,0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "50") (term "0,1,1,0,0,0,0"))
                                                                              (rule "applyEq" (formula "47") (term "1,1,1,0,0,0,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "47") (term "1,1,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "47") (term "0,1,1,0,0,0,0"))
                                                                              (rule "add_literals" (formula "47") (term "0,0,1,1,0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "47") (term "0,1,1,0,0,0,0"))
                                                                              (rule "applyEq" (formula "45") (term "1,1,0,0,0,0,1,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addAssoc" (formula "45") (term "1,0,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "45") (term "0,1,0,0,0,0,1,0"))
                                                                              (rule "applyEq" (formula "38") (term "1,1,0,0,0,0,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addAssoc" (formula "38") (term "1,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                              (rule "applyEq" (formula "39") (term "1,0,0,1,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "39") (term "0,0,0,0,1,0"))
                                                                              (rule "applyEq" (formula "48") (term "1,0,0,0,0,0,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "39") (term "1,1,0,0,0,0,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addAssoc" (formula "39") (term "1,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                              (rule "applyEq" (formula "50") (term "1,1,1,0,0,2,0,1,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "50") (term "1,1,0,0,2,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "50") (term "0,1,1,0,0,2,0,1,0"))
                                                                              (rule "add_literals" (formula "50") (term "0,0,1,1,0,0,2,0,1,0"))
                                                                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "50") (term "0,0,1,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "3"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "28"))
                                                                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
                                                                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                                              (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                              (rule "applyEq" (formula "47") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "3"))
                                                                              (rule "polySimp_addAssoc" (formula "15") (term "1"))
                                                                              (rule "add_literals" (formula "15") (term "0,1"))
                                                                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "3"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "7"))
                                                                              (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                                                              (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                                                              (rule "applyEq" (formula "48") (term "1,1,1,0,0,0,0,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "48") (term "1,1,0,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "48") (term "0,1,1,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "48") (term "0,0,1,1,0,0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "48") (term "0,1,1,0,0,0,0,0"))
                                                                              (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "19") (term "1"))
                                                                              (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                                                              (rule "add_literals" (formula "19") (term "0,0,1"))
                                                                              (rule "add_zero_left" (formula "19") (term "0,1"))
                                                                              (rule "applyEq" (formula "50") (term "1,0,0,0,2,0,1,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                                              (rule "add_literals" (formula "5") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "5") (term "0"))
                                                                              (rule "qeq_literals" (formula "5"))
                                                                              (rule "true_left" (formula "5"))
                                                                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "3"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "8"))
                                                                              (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                              (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                              (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "3"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                              (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                              (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                                              (rule "applyEq" (formula "35") (term "1,1,1,0,0,0,1,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "35") (term "0,1,1,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "35") (term "0,0,1,1,0,0,0,1,0"))
                                                                              (rule "applyEq" (formula "21") (term "0") (ifseqformula "3"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "21"))
                                                                              (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                                              (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                                              (rule "add_literals" (formula "21") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "21") (term "0"))
                                                                              (rule "applyEq" (formula "48") (term "1,1,1,0,0,0,0,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "48") (term "1,1,0,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "48") (term "0,1,1,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "48") (term "0,0,1,1,0,0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "48") (term "0,1,1,0,0,0,0,0"))
                                                                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "17"))
                                                                              (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                                              (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                                              (rule "add_literals" (formula "17") (term "0,0,0"))
                                                                              (rule "applyEq" (formula "35") (term "1,0,0,0,0,1,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "4"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                              (rule "add_literals" (formula "4") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "4") (term "0"))
                                                                              (rule "leq_literals" (formula "4"))
                                                                              (rule "true_left" (formula "4"))
                                                                              (rule "applyEq" (formula "47") (term "1,0,0,0,0,0,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "46") (term "1,1,1,0,0,0,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "46") (term "1,1,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "46") (term "0,1,1,0,0,0,0"))
                                                                              (rule "add_literals" (formula "46") (term "0,0,1,1,0,0,0,0"))
                                                                              (rule "applyEq" (formula "43") (term "1,1,1,0,0,0,1,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "43") (term "1,1,0,0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "43") (term "0,1,1,0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "43") (term "0,0,1,1,0,0,0,1,0"))
                                                                              (rule "applyEq" (formula "37") (term "1,1,1,0,0,0,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "37") (term "1,1,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "37") (term "0,1,1,0,0,0,0"))
                                                                              (rule "add_literals" (formula "37") (term "0,0,1,1,0,0,0,0"))
                                                                              (rule "applyEq" (formula "48") (term "0,2,1,1,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "40") (term "1"))
                                                                              (rule "polySimp_addAssoc" (formula "40") (term "0,1"))
                                                                              (rule "add_literals" (formula "40") (term "0,0,1"))
                                                                              (rule "applyEq" (formula "47") (term "0,1,0,1,1,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "46") (term "1,1,1,0,0,2,1,0,1,1,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "46") (term "1,1,0,0,2,1,0,1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "46") (term "0,1,1,0,0,2,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "46") (term "0,0,1,1,0,0,2,1,0,1,1,0"))
                                                                              (rule "applyEq" (formula "45") (term "0,1,0,1,1,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "46") (term "1,0,0,0,2,1,0,1,1,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "47") (term "1,1,1,0,0,2,1,0,1,1,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "47") (term "1,1,0,0,2,1,0,1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "47") (term "0,1,1,0,0,2,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "47") (term "0,0,1,1,0,0,2,1,0,1,1,0"))
                                                                              (rule "applyEq" (formula "47") (term "1,0,0,0,2,1,0,1,1,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "46") (term "0,1,0,1,1,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "45") (term "1,1,1,0,0,2,1,0,1,1,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "45") (term "1,1,0,0,2,1,0,1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "45") (term "0,1,1,0,0,2,1,0,1,1,0"))
                                                                              (rule "add_literals" (formula "45") (term "0,0,1,1,0,0,2,1,0,1,1,0"))
                                                                              (rule "applyEq" (formula "45") (term "1,0,0,0,2,1,0,1,1,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "36") (term "1,0,0,1,1,0") (ifseqformula "3"))
                                                                              (rule "polySimp_addComm1" (formula "36") (term "0,0,1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "36") (term "0,0,0,0,1,1,0"))
                                                                              (rule "applyEq" (formula "46") (term "0,2,0,0,0,1,1,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "45") (term "0,2,0,0,0,1,1,0") (ifseqformula "3"))
                                                                              (rule "applyEq" (formula "47") (term "0,2,0,0,0,1,1,0") (ifseqformula "3"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                                              (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                                              (rule "mul_literals" (formula "26") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                              (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                              (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
                                                                              (rule "bsum_induction_lower2_concrete" (formula "48") (term "0,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "48") (term "0,1,0"))
                                                                              (rule "polySimp_homoEq" (formula "48") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,1,1,1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,1,1,1,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "48") (term "0,0,0,1,1,1,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0,0,1,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0,0,1,1,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0,0,0,1,1,0,1,0"))
                                                                              (rule "add_literals" (formula "48") (term "1,1,0,0,0,0,1,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,1,1,0,1,0"))
                                                                              (rule "add_zero_right" (formula "48") (term "0,0,0,0,1,1,0,1,0"))
                                                                              (rule "qeq_literals" (formula "48") (term "0,0,0,1,1,0,1,0"))
                                                                              (builtin "One Step Simplification" (formula "48"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0,1,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0,1,1,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "48") (term "0,0,0,1,1,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0,0,0,1,1,0,1,0"))
                                                                              (rule "add_literals" (formula "48") (term "1,1,0,0,0,0,1,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,1,1,0,1,0"))
                                                                              (rule "add_zero_right" (formula "48") (term "0,0,0,0,1,1,0,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                                              (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                              (rule "mul_literals" (formula "7") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                                              (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                              (rule "polySimp_rightDist" (formula "8") (term "0,1"))
                                                                              (rule "mul_literals" (formula "8") (term "0,0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1"))
                                                                              (rule "inEqSimp_invertInEq0" (formula "20"))
                                                                              (rule "times_zero_2" (formula "20") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                                              (rule "bsum_induction_lower2_concrete" (formula "47") (term "1,0,1,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "47") (term "1,0,1,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,1,1,0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "47") (term "0,0,0,1,1,0,1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "47") (term "0,1,1,0"))
                                                                              (rule "polySimp_homoEq" (formula "47") (term "1,0"))
                                                                              (rule "polySimp_addComm1" (formula "47") (term "0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "47") (term "1,1,0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "47") (term "0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "qeq_literals" (formula "47") (term "0,0,0,1,0,1,0,1,0"))
                                                                              (builtin "One Step Simplification" (formula "47"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "47") (term "0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "47") (term "0,0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "47") (term "1,1,0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "add_zero_right" (formula "47") (term "0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "bsum_induction_lower2_concrete" (formula "46") (term "1,0,1,1,0"))
                                                                              (rule "polySimp_homoEq" (formula "46") (term "1,0"))
                                                                              (rule "polySimp_elimSub" (formula "46") (term "1,0,0,0,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0,1,1,0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,1,1,0,0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "46") (term "0,0,0,1,1,0,0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "46") (term "0,1,0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "46") (term "0,1,0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,1,0,0,1,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "46") (term "1,1,0,0,1,0,0,1,0,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,1,0,1,0,1,0"))
                                                                              (rule "add_zero_right" (formula "46") (term "0,0,1,0,0,1,0,1,0,1,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "46") (term "1,1,0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "46") (term "0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "qeq_literals" (formula "46") (term "0,0,0,1,0,1,0,1,0"))
                                                                              (builtin "One Step Simplification" (formula "46"))
                                                                              (rule "bsum_induction_lower2_concrete" (formula "45") (term "1,0,1,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "45") (term "1,0,1,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,1,1,0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1,1,0,1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "45") (term "0,1,1,0"))
                                                                              (rule "polySimp_homoEq" (formula "45") (term "1,0"))
                                                                              (rule "polySimp_addComm1" (formula "45") (term "0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "45") (term "0,1,0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "45") (term "0,1,0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,1,0,0,1,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "45") (term "1,1,0,0,1,0,0,1,0,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,1,0,1,0,1,0"))
                                                                              (rule "add_zero_right" (formula "45") (term "0,0,1,0,0,1,0,1,0,1,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "45") (term "1,1,0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "add_zero_right" (formula "45") (term "0,0,0,0,1,0,1,0,1,0"))
                                                                              (rule "qeq_literals" (formula "45") (term "0,0,0,1,0,1,0,1,0"))
                                                                              (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "polySimp_sepPosMonomial" (formula "48") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "48") (term "0,1,1,0"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "47") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "46") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "46") (term "0,1,0"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "45") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "48") (term "0,0,0,1,0"))
                                                                              (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "48") (term "0,0,1,0,1,0,1,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_218"))
                                                                              (builtin "One Step Simplification" (formula "48"))
                                                                              (rule "eqSymm" (formula "48") (term "0,1"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "47") (term "0,0,0,1,0"))
                                                                              (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "47") (term "0,0,1,0,1,0,1,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_219"))
                                                                              (builtin "One Step Simplification" (formula "47"))
                                                                              (rule "eqSymm" (formula "47") (term "0,1"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "46") (term "0,0,0,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0,1,0,1,0"))
                                                                              (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "46") (term "0,0,1,0,1,0,1,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_220"))
                                                                              (builtin "One Step Simplification" (formula "46"))
                                                                              (rule "eqSymm" (formula "46") (term "0,1"))
                                                                              (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "45") (term "0,0,1,0,1,0,1,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_221"))
                                                                              (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "eqSymm" (formula "45") (term "0,1"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0,1,0,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "46") (term "0,0,0,1,0"))
                                                                              (rule "inEqSimp_subsumption6" (formula "48") (term "0,0,1,0,1,0") (ifseqformula "41"))
                                                                              (rule "mul_literals" (formula "48") (term "1,1,0,0,0,1,0,1,0"))
                                                                              (rule "greater_literals" (formula "48") (term "0,0,0,0,1,0,1,0"))
                                                                              (builtin "One Step Simplification" (formula "48"))
                                                                              (rule "leq_literals" (formula "48") (term "0,0,0,1,0,1,0"))
                                                                              (builtin "One Step Simplification" (formula "48"))
                                                                              (rule "ifthenelse_negated" (formula "48") (term "1,0,1,0"))
                                                                              (rule "inEqSimp_subsumption6" (formula "46") (term "0,0,1,0,1,0") (ifseqformula "41"))
                                                                              (rule "mul_literals" (formula "46") (term "1,1,0,0,0,1,0,1,0"))
                                                                              (rule "greater_literals" (formula "46") (term "0,0,0,0,1,0,1,0"))
                                                                              (builtin "One Step Simplification" (formula "46"))
                                                                              (rule "leq_literals" (formula "46") (term "0,0,0,1,0,1,0"))
                                                                              (builtin "One Step Simplification" (formula "46"))
                                                                              (rule "ifthenelse_negated" (formula "46") (term "1,0,1,0"))
                                                                              (rule "inEqSimp_subsumption6" (formula "52") (term "0,0,1,0,1,0") (ifseqformula "41"))
                                                                              (rule "mul_literals" (formula "52") (term "1,1,0,0,0,1,0,1,0"))
                                                                              (rule "greater_literals" (formula "52") (term "0,0,0,0,1,0,1,0"))
                                                                              (builtin "One Step Simplification" (formula "52"))
                                                                              (rule "leq_literals" (formula "52") (term "0,0,0,1,0,1,0"))
                                                                              (builtin "One Step Simplification" (formula "52"))
                                                                              (rule "ifthenelse_negated" (formula "52") (term "1,0,1,0"))
                                                                              (rule "inEqSimp_subsumption6" (formula "50") (term "0,0,1,0,1,0") (ifseqformula "41"))
                                                                              (rule "mul_literals" (formula "50") (term "1,1,0,0,0,1,0,1,0"))
                                                                              (rule "greater_literals" (formula "50") (term "0,0,0,0,1,0,1,0"))
                                                                              (builtin "One Step Simplification" (formula "50"))
                                                                              (rule "leq_literals" (formula "50") (term "0,0,0,1,0,1,0"))
                                                                              (builtin "One Step Simplification" (formula "50"))
                                                                              (rule "ifthenelse_negated" (formula "50") (term "1,0,1,0"))
                                                                              (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_149") (inst "elimGcdRightDiv=add(Z(1(#)), mul(quotient_30, Z(neglit(1(#)))))"))
                                                                              (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                                                              (rule "leq_literals" (formula "16") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "16"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "16") (term "0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                              (rule "leq_literals" (formula "16") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "16"))
                                                                              (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_30") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                              (rule "add_zero_right" (formula "20") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                                                              (rule "leq_literals" (formula "20") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "20"))
                                                                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                                                                              (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                                              (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "20") (term "0,0"))
                                                                              (rule "leq_literals" (formula "20") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "20"))
                                                                              (rule "elimGcdLeq_antec" (formula "26") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_149") (inst "elimGcdRightDiv=add(Z(2(#)), quotient_30)"))
                                                                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,1,0"))
                                                                              (rule "neg_literal" (formula "26") (term "0,0,0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                                                              (rule "leq_literals" (formula "26") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "26"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                                                              (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "26") (term "0,0"))
                                                                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                                                              (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "26") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "26") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "26"))
                                                                              (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=quotient_30"))
                                                                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0"))
                                                                              (rule "equal_literals" (formula "2") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                                              (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                              (rule "div_literals" (formula "2") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "2") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "2"))
                                                                              (rule "true_left" (formula "2"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "7"))
                                                                              (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                                              (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "18") (term "0"))
                                                                              (rule "add_literals" (formula "18") (term "1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                                              (rule "add_literals" (formula "18") (term "0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                              (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                              (rule "mul_literals" (formula "18") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                              (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=mul(l_149, Z(2(#)))") (inst "elimGcdRightDiv=add(Z(3(#)), mul(quotient_30, Z(neglit(1(#)))))"))
                                                                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                                                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,1,0"))
                                                                              (rule "leq_literals" (formula "18") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "18"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                              (rule "leq_literals" (formula "18") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "18"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "7"))
                                                                              (rule "mul_literals" (formula "17") (term "0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                                              (rule "add_literals" (formula "17") (term "0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                              (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                                              (rule "mul_literals" (formula "17") (term "0,1"))
                                                                              (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_149") (inst "elimGcdRightDiv=add(Z(2(#)), mul(quotient_30, Z(neglit(1(#)))))"))
                                                                              (rule "leq_literals" (formula "17") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "17"))
                                                                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                                              (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "17") (term "0,0"))
                                                                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                                              (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "17") (term "0,0"))
                                                                              (rule "leq_literals" (formula "17") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "17"))
                                                                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "17"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                                                              (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0"))
                                                                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "15") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "15") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "15"))
                                                                              (rule "true_left" (formula "15"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "7"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                                                              (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "25") (term "0"))
                                                                              (rule "add_literals" (formula "25") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "25") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "25") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                              (rule "add_literals" (formula "25") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "25") (term "0"))
                                                                              (rule "inEqSimp_subsumption6" (formula "25") (ifseqformula "20"))
                                                                              (rule "times_zero_1" (formula "25") (term "1,1,0"))
                                                                              (rule "greater_literals" (formula "25") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "25"))
                                                                              (rule "leq_literals" (formula "25") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "25"))
                                                                              (rule "true_left" (formula "25"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "7"))
                                                                              (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                                              (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
                                                                              (rule "add_literals" (formula "14") (term "1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                                              (rule "add_literals" (formula "14") (term "0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                              (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                                              (rule "mul_literals" (formula "14") (term "0,1"))
                                                                              (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=mul(l_149, Z(3(#)))") (inst "elimGcdRightDiv=add(Z(4(#)), mul(quotient_30, Z(neglit(1(#)))))"))
                                                                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                                                              (rule "leq_literals" (formula "14") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "14"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "14") (term "0,0"))
                                                                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "14") (term "0,0"))
                                                                              (rule "leq_literals" (formula "14") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "14"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "7"))
                                                                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                                              (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                                                                              (rule "add_literals" (formula "4") (term "1,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                                                              (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "4") (term "0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                              (rule "mul_literals" (formula "4") (term "1"))
                                                                              (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "43"))
                                                                              (rule "greater_literals" (formula "4") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "mul_literals" (formula "4") (term "1,0"))
                                                                              (rule "leq_literals" (formula "4") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "true_left" (formula "4"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                                                              (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                                              (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "6") (term "0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                                              (rule "mul_literals" (formula "6") (term "1"))
                                                                              (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "43"))
                                                                              (rule "greater_literals" (formula "6") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "6"))
                                                                              (rule "mul_literals" (formula "6") (term "1,0"))
                                                                              (rule "leq_literals" (formula "6") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "6"))
                                                                              (rule "true_left" (formula "6"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "27"))
                                                                              (rule "mul_literals" (formula "42") (term "0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                                              (rule "add_literals" (formula "42") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "42") (term "0"))
                                                                              (rule "inEqSimp_exactShadow1" (formula "14") (ifseqformula "27"))
                                                                              (rule "greater_literals" (formula "14") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "14"))
                                                                              (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                                              (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                                              (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                                              (rule "add_literals" (formula "14") (term "0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                                                              (rule "add_literals" (formula "14") (term "1,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                              (rule "mul_literals" (formula "14") (term "1"))
                                                                              (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "22"))
                                                                              (rule "times_zero_1" (formula "14") (term "1,1,0"))
                                                                              (rule "greater_literals" (formula "14") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "14"))
                                                                              (rule "leq_literals" (formula "14") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "14"))
                                                                              (rule "true_left" (formula "14"))
                                                                              (rule "inEqSimp_exactShadow1" (formula "19") (ifseqformula "27"))
                                                                              (rule "greater_literals" (formula "19") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "19"))
                                                                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                                              (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "19") (term "1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                                              (rule "add_literals" (formula "19") (term "0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                                                              (rule "add_literals" (formula "19") (term "1,1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                              (rule "mul_literals" (formula "19") (term "1"))
                                                                              (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "22"))
                                                                              (rule "times_zero_1" (formula "19") (term "1,1,0"))
                                                                              (rule "greater_literals" (formula "19") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "19"))
                                                                              (rule "leq_literals" (formula "19") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "19"))
                                                                              (rule "true_left" (formula "19"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "27"))
                                                                              (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                                              (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "17") (term "1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                                              (rule "add_literals" (formula "17") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "17") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor3" (formula "17") (term "0"))
                                                                              (rule "inEqSimp_subsumption6" (formula "17") (ifseqformula "22"))
                                                                              (rule "times_zero_1" (formula "17") (term "1,1,0"))
                                                                              (rule "greater_literals" (formula "17") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "17"))
                                                                              (rule "leq_literals" (formula "17") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "17"))
                                                                              (rule "true_left" (formula "17"))
                                                                              (rule "commute_or" (formula "37") (term "0,0,0,0"))
                                                                              (rule "methodCallEmpty" (formula "9") (term "1"))
                                                                              (rule "compound_inequality_comparison_1" (formula "56") (term "1") (inst "#v0=x_2466"))
                                                                              (rule "variableDeclarationAssign" (formula "56") (term "1"))
                                                                              (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_2469"))
                                                                              (rule "assignmentModulo" (formula "60") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "60"))
                                                                              (rule "equal_literals" (formula "60") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "60"))
                                                                              (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                              (rule "emptyModality" (formula "5") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "5"))
                                                                              (rule "notLeft" (formula "5"))
                                                                              (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "54"))
                                                                              (builtin "One Step Simplification" (formula "8"))
                                                                              (rule "jmod_axiom" (formula "54") (term "0"))
                                                                              (rule "polySimp_mulLiterals" (formula "54") (term "1,0"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "54"))
                                                                              (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                                              (rule "compound_inequality_comparison_1" (formula "59") (term "1") (inst "#v0=x_2468"))
                                                                              (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                                                              (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_2470"))
                                                                              (rule "compound_inequality_comparison_1" (formula "58") (term "1") (inst "#v0=x_2469"))
                                                                              (rule "variableDeclarationAssign" (formula "58") (term "1"))
                                                                              (rule "variableDeclaration" (formula "58") (term "1") (newnames "x_2471"))
                                                                              (rule "commute_or" (formula "37") (term "0,0,0,0"))
                                                                              (rule "commute_and" (formula "34") (term "0,0,0,1,0"))
                                                                              (rule "commute_and" (formula "43") (term "0,0,0,1,0"))
                                                                              (rule "jdiv_axiom" (formula "3") (term "0"))
                                                                              (rule "eqSymm" (formula "3"))
                                                                              (rule "polySimp_mulComm0" (formula "3") (term "0,0,2,0"))
                                                                              (rule "polySimp_rightDist" (formula "3") (term "0,0,2,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0"))
                                                                              (rule "mul_literals" (formula "3") (term "0,0,0,2,0"))
                                                                              (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                                                                              (rule "mul_literals" (formula "3") (term "1,0,0"))
                                                                              (rule "inEqSimp_subsumption6" (formula "3") (term "0,0") (ifseqformula "21"))
                                                                              (rule "greater_literals" (formula "3") (term "0,0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "3"))
                                                                              (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                                                              (rule "leq_literals" (formula "3") (term "0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "3"))
                                                                              (rule "polyDiv_pullOut" (formula "3") (term "0") (inst "polyDivCoeff=quotient_30"))
                                                                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0"))
                                                                              (rule "equal_literals" (formula "3") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "3"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                                                                              (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                                                              (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                                                              (rule "div_literals" (formula "3") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "3") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "3"))
                                                                              (rule "true_left" (formula "3"))
                                                                              (rule "jdiv_axiom" (formula "1") (term "0"))
                                                                              (rule "eqSymm" (formula "1"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "0,0,0,2,0"))
                                                                              (rule "mul_literals" (formula "1") (term "0,0,0,0,2,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                              (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                              (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "17"))
                                                                              (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0"))
                                                                              (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                                              (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                                              (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=l_149"))
                                                                              (rule "equal_literals" (formula "1") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                                                              (rule "polySimp_homoEq" (formula "1"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0"))
                                                                              (rule "add_zero_right" (formula "1") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                              (rule "polySimp_addComm0" (formula "1") (term "1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                              (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=quotient_30"))
                                                                              (rule "equal_literals" (formula "1") (term "0,0"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                                                              (rule "polySimp_homoEq" (formula "1"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,0"))
                                                                              (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0"))
                                                                              (rule "add_zero_right" (formula "1") (term "0,0,0,1,0"))
                                                                              (rule "div_literals" (formula "1") (term "0,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                                              (rule "add_literals" (formula "1") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "true_left" (formula "1"))
                                                                              (rule "commute_or" (formula "48") (term "0,0,0,0,0"))
                                                                              (rule "commute_or" (formula "46") (term "0,0,0,0"))
                                                                              (rule "commute_or" (formula "52") (term "0,0,0,0"))
                                                                              (rule "commute_or" (formula "50") (term "0,0,0,0,0"))
                                                                              (rule "commute_and" (formula "48") (term "0,0,2,1,0,0,1,1,0"))
                                                                              (rule "commute_and" (formula "46") (term "0,0,2,1,0,0,1,1,0"))
                                                                              (rule "commute_and" (formula "52") (term "0,0,2,1,1,1,0"))
                                                                              (rule "commute_and" (formula "50") (term "0,0,2,1,0,0,1,1,0"))
                                                                              (rule "methodBodyExpand" (formula "51") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "51"))
                                                                              (rule "methodBodyExpand" (formula "49") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "49"))
                                                                              (rule "methodBodyExpand" (formula "47") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "47"))
                                                                              (rule "methodBodyExpand" (formula "45") (term "1"))
                                                                              (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "ifthenelse_split" (formula "48") (term "1,0,1,0"))
                                                                              (branch "even_sk_220 = TRUE TRUE"
                                                                                 (rule "applyEqRigid" (formula "47") (term "1,0,1") (ifseqformula "48"))
                                                                                 (rule "ifthenelse_split" (formula "46") (term "1,0,1,0"))
                                                                                 (branch "even_sk_221 = TRUE TRUE"
                                                                                    (rule "applyEqRigid" (formula "45") (term "1,0,1") (ifseqformula "46"))
                                                                                    (rule "ifthenelse_split" (formula "54") (term "1,0,1,0"))
                                                                                    (branch "even_sk_218 = TRUE TRUE"
                                                                                       (rule "applyEqRigid" (formula "53") (term "1,0,1") (ifseqformula "54"))
                                                                                       (rule "ifthenelse_split" (formula "52") (term "1,0,1,0"))
                                                                                       (branch "even_sk_219 = TRUE TRUE"
                                                                                          (rule "applyEqRigid" (formula "51") (term "1,0,1") (ifseqformula "52"))
                                                                                          (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                       (branch "even_sk_219 = TRUE FALSE"
                                                                                          (rule "apply_eq_boolean_rigid" (formula "51") (term "1,0,1") (ifseqformula "57"))
                                                                                          (builtin "One Step Simplification" (formula "51"))
                                                                                          (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                    )
                                                                                    (branch "even_sk_218 = TRUE FALSE"
                                                                                       (rule "apply_eq_boolean_rigid" (formula "53") (term "1,0,1") (ifseqformula "56"))
                                                                                       (builtin "One Step Simplification" (formula "53"))
                                                                                       (rule "ifthenelse_split" (formula "52") (term "1,0,1,0"))
                                                                                       (branch "even_sk_219 = TRUE TRUE"
                                                                                          (rule "applyEqRigid" (formula "51") (term "1,0,1") (ifseqformula "52"))
                                                                                          (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                       (branch "even_sk_219 = TRUE FALSE"
                                                                                          (rule "apply_eq_boolean_rigid" (formula "51") (term "1,0,1") (ifseqformula "56"))
                                                                                          (builtin "One Step Simplification" (formula "51"))
                                                                                          (rule "commute_or_2" (formula "50") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch "even_sk_221 = TRUE FALSE"
                                                                                    (rule "apply_eq_boolean_rigid" (formula "45") (term "1,0,1") (ifseqformula "55"))
                                                                                    (builtin "One Step Simplification" (formula "45"))
                                                                                    (rule "ifthenelse_split" (formula "53") (term "1,0,1,0"))
                                                                                    (branch "even_sk_218 = TRUE TRUE"
                                                                                       (rule "applyEqRigid" (formula "52") (term "1,0,1") (ifseqformula "53"))
                                                                                       (rule "ifthenelse_split" (formula "51") (term "1,0,1,0"))
                                                                                       (branch "even_sk_219 = TRUE TRUE"
                                                                                          (rule "applyEqRigid" (formula "50") (term "1,0,1") (ifseqformula "51"))
                                                                                          (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                       (branch "even_sk_219 = TRUE FALSE"
                                                                                          (rule "apply_eq_boolean_rigid" (formula "50") (term "1,0,1") (ifseqformula "56"))
                                                                                          (builtin "One Step Simplification" (formula "50"))
                                                                                          (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                    )
                                                                                    (branch "even_sk_218 = TRUE FALSE"
                                                                                       (rule "apply_eq_boolean_rigid" (formula "52") (term "1,0,1") (ifseqformula "55"))
                                                                                       (builtin "One Step Simplification" (formula "52"))
                                                                                       (rule "ifthenelse_split" (formula "51") (term "1,0,1,0"))
                                                                                       (branch "even_sk_219 = TRUE TRUE"
                                                                                          (rule "applyEqRigid" (formula "50") (term "1,0,1") (ifseqformula "51"))
                                                                                          (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                       (branch "even_sk_219 = TRUE FALSE"
                                                                                          (rule "apply_eq_boolean_rigid" (formula "50") (term "1,0,1") (ifseqformula "55"))
                                                                                          (builtin "One Step Simplification" (formula "50"))
                                                                                          (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch "even_sk_220 = TRUE FALSE"
                                                                                 (rule "apply_eq_boolean_rigid" (formula "47") (term "1,0,1") (ifseqformula "54"))
                                                                                 (builtin "One Step Simplification" (formula "47"))
                                                                                 (rule "ifthenelse_split" (formula "46") (term "1,0,1,0"))
                                                                                 (branch "even_sk_221 = TRUE TRUE"
                                                                                    (rule "applyEqRigid" (formula "45") (term "1,0,1") (ifseqformula "46"))
                                                                                    (rule "ifthenelse_split" (formula "53") (term "1,0,1,0"))
                                                                                    (branch "even_sk_218 = TRUE TRUE"
                                                                                       (rule "applyEqRigid" (formula "52") (term "1,0,1") (ifseqformula "53"))
                                                                                       (rule "ifthenelse_split" (formula "51") (term "1,0,1,0"))
                                                                                       (branch "even_sk_219 = TRUE TRUE"
                                                                                          (rule "applyEqRigid" (formula "50") (term "1,0,1") (ifseqformula "51"))
                                                                                          (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                       (branch "even_sk_219 = TRUE FALSE"
                                                                                          (rule "apply_eq_boolean_rigid" (formula "50") (term "1,0,1") (ifseqformula "56"))
                                                                                          (builtin "One Step Simplification" (formula "50"))
                                                                                          (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                    )
                                                                                    (branch "even_sk_218 = TRUE FALSE"
                                                                                       (rule "apply_eq_boolean_rigid" (formula "52") (term "1,0,1") (ifseqformula "55"))
                                                                                       (builtin "One Step Simplification" (formula "52"))
                                                                                       (rule "ifthenelse_split" (formula "51") (term "1,0,1,0"))
                                                                                       (branch "even_sk_219 = TRUE TRUE"
                                                                                          (rule "applyEqRigid" (formula "50") (term "1,0,1") (ifseqformula "51"))
                                                                                          (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                       (branch "even_sk_219 = TRUE FALSE"
                                                                                          (rule "apply_eq_boolean_rigid" (formula "50") (term "1,0,1") (ifseqformula "55"))
                                                                                          (builtin "One Step Simplification" (formula "50"))
                                                                                          (rule "commute_or_2" (formula "49") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch "even_sk_221 = TRUE FALSE"
                                                                                    (rule "apply_eq_boolean_rigid" (formula "45") (term "1,0,1") (ifseqformula "54"))
                                                                                    (builtin "One Step Simplification" (formula "45"))
                                                                                    (rule "ifthenelse_split" (formula "52") (term "1,0,1,0"))
                                                                                    (branch "even_sk_218 = TRUE TRUE"
                                                                                       (rule "applyEqRigid" (formula "51") (term "1,0,1") (ifseqformula "52"))
                                                                                       (rule "ifthenelse_split" (formula "50") (term "1,0,1,0"))
                                                                                       (branch "even_sk_219 = TRUE TRUE"
                                                                                          (rule "applyEqRigid" (formula "49") (term "1,0,1") (ifseqformula "50"))
                                                                                          (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                       (branch "even_sk_219 = TRUE FALSE"
                                                                                          (rule "apply_eq_boolean_rigid" (formula "49") (term "1,0,1") (ifseqformula "55"))
                                                                                          (builtin "One Step Simplification" (formula "49"))
                                                                                          (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                    )
                                                                                    (branch "even_sk_218 = TRUE FALSE"
                                                                                       (rule "apply_eq_boolean_rigid" (formula "51") (term "1,0,1") (ifseqformula "54"))
                                                                                       (builtin "One Step Simplification" (formula "51"))
                                                                                       (rule "ifthenelse_split" (formula "50") (term "1,0,1,0"))
                                                                                       (branch "even_sk_219 = TRUE TRUE"
                                                                                          (rule "applyEqRigid" (formula "49") (term "1,0,1") (ifseqformula "50"))
                                                                                          (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                       (branch "even_sk_219 = TRUE FALSE"
                                                                                          (rule "apply_eq_boolean_rigid" (formula "49") (term "1,0,1") (ifseqformula "54"))
                                                                                          (builtin "One Step Simplification" (formula "49"))
                                                                                          (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                                                                          (rule "assignmentModulo" (formula "60") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "equal_literals" (formula "60") (term "0,0"))
                                                                                          (builtin "One Step Simplification" (formula "60"))
                                                                                          (rule "translateJavaMod" (formula "60") (term "0,1,0"))
                                                                                          (rule "inequality_comparison_simple" (formula "64") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "64"))
                                                                                          (rule "emptyModality" (formula "8") (term "1"))
                                                                                          (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "closeFalse" (formula "8"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch " exists int k; ( k >= 1 + left & k <= -2 + l_149 * 2 + left & !PrefixSumRec::even(heapAfter_upsweep, k) = TRUE & arr(k) = f_3) & !f_3 = <created> FALSE"
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "orRight" (formula "47"))
                                                         (rule "notRight" (formula "47"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "exLeft" (formula "1") (inst "sk=k_25"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "eqSymm" (formula "3"))
                                                         (rule "replace_known_right" (formula "51") (term "0,1") (ifseqformula "42"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_commuteLeq" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "applyEq" (formula "52") (term "2,1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "polySimp_homoEq" (formula "50"))
                                                         (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                         (rule "applyEq" (formula "42") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "false_right" (formula "42"))
                                                         (rule "applyEqRigid" (formula "51") (term "2,0") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "4") (term "1,0,1,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "castDel" (formula "4") (term "0,1,0,0"))
                                                         (rule "castDel" (formula "4") (term "1,0,1,0"))
                                                         (rule "castDel" (formula "4") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "4") (term "1,0") (ifseqformula "41"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                         (rule "applyEqRigid" (formula "50") (term "1,1,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "castDel" (formula "50") (term "0,1,0,0"))
                                                         (rule "castDel" (formula "50") (term "0,0,0,0"))
                                                         (rule "castDel" (formula "50") (term "1,0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "50") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "50") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "50") (term "0,0,0,0"))
                                                         (rule "instanceof_static_type" (formula "4") (term "0,0,1"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "instanceof_static_type" (formula "50") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "polySimp_sepPosMonomial" (formula "49"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "0,1"))
                                                         (rule "mul_literals" (formula "49") (term "0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1"))
                                                         (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "41") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_214"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "eqSymm" (formula "1") (term "0,1"))
                                                         (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "42"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1,1"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,1,1"))
                                                         (rule "mul_literals" (formula "5") (term "0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                                         (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "51") (term "0,0,1") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_215"))
                                                         (rule "eqSymm" (formula "1") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "52") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "52") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "52") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,1,0"))
                                                         (rule "mul_literals" (formula "52") (term "0,0,1,1,0"))
                                                         (rule "narrowSelectArrayType" (formula "53") (term "1") (ifseqformula "15"))
                                                         (rule "narrowSelectArrayType" (formula "53") (term "0") (ifseqformula "27"))
                                                         (rule "inEqSimp_contradInEq0" (formula "6") (term "1") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,1"))
                                                         (rule "mul_literals" (formula "6") (term "0,0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "6") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,1"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "6") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "6") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "inEqSimp_contradEq3" (formula "51") (ifseqformula "6"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                                                         (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                                         (rule "add_literals" (formula "51") (term "0,0"))
                                                         (rule "qeq_literals" (formula "51") (term "0"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "51") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "51") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "6"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                         (rule "mul_literals" (formula "12") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "6"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor3b" (formula "20") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                         (rule "mul_literals" (formula "20") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "6"))
                                                         (rule "mul_literals" (formula "15") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                                         (rule "add_literals" (formula "15") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "15") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "mul_literals" (formula "3") (term "1"))
                                                         (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "40"))
                                                         (rule "mul_literals" (formula "3") (term "1,1,0"))
                                                         (rule "greater_literals" (formula "3") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "6"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "inEqSimp_contradInEq5" (formula "3") (ifseqformula "40"))
                                                         (rule "mul_literals" (formula "3") (term "1,1,0"))
                                                         (rule "greater_literals" (formula "3") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                   (branch "CUT: o_3 = self.a FALSE"
                                                      (builtin "One Step Simplification" (formula "43"))
                                                      (rule "false_right" (formula "43"))
                                                      (rule "replace_known_right" (formula "43") (term "0,1,0,0,0,2,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "42")))
                                                      (rule "closeTrue" (formula "43"))
                                                   )
                                                )
                                             )
                                             (branch "right - left = 1"
                                                (rule "eqSymm" (formula "41"))
                                                (rule "eqSymm" (formula "40") (term "1,1,0"))
                                                (rule "polySimp_elimSub" (formula "31") (term "0,0,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "29") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_homoEq" (formula "26"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "21") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "0,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "23") (term "0,0,0,0,0"))
                                                (rule "polySimp_homoEq" (formula "18"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "10") (term "0,1"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "12") (term "0,0"))
                                                (rule "polySimp_elimSub" (formula "31") (term "0,0,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "15") (term "0"))
                                                (rule "polySimp_homoEq" (formula "10"))
                                                (rule "polySimp_homoEq" (formula "15"))
                                                (rule "inEqSimp_leqRight" (formula "36"))
                                                (rule "inEqSimp_ltRight" (formula "37"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "39"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "38"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "14"))
                                                (rule "inEqSimp_ltToLeq" (formula "16"))
                                                (rule "inEqSimp_ltToLeq" (formula "30"))
                                                (rule "inEqSimp_ltToLeq" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_addComm0" (formula "26") (term "1,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "1,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                (rule "polySimp_addComm0" (formula "17") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                (rule "polySimp_addComm0" (formula "18") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "30") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "30") (term "0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "32") (term "1,1,0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "34") (term "0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,1,1,0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,1,1,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                (rule "applyEq" (formula "6") (term "1") (ifseqformula "5"))
                                                (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "36") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_210"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "1") (term "0,1"))
                                                (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "polySimp_sepPosMonomial" (formula "30"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                (rule "polySimp_mulAssoc" (formula "30") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "30") (term "0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "30") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "30") (term "0,1"))
                                                (rule "applyEq" (formula "35") (term "1,0,1,0,0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "30"))
                                                (rule "inEqSimp_homoInEq1" (formula "10"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0"))
                                                (rule "applyEq" (formula "40") (term "1,0,1,0,0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "35") (term "1,1,0,0,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "35") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "35") (term "1,1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "35") (term "1,1,0,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "1,0,0,0"))
                                                (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                                (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "1,0"))
                                                (rule "polySimp_pullOutFactor2" (formula "18") (term "0,1,0"))
                                                (rule "add_literals" (formula "18") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "18") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "18") (term "1,0"))
                                                (rule "applyEq" (formula "33") (term "1,1,0,0,0,1,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "33") (term "1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "33") (term "1,0,0,0,1,0"))
                                                (rule "applyEq" (formula "33") (term "1,0,1,0,0,1,0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "41") (term "0,2,1,3,0,0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,0,0"))
                                                (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0"))
                                                (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0"))
                                                (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                (rule "polySimp_pullOutFactor2" (formula "22") (term "0,0,0"))
                                                (rule "add_literals" (formula "22") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "22") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "22") (term "0,0"))
                                                (rule "applyEq" (formula "40") (term "0,1,1,0,0,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,0,0"))
                                                (rule "add_literals" (formula "40") (term "1,1,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "40") (term "1,0,1,0,0,0"))
                                                (rule "applyEq" (formula "41") (term "0,2,0,0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "8") (term "0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "35") (term "1,0,1,1,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "35") (term "0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,1,0"))
                                                (rule "add_literals" (formula "35") (term "1,1,0,1,1,0"))
                                                (rule "times_zero_1" (formula "35") (term "1,0,1,1,0"))
                                                (rule "add_zero_right" (formula "35") (term "0,1,1,0"))
                                                (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "30"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "30"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                (rule "bsum_induction_upper_concrete" (formula "27") (term "1,1,0"))
                                                (rule "polySimp_homoEq" (formula "27") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                (rule "polySimp_sepPosMonomial" (formula "14"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                (rule "mul_literals" (formula "14") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_homoInEq1" (formula "10"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                (rule "add_literals" (formula "10") (term "0,0"))
                                                (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "14"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "14"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                                                (rule "add_literals" (formula "9") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "9") (term "0,1"))
                                                (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "14"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0"))
                                                (rule "applyEq" (formula "35") (term "1,1,0,1,0,0") (ifseqformula "14"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "1,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "35") (term "0,1,0,1,0,0"))
                                                (rule "applyEq" (formula "41") (term "1,0,2,1,3,0,0") (ifseqformula "14"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,3,0,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,0,2,1,3,0,0"))
                                                (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "14"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                (rule "applyEq" (formula "41") (term "1,0,2,0,0") (ifseqformula "14"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0,2,0,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0,0,2,0,0"))
                                                (rule "applyEq" (formula "33") (term "1,1,0,1,0,0,1,0") (ifseqformula "14"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "33") (term "0,1,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "14"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                (rule "add_literals" (formula "15") (term "0,0"))
                                                (rule "applyEq" (formula "40") (term "1,1,0,1,0,0") (ifseqformula "14"))
                                                (rule "polySimp_addAssoc" (formula "40") (term "1,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "40") (term "0,1,0,1,0,0"))
                                                (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "14"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0,0,0"))
                                                (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "14"))
                                                (rule "polySimp_addAssoc" (formula "30") (term "1"))
                                                (rule "polySimp_addComm0" (formula "30") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "applyEq" (formula "23") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_homoInEq1" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "14"))
                                                (rule "inEqSimp_homoInEq0" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "19"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "14"))
                                                (rule "polySimp_homoEq" (formula "19"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "27") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "0,1,1,0"))
                                                (rule "bsum_induction_lower2_concrete" (formula "35") (term "1,1,0"))
                                                (rule "eqSymm" (formula "35") (term "1,0"))
                                                (rule "polySimp_elimSub" (formula "35") (term "0,1,0"))
                                                (rule "polySimp_homoEq" (formula "35") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,1,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1,1,0,1,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0,0,0,1,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,1,0,1,0"))
                                                (rule "add_literals" (formula "35") (term "0,0,0,0,1,1,0,1,0"))
                                                (rule "add_zero_left" (formula "35") (term "0,0,0,1,1,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "35") (term "0,0,1,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                                (rule "polySimp_addComm0" (formula "35") (term "0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                                                (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "14"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                                (rule "add_literals" (formula "2") (term "0,0,1"))
                                                (rule "add_zero_left" (formula "2") (term "0,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "21"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                (rule "mul_literals" (formula "7") (term "0,1"))
                                                (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "17") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_49"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "eqSymm" (formula "17") (term "0,1"))
                                                (rule "applyEqRigid" (formula "17") (term "1,0,1") (ifseqformula "18"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                (rule "mul_literals" (formula "14") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "18"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                (rule "applyEq" (formula "32") (term "1,1,0,1,0,0,1,0") (ifseqformula "18"))
                                                (rule "polySimp_addComm1" (formula "32") (term "1,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "32") (term "0,1,0,1,0,0,1,0"))
                                                (rule "applyEqRigid" (formula "16") (term "1,0,0") (ifseqformula "18"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "9"))
                                                (rule "closeFalse" (formula "9"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: int[]::select(heapAfter_upsweep, self, a) = self.a FALSE"
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "eqSymm" (formula "40") (term "1,0,0,1"))
                                       (rule "polySimp_elimSub" (formula "21") (term "0,0,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "19") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_homoEq" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "8") (term "0,1"))
                                       (rule "polySimp_elimSub" (formula "13") (term "0,1"))
                                       (rule "polySimp_elimSub" (formula "27") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_homoEq" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "12") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "10") (term "0,0"))
                                       (rule "polySimp_elimSub" (formula "21") (term "0,0,0,0,0"))
                                       (rule "polySimp_elimSub" (formula "29") (term "0,0,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "29") (term "0,0,0,0,0"))
                                       (rule "polySimp_homoEq" (formula "8"))
                                       (rule "polySimp_homoEq" (formula "13") (term "1"))
                                       (rule "inEqSimp_ltRight" (formula "37"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "39"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "37"))
                                       (rule "inEqSimp_leqRight" (formula "38"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "28"))
                                       (rule "inEqSimp_gtToGeq" (formula "12"))
                                       (rule "inEqSimp_ltToLeq" (formula "20"))
                                       (rule "inEqSimp_ltToLeq" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "1,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "1,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0"))
                                       (rule "polySimp_addComm0" (formula "16") (term "1,1,0,1"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "0,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0"))
                                       (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0,1,0,1"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "0,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                       (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "39") (term "1,0,3,0,0,1,0,0,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "39") (term "1,0,3,0,1,1,1,0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "39") (term "1,0,3,0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "39") (term "1,1,3,0,0,1,1,0,0,0,0") (ifseqformula "4"))
                                       (rule "polySimp_addComm0" (formula "39") (term "3,0,0,1,1,0,0,0,0"))
                                       (rule "applyEq" (formula "39") (term "1,0,3,0,1,1,1,1,0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "38") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "39") (term "1,1,3,0,0,1,0,0,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "39") (term "1,1,3,0,1,1,1,0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "39") (term "1,1,3,0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "39") (term "1,1,3,0,1,1,1,1,0,0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "39") (term "1,1,3,0,0,1,1,0,0,0,0") (ifseqformula "4"))
                                       (rule "polySimp_addComm0" (formula "39") (term "3,0,0,1,1,0,0,0,0"))
                                       (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "35") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_69"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "1") (term "0,1"))
                                       (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "17") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_70"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "eqSymm" (formula "17") (term "0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                       (rule "polySimp_mulAssoc" (formula "29") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0,1"))
                                       (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "29"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "34") (term "1,0,1,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "41") (term "0,1,1,0,0,0,0,0") (ifseqformula "29"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "41") (term "0,1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "1,0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "0,1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "18") (term "0,1,0,1") (ifseqformula "29"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                       (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "29"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "1,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "16") (term "0,1,0"))
                                       (rule "add_literals" (formula "16") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "16") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "16") (term "1,0"))
                                       (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "29"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "21") (term "0,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0"))
                                       (rule "applyEq" (formula "41") (term "1,1,0,1,0,0,0,0") (ifseqformula "29"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "1,0,1,0,0,0,0"))
                                       (rule "applyEq" (formula "41") (term "0,2,0,0,1,1,0,0,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "29"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                       (rule "add_literals" (formula "30") (term "1,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "30") (term "0,0"))
                                       (rule "applyEq" (formula "41") (term "1,0,1,0,0,0,0,0,0,1") (ifseqformula "29"))
                                       (rule "applyEq" (formula "41") (term "0,2,1,3,0,0,1,1,0,0,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "29"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
                                       (rule "applyEq" (formula "41") (term "0,1,1,0,0,1,0,0,0") (ifseqformula "29"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "1,1,0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0,0,1,0,0,0"))
                                       (rule "applyEq" (formula "34") (term "1,1,0,0,0") (ifseqformula "29"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "34") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "34") (term "1,1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "34") (term "1,1,0,0,0"))
                                       (rule "add_zero_right" (formula "34") (term "1,0,0,0"))
                                       (rule "applyEq" (formula "32") (term "1,0,1,0,0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "41") (term "0,1,1,0,0,0,0,0,0,0,1") (ifseqformula "29"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "1,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,0,0,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "41") (term "1,1,0,1,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0,0,0,0,0,0,0,1"))
                                       (rule "applyEq" (formula "32") (term "1,1,0,0,0,1,0") (ifseqformula "29"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "32") (term "1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,1,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "32") (term "1,0,0,0,1,0"))
                                       (rule "applyEq" (formula "41") (term "0,2,0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "29"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0,0"))
                                       (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "29"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "1"))
                                       (rule "applyEq" (formula "41") (term "0,2,0,0,1,0,0,1") (ifseqformula "29"))
                                       (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "29"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0"))
                                       (rule "applyEq" (formula "41") (term "0,2,1,3,0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "29"))
                                       (rule "inEqSimp_homoInEq1" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0"))
                                       (rule "applyEq" (formula "41") (term "0,2,1,3,0,0,1,0,0,1") (ifseqformula "29"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "29"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "applyEq" (formula "41") (term "0,2,0,1,1,1,0,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "41") (term "0,2,1,3,0,1,1,1,0,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "41") (term "0,2,0,1,1,1,1,0,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "41") (term "0,2,1,3,0,1,1,1,1,0,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "29"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "applyEq" (formula "34") (term "1,0,1,1,0") (ifseqformula "29"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "34") (term "1,1,0,1,1,0"))
                                       (rule "times_zero_1" (formula "34") (term "1,0,1,1,0"))
                                       (rule "add_zero_right" (formula "34") (term "0,1,1,0"))
                                       (rule "applyEq" (formula "41") (term "0,1,0,0,0,1,1,0,0,0") (ifseqformula "29"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,0,1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0,0,1,1,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "1,1,0,0,0,0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,0,1,1,0,0,0"))
                                       (rule "bsum_induction_upper_concrete" (formula "26") (term "1,1,0"))
                                       (rule "polySimp_homoEq" (formula "26") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "26") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "18") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "polySimp_sepPosMonomial" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1"))
                                       (rule "applyEq" (formula "41") (term "1,1,0,1,0,0,0,0,0,0,1") (ifseqformula "21"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,1,3,0,1,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,0,0,1,0,0,1") (ifseqformula "21"))
                                       (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "21"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,1,3,0,0,1,0,0,1") (ifseqformula "21"))
                                       (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,0,0,1,1,0,0,0,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "34") (term "1,1,0,1,0,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,0,1,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,1,3,0,0,1,1,0,0,0,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "21"))
                                       (rule "applyEq" (formula "41") (term "1,1,0,1,0,0,0,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "32") (term "1,1,0,1,0,0,1,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0"))
                                       (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "21"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,0,1,1,1,0,0,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,0,1,1,1,1,0,0,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,1,3,0,1,1,1,0,0,0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,1,3,0,1,1,1,1,0,0,0") (ifseqformula "21"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "21"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "21"))
                                       (rule "polySimp_sepPosMonomial" (formula "26") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                       (rule "mul_literals" (formula "2") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "21"))
                                       (rule "bsum_induction_lower2_concrete" (formula "34") (term "1,1,0"))
                                       (rule "eqSymm" (formula "34") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "34") (term "0,1,0"))
                                       (rule "polySimp_homoEq" (formula "34") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,1,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,1,1,1,0,1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,1,1,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1,1,0,1,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0,0,1,1,0,1,0"))
                                       (rule "add_zero_left" (formula "34") (term "0,0,0,1,1,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "34") (term "0,0,1,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "34") (term "0,0,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1"))
                                       (rule "mul_literals" (formula "12") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "12"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                       (rule "applyEq" (formula "32") (term "1,1,0,1,0,0,1,0") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "0,1,0,1,0,0,1,0"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,1,3,0,0,1,0,0,1") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,3,0,0,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,0,2,1,3,0,0,1,0,0,1"))
                                       (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "12"))
                                       (rule "polySimp_homoEq" (formula "18") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                       (rule "add_literals" (formula "18") (term "0,0,1"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "12"))
                                       (rule "inEqSimp_homoInEq0" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0"))
                                       (rule "applyEq" (formula "41") (term "1,1,0,1,0,0,0,0") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "1,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,1,0,1,0,0,0,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,1,0,1,0,0,0,0"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,0,0,1,0,0,1") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,2,0,0,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,0,2,0,0,1,0,0,1"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,0,0,1,1,0,0,0,0") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,2,0,0,1,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,0,2,0,0,1,1,0,0,0,0"))
                                       (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                       (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "1"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,1"))
                                       (rule "add_literals" (formula "7") (term "0,0,1"))
                                       (rule "add_zero_left" (formula "7") (term "0,1"))
                                       (rule "applyEq" (formula "34") (term "1,1,0,1,0,0") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "1,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "34") (term "0,1,0,1,0,0"))
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "0,0,1"))
                                       (rule "add_zero_left" (formula "2") (term "0,1"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,1,3,0,1,0") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,3,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,0,2,1,3,0,1,0"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,0,1,0") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,2,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,0,2,0,1,0"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "12"))
                                       (rule "inEqSimp_homoInEq1" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,1,3,0,0,1,1,0,0,0,0") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,3,0,0,1,1,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,0,2,1,3,0,0,1,1,0,0,0,0"))
                                       (rule "applyEq" (formula "41") (term "1,1,0,1,0,0,0,0,0,0,1") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "1,0,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,1,0,1,0,0,0,0,0,0,1"))
                                       (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                       (rule "add_literals" (formula "13") (term "0,0"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,0,1,1,1,0,0,0") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,2,0,1,1,1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,0,2,0,1,1,1,0,0,0"))
                                       (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "1"))
                                       (rule "polySimp_addComm0" (formula "29") (term "0,1"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,1,3,0,1,1,1,1,0,0,0") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,3,0,1,1,1,1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,0,2,1,3,0,1,1,1,1,0,0,0"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,1,3,0,1,1,1,0,0,0") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,3,0,1,1,1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,0,2,1,3,0,1,1,1,0,0,0"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,0,1,1,1,1,0,0,0") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,2,0,1,1,1,1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,0,2,0,1,1,1,1,0,0,0"))
                                       (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "12"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                       (rule "applyEq" (formula "21") (term "1") (ifseqformula "12"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "34") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0,1,1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "18") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0"))
                                       (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "16") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_30"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "eqSymm" (formula "16") (term "0,1"))
                                       (rule "applyEqRigid" (formula "16") (term "1,0,1") (ifseqformula "17"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,0"))
                                       (rule "bsum_induction_upper_concrete" (formula "34") (term "0,1,1,0"))
                                       (rule "polySimp_homoEq" (formula "34") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "34") (term "0,1,0,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,1,0"))
                                       (rule "inEqSimp_contradEq7" (formula "18") (term "1") (ifseqformula "8"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "18") (term "0,0,1"))
                                       (rule "leq_literals" (formula "18") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "notLeft" (formula "18"))
                                       (rule "apply_eq_boolean_rigid" (formula "17") (term "1,0,1") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "newSym_eq" (formula "19") (inst "newSymDef=add(Z(neglit(1(#))), mul(mbyAtPre, Z(0(#))))") (inst "l=l_30"))
                                       (rule "times_zero_1" (formula "19") (term "1,1,1"))
                                       (rule "add_literals" (formula "19") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "19") (term "1"))
                                       (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "19"))
                                       (rule "polySimp_homoEq" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "applyEq" (formula "41") (term "0,1,1,0,0,0,0,0") (ifseqformula "19"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "applyEq" (formula "29") (term "0") (ifseqformula "19"))
                                       (rule "inEqSimp_homoInEq1" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                       (rule "add_literals" (formula "29") (term "0,0"))
                                       (rule "applyEq" (formula "41") (term "0,1,1,0,0,1,0,0,0") (ifseqformula "19"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "41") (term "1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,1,0,0,1,0,0,0"))
                                       (rule "applyEq" (formula "41") (term "0,1,1,0,0,0,0,0,0,0,1") (ifseqformula "19"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "41") (term "1,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,0,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "41") (term "0,0,1,0,0,0,0,0,0,0,1"))
                                       (rule "applyEq" (formula "41") (term "0,1,0,0,0,1,1,0,0,0") (ifseqformula "19"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,1,1,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,0,0,1,1,0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1"))
                                       (rule "mul_literals" (formula "20") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "20"))
                                       (rule "inEqSimp_homoInEq0" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "20"))
                                       (rule "polySimp_addComm0" (formula "2") (term "1"))
                                       (rule "applyEqRigid" (formula "41") (term "1,0,2,1,3,0,1,0") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,2,1,3,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,2,1,3,0,1,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,2,1,3,0,1,0"))
                                       (rule "applyEq" (formula "33") (term "1,1,0,1,0,0") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "33") (term "1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,1,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,1,0,1,0,0"))
                                       (rule "applyEqRigid" (formula "41") (term "1,0,2,1,3,0,0,1,1,0,0,0,0") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,2,1,3,0,0,1,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,2,1,3,0,0,1,1,0,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,2,1,3,0,0,1,1,0,0,0,0"))
                                       (rule "applyEqRigid" (formula "41") (term "1,0,2,0,0,1,0,0,1") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,2,0,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,2,0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,2,0,0,1,0,0,1"))
                                       (rule "applyEqRigid" (formula "41") (term "1,1,0,1,0,0,0,0,0,0,1") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "41") (term "1,0,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,1,0,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "41") (term "0,0,1,0,1,0,0,0,0,0,0,1"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,1,3,0,0,1,0,0,1") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,2,1,3,0,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,2,1,3,0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,2,1,3,0,0,1,0,0,1"))
                                       (rule "applyEqRigid" (formula "31") (term "1,1,0,1,0,0,1,0") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "31") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,1,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,1,0,1,0,0,1,0"))
                                       (rule "applyEqRigid" (formula "41") (term "1,0,2,0,1,0") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,2,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,2,0,1,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,2,0,1,0"))
                                       (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "20"))
                                       (rule "polySimp_addComm0" (formula "7") (term "1"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,0,0,1,1,0,0,0,0") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,2,0,0,1,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,2,0,0,1,1,0,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,2,0,0,1,1,0,0,0,0"))
                                       (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "20"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0"))
                                       (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "applyEqRigid" (formula "41") (term "1,1,0,1,0,0,0,0") (ifseqformula "20"))
                                       (rule "polySimp_addComm0" (formula "41") (term "1,0,1,0,0,0,0"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,0,1,1,1,1,0,0,0") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,2,0,1,1,1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,2,0,1,1,1,1,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,2,0,1,1,1,1,0,0,0"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,1,3,0,1,1,1,0,0,0") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,2,1,3,0,1,1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,2,1,3,0,1,1,1,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,2,1,3,0,1,1,1,0,0,0"))
                                       (rule "applyEqRigid" (formula "28") (term "1,1") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "28") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                                       (rule "add_literals" (formula "28") (term "0,0,1"))
                                       (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "20"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "1"))
                                       (rule "add_literals" (formula "12") (term "0,1"))
                                       (rule "applyEqRigid" (formula "41") (term "1,0,2,1,3,0,1,1,1,1,0,0,0") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,2,1,3,0,1,1,1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,2,1,3,0,1,1,1,1,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,2,1,3,0,1,1,1,1,0,0,0"))
                                       (rule "applyEq" (formula "41") (term "1,0,2,0,1,1,1,0,0,0") (ifseqformula "20"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0,2,0,1,1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,2,0,1,1,1,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,2,0,1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                       (rule "mul_literals" (formula "13") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "29"))
                                       (rule "mul_literals" (formula "8") (term "1,1,0"))
                                       (rule "greater_literals" (formula "8") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "elimGcdEq" (formula "11") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=result") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_30)"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,1,0"))
                                       (rule "add_literals" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "11") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0"))
                                       (rule "add_literals" (formula "11") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "0,0,0"))
                                       (rule "leq_literals" (formula "11") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,1"))
                                       (rule "add_zero_left" (formula "11") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,1"))
                                       (rule "add_literals" (formula "11") (term "1,0,0,1"))
                                       (rule "times_zero_1" (formula "11") (term "0,0,1"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "0,0"))
                                       (rule "qeq_literals" (formula "11") (term "0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "applyEq" (formula "22") (term "0,1,1,0,0,0,1,0") (ifseqformula "11"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,1,0,0,0,1,0"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "0,0"))
                                       (rule "applyEq" (formula "24") (term "0,1,1,0,0,0") (ifseqformula "11"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,1,0,0,0"))
                                       (rule "applyEq" (formula "24") (term "0,1,1,0,0,1,0") (ifseqformula "11"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,1,0,0,1,0"))
                                       (rule "applyEq" (formula "24") (term "0,1,0,0,0,1,1,0") (ifseqformula "11"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0"))
                                       (rule "selectOfStore" (formula "39") (term "0,1,0,0,1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "castDel" (formula "39") (term "1,0,1,0,0,1"))
                                       (rule "eqSymm" (formula "39") (term "1,0,0,1,0,0,1"))
                                       (rule "eqSymm" (formula "39") (term "0,0,0,1,0,0,1"))
                                       (rule "selectOfAnonEQ" (formula "5") (term "0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "36")))
                                       (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,0,1,0,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "9")))
                                       (rule "eqSymm" (formula "5") (term "1"))
                                       (rule "elementOfInfiniteUnion" (formula "5") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "elementOfSingleton" (formula "5") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "selectOfAnonEQ" (formula "30") (term "1,1,0,1,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")) (ifInst ""  (formula "8")))
                                       (rule "elementOfInfiniteUnion" (formula "30") (term "0,1,1,0,1,0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "elementOfSingleton" (formula "30") (term "1,0,0,1,1,0,1,0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "selectOfAnonEQ" (formula "28") (term "0,1,0,1,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")) (ifInst ""  (formula "8")))
                                       (rule "elementOfInfiniteUnion" (formula "28") (term "0,0,1,0,1,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,1,0,1,0"))
                                       (builtin "One Step Simplification" (formula "28"))
                                       (rule "selectOfAnonEQ" (formula "37") (term "0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "35")) (ifInst ""  (formula "8")))
                                       (rule "elementOfInfiniteUnion" (formula "37") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "elementOfSingleton" (formula "37") (term "1,0,0,0"))
                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "36")))
                                       (rule "false_right" (formula "37"))
                                       (rule "selectOfAnonEQ" (formula "22") (term "1,1,1,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "polySimp_homoEq" (formula "22") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "22") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "22") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0,1,1,0"))
                                       (rule "elementOfInfiniteUnion" (formula "22") (term "0,0,0,1,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,1,0"))
                                       (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "33")))
                                       (rule "polySimp_homoEq" (formula "22") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "22") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0"))
                                       (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")) (ifInst ""  (formula "8")))
                                       (rule "elementOfInfiniteUnion" (formula "2") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "6")))
                                       (rule "true_left" (formula "2"))
                                       (rule "selectOfAnonEQ" (formula "32") (term "0") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "34")) (ifInst ""  (formula "7")))
                                       (rule "orRight" (formula "32"))
                                       (rule "notRight" (formula "32"))
                                       (rule "elementOfInfiniteUnion" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "exLeft" (formula "1") (inst "sk=k_3"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "elementOfSingleton" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch "CUT: int[]::select(heapAfter_upsweep_0, self, a) = int[]::select(heapAfter_upsweep, self, a) FALSE"
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "eqSymm" (formula "39") (term "1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "28") (term "0,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "9") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "20") (term "0,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "11") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "20") (term "0,0,0,0,0"))
                                    (rule "polySimp_elimSub" (formula "18") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "26") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "12") (term "0,1"))
                                    (rule "polySimp_elimSub" (formula "28") (term "0,0,0,0,0"))
                                    (rule "polySimp_elimSub" (formula "7") (term "0,1"))
                                    (rule "polySimp_homoEq" (formula "12") (term "1"))
                                    (rule "polySimp_homoEq" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "38"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "35"))
                                    (rule "inEqSimp_ltRight" (formula "36"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "27"))
                                    (rule "inEqSimp_ltToLeq" (formula "19"))
                                    (rule "inEqSimp_ltToLeq" (formula "13"))
                                    (rule "inEqSimp_gtToGeq" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "1,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "1,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,1"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                    (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,1,1,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0"))
                                    (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "15") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_67"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "eqSymm" (formula "15") (term "0,1"))
                                    (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "35") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_68"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "eqSymm" (formula "1") (term "0,1"))
                                    (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "polySimp_sepPosMonomial" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                    (rule "polySimp_mulAssoc" (formula "20") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,1"))
                                    (rule "applyEq" (formula "40") (term "1,1,0,1,0,0,0,0") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,1,0,0,0,0"))
                                    (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,1") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                    (rule "applyEq" (formula "40") (term "0,2,1,3,0,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "40") (term "1,0,1,0,0,0,0,0,0,1") (ifseqformula "20"))
                                    (rule "applyEq" (formula "40") (term "0,2,0,0,1,0,0,1") (ifseqformula "20"))
                                    (rule "applyEq" (formula "33") (term "1,1,0,0,0") (ifseqformula "20"))
                                    (rule "polySimp_addComm1" (formula "33") (term "1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,0,0"))
                                    (rule "applyEq" (formula "40") (term "0,1,1,0,0,1,0,0,0") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,0,1,0,0,1,0,0,0"))
                                    (rule "applyEq" (formula "31") (term "1,0,1,0,0,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                    (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "1,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "15") (term "0,1,0"))
                                    (rule "add_literals" (formula "15") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "15") (term "0,1,0"))
                                    (rule "add_zero_left" (formula "15") (term "1,0"))
                                    (rule "applyEq" (formula "40") (term "0,2,1,3,0,0,1,0,0,1") (ifseqformula "20"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "40") (term "0,1,1,0,0,0,0,0") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "40") (term "0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "1,0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,0,0"))
                                    (rule "applyEq" (formula "31") (term "1,1,0,0,0,1,0") (ifseqformula "20"))
                                    (rule "polySimp_addComm1" (formula "31") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,1,0,0,0,1,0"))
                                    (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                    (rule "applyEq" (formula "40") (term "0,2,1,3,0,0,1,1,0,0,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0"))
                                    (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0"))
                                    (rule "applyEq" (formula "40") (term "0,1,1,0,0,0,0,0,0,0,1") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,1,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,0,1,0,0,0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "20"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "28") (term "0,0,0"))
                                    (rule "add_literals" (formula "28") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0"))
                                    (rule "applyEq" (formula "40") (term "0,2,0,0,1,1,0,0,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                    (rule "applyEq" (formula "40") (term "0,2,0,1,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
                                    (rule "applyEq" (formula "33") (term "1,0,1,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "40") (term "0,2,0,1,1,1,0,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "33") (term "1,0,1,1,0") (ifseqformula "20"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,1,0"))
                                    (rule "applyEq" (formula "40") (term "0,2,1,3,0,1,1,1,0,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "applyEq" (formula "40") (term "0,2,1,3,0,1,1,1,1,0,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "applyEq" (formula "40") (term "0,2,0,1,1,1,1,0,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "40") (term "0,1,0,0,0,1,1,0,0,0") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,0,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                    (rule "bsum_induction_upper_concrete" (formula "25") (term "1,1,0"))
                                    (rule "polySimp_homoEq" (formula "25") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,1,0,1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "17") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1"))
                                    (rule "polySimp_sepPosMonomial" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1"))
                                    (rule "mul_literals" (formula "11") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                    (rule "applyEq" (formula "40") (term "1,0,2,0,1,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,2,0,1,0"))
                                    (rule "applyEq" (formula "40") (term "1,0,2,1,3,0,0,1,1,0,0,0,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,2,1,3,0,0,1,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,2,1,3,0,0,1,1,0,0,0,0"))
                                    (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                                    (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "11"))
                                    (rule "polySimp_homoEq" (formula "17") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                    (rule "add_literals" (formula "17") (term "0,0,1"))
                                    (rule "applyEq" (formula "31") (term "1,1,0,1,0,0,1,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "1,0,1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,1,0,1,0,0,1,0"))
                                    (rule "applyEq" (formula "40") (term "1,1,0,1,0,0,0,0,0,0,1") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,1,0,1,0,0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                                    (rule "add_literals" (formula "6") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "6") (term "0,1"))
                                    (rule "applyEq" (formula "40") (term "1,0,2,1,3,0,0,1,0,0,1") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,2,1,3,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,2,1,3,0,0,1,0,0,1"))
                                    (rule "applyEq" (formula "40") (term "1,0,2,0,0,1,0,0,1") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,2,0,0,1,0,0,1"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,2,0,0,1,0,0,1"))
                                    (rule "applyEq" (formula "40") (term "1,1,0,1,0,0,0,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "1,0,1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,1,0,1,0,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,1,0,1,0,0,0,0"))
                                    (rule "add_zero_left" (formula "40") (term "0,1,0,1,0,0,0,0"))
                                    (rule "applyEq" (formula "33") (term "1,1,0,1,0,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "1,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,1,0,1,0,0"))
                                    (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                    (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "11"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq1" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "add_literals" (formula "12") (term "0,0"))
                                    (rule "applyEq" (formula "40") (term "1,0,2,0,0,1,1,0,0,0,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,2,0,0,1,1,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,2,0,0,1,1,0,0,0,0"))
                                    (rule "applyEq" (formula "40") (term "1,0,2,1,3,0,1,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,2,1,3,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,2,1,3,0,1,0"))
                                    (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,1"))
                                    (rule "applyEq" (formula "40") (term "1,0,2,1,3,0,1,1,1,0,0,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,2,1,3,0,1,1,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,2,1,3,0,1,1,1,0,0,0"))
                                    (rule "applyEq" (formula "33") (term "1,0,1,0,0,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,0"))
                                    (rule "applyEq" (formula "40") (term "1,0,2,0,1,1,1,1,0,0,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,2,0,1,1,1,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,2,0,1,1,1,1,0,0,0"))
                                    (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "11"))
                                    (rule "applyEq" (formula "40") (term "1,0,2,0,1,1,1,0,0,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,2,0,1,1,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,2,0,1,1,1,0,0,0"))
                                    (rule "applyEq" (formula "31") (term "1,0,1,0,0,0,1,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                    (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                    (rule "applyEq" (formula "40") (term "1,0,2,1,3,0,1,1,1,1,0,0,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,2,1,3,0,1,1,1,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "40") (term "0,0,2,1,3,0,1,1,1,1,0,0,0"))
                                    (rule "applyEq" (formula "33") (term "1,0,0,1,1,0") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "33") (term "0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1"))
                                    (rule "mul_literals" (formula "29") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                    (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "1"))
                                    (rule "add_literals" (formula "29") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq0" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "25") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                    (rule "mul_literals" (formula "2") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                                    (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "11"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                    (rule "add_literals" (formula "2") (term "0,0,1"))
                                    (rule "add_zero_left" (formula "2") (term "0,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "17") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1"))
                                    (rule "mul_literals" (formula "5") (term "0,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "28"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                    (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "15") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_29"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "eqSymm" (formula "15") (term "0,1"))
                                    (rule "applyEqRigid" (formula "15") (term "1,0,1") (ifseqformula "16"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0"))
                                    (rule "bsum_induction_upper_concrete" (formula "33") (term "1,1,0"))
                                    (rule "polySimp_homoEq" (formula "33") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0"))
                                    (rule "polySimp_sepPosMonomial" (formula "33") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "0,1,1,0"))
                                    (rule "inEqSimp_contradEq7" (formula "17") (term "1") (ifseqformula "7"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "17") (term "0,0,1"))
                                    (rule "leq_literals" (formula "17") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "apply_eq_boolean_rigid" (formula "16") (term "1,0,1") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "7") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "12"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor3b" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "7"))
                                    (rule "greater_literals" (formula "4") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1,0"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "newSym_eq" (formula "26") (inst "newSymDef=add(Z(neglit(1(#))), mul(mbyAtPre, Z(0(#))))") (inst "l=l_29"))
                                    (rule "times_zero_1" (formula "26") (term "1,1,1"))
                                    (rule "add_literals" (formula "26") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "26") (term "1"))
                                    (rule "applyEq" (formula "32") (term "0,1,1,0,0,1,0") (ifseqformula "26"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0,1,0,0,1,0"))
                                    (rule "applyEq" (formula "32") (term "0,1,1,0,0,0") (ifseqformula "26"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0,1,0,0,0"))
                                    (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "26"))
                                    (rule "polySimp_homoEq" (formula "27"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "27") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "26"))
                                    (rule "inEqSimp_homoInEq0" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                    (rule "applyEq" (formula "30") (term "0,1,1,0,0,0,1,0") (ifseqformula "26"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,1,0,0,0,1,0"))
                                    (rule "applyEq" (formula "32") (term "0,1,0,0,0,1,1,0") (ifseqformula "26"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,1,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1"))
                                    (rule "mul_literals" (formula "27") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                    (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "27"))
                                    (rule "inEqSimp_homoInEq0" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "40") (term "1,0,2,0,0,1,0,0,1") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,2,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,2,0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,2,0,0,1,0,0,1"))
                                    (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "27"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "28") (term "0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,0"))
                                    (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0"))
                                    (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "27"))
                                    (rule "polySimp_addComm0" (formula "5") (term "1"))
                                    (rule "applyEqRigid" (formula "40") (term "1,0,2,1,3,0,0,1,0,0,1") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,2,1,3,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,2,1,3,0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,2,1,3,0,0,1,0,0,1"))
                                    (rule "applyEqRigid" (formula "40") (term "1,0,2,1,3,0,1,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,2,1,3,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,2,1,3,0,1,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,2,1,3,0,1,0"))
                                    (rule "applyEqRigid" (formula "30") (term "1,1,0,1,0,0,1,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "30") (term "1,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,1,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,1,0,1,0,0,1,0"))
                                    (rule "applyEq" (formula "30") (term "1,1,0,0,0,1,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "30") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "30") (term "0,1,0,0,0,1,0"))
                                    (rule "applyEq" (formula "32") (term "1,1,0,0,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "32") (term "1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,1,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,1,0,0,0"))
                                    (rule "applyEq" (formula "40") (term "1,1,0,1,0,0,0,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm0" (formula "40") (term "1,0,1,0,0,0,0"))
                                    (rule "applyEqRigid" (formula "32") (term "1,1,0,0,1,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "32") (term "1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "32") (term "0,1,0,0,1,0"))
                                    (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "applyEqRigid" (formula "40") (term "1,0,2,1,3,0,0,1,1,0,0,0,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,2,1,3,0,0,1,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,2,1,3,0,0,1,1,0,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,2,1,3,0,0,1,1,0,0,0,0"))
                                    (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "27"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1"))
                                    (rule "applyEq" (formula "40") (term "1,0,2,0,0,1,1,0,0,0,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,2,0,0,1,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,2,0,0,1,1,0,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,2,0,0,1,1,0,0,0,0"))
                                    (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "applyEqRigid" (formula "13") (term "1,0,0") (ifseqformula "27"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0"))
                                    (rule "applyEq" (formula "40") (term "1,1,0,1,0,0,0,0,0,0,1") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "40") (term "1,0,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,1,0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "40") (term "0,0,1,0,1,0,0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "40") (term "1,0,2,0,1,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,2,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,2,0,1,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,2,0,1,0"))
                                    (rule "applyEq" (formula "32") (term "1,1,0,1,0,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "32") (term "1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,1,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,1,0,1,0,0"))
                                    (rule "applyEq" (formula "40") (term "1,0,2,1,3,0,1,1,1,1,0,0,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,2,1,3,0,1,1,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,2,1,3,0,1,1,1,1,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,2,1,3,0,1,1,1,1,0,0,0"))
                                    (rule "applyEqRigid" (formula "40") (term "1,0,2,1,3,0,1,1,1,0,0,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,2,1,3,0,1,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,2,1,3,0,1,1,1,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,2,1,3,0,1,1,1,0,0,0"))
                                    (rule "applyEqRigid" (formula "40") (term "1,0,2,0,1,1,1,0,0,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,2,0,1,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,2,0,1,1,1,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,2,0,1,1,1,0,0,0"))
                                    (rule "applyEqRigid" (formula "40") (term "1,0,2,0,1,1,1,1,0,0,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,2,0,1,1,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,2,0,1,1,1,1,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,2,0,1,1,1,1,0,0,0"))
                                    (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "27"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "1"))
                                    (rule "add_literals" (formula "11") (term "0,1"))
                                    (rule "applyEqRigid" (formula "18") (term "1,1") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "18") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "applyEq" (formula "32") (term "1,0,0,0,1,1,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                    (rule "mul_literals" (formula "12") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                    (rule "mul_literals" (formula "28") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                    (rule "bsum_induction_lower2_concrete" (formula "32") (term "0,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "32") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,1,1,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,1,0"))
                                    (rule "polySimp_homoEq" (formula "32") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "32") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "32") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "0,0,0,1,0"))
                                    (rule "polySimp_homoEq" (formula "32") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "32") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "28"))
                                    (rule "greater_literals" (formula "7") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1,0"))
                                    (rule "leq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "elimGcdEq" (formula "10") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=result") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_29)"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "add_literals" (formula "10") (term "1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0"))
                                    (rule "add_literals" (formula "10") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "0,0,0"))
                                    (rule "leq_literals" (formula "10") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "0,0"))
                                    (rule "qeq_literals" (formula "10") (term "0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "1,0"))
                                    (rule "times_zero_1" (formula "10") (term "0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "applyEq" (formula "39") (term "0,1,1,0,0,0,0,0,0,0,1") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "39") (term "1,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "39") (term "0,0,1,0,0,0,0,0,0,0,1"))
                                    (rule "applyEq" (formula "39") (term "0,1,1,0,0,0,0,0") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "applyEq" (formula "22") (term "0,1,1,0,0,0") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,1,0,0,0"))
                                    (rule "applyEq" (formula "39") (term "0,1,1,0,0,1,0,0,0") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,1,0,0,1,0,0,0"))
                                    (rule "applyEq" (formula "22") (term "0,1,1,0,0,1,0") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,1,0,0,1,0"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "10"))
                                    (rule "inEqSimp_homoInEq1" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "0,0"))
                                    (rule "applyEq" (formula "20") (term "0,1,1,0,0,0,1,0") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,1,0,0,0,1,0"))
                                    (rule "applyEq" (formula "39") (term "0,1,0,0,0,1,1,0,0,0") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,1,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,1,0,0,0"))
                                    (rule "applyEq" (formula "22") (term "0,1,0,0,0,1,1,0") (ifseqformula "10"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0"))
                                    (rule "selectOfStore" (formula "38") (term "0,1,0,0,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "castDel" (formula "38") (term "1,0,1,0,0,1"))
                                    (rule "eqSymm" (formula "38") (term "0,0,0,1,0,0,1"))
                                    (rule "eqSymm" (formula "38") (term "1,0,0,1,0,0,1"))
                                    (rule "selectOfAnonEQ" (formula "21") (term "1,1,1,1,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "35")) (ifInst ""  (formula "8")))
                                    (rule "elementOfInfiniteUnion" (formula "21") (term "0,1,1,1,1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "elementOfSingleton" (formula "21") (term "1,0,0,1,1,1,1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                    (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,0,1,0,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "8")))
                                    (rule "elementOfInfiniteUnion" (formula "2") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "selectOfAnonEQ" (formula "37") (term "0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "35")))
                                    (rule "selectCreatedOfAnonEQ" (formula "37") (term "0,0,1,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "8")))
                                    (rule "elementOfInfiniteUnion" (formula "37") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "elementOfSingleton" (formula "37") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")))
                                    (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,0,1,0,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "8")))
                                    (rule "elementOfInfiniteUnion" (formula "3") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "selectOfAnonEQ" (formula "33") (term "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "35")) (ifInst ""  (formula "8")))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "elementOfInfiniteUnion" (formula "33") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "elementOfSingleton" (formula "33") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "selectOfAnonEQ" (formula "28") (term "0,1,0,1,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")) (ifInst ""  (formula "8")))
                                    (rule "elementOfInfiniteUnion" (formula "28") (term "0,0,1,0,1,0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,1,0,1,0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "selectOfStore" (formula "38") (term "1,1,1,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "selectOfAnonEQ" (formula "30") (term "1,1,1,1,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "37")))
                                    (rule "elementOfInfiniteUnion" (formula "30") (term "0,0,1,1,1,1,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "elementOfSingleton" (formula "30") (term "1,0,0,0,1,1,1,1,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "eqSymm" (formula "30") (term "1,1,0,0,0,1,1,1,1,0"))
                                    (rule "selectOfStore" (formula "38") (term "1,1,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "castDel" (formula "38") (term "1,1,1,1,0,0,0"))
                                    (rule "eqSymm" (formula "38") (term "0,0,1,1,1,0,0,0"))
                                    (rule "eqSymm" (formula "38") (term "1,0,1,1,1,0,0,0"))
                                    (rule "replace_known_right" (formula "38") (term "0,0,1,1,1,0,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "selectOfAnonEQ" (formula "33") (term "0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "35")))
                                    (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,0,1,0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "8")))
                                    (rule "elementOfInfiniteUnion" (formula "33") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "elementOfSingleton" (formula "33") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "replace_known_right" (formula "30") (term "0,1,0,0,0,1,1,1,1,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "ifthenelse_negated" (formula "30") (term "1,1,1,1,0"))
                                    (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")) (ifInst ""  (formula "8")))
                                    (rule "elementOfInfiniteUnion" (formula "2") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "5")))
                                    (rule "true_left" (formula "2"))
                                    (rule "selectOfAnonEQ" (formula "2") (term "0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")) (ifInst ""  (formula "7")))
                                    (rule "elementOfInfiniteUnion" (formula "2") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "selectOfAnonEQ" (formula "20") (term "1,1,1,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "35")))
                                    (rule "polySimp_homoEq" (formula "20") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "20") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "20") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,1,1,0"))
                                    (rule "elementOfInfiniteUnion" (formula "20") (term "0,0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "elementOfSingleton" (formula "20") (term "1,0,0,0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "castDel" (formula "20") (term "1,0,0,1,1,0,0,0,0,1,0"))
                                    (rule "castDel" (formula "20") (term "0,0,1,0,0,0,0,1,0"))
                                    (rule "castDel" (formula "20") (term "0,0,0,0,0,0,1,0"))
                                    (rule "instanceof_static_type" (formula "20") (term "0,1,0,0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "selectOfAnonEQ" (formula "36") (term "0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "34")) (ifInst ""  (formula "7")))
                                    (rule "elementOfInfiniteUnion" (formula "36") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "elementOfSingleton" (formula "36") (term "1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "35")))
                                    (rule "false_right" (formula "36"))
                                    (rule "selectOfAnonEQ" (formula "36") (term "1,1,0,1,0,0,1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "selectCreatedOfAnonEQ" (formula "36") (term "0,0,1,1,0,1,1,0,1,0,0,1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "elementOfInfiniteUnion" (formula "36") (term "0,0,1,1,0,1,0,0,1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "elementOfSingleton" (formula "36") (term "1,0,0,0,1,1,0,1,0,0,1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "eqSymm" (formula "36") (term "1,1,0,0,0,1,1,0,1,0,0,1"))
                                    (rule "selectOfAnonEQ" (formula "32") (term "0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "34")) (ifInst ""  (formula "7")))
                                    (rule "orRight" (formula "32"))
                                    (rule "notRight" (formula "32"))
                                    (rule "elementOfInfiniteUnion" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "exLeft" (formula "1") (inst "sk=k_2"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "inEqSimp_commuteLeq" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "elementOfSingleton" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch "Null Reference (x_arr_1 = null)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (x_arr_1 != null, but x_76 Out of Bounds!)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "38")))
                                 (rule "translateJavaAddInt" (formula "39") (term "0,0,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Null Reference (a = null)"
                              (builtin "One Step Simplification" (formula "37"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (a != null, but _right Out of Bounds!)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "inEqSimp_ltRight" (formula "36"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "36"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "3") (term "1"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "3") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1"))
                              (rule "mul_literals" (formula "3") (term "1,1"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "3") (term "0,1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "selectOfAnonEQ" (formula "36") (term "0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "34")))
                              (rule "selectCreatedOfAnonEQ" (formula "36") (term "0,0,1,0,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "8")))
                              (rule "polySimp_elimSub" (formula "36") (term "0,0,0,0,0,2,0,0"))
                              (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,2,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "0,0,0,0,0,0,2,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "0,0,0,0,0,0,0,2,0,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0,0,0,0,2,0,0"))
                              (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,2,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,0,2,0,0"))
                              (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,2,0,0"))
                              (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,0,2,0,0"))
                              (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,0,2,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,2,0,0"))
                              (rule "elementOfInfiniteUnion" (formula "36") (term "0,0"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "elementOfSingleton" (formula "36") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")))
                              (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,0,1,0,0,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "8")))
                              (rule "polySimp_elimSub" (formula "3") (term "0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,2,0,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,0,2,0,0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0,2,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,2,0,0,0"))
                              (rule "elementOfInfiniteUnion" (formula "3") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "selectOfAnonEQ" (formula "37") (term "0,1,0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "selectCreatedOfAnonEQ" (formula "37") (term "0,0,1,1,0,0,1,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "polySimp_elimSub" (formula "37") (term "0,0,0,0,0,2,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,2,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "0,0,0,0,0,0,2,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "0,0,0,0,0,0,0,2,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0,0,0,0,2,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,0,2,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0,0,2,0,0,0,1,0"))
                              (rule "add_literals" (formula "37") (term "1,1,0,0,0,0,2,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,0,2,0,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0,0,2,0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0,2,0,0,0,1,0"))
                              (rule "elementOfInfiniteUnion" (formula "37") (term "0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "elementOfSingleton" (formula "37") (term "1,0,0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "eqSymm" (formula "37") (term "1,1,0,0,0,0,1,0"))
                              (rule "selectOfAnonEQ" (formula "1") (term "0,0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                              (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,0,1,0,0,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
                              (rule "polySimp_elimSub" (formula "1") (term "0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,2,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,2,0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0,2,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,2,0,0,0"))
                              (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "selectOfAnonEQ" (formula "3") (term "0,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")) (ifInst ""  (formula "8")))
                              (rule "polySimp_elimSub" (formula "3") (term "0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,2,0,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,2,0,0,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,0,0,2,0,0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0,2,0,0,0"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0,0,0,2,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,2,0,0,0"))
                              (rule "elementOfInfiniteUnion" (formula "3") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "5"))
                              (rule "andLeft" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                              (rule "add_literals" (formula "3") (term "1,1,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0"))
                              (rule "add_literals" (formula "3") (term "0"))
                              (rule "leq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                        (branch "Null Reference (a = null)"
                           (builtin "One Step Simplification" (formula "34"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                           (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                           (rule "polySimp_elimSub" (formula "1") (term "0,0,0,0,0,2,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,2,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,2,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,2,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,2,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,0,2,0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0,2,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,2,0,0"))
                           (rule "elementOfInfiniteUnion" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "6")))
                           (rule "polySimp_elimSub" (formula "1") (term "0,0,0,0,0,2,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,2,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,2,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,2,0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,0,2,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,0,0,2,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,2,0,0"))
                           (rule "elementOfInfiniteUnion" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (a != null, but _left Out of Bounds!)"
                           (builtin "One Step Simplification" (formula "34"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "selectOfAnonEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                           (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,0,1,0,0,0,0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                           (rule "polySimp_elimSub" (formula "1") (term "0,0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,2,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0,2,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,2,0,0,0,0"))
                           (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectOfAnonEQ" (formula "31") (term "0") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "33")))
                           (rule "selectCreatedOfAnonEQ" (formula "31") (term "0,0,1,0,0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "6")))
                           (rule "polySimp_elimSub" (formula "31") (term "0,0,0,0,0,2,0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,2,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "0,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0,2,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,0,2,0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,0,0,2,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0,2,0,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0,2,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,2,0,0"))
                           (rule "elementOfInfiniteUnion" (formula "31") (term "0,0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "elementOfSingleton" (formula "31") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "selectOfAnonEQ" (formula "31") (term "0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "33")) (ifInst ""  (formula "6")))
                           (rule "polySimp_elimSub" (formula "31") (term "0,0,0,0,0,2,0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,2,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "0,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0,2,0,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,2,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,0,0,2,0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,0,0,0,2,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0,0,2,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,2,0,0"))
                           (rule "elementOfInfiniteUnion" (formula "31") (term "0,0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "elementOfSingleton" (formula "31") (term "1,0,0,0"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "34")))
                           (rule "false_right" (formula "31"))
                           (rule "selectOfAnonEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "6")))
                           (rule "polySimp_elimSub" (formula "1") (term "0,0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,0,2,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,2,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,0,0,2,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,2,0,0,0,0"))
                           (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                           (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "cut_direct" (formula "1") (term "1"))
                           (branch "CUT: left <= -1 TRUE"
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "6"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "throwUnfold" (formula "36") (term "1") (inst "#v0=a"))
                              (rule "variableDeclarationAssign" (formula "36") (term "1"))
                              (rule "variableDeclaration" (formula "36") (term "1") (newnames "a_4"))
                              (builtin "Use Dependency Contract" (formula "32") (ifInst ""  (formula "24")) (ifInst ""  (formula "29")) (contract "PrefixSumRec[java.lang.Object::<inv>()].JML accessible clause.0"))
                              (rule "wellFormedAnonEQ" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "29"))
                              (rule "selectCreatedOfAnonEQ" (formula "33") (term "0,1,0,0,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "28")) (ifInst ""  (formula "35")) (ifInst ""  (formula "8")) (ifInst ""  (formula "24")) (ifInst ""  (formula "32")) (ifInst ""  (formula "24")))
                              (rule "true_left" (formula "33"))
                              (builtin "Use Dependency Contract" (formula "24") (ifInst ""  (formula "36") (term "1,0,0,0,1")) (ifInst ""  (formula "21")) (contract "PrefixSumRec[java.lang.Object::<inv>()].JML accessible clause.0"))
                              (rule "wellFormedAnonEQ" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "21"))
                              (rule "replace_known_left" (formula "33") (term "1,1") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "20")) (ifInst ""  (formula "35")) (ifInst ""  (formula "8")) (ifInst ""  (formula "16")) (ifInst ""  (formula "24")))
                              (rule "true_left" (formula "33"))
                              (builtin "Use Dependency Contract" (formula "32") (ifInst ""  (formula "36") (term "1,0,0,0,1")) (ifInst ""  (formula "29")) (ifInst ""  (formula "21")) (contract "PrefixSumRec[java.lang.Object::<inv>()].JML accessible clause.0"))
                              (rule "wellFormedAnonEQ" (formula "33") (term "1,0,0,0,0,0") (ifseqformula "29"))
                              (rule "wellFormedAnonEQ" (formula "33") (term "0,1,0,0,0,0,0") (ifseqformula "21"))
                              (rule "replace_known_right" (formula "33") (term "0,1,0,0,0,0") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "7")) (ifInst ""  (formula "7")) (ifInst ""  (formula "20")) (ifInst ""  (formula "28")) (ifInst ""  (formula "8")) (ifInst ""  (formula "16")) (ifInst ""  (formula "32")) (ifInst ""  (formula "16")))
                              (rule "true_left" (formula "33"))
                              (rule "polySimp_elimSub" (formula "15") (term "0,1"))
                              (rule "polySimp_elimSub" (formula "23") (term "0,0,0,0,0"))
                              (rule "polySimp_elimSub" (formula "31") (term "0,0,1,1,0"))
                              (rule "polySimp_homoEq" (formula "10"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "31") (term "0,0,0,0,0"))
                              (rule "polySimp_elimSub" (formula "23") (term "0,0,1,1,0"))
                              (rule "polySimp_homoEq" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "12") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "29") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_elimSub" (formula "21") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_homoEq" (formula "15") (term "1"))
                              (rule "polySimp_elimSub" (formula "10") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,1"))
                              (rule "inEqSimp_gtToGeq" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13"))
                              (rule "inEqSimp_ltToLeq" (formula "19"))
                              (rule "inEqSimp_ltToLeq" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "1,1,1,0"))
                              (rule "polySimp_addComm0" (formula "31") (term "1,1,1,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "polySimp_addComm0" (formula "15") (term "1,1,0,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "0,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,0,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "0,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,0,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                              (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,1,1,0"))
                              (rule "add_literals" (formula "31") (term "1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,0"))
                              (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,0,1,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "31") (term "0,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,1,1,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,0,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,0,0,1,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0"))
                              (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "33") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_55"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1") (term "0,1"))
                              (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "16") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_56"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "eqSymm" (formula "16") (term "0,1"))
                              (rule "polySimp_sepPosMonomial" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                              (rule "polySimp_mulAssoc" (formula "28") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "28") (term "0,1"))
                              (rule "applyEq" (formula "33") (term "1,0,1,0,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "31") (term "1,0,1,0,0,1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "33") (term "1,1,0,0,0") (ifseqformula "28"))
                              (rule "polySimp_addAssoc" (formula "33") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "33") (term "1,0,0,0"))
                              (rule "add_literals" (formula "33") (term "1,1,1,0,0,0"))
                              (rule "times_zero_1" (formula "33") (term "1,1,0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "1,0,0,0"))
                              (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "28"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0"))
                              (rule "applyEq" (formula "17") (term "0,1,0,1") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                              (rule "add_literals" (formula "17") (term "0,0,1"))
                              (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "28"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0"))
                              (rule "applyEq" (formula "38") (term "0,1,0,0,0,0,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "28"))
                              (rule "polySimp_addAssoc" (formula "6") (term "1"))
                              (rule "applyEq" (formula "31") (term "1,1,0,0,0,1,0") (ifseqformula "28"))
                              (rule "polySimp_addAssoc" (formula "31") (term "1,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "31") (term "1,0,0,0,1,0"))
                              (rule "add_literals" (formula "31") (term "1,1,1,0,0,0,1,0"))
                              (rule "times_zero_1" (formula "31") (term "1,1,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "31") (term "1,0,0,0,1,0"))
                              (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "28"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                              (rule "polySimp_pullOutFactor2" (formula "20") (term "0,0,0"))
                              (rule "add_literals" (formula "20") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "20") (term "0,0,0"))
                              (rule "add_zero_left" (formula "20") (term "0,0"))
                              (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0,0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "28"))
                              (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                              (rule "add_literals" (formula "29") (term "1,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                              (rule "add_literals" (formula "7") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "7") (term "1,0,0"))
                              (rule "add_zero_right" (formula "7") (term "0,0"))
                              (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "28"))
                              (rule "polySimp_addAssoc" (formula "15") (term "1,0"))
                              (rule "polySimp_pullOutFactor2" (formula "15") (term "0,1,0"))
                              (rule "add_literals" (formula "15") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "15") (term "0,1,0"))
                              (rule "add_zero_left" (formula "15") (term "1,0"))
                              (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "28"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "applyEq" (formula "33") (term "1,0,1,1,0") (ifseqformula "28"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,1,1,0"))
                              (rule "add_literals" (formula "33") (term "1,1,0,1,1,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,1,1,0"))
                              (rule "add_zero_right" (formula "33") (term "0,1,1,0"))
                              (rule "bsum_induction_upper_concrete" (formula "25") (term "1,1,0"))
                              (rule "polySimp_homoEq" (formula "25") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "25") (term "0,1,0,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                              (rule "mul_literals" (formula "11") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                              (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "11"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "add_literals" (formula "12") (term "0,0"))
                              (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "11"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "38") (term "0,0,1,0"))
                              (rule "applyEq" (formula "31") (term "1,1,0,1,0,0,1,0") (ifseqformula "11"))
                              (rule "polySimp_addAssoc" (formula "31") (term "1,0,1,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "31") (term "0,1,0,1,0,0,1,0"))
                              (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "11"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                              (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "11"))
                              (rule "polySimp_addComm0" (formula "20") (term "0"))
                              (rule "applyEq" (formula "38") (term "1,0,1,0,0,0,0,0") (ifseqformula "11"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "38") (term "0,0,1,0,0,0,0,0"))
                              (rule "applyEq" (formula "33") (term "1,1,0,1,0,0") (ifseqformula "11"))
                              (rule "polySimp_addAssoc" (formula "33") (term "1,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,1,0,1,0,0"))
                              (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "11"))
                              (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "11"))
                              (rule "polySimp_addAssoc" (formula "6") (term "1"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,1"))
                              (rule "add_literals" (formula "6") (term "0,0,1"))
                              (rule "add_zero_left" (formula "6") (term "0,1"))
                              (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "11"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                              (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "11"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0,0"))
                              (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "11"))
                              (rule "polySimp_addAssoc" (formula "28") (term "1"))
                              (rule "polySimp_addComm0" (formula "28") (term "0,1"))
                              (rule "polySimp_sepNegMonomial" (formula "17") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                              (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "11"))
                              (rule "polySimp_homoEq" (formula "17") (term "1"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                              (rule "add_literals" (formula "17") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq0" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "applyEq" (formula "21") (term "0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "25") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "20"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                              (rule "bsum_induction_lower2_concrete" (formula "33") (term "1,1,0"))
                              (rule "eqSymm" (formula "33") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "33") (term "0,1,0"))
                              (rule "polySimp_homoEq" (formula "33") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,1,1,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,1,1,0,1,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,0,1,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1,1,0,1,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0,0,1,1,0,1,0"))
                              (rule "add_zero_left" (formula "33") (term "0,0,0,1,1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,0,1,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_sepNegMonomial" (formula "17") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                              (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "15") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_25"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "eqSymm" (formula "15") (term "0,1"))
                              (rule "applyEqRigid" (formula "15") (term "1,0,1") (ifseqformula "16"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1"))
                              (rule "mul_literals" (formula "21") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                              (rule "polySimp_sepPosMonomial" (formula "33") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "33") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,0,0,1,0"))
                              (rule "bsum_induction_upper_concrete" (formula "33") (term "0,1,1,0"))
                              (rule "polySimp_homoEq" (formula "33") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "33") (term "0,1,0,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "33") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,1,0"))
                              (rule "inEqSimp_contradEq7" (formula "17") (term "1") (ifseqformula "7"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,1"))
                              (rule "add_literals" (formula "17") (term "0,0,1"))
                              (rule "leq_literals" (formula "17") (term "0,1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "apply_eq_boolean_rigid" (formula "16") (term "1,0,1") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "7"))
                              (rule "leq_literals" (formula "12") (term "0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "newSym_eq" (formula "11") (inst "newSymDef=add(Z(neglit(1(#))), mul(mbyAtPre, Z(0(#))))") (inst "l=l_27"))
                              (rule "times_zero_1" (formula "11") (term "1,1,1"))
                              (rule "add_zero_right" (formula "11") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "11") (term "1"))
                              (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "11"))
                              (rule "polySimp_homoEq" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "11"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                              (rule "mul_literals" (formula "12") (term "0,1"))
                              (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "12"))
                              (rule "polySimp_addComm0" (formula "6") (term "1"))
                              (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "12"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0"))
                              (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq0" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "20") (term "1,1") (ifseqformula "12"))
                              (rule "polySimp_addAssoc" (formula "20") (term "1"))
                              (rule "add_literals" (formula "20") (term "0,1"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "38") (term "1,0,1,0,0,0,0,0") (ifseqformula "12"))
                              (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0,0,0"))
                              (rule "applyEqRigid" (formula "14") (term "1,0,0") (ifseqformula "12"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0"))
                              (rule "applyEq" (formula "38") (term "1,0,1,0") (ifseqformula "12"))
                              (rule "polySimp_addComm1" (formula "38") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,1,0"))
                              (rule "applyEqRigid" (formula "30") (term "1,1,0,1,0,0,1,0") (ifseqformula "12"))
                              (rule "polySimp_addComm1" (formula "30") (term "1,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,1,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "30") (term "0,0,1,0,1,0,0,1,0"))
                              (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq1" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                              (rule "mul_literals" (formula "7") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "applyEqRigid" (formula "32") (term "1,1,0,1,0,0") (ifseqformula "12"))
                              (rule "polySimp_addComm1" (formula "32") (term "1,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,1,0,0"))
                              (rule "add_literals" (formula "32") (term "0,0,1,0,1,0,0"))
                              (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "12"))
                              (rule "polySimp_addComm1" (formula "27") (term "1"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                              (rule "add_literals" (formula "27") (term "0,0,1"))
                              (rule "applyEqRigid" (formula "19") (term "1,1") (ifseqformula "12"))
                              (rule "polySimp_addAssoc" (formula "19") (term "1"))
                              (rule "add_literals" (formula "19") (term "0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1"))
                              (rule "mul_literals" (formula "13") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "inEqSimp_subsumption6" (formula "7") (ifseqformula "28"))
                              (rule "greater_literals" (formula "7") (term "0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1,0"))
                              (rule "leq_literals" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "elimGcdEq" (formula "18") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=result") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_27)"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "add_literals" (formula "18") (term "1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,1,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,1,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "18") (term "0,1,0"))
                              (rule "add_literals" (formula "18") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "18") (term "0,1,0"))
                              (rule "qeq_literals" (formula "18") (term "1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "18") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0,1"))
                              (rule "add_literals" (formula "18") (term "1,0,0,1"))
                              (rule "times_zero_1" (formula "18") (term "0,0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "0,0"))
                              (rule "leq_literals" (formula "18") (term "0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "applyEq" (formula "23") (term "0,1,1,0,0,0") (ifseqformula "18"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,1,0,0,0"))
                              (rule "applyEq" (formula "23") (term "0,1,1,0,0,1,0") (ifseqformula "18"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0,1,0"))
                              (rule "add_literals" (formula "23") (term "0,0,1,0,0,1,0"))
                              (rule "applyEq" (formula "21") (term "0,1,1,0,0,0,1,0") (ifseqformula "18"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "1,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,0,1,0"))
                              (rule "add_literals" (formula "21") (term "0,0,1,0,0,0,1,0"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                              (rule "inEqSimp_homoInEq0" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "19") (term "0"))
                              (rule "add_literals" (formula "19") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,0"))
                              (rule "applyEq" (formula "23") (term "0,1,0,0,0,1,1,0") (ifseqformula "18"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                              (rule "mul_literals" (formula "19") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "27"))
                              (rule "mul_literals" (formula "4") (term "1,1,0"))
                              (rule "greater_literals" (formula "4") (term "0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "leq_literals" (formula "4") (term "0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "3"))
                              (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                              (rule "mul_literals" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "add_literals" (formula "12") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "inEqSimp_contradInEq5" (formula "12") (ifseqformula "27"))
                              (rule "greater_literals" (formula "12") (term "0,0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1,0"))
                              (rule "qeq_literals" (formula "12") (term "0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "closeFalse" (formula "12"))
                           )
                           (branch "CUT: left <= -1 FALSE"
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_leqRight" (formula "32"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "4") (term "0,0"))
                              (rule "add_zero_left" (formula "4") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                              (rule "mul_literals" (formula "5") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "7"))
                              (rule "andLeft" (formula "5"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0"))
                              (rule "add_zero_right" (formula "5") (term "0"))
                              (rule "leq_literals" (formula "5"))
                              (rule "closeFalse" (formula "5"))
                           )
                        )
                     )
                  )
               )
               (branch "Null Reference (a = null)"
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                  (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
                  (rule "polySimp_elimSub" (formula "1") (term "0,0,0,0,0,2,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,2,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,2,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,2,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,2,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,0,2,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0,2,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,2,0,0"))
                  (rule "elementOfInfiniteUnion" (formula "1") (term "0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectOfAnonEQ" (formula "1") (term "0") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "4")))
                  (rule "polySimp_elimSub" (formula "1") (term "0,0,0,0,0,2,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,2,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,2,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,2,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,0,2,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0,2,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,0,0,2,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,2,0,0"))
                  (rule "elementOfInfiniteUnion" (formula "1") (term "0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEq" (formula "31") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "throwUnfold" (formula "31") (term "1") (inst "#v0=n"))
                  (rule "variableDeclarationAssign" (formula "31") (term "1"))
                  (rule "variableDeclaration" (formula "31") (term "1") (newnames "n_1"))
                  (builtin "Use Dependency Contract" (formula "28") (ifInst ""  (formula "20")) (ifInst ""  (formula "25")) (contract "PrefixSumRec[java.lang.Object::<inv>()].JML accessible clause.0"))
                  (rule "wellFormedAnonEQ" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "25"))
                  (rule "selectCreatedOfAnonEQ" (formula "29") (term "0,1,0,0,0") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "24")) (ifInst ""  (formula "31")) (ifInst ""  (formula "4")) (ifInst ""  (formula "20")) (ifInst ""  (formula "28")) (ifInst ""  (formula "20")))
                  (rule "true_left" (formula "29"))
                  (builtin "Use Dependency Contract" (formula "20") (ifInst ""  (formula "31") (term "1,0,0,0,1")) (ifInst ""  (formula "17")) (contract "PrefixSumRec[java.lang.Object::<inv>()].JML accessible clause.0"))
                  (rule "wellFormedAnonEQ" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "17"))
                  (rule "replace_known_left" (formula "29") (term "1,1") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "3")) (ifInst ""  (formula "3")) (ifInst ""  (formula "16")) (ifInst ""  (formula "31")) (ifInst ""  (formula "4")) (ifInst ""  (formula "12")) (ifInst ""  (formula "20")))
                  (rule "true_left" (formula "29"))
                  (builtin "Use Dependency Contract" (formula "28") (ifInst ""  (formula "31") (term "1,0,0,0,1")) (ifInst ""  (formula "25")) (ifInst ""  (formula "17")) (contract "PrefixSumRec[java.lang.Object::<inv>()].JML accessible clause.0"))
                  (rule "wellFormedAnonEQ" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "25"))
                  (rule "wellFormedAnonEQ" (formula "29") (term "0,1,0,0,0,0,0") (ifseqformula "17"))
                  (rule "replace_known_left" (formula "29") (term "1,0,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "3")) (ifInst ""  (formula "3")) (ifInst ""  (formula "16")) (ifInst ""  (formula "24")) (ifInst ""  (formula "31")) (ifInst ""  (formula "12")) (ifInst ""  (formula "28")) (ifInst ""  (formula "12")))
                  (rule "true_left" (formula "29"))
                  (rule "polySimp_elimSub" (formula "17") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_homoEq" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "27") (term "0,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "25") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_homoEq" (formula "6"))
                  (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "19") (term "0,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "19") (term "0,0,0,0,0"))
                  (rule "polySimp_elimSub" (formula "8") (term "0,0"))
                  (rule "polySimp_elimSub" (formula "27") (term "0,0,0,0,0"))
                  (rule "polySimp_homoEq" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,1"))
                  (rule "polySimp_elimSub" (formula "6") (term "0,0,0"))
                  (rule "polySimp_homoEq" (formula "11") (term "1"))
                  (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "23"))
                  (rule "inEqSimp_ltToLeq" (formula "15"))
                  (rule "inEqSimp_ltToLeq" (formula "9"))
                  (rule "inEqSimp_gtToGeq" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "19") (term "1,1,1,0"))
                  (rule "polySimp_addComm0" (formula "27") (term "1,1,1,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                  (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,1,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,1,0"))
                  (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "27") (term "0,0,1,1,0"))
                  (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,0,0,1,1,0"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "19") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                  (rule "applyEq" (formula "17") (term "0,1,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "19") (term "1,2,1,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "9") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "polySimp_sepPosMonomial" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1"))
                  (rule "polySimp_rightDist" (formula "22") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                  (rule "polySimp_mulAssoc" (formula "22") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,1"))
                  (rule "applyEq" (formula "25") (term "1,1,0,0,0,1,0") (ifseqformula "22"))
                  (rule "polySimp_addAssoc" (formula "25") (term "1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "25") (term "1,0,0,0,1,0"))
                  (rule "add_literals" (formula "25") (term "1,1,1,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "25") (term "1,1,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "25") (term "1,0,0,0,1,0"))
                  (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "22"))
                  (rule "polySimp_addAssoc" (formula "10") (term "1,0"))
                  (rule "polySimp_pullOutFactor2" (formula "10") (term "0,1,0"))
                  (rule "add_literals" (formula "10") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "10") (term "0,1,0"))
                  (rule "add_zero_left" (formula "10") (term "1,0"))
                  (rule "applyEq" (formula "27") (term "1,1,0,0,0") (ifseqformula "22"))
                  (rule "polySimp_addAssoc" (formula "27") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "27") (term "1,0,0,0"))
                  (rule "add_literals" (formula "27") (term "1,1,1,0,0,0"))
                  (rule "times_zero_1" (formula "27") (term "1,1,0,0,0"))
                  (rule "add_zero_right" (formula "27") (term "1,0,0,0"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "22"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "1,0,0"))
                  (rule "add_zero_right" (formula "2") (term "0,0"))
                  (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "22"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0"))
                  (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                  (rule "add_literals" (formula "23") (term "1,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                  (rule "add_literals" (formula "23") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0"))
                  (rule "applyEq" (formula "31") (term "0,1,0,0,0,0,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "22"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,0,0"))
                  (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "22"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0,0"))
                  (rule "applyEq" (formula "11") (term "0,1,0,1") (ifseqformula "22"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "11") (term "0,0,1"))
                  (rule "applyEq" (formula "25") (term "1,0,1,0,0,1,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "22"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                  (rule "polySimp_pullOutFactor2" (formula "14") (term "0,0,0"))
                  (rule "add_literals" (formula "14") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "14") (term "0,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0"))
                  (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "22"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "22"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0,0"))
                  (rule "applyEq" (formula "27") (term "1,0,1,0,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "27") (term "1,0,1,1,0") (ifseqformula "22"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,1,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0,1,1,0"))
                  (rule "times_zero_1" (formula "27") (term "1,0,1,1,0"))
                  (rule "add_zero_right" (formula "27") (term "0,1,1,0"))
                  (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "22"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "11") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_61"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "eqSymm" (formula "11") (term "0,1"))
                  (rule "bsum_induction_upper_concrete" (formula "20") (term "1,1,0"))
                  (rule "polySimp_homoEq" (formula "20") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "20") (term "0,1,0,1,0"))
                  (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "10") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_28"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "eqSymm" (formula "10") (term "0,1"))
                  (rule "applyEqRigid" (formula "10") (term "1,0,1") (ifseqformula "11"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_sepPosMonomial" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                  (rule "mul_literals" (formula "6") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
                  (rule "inEqSimp_homoInEq1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                  (rule "mul_literals" (formula "2") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0"))
                  (rule "add_literals" (formula "2") (term "0,0"))
                  (rule "applyEq" (formula "33") (term "1,0,1,0") (ifseqformula "6"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "33") (term "0,0,1,0"))
                  (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "6"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "6"))
                  (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "6"))
                  (rule "polySimp_addComm0" (formula "16") (term "0"))
                  (rule "applyEq" (formula "27") (term "1,1,0,1,0,0,1,0") (ifseqformula "6"))
                  (rule "polySimp_addAssoc" (formula "27") (term "1,0,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "27") (term "0,1,0,1,0,0,1,0"))
                  (rule "applyEq" (formula "33") (term "1,0,1,0,0,0,0,0") (ifseqformula "6"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addComm0" (formula "33") (term "0,0,1,0,0,0,0,0"))
                  (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "6"))
                  (rule "polySimp_addAssoc" (formula "31") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "31") (term "0,1,0"))
                  (rule "applyEq" (formula "29") (term "1,1,0,1,0,0") (ifseqformula "6"))
                  (rule "polySimp_addAssoc" (formula "29") (term "1,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "29") (term "0,1,0,1,0,0"))
                  (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "6"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,0"))
                  (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "6"))
                  (rule "polySimp_addAssoc" (formula "24") (term "1"))
                  (rule "polySimp_addComm0" (formula "24") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
                  (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "6"))
                  (rule "polySimp_homoEq" (formula "13") (term "1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                  (rule "add_literals" (formula "13") (term "0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "6"))
                  (rule "inEqSimp_homoInEq0" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "21") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                  (rule "applyEq" (formula "17") (term "0") (ifseqformula "6"))
                  (rule "inEqSimp_homoInEq1" (formula "17"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0"))
                  (rule "bsum_induction_lower2_concrete" (formula "29") (term "1,1,0"))
                  (rule "eqSymm" (formula "29") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "29") (term "0,1,0"))
                  (rule "polySimp_homoEq" (formula "29") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,1,0,1,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "29") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,0,1,0"))
                  (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,1,0"))
                  (rule "add_zero_left" (formula "29") (term "0,0,0,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "29") (term "0,0,1,0,1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "16"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1"))
                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "31") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_62"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "1") (term "0,1"))
                  (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "32"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "polySimp_sepPosMonomial" (formula "30") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "30") (term "0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1"))
                  (rule "polySimp_rightDist" (formula "18") (term "1"))
                  (rule "mul_literals" (formula "18") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "0,0,0,1,0"))
                  (rule "bsum_induction_upper_concrete" (formula "30") (term "0,1,1,0"))
                  (rule "polySimp_homoEq" (formula "30") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,1,0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "30") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,1,0"))
                  (rule "inEqSimp_contradEq7" (formula "14") (term "1") (ifseqformula "3"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,1"))
                  (rule "add_literals" (formula "14") (term "0,0,1"))
                  (rule "leq_literals" (formula "14") (term "0,1"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "notLeft" (formula "14"))
                  (rule "apply_eq_boolean_rigid" (formula "13") (term "1,0,1") (ifseqformula "31"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
                  (rule "leq_literals" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
                  (rule "mul_literals" (formula "3") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "newSym_eq" (formula "8") (inst "newSymDef=add(Z(neglit(1(#))), mul(mbyAtPre, Z(0(#))))") (inst "l=l_28"))
                  (rule "times_zero_1" (formula "8") (term "1,1,1"))
                  (rule "add_zero_right" (formula "8") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "8") (term "1"))
                  (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "8"))
                  (rule "polySimp_homoEq" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0"))
                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "8"))
                  (rule "inEqSimp_homoInEq1" (formula "26"))
                  (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0"))
                  (rule "add_literals" (formula "26") (term "0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                  (rule "mul_literals" (formula "9") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                  (rule "applyEqRigid" (formula "35") (term "1,0,1,0,0,0,0,0") (ifseqformula "9"))
                  (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "applyEqRigid" (formula "28") (term "1,1,0,1,0,0,1,0") (ifseqformula "9"))
                  (rule "polySimp_addComm1" (formula "28") (term "1,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "28") (term "0,0,1,0,1,0,0,1,0"))
                  (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq0" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0"))
                  (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "9"))
                  (rule "polySimp_addAssoc" (formula "18") (term "1"))
                  (rule "add_literals" (formula "18") (term "0,1"))
                  (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "9"))
                  (rule "polySimp_addComm0" (formula "11") (term "1"))
                  (rule "applyEq" (formula "30") (term "1,1,0,1,0,0") (ifseqformula "9"))
                  (rule "polySimp_addComm1" (formula "30") (term "1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,1,0,1,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,1,0,1,0,0"))
                  (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "9"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "applyEqRigid" (formula "35") (term "1,0,1,0") (ifseqformula "9"))
                  (rule "polySimp_addComm1" (formula "35") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,1,0"))
                  (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "0,0"))
                  (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "9"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0"))
                  (rule "applyEqRigid" (formula "25") (term "1,1") (ifseqformula "9"))
                  (rule "polySimp_addComm1" (formula "25") (term "1"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                  (rule "add_literals" (formula "25") (term "0,0,1"))
                  (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "9"))
                  (rule "polySimp_addAssoc" (formula "17") (term "1"))
                  (rule "add_literals" (formula "17") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                  (rule "polySimp_elimOne" (formula "26") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1"))
                  (rule "polySimp_rightDist" (formula "10") (term "1"))
                  (rule "mul_literals" (formula "10") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "inEqSimp_subsumption6" (formula "4") (ifseqformula "26"))
                  (rule "mul_literals" (formula "4") (term "1,1,0"))
                  (rule "greater_literals" (formula "4") (term "0,0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "elimGcdEq" (formula "16") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=result") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_28)"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "add_literals" (formula "16") (term "1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,1,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,1,0"))
                  (rule "polySimp_pullOutFactor0" (formula "16") (term "0,1,0"))
                  (rule "add_literals" (formula "16") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "16") (term "0,1,0"))
                  (rule "qeq_literals" (formula "16") (term "1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "1,0,0"))
                  (rule "times_zero_1" (formula "16") (term "0,0"))
                  (rule "leq_literals" (formula "16") (term "0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0"))
                  (rule "polySimp_pullOutFactor0" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "1,0"))
                  (rule "times_zero_1" (formula "16") (term "0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                  (rule "inEqSimp_homoInEq0" (formula "17"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,0"))
                  (rule "applyEq" (formula "21") (term "0,1,1,0,0,1,0") (ifseqformula "16"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,1,0"))
                  (rule "add_literals" (formula "21") (term "0,0,1,0,0,1,0"))
                  (rule "applyEq" (formula "19") (term "0,1,1,0,0,0,1,0") (ifseqformula "16"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,1,0"))
                  (rule "applyEq" (formula "21") (term "0,1,1,0,0,0") (ifseqformula "16"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,1,0,0,0"))
                  (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,1,0") (ifseqformula "16"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1"))
                  (rule "selectOfAnonEQ" (formula "28") (term "1,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "elementOfInfiniteUnion" (formula "28") (term "0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "selectOfAnonEQ" (formula "20") (term "1,1,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "polySimp_homoEq" (formula "20") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "20") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "20") (term "0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "0,1,1,0"))
                  (rule "elementOfInfiniteUnion" (formula "20") (term "0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "elementOfSingleton" (formula "20") (term "1,0,0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "selectOfAnonEQ" (formula "26") (term "0,1,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "32")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "26") (term "2,0,1,0,1,0") (ifseqformula "2"))
                  (rule "elementOfInfiniteUnion" (formula "26") (term "0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "32")))
                  (rule "selectOfAnonEQ" (formula "28") (term "1,2,0,0,0,1,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "32")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "28") (term "2,1,2,0,0,0,1,1,0") (ifseqformula "2"))
                  (rule "elementOfInfiniteUnion" (formula "28") (term "0,1,2,0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "elementOfSingleton" (formula "28") (term "1,0,0,1,2,0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "32")))
                  (rule "selectOfAnonEQ" (formula "20") (term "0,0,0,1,0,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "32")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "20") (term "2,0,0,0,1,0,0,1,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "elementOfInfiniteUnion" (formula "20") (term "0,0,0,0,1,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "elementOfSingleton" (formula "20") (term "1,0,0,0,0,0,1,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "32")))
                  (rule "polySimp_homoEq" (formula "20") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "20") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,0"))
                  (rule "selectOfAnonEQ" (formula "28") (term "1,1,1,1,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "32")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "28") (term "2,1,1,1,1,1,0") (ifseqformula "2"))
                  (rule "elementOfInfiniteUnion" (formula "28") (term "0,1,1,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "elementOfSingleton" (formula "28") (term "1,0,0,1,1,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "32")))
                  (rule "selectOfAnonEQ" (formula "20") (term "1,2,1,1,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "32")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "20") (term "2,1,2,1,1,1,0") (ifseqformula "2"))
                  (rule "elementOfInfiniteUnion" (formula "20") (term "0,1,2,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "elementOfSingleton" (formula "20") (term "1,0,0,1,2,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "32")))
                  (rule "selectOfAnonEQ" (formula "28") (term "1,1,0,1,1,0") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "32")))
                  (rule "selectCreatedOfAnonEQ" (formula "28") (term "0,0,1,0,1,1,0,1,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "5")))
                  (rule "elementOfInfiniteUnion" (formula "28") (term "0,1,1,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "elementOfSingleton" (formula "28") (term "1,0,0,1,1,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "32")))
                  (rule "selectOfAnonEQ" (formula "20") (term "0,0,1,0,0,1,1,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "32")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "20") (term "2,0,0,1,0,0,1,1,1,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "elementOfInfiniteUnion" (formula "20") (term "0,0,0,1,0,0,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "polySimp_homoEq" (formula "20") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "20") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "20") (term "0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "0,1,1,0"))
                  (rule "elementOfSingleton" (formula "20") (term "1,0,0,0,0,1,0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "32")))
                  (rule "castDel" (formula "20") (term "1,0,0,1,1,0,0,0,1,0"))
                  (rule "castDel" (formula "20") (term "0,0,1,0,0,0,1,0"))
                  (rule "castDel" (formula "20") (term "0,0,0,0,0,1,0"))
                  (rule "instanceof_static_type" (formula "20") (term "0,1,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "selectOfAnonEQ" (formula "28") (term "2,0,0,0,1,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "elementOfInfiniteUnion" (formula "28") (term "0,2,0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "elementOfSingleton" (formula "28") (term "1,0,0,2,0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "castDel" (formula "28") (term "0,0,0,0,2,0,0,0,1,1,0"))
                  (rule "castDel" (formula "28") (term "0,0,1,0,0,2,0,0,0,1,1,0"))
                  (rule "castDel" (formula "28") (term "1,0,0,1,1,0,0,2,0,0,0,1,1,0"))
                  (rule "instanceof_static_type" (formula "28") (term "0,1,0,2,0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "selectOfAnonEQ" (formula "20") (term "1,1,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "32")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "20") (term "2,1,1,0,1,0") (ifseqformula "2"))
                  (rule "elementOfInfiniteUnion" (formula "20") (term "0,1,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "elementOfSingleton" (formula "20") (term "1,0,0,1,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "32")))
                  (rule "selectOfAnonEQ" (formula "28") (term "1,1,1,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "32")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "28") (term "2,1,1,1,0,1,0") (ifseqformula "2"))
                  (rule "elementOfInfiniteUnion" (formula "28") (term "0,1,1,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "elementOfSingleton" (formula "28") (term "1,0,0,1,1,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "32")))
                  (rule "selectOfAnonEQ" (formula "28") (term "1,1,1,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "elementOfInfiniteUnion" (formula "28") (term "0,1,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "elementOfSingleton" (formula "28") (term "1,0,0,1,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "castDel" (formula "28") (term "0,0,1,0,0,1,1,1,1,0"))
                  (rule "castDel" (formula "28") (term "0,0,0,0,1,1,1,1,0"))
                  (rule "castDel" (formula "28") (term "1,0,0,1,1,0,0,1,1,1,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "28") (term "0,1,0,0,1,1,1,1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "28") (term "0,0,1,0,0,1,1,1,1,0"))
                  (rule "add_literals" (formula "28") (term "1,0,0,1,0,0,1,1,1,1,0"))
                  (rule "times_zero_1" (formula "28") (term "0,0,1,0,0,1,1,1,1,0"))
                  (rule "qeq_literals" (formula "28") (term "0,1,0,0,1,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0,1,1,1,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0,1,1,1,1,0"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,1,1,1,1,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,1,1,1,1,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0,0,0,1,1,1,1,0"))
                  (rule "instanceof_static_type" (formula "28") (term "0,1,0,1,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "28") (term "0,0,1,0,1,1,1,1,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_63"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "eqSymm" (formula "28") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,1,1,1,0"))
                  (rule "inEqSimp_subsumption6" (formula "29") (term "0,0,1,1,1,1,0") (ifseqformula "24"))
                  (rule "mul_literals" (formula "29") (term "1,1,0,0,0,1,1,1,1,0"))
                  (rule "greater_literals" (formula "29") (term "0,0,0,0,1,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "leq_literals" (formula "29") (term "0,0,0,1,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "ifthenelse_negated" (formula "29") (term "1,1,1,1,0"))
                  (rule "selectOfAnonEQ" (formula "29") (term "1,0,1,1,0") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "selectCreatedOfAnonEQ" (formula "29") (term "0,0,1,1,0,1,0,1,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "polySimp_homoEq" (formula "29") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "29") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "0,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "29") (term "0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "0,0,1,1,0"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "selectOfAnonEQ" (formula "29") (term "0,0,0,1,0,1,1,1,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "29") (term "2,0,0,0,1,0,1,1,1,1,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,0,0,0,1,0,1,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,0,0,0,1,0,1,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                  (rule "selectOfAnonEQ" (formula "29") (term "0,0,1,0,0,0,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "29") (term "2,0,0,1,0,0,0,0,1,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,0,0,1,0,0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,0,0,1,0,0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                  (rule "castDel" (formula "29") (term "0,0,0,0,0,0,1,0"))
                  (rule "castDel" (formula "29") (term "1,0,0,1,1,0,0,0,0,1,0"))
                  (rule "castDel" (formula "29") (term "0,0,1,0,0,0,0,1,0"))
                  (rule "instanceof_static_type" (formula "29") (term "0,1,0,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "selectOfAnonEQ" (formula "29") (term "2,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,0,2,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,0,2,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "selectOfAnonEQ" (formula "29") (term "1,0,0,1,1,0,2,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "29") (term "2,1,0,0,1,1,0,2,0,1,0") (ifseqformula "2"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,1,0,0,1,1,0,2,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,1,0,0,1,1,0,2,0,1,0"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                  (rule "selectOfAnonEQ" (formula "29") (term "1,1,2,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "29") (term "2,1,1,2,0,1,0") (ifseqformula "2"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,1,1,2,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,1,1,2,0,1,0"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                  (rule "selectOfAnonEQ" (formula "29") (term "1,0,0,0,1,1,0,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "29") (term "2,1,0,0,0,1,1,0,0,1,0") (ifseqformula "2"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,1,0,0,0,1,1,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,1,0,0,0,1,1,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                  (rule "selectOfAnonEQ" (formula "29") (term "0,0,1,0,0,1,1,1,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "29") (term "2,0,0,1,0,0,1,1,1,1,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,0,0,1,0,0,1,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "polySimp_homoEq" (formula "29") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "29") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,1,0"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,0,0,1,0,0,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                  (rule "castDel" (formula "29") (term "0,0,0,0,1,0,1,0"))
                  (rule "castDel" (formula "29") (term "0,0,1,0,0,1,0,1,0"))
                  (rule "castDel" (formula "29") (term "1,0,0,1,1,0,0,1,0,1,0"))
                  (rule "polySimp_homoEq" (formula "29") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
                  (rule "instanceof_static_type" (formula "29") (term "0,1,0,1,0,1,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "polySimp_sepPosMonomial" (formula "29") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "0,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "29") (term "0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "0,0,1,1,0"))
                  (rule "selectOfAnonEQ" (formula "29") (term "0,0,0,1,0,2,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "29") (term "2,0,0,0,1,0,2,0,1,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,0,0,0,1,0,2,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,0,0,0,1,0,2,0,1,0"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                  (rule "selectOfAnonEQ" (formula "29") (term "1,0,1,0,1,1,0,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "29") (term "2,1,0,1,0,1,1,0,0,1,0") (ifseqformula "2"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,1,0,1,0,1,1,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,1,0,1,0,1,1,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                  (rule "selectOfAnonEQ" (formula "29") (term "0,0,1,0,0,2,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "29") (term "2,0,0,1,0,0,2,0,1,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,0,0,1,0,0,2,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,0,0,1,0,0,2,0,1,0"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                  (rule "castDel" (formula "29") (term "0,0,1,0,0,2,0,1,0"))
                  (rule "castDel" (formula "29") (term "0,0,0,0,2,0,1,0"))
                  (rule "castDel" (formula "29") (term "1,0,0,1,1,0,0,2,0,1,0"))
                  (rule "instanceof_static_type" (formula "29") (term "0,1,0,2,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "selectOfAnonEQ" (formula "29") (term "1,2,1,1,1,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "29") (term "2,1,2,1,1,1,1,0") (ifseqformula "2"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,1,2,1,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,1,2,1,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                  (rule "selectOfAnonEQ" (formula "29") (term "1,1,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "29") (term "2,1,1,0,1,0") (ifseqformula "2"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,1,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,1,1,0,1,0"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                  (rule "selectOfAnonEQ" (formula "29") (term "0,0,0,1,0,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "29") (term "2,0,0,0,1,0,0,1,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,0,0,0,1,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,0,0,0,1,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                  (rule "selectOfAnonEQ" (formula "29") (term "1,2,2,0,1,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")) (ifInst ""  (formula "5")))
                  (rule "applyEq" (formula "29") (term "2,1,2,2,0,1,0") (ifseqformula "2"))
                  (rule "elementOfInfiniteUnion" (formula "29") (term "0,1,2,2,0,1,0"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "elementOfSingleton" (formula "29") (term "1,0,0,1,2,2,0,1,0"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "33")))
                  (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "14"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "2")))
                  (rule "closeFalse" (formula "14"))
               )
            )
            (branch "Exceptional Post (upsweep)"
               (builtin "One Step Simplification" (formula "24"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "andLeft" (formula "24"))
               (rule "selectCreatedOfAnonEQ" (formula "25") (term "0,1,0") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "selectCreatedOfAnonEQ" (formula "25") (term "0,0,1,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "27"))
               (rule "notLeft" (formula "25"))
               (rule "close" (formula "29") (ifseqformula "28"))
            )
            (branch "Pre (upsweep)"
               (opengoal " ")
            )
         )
         (branch "Exceptional Post (div2)"
            (builtin "One Step Simplification" (formula "20"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "selectCreatedOfAnonEQ" (formula "20") (term "0,1,0") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "22"))
            (rule "notLeft" (formula "20"))
            (rule "close" (formula "24") (ifseqformula "23"))
         )
         (branch "Pre (div2)"
            (builtin "One Step Simplification" (formula "22"))
            (rule "wellFormedAnonEQ" (formula "22") (term "1") (ifseqformula "16"))
            (rule "translateJavaMulInt" (formula "16") (term "0,0,0,0,0,0,1,0"))
            (rule "translateJavaAddInt" (formula "18") (term "1,1,1,0"))
            (rule "translateJavaMulInt" (formula "18") (term "0,0,0,1,1,0"))
            (rule "translateJavaMulInt" (formula "18") (term "0,0,0,0,0,0"))
            (rule "translateJavaAddInt" (formula "16") (term "0,0,0,0,1,0"))
            (rule "translateJavaAddInt" (formula "18") (term "0,1,1,0"))
            (rule "translateJavaSubInt" (formula "18") (term "0,0,0,0,0"))
            (rule "translateJavaSubInt" (formula "16") (term "0,0,0,0,0,1,0"))
            (rule "translateJavaSubInt" (formula "18") (term "0,0,1,1,0"))
            (rule "translateJavaAddInt" (formula "18") (term "0,0,0,0"))
            (rule "replace_known_left" (formula "22") (term "1,1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "2")))
            (rule "polySimp_elimSub" (formula "10") (term "0,1"))
            (rule "polySimp_elimSub" (formula "9") (term "1,0"))
            (rule "polySimp_elimSub" (formula "7") (term "0,0"))
            (rule "polySimp_homoEq" (formula "5"))
            (rule "polySimp_homoEq" (formula "13"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
            (rule "polySimp_elimSub" (formula "16") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "18") (term "0,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "18") (term "0,0,0,0,0"))
            (rule "polySimp_homoEq" (formula "10") (term "1"))
            (rule "polySimp_elimSub" (formula "5") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "14"))
            (rule "inEqSimp_ltToLeq" (formula "8"))
            (rule "inEqSimp_gtToGeq" (formula "6"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,1"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "22") (term "0"))
            (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "22") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "18") (term "1,1,1,0"))
            (rule "polySimp_addComm0" (formula "9") (term "1,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,1,1,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "7") (term "0"))
            (rule "polySimp_addComm0" (formula "10") (term "1,1,0,1"))
            (rule "polySimp_addComm1" (formula "8") (term "0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
            (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0"))
            (rule "polySimp_addComm0" (formula "7") (term "0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "0,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "18") (term "0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,1"))
            (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1"))
            (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,1,1,0"))
            (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,0,0,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,1,1,0"))
            (rule "add_literals" (formula "18") (term "1,1,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,0,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "18") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
            (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,1"))
            (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "10") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_25"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "eqSymm" (formula "10") (term "0,1"))
            (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "21") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_26"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "1") (term "0,1"))
            (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "polySimp_sepPosMonomial" (formula "15"))
            (rule "polySimp_mulComm0" (formula "15") (term "1"))
            (rule "polySimp_rightDist" (formula "15") (term "1"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
            (rule "polySimp_mulAssoc" (formula "15") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "15") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "15") (term "0,1"))
            (rule "polySimp_elimOne" (formula "15") (term "0,1"))
            (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "15"))
            (rule "polySimp_addAssoc" (formula "6") (term "0"))
            (rule "polySimp_addComm1" (formula "6") (term "0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0"))
            (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "15"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
            (rule "add_literals" (formula "16") (term "1,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
            (rule "add_literals" (formula "16") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0"))
            (rule "add_literals" (formula "16") (term "0,0"))
            (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "15"))
            (rule "polySimp_addAssoc" (formula "10") (term "1,0"))
            (rule "polySimp_pullOutFactor2" (formula "10") (term "0,1,0"))
            (rule "add_literals" (formula "10") (term "1,0,1,0"))
            (rule "times_zero_1" (formula "10") (term "0,1,0"))
            (rule "add_zero_left" (formula "10") (term "1,0"))
            (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "15"))
            (rule "applyEq" (formula "12") (term "0,1,0,1") (ifseqformula "15"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
            (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "12") (term "0,0,1"))
            (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "15"))
            (rule "polySimp_addAssoc" (formula "24") (term "1,0"))
            (rule "polySimp_pullOutFactor2" (formula "24") (term "0,1,0"))
            (rule "add_literals" (formula "24") (term "1,0,1,0"))
            (rule "times_zero_1" (formula "24") (term "0,1,0"))
            (rule "add_zero_left" (formula "24") (term "1,0"))
            (rule "applyEq" (formula "2") (term "0") (ifseqformula "15"))
            (rule "inEqSimp_homoInEq1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
            (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
            (rule "add_literals" (formula "2") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "2") (term "1,0,0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "15"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0"))
            (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
            (rule "add_literals" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,0,0"))
            (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "15"))
            (rule "polySimp_addAssoc" (formula "7") (term "0"))
            (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0"))
            (rule "add_literals" (formula "7") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0"))
            (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "15"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
            (rule "bsum_induction_upper_concrete" (formula "20") (term "1,1,0"))
            (rule "polySimp_homoEq" (formula "20") (term "1,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "20") (term "0,1,0,1,0"))
            (rule "polySimp_sepPosMonomial" (formula "6"))
            (rule "polySimp_mulComm0" (formula "6") (term "1"))
            (rule "polySimp_rightDist" (formula "6") (term "1"))
            (rule "mul_literals" (formula "6") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
            (rule "polySimp_elimOne" (formula "6") (term "1,1"))
            (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "6"))
            (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "6"))
            (rule "polySimp_addAssoc" (formula "7") (term "0"))
            (rule "add_literals" (formula "7") (term "0,0"))
            (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "6"))
            (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "6"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
            (rule "applyEq" (formula "9") (term "1,0,0") (ifseqformula "6"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,0"))
            (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "6"))
            (rule "polySimp_addAssoc" (formula "15") (term "1"))
            (rule "polySimp_addComm0" (formula "15") (term "0,1"))
            (rule "polySimp_sepNegMonomial" (formula "12") (term "1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
            (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "6"))
            (rule "polySimp_homoEq" (formula "12") (term "1"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
            (rule "mul_literals" (formula "12") (term "0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
            (rule "add_literals" (formula "12") (term "0,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "16"))
            (rule "polySimp_mulLiterals" (formula "16") (term "0"))
            (rule "polySimp_elimOne" (formula "16") (term "0"))
            (rule "polySimp_sepPosMonomial" (formula "20") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
            (rule "inEqSimp_homoInEq1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "8"))
            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
            (rule "applyEq" (formula "8") (term "0") (ifseqformula "6"))
            (rule "inEqSimp_homoInEq0" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0"))
            (rule "polySimp_addComm1" (formula "8") (term "0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0"))
            (rule "polySimp_sepNegMonomial" (formula "12") (term "1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
            (rule "polySimp_elimOne" (formula "12") (term "0,1"))
            (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "24") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_27"))
            (rule "eqSymm" (formula "1") (term "0,1"))
            (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
            (rule "mul_literals" (formula "8") (term "1"))
            (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "11") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_17"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "eqSymm" (formula "11") (term "0,1"))
            (rule "applyEqRigid" (formula "11") (term "1,0,1") (ifseqformula "12"))
            (rule "inEqSimp_sepNegMonomial0" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
            (rule "polySimp_elimOne" (formula "10") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "9"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
            (rule "polySimp_elimOne" (formula "9") (term "0"))
            (rule "inEqSimp_contradEq7" (formula "14") (term "1") (ifseqformula "3"))
            (rule "mul_literals" (formula "14") (term "1,0,0,1"))
            (rule "add_literals" (formula "14") (term "0,0,1"))
            (rule "leq_literals" (formula "14") (term "0,1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "notLeft" (formula "14"))
            (rule "apply_eq_boolean_rigid" (formula "13") (term "1,0,1") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
            (rule "leq_literals" (formula "8") (term "0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "newSym_eq" (formula "7") (inst "newSymDef=add(Z(neglit(1(#))), mul(mbyAtPre, Z(0(#))))") (inst "l=l_2"))
            (rule "times_zero_1" (formula "7") (term "1,1,1"))
            (rule "add_literals" (formula "7") (term "1,1"))
            (rule "polySimp_addComm0" (formula "7") (term "1"))
            (rule "applyEq" (formula "17") (term "0") (ifseqformula "7"))
            (rule "inEqSimp_homoInEq1" (formula "17"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,0"))
            (rule "mul_literals" (formula "17") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "0"))
            (rule "add_literals" (formula "17") (term "0,0"))
            (rule "applyEq" (formula "21") (term "0,1,1,0,0,1,0") (ifseqformula "7"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "21") (term "1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,1,0"))
            (rule "add_literals" (formula "21") (term "0,0,1,0,0,1,0"))
            (rule "applyEq" (formula "21") (term "0,1,1,0,0,0") (ifseqformula "7"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
            (rule "polySimp_addComm1" (formula "21") (term "1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,0"))
            (rule "add_literals" (formula "21") (term "0,0,1,0,0,0"))
            (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "7"))
            (rule "polySimp_homoEq" (formula "8"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "8") (term "0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0"))
            (rule "applyEq" (formula "19") (term "0,1,1,0,0,0,1,0") (ifseqformula "7"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "19") (term "1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,1,0"))
            (rule "applyEq" (formula "21") (term "0,1,0,0,0,1,1,0") (ifseqformula "7"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,0,0,1,1,0"))
            (rule "polySimp_sepPosMonomial" (formula "8"))
            (rule "polySimp_mulComm0" (formula "8") (term "1"))
            (rule "polySimp_rightDist" (formula "8") (term "1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
            (rule "mul_literals" (formula "8") (term "0,1"))
            (rule "applyEqRigid" (formula "11") (term "1,0,0") (ifseqformula "8"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0"))
            (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "8"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "0,0"))
            (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "8"))
            (rule "polySimp_addComm0" (formula "10") (term "1"))
            (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
            (rule "inEqSimp_homoInEq0" (formula "9"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0"))
            (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "8"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0,0"))
            (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "8"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1,0"))
            (rule "add_literals" (formula "1") (term "0,0,1,0"))
            (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "8"))
            (rule "polySimp_addComm1" (formula "16") (term "1"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
            (rule "add_literals" (formula "16") (term "0,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "17"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
            (rule "polySimp_elimOne" (formula "17") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9"))
            (rule "polySimp_mulComm0" (formula "9") (term "1"))
            (rule "polySimp_rightDist" (formula "9") (term "1"))
            (rule "mul_literals" (formula "9") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
            (rule "inEqSimp_subsumption6" (formula "3") (ifseqformula "17"))
            (rule "mul_literals" (formula "3") (term "1,1,0"))
            (rule "greater_literals" (formula "3") (term "0,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "leq_literals" (formula "3") (term "0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "selectOfAnonEQ" (formula "20") (term "1,1,1,0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "polySimp_homoEq" (formula "20") (term "1,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
            (rule "polySimp_sepPosMonomial" (formula "20") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "20") (term "0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,0"))
            (rule "polySimp_elimOne" (formula "20") (term "0,1,1,0"))
            (rule "elementOfInfiniteUnion" (formula "20") (term "0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "elementOfSingleton" (formula "20") (term "1,0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "selectOfAnonEQ" (formula "20") (term "1,1,0,1,0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "4")))
            (rule "elementOfInfiniteUnion" (formula "20") (term "0,1,1,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "elementOfSingleton" (formula "20") (term "1,0,0,1,1,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "selectOfAnonEQ" (formula "20") (term "1,0,0,1,1,0,0,1,0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "4")))
            (rule "elementOfInfiniteUnion" (formula "20") (term "0,1,0,0,1,1,0,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "elementOfSingleton" (formula "20") (term "1,0,0,1,0,0,1,1,0,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "selectOfAnonEQ" (formula "20") (term "0,0,0,1,0,0,1,0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "4")))
            (rule "elementOfInfiniteUnion" (formula "20") (term "0,0,0,0,1,0,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "elementOfSingleton" (formula "20") (term "1,0,0,0,0,0,1,0,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "selectOfAnonEQ" (formula "20") (term "1,2,0,1,0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "4")))
            (rule "elementOfInfiniteUnion" (formula "20") (term "0,1,2,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "elementOfSingleton" (formula "20") (term "1,0,0,1,2,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "selectOfAnonEQ" (formula "20") (term "0,0,1,0,0,0,0,1,0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "4")))
            (rule "elementOfInfiniteUnion" (formula "20") (term "0,0,0,1,0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "elementOfSingleton" (formula "20") (term "1,0,0,0,0,1,0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "castDel" (formula "20") (term "0,0,1,0,0,0,0,1,0"))
            (rule "castDel" (formula "20") (term "0,0,0,0,0,0,1,0"))
            (rule "castDel" (formula "20") (term "1,0,0,1,1,0,0,0,0,1,0"))
            (rule "instanceof_static_type" (formula "20") (term "0,1,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "13"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "notLeft" (formula "13"))
            (rule "replace_known_right" (formula "21") (term "0,0,1,0,0,1,0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "inEqSimp_gtToGeq" (formula "13"))
            (rule "times_zero_1" (formula "13") (term "1,0,0"))
            (rule "add_literals" (formula "13") (term "0,0"))
            (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "14") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_18"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "eqSymm" (formula "14") (term "0,1"))
            (rule "applyEqRigid" (formula "14") (term "1,0,1") (ifseqformula "15"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13"))
            (rule "mul_literals" (formula "13") (term "1"))
            (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "23"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "notLeft" (formula "23"))
            (rule "inEqSimp_gtToGeq" (formula "23"))
            (rule "times_zero_1" (formula "23") (term "1,0,0"))
            (rule "add_zero_right" (formula "23") (term "0,0"))
            (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "24") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_19"))
            (rule "eqSymm" (formula "24") (term "0,1"))
            (rule "applyEqRigid" (formula "24") (term "1,0,1") (ifseqformula "25"))
            (rule "inEqSimp_sepPosMonomial1" (formula "23"))
            (rule "mul_literals" (formula "23") (term "1"))
            (rule "selectOfAnonEQ" (formula "26") (term "0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "30")) (ifInst ""  (formula "4")))
            (rule "elementOfInfiniteUnion" (formula "26") (term "0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "elementOfSingleton" (formula "26") (term "1,0,0,0"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "27")))
            (rule "false_right" (formula "26"))
            (rule "selectOfAnonEQ" (formula "23") (term "0,0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "29")) (ifInst ""  (formula "4")))
            (rule "elementOfInfiniteUnion" (formula "23") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "elementOfSingleton" (formula "23") (term "1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "13")))
            (rule "true_left" (formula "23"))
            (rule "selectOfAnonEQ" (formula "23") (term "0,0,1,0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "replace_known_right" (formula "23") (term "0,0,1,0,0,0,1,0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "replace_known_left" (formula "23") (term "0,1,0,0,0,1,0") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "elementOfInfiniteUnion" (formula "23") (term "0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "elementOfSingleton" (formula "23") (term "1,0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "nnf_imp2or" (formula "22") (term "0"))
            (rule "methodBodyExpand" (formula "2") (term "1"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "nnf_notAnd" (formula "22") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,0"))
            (rule "nnf_notAnd" (formula "22") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_notLeq" (formula "22") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,1,0,0"))
            (rule "methodBodyExpand" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "methodBodyExpand" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "shift_paren_and" (formula "20") (term "0,0,1,0"))
            (rule "methodBodyExpand" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "commute_or" (formula "22") (term "0,0,1,0"))
            (rule "shift_paren_or" (formula "22") (term "0,0"))
            (rule "commute_or" (formula "22") (term "0,0,0"))
            (rule "commute_and" (formula "20") (term "0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "0,0,1,0"))
            (rule "commute_or" (formula "22") (term "1,0,0,1,0"))
            (rule "commute_or" (formula "22") (term "0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "1,0,0,1,0"))
            (rule "commute_or" (formula "22") (term "0,1,0,0,1,0"))
            (rule "methodBodyExpand" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "arrayLengthIsAShort" (formula "9") (term "0"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "arrayLengthNotNegative" (formula "9") (term "0"))
            (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "14"))
            (rule "leq_literals" (formula "9") (term "0"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "shift_paren_and" (formula "22") (term "0,0,1,0"))
            (rule "methodBodyExpand" (formula "23") (term "1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "returnUnfold" (formula "2") (term "1") (inst "#v0=x_2"))
            (rule "variableDeclarationAssign" (formula "2") (term "1"))
            (rule "variableDeclaration" (formula "2") (term "1") (newnames "x_67"))
            (rule "ifthenelse_to_or_left" (formula "22") (term "1,0"))
            (rule "polySimp_homoEq" (formula "22") (term "1,1,1,0"))
            (rule "polySimp_homoEq" (formula "22") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,1,1,1,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
            (rule "polySimp_sepPosMonomial" (formula "22") (term "1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,1,1,0"))
            (rule "polySimp_sepPosMonomial" (formula "22") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0,1,0"))
            (rule "nnf_notAnd" (formula "22") (term "0,0,1,0"))
            (rule "nnf_notAnd" (formula "22") (term "0,0,0,1,0"))
            (rule "nnf_notOr" (formula "22") (term "1,0,0,1,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "nnf_notOr" (formula "22") (term "1,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_notLeq" (formula "22") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,1,0,0,0,1,0"))
            (rule "nnf_notOr" (formula "22") (term "0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "22") (term "0,0,1,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "22") (term "0,0,1,0,0,0,0,0,1,0"))
            (rule "commute_or" (formula "22") (term "1,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "1,1,0"))
            (rule "commute_or_2" (formula "22") (term "1,1,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "0,1,1,0"))
            (rule "commute_or_2" (formula "22") (term "1,0,1,1,0"))
            (rule "shift_paren_or" (formula "22") (term "0,0,1,1,0"))
            (rule "commute_or" (formula "22") (term "0,0,0,1,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "0,0,0,1,0"))
            (rule "commute_or" (formula "22") (term "0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "1,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "commute_or" (formula "22") (term "0,1,0,0,0,1,0"))
            (rule "commute_and" (formula "22") (term "1,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,1,0"))
            (rule "commute_or" (formula "22") (term "1,0,0,0,0,1,0"))
            (rule "returnUnfold" (formula "1") (term "1") (inst "#v0=x_2"))
            (rule "variableDeclarationAssign" (formula "1") (term "1"))
            (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_68"))
            (rule "returnUnfold" (formula "12") (term "1") (inst "#v0=x_2"))
            (rule "variableDeclarationAssign" (formula "12") (term "1"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_69"))
            (rule "compound_equality_comparison_1" (formula "2") (term "1") (inst "#v0=x_68"))
            (rule "variableDeclarationAssign" (formula "2") (term "1"))
            (rule "variableDeclaration" (formula "2") (term "1") (newnames "x_70"))
            (rule "shift_paren_and" (formula "22") (term "0,0,0,1,0"))
            (rule "commute_or_2" (formula "22") (term "0,1,0"))
            (rule "commute_or" (formula "22") (term "0,0,1,0"))
            (rule "commute_and_2" (formula "22") (term "0,1,0,0,1,0"))
            (rule "commute_and" (formula "22") (term "0,0,1,0,0,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "0,0,1,0"))
            (rule "commute_or_2" (formula "22") (term "1,0,0,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "0,0,0,1,0"))
            (rule "commute_or_2" (formula "22") (term "1,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "0,1,0"))
            (rule "commute_or" (formula "22") (term "0,0,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "1,0,1,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "cnf_rightDist" (formula "22") (term "0,1,0,1,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "cnf_rightDist" (formula "22") (term "0,0,1,0"))
            (rule "commute_or_2" (formula "22") (term "1,0,0,1,0"))
            (rule "commute_or_2" (formula "22") (term "0,1,0,0,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "0,0,1,0,1,0"))
            (rule "shift_paren_or" (formula "22") (term "0,0,0,1,0,1,0"))
            (rule "commute_or" (formula "22") (term "0,0,0,0,1,0,1,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "cnf_rightDist" (formula "22") (term "0,0,0,1,0"))
            (rule "commute_or_2" (formula "22") (term "1,0,0,0,1,0"))
            (rule "commute_or_2" (formula "22") (term "0,1,0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,1,0"))
            (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0,1,0"))
            (rule "shift_paren_and" (formula "22") (term "0,1,0"))
            (rule "shift_paren_and" (formula "22") (term "0,0,1,0"))
            (rule "shift_paren_and" (formula "22") (term "0,0,0,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "0"))
            (rule "distr_forallAnd" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "commute_or" (formula "23") (term "0"))
            (rule "cnf_rightDist" (formula "22") (term "0"))
            (rule "distr_forallAnd" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "commute_or_2" (formula "23") (term "0"))
            (rule "commute_or_2" (formula "23") (term "0,0"))
            (rule "shift_paren_or" (formula "23") (term "0,0,0"))
            (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
            (rule "commute_or" (formula "23") (term "0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "cnf_rightDist" (formula "24") (term "0"))
            (rule "distr_forallAnd" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "commute_or_2" (formula "25") (term "0"))
            (rule "commute_or_2" (formula "25") (term "0,0"))
            (rule "shift_paren_or" (formula "25") (term "0,0,0"))
            (rule "commute_or" (formula "25") (term "0,0,0,0"))
            (rule "cnf_rightDist" (formula "22") (term "0"))
            (rule "distr_forallAnd" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "commute_or_2" (formula "23") (term "0"))
            (rule "commute_or_2" (formula "23") (term "0,0"))
            (rule "shift_paren_or" (formula "23") (term "0,0,0"))
            (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "24")))
            (rule "true_left" (formula "23"))
            (rule "cnf_rightDist" (formula "24") (term "0"))
            (rule "distr_forallAnd" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "commute_or_2" (formula "25") (term "0"))
            (rule "commute_or_2" (formula "25") (term "0,0"))
            (rule "shift_paren_or" (formula "24") (term "0"))
            (rule "shift_paren_or" (formula "25") (term "0,0,0"))
            (rule "shift_paren_or" (formula "24") (term "0,0"))
            (rule "commute_or_2" (formula "24") (term "0,0,0"))
            (rule "inEqSimp_or_tautInEq1" (formula "24") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,1,1,0,0,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1" (formula "24") (term "0,1,0,0,0,0"))
            (rule "add_literals" (formula "24") (term "1,0,1,0,0,0,0"))
            (rule "times_zero_1" (formula "24") (term "0,1,0,0,0,0"))
            (rule "leq_literals" (formula "24") (term "1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "true_left" (formula "24"))
            (rule "shift_paren_or" (formula "24") (term "0,0,0,0"))
            (rule "inEqSimp_or_tautInEq0" (formula "24") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0,0,0,0"))
            (rule "add_literals" (formula "24") (term "0,1,1,0,0,0,0,0"))
            (rule "add_zero_left" (formula "24") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1" (formula "24") (term "0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "24") (term "1,0,1,0,0,0,0,0"))
            (rule "times_zero_1" (formula "24") (term "0,1,0,0,0,0,0"))
            (rule "leq_literals" (formula "24") (term "1,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "true_left" (formula "24"))
            (rule "cnf_rightDist" (formula "22") (term "0"))
            (rule "distr_forallAnd" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "commute_or_2" (formula "23") (term "0"))
            (rule "commute_or_2" (formula "23") (term "0,0"))
            (rule "shift_paren_or" (formula "23") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "24")))
            (rule "true_left" (formula "23"))
            (rule "compound_equality_comparison_1" (formula "1") (term "1") (inst "#v0=x_69"))
            (rule "variableDeclarationAssign" (formula "1") (term "1"))
            (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_71"))
            (rule "ifthenelse_to_or_left" (formula "23") (term "1,0,0"))
            (rule "polySimp_homoEq" (formula "23") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "23") (term "1,0,1,1,1,0,0"))
            (rule "add_zero_right" (formula "23") (term "0,1,1,1,0,0"))
            (rule "polySimp_homoEq" (formula "23") (term "1,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "23") (term "1,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,1,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "23") (term "1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,0,0"))
            (rule "polySimp_mulAssoc" (formula "23") (term "0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "0,1,1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "0,1,1,0,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "23") (term "0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0,0,1,0,0"))
            (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,0,0"))
            (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,1,0,0"))
            (rule "mul_literals" (formula "23") (term "0,0,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,0"))
            (rule "commute_or_2" (formula "23") (term "0"))
            (rule "cnf_rightDist" (formula "22") (term "0"))
            (rule "distr_forallAnd" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "commute_or_2" (formula "23") (term "0"))
            (rule "commute_or" (formula "23") (term "0,0"))
            (rule "compound_equality_comparison_1" (formula "12") (term "1") (inst "#v0=x_70"))
            (rule "variableDeclarationAssign" (formula "12") (term "1"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_72"))
            (rule "boxToDiamond" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "notLeft" (formula "10"))
            (rule "assignmentModulo" (formula "2") (term "1"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "equal_literals" (formula "2") (term "0,0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "translateJavaMod" (formula "2") (term "0,0"))
            (rule "ifthenelse_to_or_left" (formula "24") (term "1,0,0"))
            (rule "polySimp_homoEq" (formula "24") (term "1,0,1,0,0"))
            (rule "polySimp_homoEq" (formula "24") (term "1,1,1,0,0"))
            (rule "times_zero_2" (formula "24") (term "1,0,1,1,1,0,0"))
            (rule "add_zero_right" (formula "24") (term "0,1,1,1,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1,0,1,0,0"))
            (rule "add_literals" (formula "24") (term "1,1,0,1,0,1,0,0"))
            (rule "times_zero_1" (formula "24") (term "1,0,1,0,1,0,0"))
            (rule "add_zero_right" (formula "24") (term "0,1,0,1,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "24") (term "1,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,1,0,0"))
            (rule "polySimp_invertEq" (formula "24") (term "1,0,1,0,0"))
            (rule "mul_literals" (formula "24") (term "1,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "0,1,0,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "24") (term "0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,0,0,1,0,0"))
            (rule "mul_literals" (formula "24") (term "0,0,1,0,0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,1,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,1,0,0"))
            (rule "mul_literals" (formula "24") (term "0,0,1,0,0,1,0,0"))
            (rule "ifElseUnfold" (formula "13") (term "1") (inst "#boolv=x_2"))
            (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_73"))
            (rule "boxToDiamond" (formula "25") (term "1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "notLeft" (formula "25"))
            (rule "commute_or_2" (formula "24") (term "0"))
            (rule "cnf_rightDist" (formula "23") (term "0"))
            (rule "distr_forallAnd" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "cnf_rightDist" (formula "21") (term "0"))
            (rule "distr_forallAnd" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "commute_or_2" (formula "24") (term "0"))
            (rule "commute_or_2" (formula "22") (term "0"))
            (rule "commute_or_2" (formula "22") (term "0,0"))
            (rule "shift_paren_or" (formula "25") (term "0"))
            (rule "commute_or_2" (formula "25") (term "0,0"))
            (rule "shift_paren_or" (formula "24") (term "0,0"))
            (rule "commute_or_2" (formula "24") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "shift_paren_or" (formula "22") (term "0,0,0"))
            (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "25") (term "0,0,0"))
            (rule "commute_or" (formula "25") (term "0,0,0,0"))
            (rule "inEqSimp_or_tautInEq1" (formula "25") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "25") (term "0,1,1,0,0,0,0"))
            (rule "add_literals" (formula "25") (term "0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,0,0,0,0"))
            (rule "add_literals" (formula "25") (term "1,0,1,0,0,0,0"))
            (rule "times_zero_1" (formula "25") (term "0,1,0,0,0,0"))
            (rule "leq_literals" (formula "25") (term "1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "true_left" (formula "25"))
            (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
            (rule "commute_or" (formula "22") (term "0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "cnf_rightDist" (formula "25") (term "0"))
            (rule "distr_forallAnd" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "commute_or_2" (formula "25") (term "0"))
            (rule "ifthenelse_to_or_left" (formula "23") (term "1,0,0"))
            (rule "polySimp_homoEq" (formula "23") (term "1,0,1,0,0"))
            (rule "polySimp_homoEq" (formula "23") (term "1,1,1,0,0"))
            (rule "times_zero_2" (formula "23") (term "1,0,1,1,1,0,0"))
            (rule "add_zero_right" (formula "23") (term "0,1,1,1,0,0"))
            (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "23") (term "1,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,1,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "23") (term "1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,0,0"))
            (rule "polySimp_mulAssoc" (formula "23") (term "0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "0,1,1,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "0,1,1,0,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "23") (term "0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0,0,1,0,0"))
            (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,0,0"))
            (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,0"))
            (rule "mul_literals" (formula "23") (term "0,0,1,0,0,1,0,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0,1,0,1,0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "31"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "replace_known_left" (formula "25") (term "1,0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "true_left" (formula "25"))
            (rule "replace_known_left" (formula "22") (term "1,1,1,0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "19")))
            (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "true_left" (formula "24"))
            (rule "replace_known_left" (formula "25") (term "0,1,1,0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "replace_known_left" (formula "23") (term "1,0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "assignmentModulo" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "equal_literals" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "translateJavaMod" (formula "1") (term "0,1,0"))
            (rule "commute_or_2" (formula "24") (term "0"))
            (rule "shift_paren_or" (formula "23") (term "0"))
            (rule "commute_or_2" (formula "23") (term "0,0"))
            (rule "commute_or_2" (formula "23") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "shift_paren_or" (formula "22") (term "0"))
            (rule "commute_or_2" (formula "22") (term "0,0"))
            (rule "assignmentModulo" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "equal_literals" (formula "11") (term "0,0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "translateJavaMod" (formula "11") (term "0,0"))
            (rule "equality_comparison_simple" (formula "2") (term "1"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "shift_paren_or" (formula "24") (term "0,0"))
            (rule "shift_paren_or" (formula "22") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "shift_paren_or" (formula "24") (term "0,0,0"))
            (rule "commute_or" (formula "24") (term "0,0,0,0"))
            (rule "inEqSimp_or_tautInEq1" (formula "24") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "24") (term "0,1,1,0,0,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1" (formula "24") (term "0,1,0,0,0,0"))
            (rule "add_literals" (formula "24") (term "1,0,1,0,0,0,0"))
            (rule "times_zero_1" (formula "24") (term "0,1,0,0,0,0"))
            (rule "leq_literals" (formula "24") (term "1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "true_left" (formula "24"))
            (rule "equality_comparison_simple" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "ifElseUnfold" (formula "26") (term "1") (inst "#boolv=x_2"))
            (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_74"))
            (rule "ifthenelse_to_or_left" (formula "22") (term "1,0"))
            (rule "polySimp_homoEq" (formula "22") (term "1,1,1,0"))
            (rule "times_zero_2" (formula "22") (term "1,0,1,1,1,0"))
            (rule "add_zero_right" (formula "22") (term "0,1,1,1,0"))
            (rule "polySimp_homoEq" (formula "22") (term "1,0,1,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
            (rule "polySimp_sepPosMonomial" (formula "22") (term "1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,1,0"))
            (rule "polySimp_sepPosMonomial" (formula "22") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,0"))
            (rule "polySimp_mulAssoc" (formula "22") (term "0,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0,1,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "0,1,1,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "22") (term "0,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "22") (term "0,0,1,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,1,0"))
            (rule "mul_literals" (formula "22") (term "0,0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,1,0"))
            (rule "cnf_rightDist" (formula "22") (term "0"))
            (rule "distr_forallAnd" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "commute_or_2" (formula "23") (term "0"))
            (rule "shift_paren_or" (formula "22") (term "0"))
            (rule "commute_or_2" (formula "22") (term "0,0"))
            (rule "commute_or_2" (formula "22") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "shift_paren_or" (formula "23") (term "0,0"))
            (rule "shift_paren_or" (formula "23") (term "0,0,0"))
            (rule "commute_or" (formula "23") (term "0,0,0,0"))
            (rule "inEqSimp_or_tautInEq1" (formula "23") (term "0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "1,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "23") (term "0,1,1,0,0,0,0"))
            (rule "add_literals" (formula "23") (term "0,0,1,1,0,0,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,0,0,0,0"))
            (rule "add_literals" (formula "23") (term "1,0,1,0,0,0,0"))
            (rule "times_zero_1" (formula "23") (term "0,1,0,0,0,0"))
            (rule "leq_literals" (formula "23") (term "1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "equality_comparison_simple" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "ifElseUnfold" (formula "25") (term "1") (inst "#boolv=x_2"))
            (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_75"))
            (rule "equality_comparison_simple" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "methodCallReturn" (formula "2") (term "1"))
            (rule "assignment" (formula "2") (term "1"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "equality_comparison_simple" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "polySimp_homoEq" (formula "26") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
            (rule "polySimp_sepNegMonomial" (formula "26") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,0"))
            (rule "elimGcdEq" (formula "26") (term "0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcdRightDiv=Z(1(#))"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "26") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "1,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "26") (term "0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "26") (term "0,0,1,0,0,1,0"))
            (rule "leq_literals" (formula "26") (term "0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "equal_literals" (formula "26") (term "0,1,0,0,1,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "qeq_literals" (formula "26") (term "0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "methodCallReturn" (formula "1") (term "1"))
            (rule "assignment" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "equality_comparison_simple" (formula "25") (term "1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "methodCallReturn" (formula "11") (term "1"))
            (rule "assignment" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "methodCallEmpty" (formula "2") (term "1"))
            (rule "methodCallEmpty" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "boxToDiamond" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "notLeft" (formula "13"))
            (rule "methodCallEmpty" (formula "11") (term "1"))
            (rule "emptyModality" (formula "2") (term "1"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "notLeft" (formula "2"))
            (rule "jmod_axiom" (formula "23") (term "0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
            (rule "polySimp_sepNegMonomial" (formula "23"))
            (rule "polySimp_mulLiterals" (formula "23") (term "0"))
            (rule "emptyModality" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "jmod_axiom" (formula "22") (term "0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
            (rule "polySimp_sepNegMonomial" (formula "22"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0"))
            (rule "elimGcdEq" (formula "22") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=jdiv(add(Z(neglit(2(#))), mul(l_2, Z(2(#)))), Z(2(#)))") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_2)"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
            (rule "add_literals" (formula "22") (term "1,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
            (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
            (rule "add_literals" (formula "22") (term "0,0,0,0,1"))
            (rule "add_zero_left" (formula "22") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor0" (formula "22") (term "0,0,1"))
            (rule "add_literals" (formula "22") (term "1,0,0,1"))
            (rule "times_zero_1" (formula "22") (term "0,0,1"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,0,1,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,1,0"))
            (rule "add_zero_left" (formula "22") (term "0,0,1,0"))
            (rule "polySimp_pullOutFactor0" (formula "22") (term "0,1,0"))
            (rule "add_literals" (formula "22") (term "1,0,1,0"))
            (rule "times_zero_1" (formula "22") (term "0,1,0"))
            (rule "qeq_literals" (formula "22") (term "1,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
            (rule "add_literals" (formula "22") (term "0,0,0,0"))
            (rule "add_zero_left" (formula "22") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0" (formula "22") (term "0,0"))
            (rule "add_literals" (formula "22") (term "1,0,0"))
            (rule "times_zero_1" (formula "22") (term "0,0"))
            (rule "leq_literals" (formula "22") (term "0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "emptyModality" (formula "9") (term "1"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "notLeft" (formula "9"))
            (rule "jmod_axiom" (formula "21") (term "0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
            (rule "polySimp_sepNegMonomial" (formula "21"))
            (rule "polySimp_mulLiterals" (formula "21") (term "0"))
            (rule "ifthenelse_split" (formula "25") (term "0,1,0"))
            (branch "self.a.length = 1 TRUE"
               (rule "replace_known_left" (formula "25") (term "0,0,1,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "8"))
               (rule "mul_literals" (formula "8") (term "1,0"))
               (rule "polySimp_addComm1" (formula "8") (term "0"))
               (rule "polySimp_addComm1" (formula "8") (term "0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0"))
               (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8"))
               (rule "polySimp_mulComm0" (formula "8") (term "1"))
               (rule "polySimp_rightDist" (formula "8") (term "1"))
               (rule "mul_literals" (formula "8") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "8"))
               (rule "polySimp_rightDist" (formula "7") (term "0,0"))
               (rule "mul_literals" (formula "7") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "inEqSimp_contradInEq5" (formula "7") (ifseqformula "14"))
               (rule "greater_literals" (formula "7") (term "0,0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "mul_literals" (formula "7") (term "1,0"))
               (rule "qeq_literals" (formula "7") (term "0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "closeFalse" (formula "7"))
            )
            (branch "self.a.length = 1 FALSE"
               (rule "replace_known_right" (formula "24") (term "0,0,1,0") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "25"))
               (rule "add_literals" (formula "9") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "25") (ifseqformula "9"))
               (rule "mul_literals" (formula "25") (term "1,0,0"))
               (rule "add_literals" (formula "25") (term "0,0"))
               (rule "leq_literals" (formula "25") (term "0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "false_right" (formula "25"))
               (rule "jdiv_axiom" (formula "23") (term "0,0"))
               (rule "eqSymm" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0,0,2,0"))
               (rule "mul_literals" (formula "1") (term "0,0,0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(left, Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,2,0"))
               (rule "equal_literals" (formula "1") (term "0,0,2,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,2,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0,2,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,2,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "2,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,2,0"))
               (rule "polySimp_rightDist" (formula "1") (term "2,0"))
               (rule "polySimp_mulAssoc" (formula "1") (term "0,2,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,2,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,2,0"))
               (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(l_2, Z(neglit(1(#))))"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
               (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1,2,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,1,2,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,1,2,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,1,2,0"))
               (rule "add_literals" (formula "1") (term "0,0,1,1,1,2,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
               (rule "polySimp_mulAssoc" (formula "1") (term "0,1,2,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,2,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,1,2,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,1,2,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,2,0"))
               (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=Z(1(#))"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
               (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0,1,2,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1,2,0"))
               (rule "add_literals" (formula "1") (term "0,0,1,1,1,2,0"))
               (rule "add_zero_left" (formula "1") (term "0,1,1,1,2,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
               (rule "mul_literals" (formula "1") (term "0,1,2,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,2,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,2,0"))
               (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=l_2"))
               (rule "equal_literals" (formula "1") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
               (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1,1,0"))
               (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
               (rule "polyDiv_pullOut" (formula "1") (term "1,1,0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,1,1,0"))
               (rule "equal_literals" (formula "1") (term "0,1,1,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1,0,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "1") (term "0,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,1,0"))
               (rule "ifElse" (formula "27") (term "1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "ifElse" (formula "26") (term "1"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "jdiv_axiom" (formula "23") (term "0"))
               (rule "eqSymm" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
               (rule "mul_literals" (formula "1") (term "0,0,0,2,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "15"))
               (rule "greater_literals" (formula "1") (term "0,0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0"))
               (rule "leq_literals" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "eqSymm" (formula "1"))
               (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
               (rule "polyDiv_pullOut" (formula "24") (term "0") (inst "polyDivCoeff=l_2"))
               (rule "equal_literals" (formula "24") (term "0,0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0"))
               (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
               (rule "add_literals" (formula "24") (term "0,0,0"))
               (rule "div_literals" (formula "24") (term "0,0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "closeTrue" (formula "24"))
            )
         )
      )
      (branch "Exceptional Post (upsweep)"
         (builtin "One Step Simplification" (formula "16"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "andLeft" (formula "16"))
         (rule "selectCreatedOfAnonEQ" (formula "17") (term "0,1,0") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "19"))
         (rule "notLeft" (formula "17"))
         (rule "close" (formula "20") (ifseqformula "19"))
      )
      (branch "Pre (upsweep)"
         (opengoal " ")
      )
   )
   (branch "Exceptional Post (div2)"
      (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "14"))
      (rule "notLeft" (formula "12"))
      (rule "close" (formula "15") (ifseqformula "14"))
   )
   (branch "Pre (div2)"
      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "2")))
      (rule "polySimp_homoEq" (formula "5"))
      (rule "polySimp_elimSub" (formula "10") (term "0,1"))
      (rule "polySimp_elimSub" (formula "7") (term "0,0"))
      (rule "polySimp_elimSub" (formula "9") (term "1,0"))
      (rule "polySimp_elimSub" (formula "5") (term "0,0,0"))
      (rule "polySimp_homoEq" (formula "10") (term "1"))
      (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "8"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
      (rule "inEqSimp_gtToGeq" (formula "6"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
      (rule "inEqSimp_gtToGeq" (formula "14") (term "0"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "14") (term "0,0,0"))
      (rule "polySimp_addComm0" (formula "9") (term "1,0"))
      (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "polySimp_addComm0" (formula "10") (term "1,1,0,1"))
      (rule "polySimp_addComm1" (formula "8") (term "0"))
      (rule "polySimp_addComm1" (formula "5") (term "0,0"))
      (rule "polySimp_addComm0" (formula "7") (term "0,0"))
      (rule "polySimp_addComm1" (formula "5") (term "0"))
      (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,1"))
      (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1"))
      (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
      (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1"))
      (rule "polySimp_sepPosMonomial" (formula "5"))
      (rule "polySimp_mulComm0" (formula "5") (term "1"))
      (rule "polySimp_rightDist" (formula "5") (term "1"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
      (rule "polySimp_rightDist" (formula "5") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1"))
      (rule "mul_literals" (formula "5") (term "0,0,1"))
      (rule "polySimp_elimOne" (formula "5") (term "1,0,1"))
      (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "5"))
      (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,1,0"))
      (rule "add_literals" (formula "14") (term "1,1,0,1,0"))
      (rule "times_zero_1" (formula "14") (term "1,0,1,0"))
      (rule "add_zero_right" (formula "14") (term "0,1,0"))
      (rule "applyEq" (formula "10") (term "0,1,0,1") (ifseqformula "5"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,1"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,1"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,0,1"))
      (rule "mul_literals" (formula "10") (term "0,0,1,0,1"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
      (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "10") (term "0,0,1"))
      (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "5"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
      (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
      (rule "add_literals" (formula "6") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
      (rule "add_literals" (formula "6") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "6") (term "1,0,0"))
      (rule "add_literals" (formula "6") (term "0,0"))
      (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "5"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0"))
      (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
      (rule "mul_literals" (formula "7") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
      (rule "add_literals" (formula "7") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,0,0"))
      (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "5"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
      (rule "inEqSimp_homoInEq1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
      (rule "mul_literals" (formula "1") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "5"))
      (rule "polySimp_addAssoc" (formula "9") (term "1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "9") (term "0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,1,0"))
      (rule "add_literals" (formula "9") (term "1,1,0,1,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,1,0"))
      (rule "applyEq" (formula "8") (term "1,0,0") (ifseqformula "5"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "8") (term "0,0,0"))
      (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "10") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_22"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "eqSymm" (formula "10") (term "0,1"))
      (rule "polySimp_sepNegMonomial" (formula "11") (term "1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,1"))
      (rule "polySimp_elimOne" (formula "11") (term "0,1"))
      (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "15") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_23"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "0,1"))
      (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "7"))
      (rule "mul_literals" (formula "7") (term "1"))
      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
      (rule "polySimp_elimOne" (formula "8") (term "0"))
      (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "14") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_24"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "0,1"))
      (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
      (rule "polySimp_elimOne" (formula "3") (term "0"))
      (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "11") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_15"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "eqSymm" (formula "11") (term "0,1"))
      (rule "applyEqRigid" (formula "11") (term "1,0,1") (ifseqformula "12"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
      (rule "polySimp_elimOne" (formula "10") (term "0"))
      (rule "inEqSimp_contradEq7" (formula "14") (term "1") (ifseqformula "3"))
      (rule "mul_literals" (formula "14") (term "1,0,0,1"))
      (rule "add_literals" (formula "14") (term "0,0,1"))
      (rule "leq_literals" (formula "14") (term "0,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "notLeft" (formula "14"))
      (rule "apply_eq_boolean_rigid" (formula "13") (term "1,0,1") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "3"))
      (rule "leq_literals" (formula "8") (term "0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "8"))
      (rule "mul_literals" (formula "3") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "mul_literals" (formula "3") (term "1"))
      (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "14"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "notLeft" (formula "14"))
      (rule "inEqSimp_gtToGeq" (formula "14"))
      (rule "times_zero_1" (formula "14") (term "1,0,0"))
      (rule "add_zero_right" (formula "14") (term "0,0"))
      (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "15") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_16"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "eqSymm" (formula "15") (term "0,1"))
      (rule "applyEqRigid" (formula "15") (term "1,0,1") (ifseqformula "16"))
      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
      (rule "mul_literals" (formula "14") (term "1"))
      (rule "methodBodyExpand" (formula "2") (term "1"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "methodBodyExpand" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "methodBodyExpand" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "methodBodyExpand" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "methodBodyExpand" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "returnUnfold" (formula "2") (term "1") (inst "#v0=x_2"))
      (rule "variableDeclarationAssign" (formula "2") (term "1"))
      (rule "variableDeclaration" (formula "2") (term "1") (newnames "x_57"))
      (rule "returnUnfold" (formula "1") (term "1") (inst "#v0=x_2"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_58"))
      (rule "returnUnfold" (formula "13") (term "1") (inst "#v0=x_2"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_59"))
      (rule "compound_equality_comparison_1" (formula "2") (term "1") (inst "#v0=x_58"))
      (rule "variableDeclarationAssign" (formula "2") (term "1"))
      (rule "variableDeclaration" (formula "2") (term "1") (newnames "x_60"))
      (rule "compound_equality_comparison_1" (formula "1") (term "1") (inst "#v0=x_59"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_61"))
      (rule "compound_equality_comparison_1" (formula "13") (term "1") (inst "#v0=x_60"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_62"))
      (rule "assignmentModulo" (formula "2") (term "1"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "equal_literals" (formula "2") (term "0,0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "translateJavaMod" (formula "2") (term "0,0"))
      (rule "assignmentModulo" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "equal_literals" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "translateJavaMod" (formula "1") (term "0,0"))
      (rule "assignmentModulo" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "equal_literals" (formula "13") (term "0,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "translateJavaMod" (formula "13") (term "0,0"))
      (rule "equality_comparison_simple" (formula "2") (term "1"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "equality_comparison_simple" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "equality_comparison_simple" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "methodCallReturn" (formula "2") (term "1"))
      (rule "assignment" (formula "2") (term "1"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "methodCallReturn" (formula "1") (term "1"))
      (rule "assignment" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "methodCallReturn" (formula "13") (term "1"))
      (rule "assignment" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "methodCallEmpty" (formula "2") (term "1"))
      (rule "methodCallEmpty" (formula "1") (term "1"))
      (rule "methodCallEmpty" (formula "13") (term "1"))
      (rule "emptyModality" (formula "2") (term "1"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "notLeft" (formula "2"))
      (rule "jmod_axiom" (formula "16") (term "0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
      (rule "polySimp_sepNegMonomial" (formula "16"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0"))
      (rule "emptyModality" (formula "1") (term "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "jmod_axiom" (formula "15") (term "0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
      (rule "polySimp_sepNegMonomial" (formula "15"))
      (rule "polySimp_mulLiterals" (formula "15") (term "0"))
      (rule "emptyModality" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "notLeft" (formula "11"))
      (rule "jmod_axiom" (formula "14") (term "0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
      (rule "polySimp_sepNegMonomial" (formula "14"))
      (rule "polySimp_mulLiterals" (formula "14") (term "0"))
      (rule "boxToDiamond" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "notLeft" (formula "9"))
      (rule "ifElseUnfold" (formula "11") (term "1") (inst "#boolv=x_2"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_63"))
      (rule "equality_comparison_simple" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "arrayLengthNotNegative" (formula "8") (term "0"))
      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "11"))
      (rule "leq_literals" (formula "8") (term "0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "jdiv_axiom" (formula "16") (term "0,0"))
      (rule "eqSymm" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
      (rule "mul_literals" (formula "1") (term "0,0,0,2,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "3"))
      (rule "leq_literals" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1"))
      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "1"))
      (rule "polyDiv_pullOut" (formula "17") (term "0,0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
      (rule "equal_literals" (formula "17") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "0"))
      (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "17") (term "1,0"))
      (rule "polySimp_rightDist" (formula "17") (term "0"))
      (rule "mul_literals" (formula "17") (term "0,0"))
      (rule "polySimp_homoEq" (formula "17"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "polySimp_addComm1" (formula "17") (term "0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0"))
      (rule "polySimp_sepNegMonomial" (formula "17"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1") (inst "polyDivCoeff=Z(neglit(1(#)))"))
      (rule "equal_literals" (formula "1") (term "0,1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
      (rule "mul_literals" (formula "1") (term "1,0,0,1"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
      (rule "add_literals" (formula "1") (term "0,0,0,1"))
      (rule "polySimp_addComm0" (formula "1") (term "1"))
      (rule "arrayLengthIsAShort" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "jdiv_axiom" (formula "16") (term "0,0"))
      (rule "eqSymm" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,0,0,2,0"))
      (rule "mul_literals" (formula "1") (term "0,0,0,0,2,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(mbyAtPre, Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "2,0"))
      (rule "polySimp_mulAssoc" (formula "1") (term "0,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=mul(left, Z(neglit(1(#))))"))
      (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,1,2,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,1,1,2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
      (rule "polySimp_mulAssoc" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,2,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,2,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0,2,1,0"))
      (rule "equal_literals" (formula "1") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
      (rule "polySimp_addComm0" (formula "1") (term "1,0"))
      (rule "jdiv_axiom" (formula "16") (term "0,0"))
      (rule "eqSymm" (formula "1"))
      (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "4"))
      (rule "leq_literals" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1"))
      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "1"))
      (rule "ifElseUnfold" (formula "16") (term "1") (inst "#boolv=x_2"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_64"))
      (rule "boxToDiamond" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "notLeft" (formula "14"))
      (rule "equality_comparison_simple" (formula "16") (term "1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "polySimp_homoEq" (formula "16") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,1,0"))
      (rule "polySimp_sepNegMonomial" (formula "16") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0"))
      (rule "inEqSimp_contradEq7" (formula "16") (term "0,0,1,0") (ifseqformula "5"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0,0,1,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,1,0"))
      (rule "leq_literals" (formula "16") (term "0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "div_axiom" (formula "19") (term "0,0") (inst "quotient=quotient_4"))
      (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
      (rule "qeq_literals" (formula "1") (term "0,1,1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "equal_literals" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
      (rule "add_literals" (formula "3") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "3") (term "1"))
      (rule "add_literals" (formula "3") (term "0,1"))
      (rule "add_zero_left" (formula "3") (term "1"))
      (rule "inEqSimp_commuteGeq" (formula "3"))
      (rule "inEqSimp_homoInEq0" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
      (rule "polySimp_addComm1" (formula "2") (term "0"))
      (rule "applyEqRigid" (formula "22") (term "0,0") (ifseqformula "1"))
      (rule "polySimp_homoEq" (formula "22"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
      (rule "polySimp_addComm1" (formula "22") (term "0"))
      (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "1"))
      (rule "polySimp_sepPosMonomial" (formula "22"))
      (rule "polySimp_mulComm0" (formula "22") (term "1"))
      (rule "polySimp_rightDist" (formula "22") (term "1"))
      (rule "mul_literals" (formula "22") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "mul_literals" (formula "2") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "22"))
      (rule "polySimp_addAssoc" (formula "2") (term "1"))
      (rule "add_literals" (formula "2") (term "0,1"))
      (rule "add_zero_left" (formula "2") (term "1"))
      (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "2"))
      (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
      (rule "polySimp_addComm0" (formula "22") (term "0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
      (rule "add_literals" (formula "22") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "22") (term "1,0,0"))
      (rule "add_literals" (formula "22") (term "0,0"))
      (rule "leq_literals" (formula "22") (term "0"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "false_right" (formula "22"))
      (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "3"))
      (rule "applyEq" (formula "6") (term "1,0,0,1,2,0") (ifseqformula "2"))
      (rule "polySimp_addComm1" (formula "6") (term "0,0,1,2,0"))
      (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
      (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
      (rule "applyEqRigid" (formula "1") (term "1,0,0") (ifseqformula "2"))
      (rule "applyEqRigid" (formula "15") (term "1,1") (ifseqformula "2"))
      (rule "polySimp_addComm0" (formula "15") (term "1"))
      (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq0" (formula "14"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
      (rule "polySimp_addComm1" (formula "14") (term "0"))
      (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq1" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
      (rule "polySimp_pullOutFactor0" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "1,0"))
      (rule "times_zero_1" (formula "3") (term "0"))
      (rule "leq_literals" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "2"))
      (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "2"))
      (rule "applyEqRigid" (formula "5") (term "1,0,1,1,0") (ifseqformula "2"))
      (rule "polySimp_addComm1" (formula "5") (term "0,1,1,0"))
      (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "2"))
      (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
      (rule "applyEqRigid" (formula "19") (term "1,0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
      (rule "inEqSimp_homoInEq0" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
      (rule "polySimp_pullOutFactor0" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "1,0"))
      (rule "times_zero_1" (formula "3") (term "0"))
      (rule "qeq_literals" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "2"))
      (rule "polySimp_addComm1" (formula "20") (term "1"))
      (rule "applyEqRigid" (formula "4") (term "1,0,2,0") (ifseqformula "2"))
      (rule "polySimp_addComm0" (formula "4") (term "0,2,0"))
      (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "2"))
      (rule "polySimp_addComm1" (formula "11") (term "1"))
      (rule "applyEq" (formula "4") (term "1,0,1") (ifseqformula "2"))
      (rule "polySimp_addComm1" (formula "4") (term "0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
      (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
      (rule "polySimp_mulComm0" (formula "12") (term "1"))
      (rule "polySimp_rightDist" (formula "12") (term "1"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
      (rule "mul_literals" (formula "12") (term "0,1"))
      (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=Z(2(#))"))
      (rule "leq_literals" (formula "7") (term "0,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
      (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
      (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
      (rule "add_literals" (formula "7") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "7") (term "1,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,0"))
      (rule "leq_literals" (formula "7") (term "0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "polyDiv_pullOut" (formula "4") (term "1,1,0") (inst "polyDivCoeff=quotient_4"))
      (rule "equal_literals" (formula "4") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "4") (term "0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0,1,1,0"))
      (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,1,0"))
      (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,1,0"))
      (rule "add_zero_right" (formula "4") (term "0,0,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "4") (term "1,1,0"))
      (rule "polySimp_addAssoc" (formula "4") (term "1,0"))
      (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=quotient_4"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
      (rule "equal_literals" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0"))
      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0,0"))
      (rule "div_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "polyDiv_pullOut" (formula "3") (term "0,1,2,0") (inst "polyDivCoeff=quotient_4"))
      (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "3") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,2,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1,2,0"))
      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0,1,1,2,0"))
      (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,1,2,0"))
      (rule "times_zero_1" (formula "3") (term "1,0,0,0,1,1,2,0"))
      (rule "add_literals" (formula "3") (term "0,0,0,1,1,2,0"))
      (rule "polySimp_addComm0" (formula "3") (term "1,1,2,0"))
      (rule "polySimp_rightDist" (formula "3") (term "1,2,0"))
      (rule "polySimp_mulComm0" (formula "3") (term "0,1,2,0"))
      (rule "polySimp_addAssoc" (formula "3") (term "2,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0,2,0"))
      (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0,2,0"))
      (rule "add_literals" (formula "3") (term "1,0,0,2,0"))
      (rule "polySimp_elimOne" (formula "3") (term "0,0,2,0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,0") (ifseqformula "7"))
      (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "div_axiom" (formula "2") (term "1") (inst "quotient=quotient_5"))
      (rule "qeq_literals" (formula "2") (term "0,1,1"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "equal_literals" (formula "2") (term "0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "mul_literals" (formula "2") (term "1,1,1"))
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "polySimp_addComm1" (formula "4") (term "1"))
      (rule "add_literals" (formula "4") (term "0,1"))
      (rule "inEqSimp_commuteLeq" (formula "3"))
      (rule "inEqSimp_homoInEq1" (formula "4"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
      (rule "polySimp_addComm1" (formula "4") (term "0"))
      (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "2"))
      (rule "eqSymm" (formula "22"))
      (rule "applyEq" (formula "5") (term "1") (ifseqformula "2"))
      (rule "inEqSimp_sepPosMonomial0" (formula "4"))
      (rule "polySimp_mulComm0" (formula "4") (term "1"))
      (rule "polySimp_rightDist" (formula "4") (term "1"))
      (rule "mul_literals" (formula "4") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
      (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "22"))
      (rule "inEqSimp_contradEq7" (formula "22") (ifseqformula "3"))
      (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
      (rule "add_literals" (formula "22") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "22") (term "1,0,0"))
      (rule "add_literals" (formula "22") (term "0,0"))
      (rule "leq_literals" (formula "22") (term "0"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "false_right" (formula "22"))
      (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "4"))
      (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
      (rule "applyEq" (formula "7") (term "1,0,0,1,2,0") (ifseqformula "3"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,2,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,1,2,0"))
      (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
      (rule "inEqSimp_homoInEq1" (formula "15"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0"))
      (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
      (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
      (rule "add_zero_left" (formula "7") (term "0,0,0,0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "3"))
      (rule "inEqSimp_homoInEq1" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "add_zero_left" (formula "9") (term "0"))
      (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
      (rule "inEqSimp_homoInEq1" (formula "4"))
      (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "1,0"))
      (rule "times_zero_1" (formula "4") (term "0"))
      (rule "leq_literals" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "3"))
      (rule "polySimp_addComm0" (formula "16") (term "1"))
      (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
      (rule "inEqSimp_homoInEq0" (formula "4"))
      (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
      (rule "add_literals" (formula "4") (term "1,0"))
      (rule "times_zero_1" (formula "4") (term "0"))
      (rule "qeq_literals" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
      (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "3"))
      (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
      (rule "add_zero_left" (formula "21") (term "0,0,0,0"))
      (rule "applyEq" (formula "5") (term "1,0,1,1,0") (ifseqformula "3"))
      (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,0"))
      (rule "add_literals" (formula "5") (term "0,0,1,1,0"))
      (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "3"))
      (rule "polySimp_addComm1" (formula "12") (term "1"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
      (rule "add_literals" (formula "12") (term "0,0,1"))
      (rule "add_zero_left" (formula "12") (term "0,1"))
      (rule "applyEq" (formula "5") (term "1,0,2,0") (ifseqformula "3"))
      (rule "polySimp_addComm0" (formula "5") (term "0,2,0"))
      (rule "applyEq" (formula "5") (term "1,0,1") (ifseqformula "3"))
      (rule "polySimp_addComm1" (formula "5") (term "0,1"))
      (rule "polySimp_addAssoc" (formula "5") (term "0,0,1"))
      (rule "add_literals" (formula "5") (term "0,0,0,1"))
      (rule "add_zero_left" (formula "5") (term "0,0,1"))
      (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "3"))
      (rule "polySimp_addComm1" (formula "21") (term "1"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
      (rule "add_literals" (formula "21") (term "0,0,1"))
      (rule "add_zero_left" (formula "21") (term "0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13"))
      (rule "polySimp_mulComm0" (formula "13") (term "1"))
      (rule "polySimp_rightDist" (formula "13") (term "1"))
      (rule "mul_literals" (formula "13") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
      (rule "inEqSimp_invertInEq0" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "times_zero_2" (formula "7") (term "1"))
      (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_5") (inst "elimGcdRightDiv=Z(0(#))"))
      (rule "leq_literals" (formula "7") (term "0,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
      (rule "add_literals" (formula "7") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "7") (term "1,0,0"))
      (rule "add_zero_right" (formula "7") (term "0,0"))
      (rule "leq_literals" (formula "7") (term "0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_5)"))
      (rule "leq_literals" (formula "13") (term "0,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
      (rule "neg_literal" (formula "13") (term "0,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0"))
      (rule "add_zero_right" (formula "13") (term "0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0"))
      (rule "add_zero_right" (formula "13") (term "0,0"))
      (rule "qeq_literals" (formula "13") (term "0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "elimGcdEq" (formula "21") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=jdiv(add(mul(quotient_5, Z(2(#))),
         mul(quotient_4, Z(2(#)))),
     Z(2(#)))") (inst "elimGcdRightDiv=add(quotient_5, quotient_4)"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "add_literals" (formula "21") (term "1,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,1,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
      (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0"))
      (rule "add_literals" (formula "21") (term "1,1,0,1,0"))
      (rule "times_zero_1" (formula "21") (term "1,0,1,0"))
      (rule "add_zero_right" (formula "21") (term "0,1,0"))
      (rule "polySimp_pullOutFactor0" (formula "21") (term "0,1,0"))
      (rule "add_literals" (formula "21") (term "1,0,1,0"))
      (rule "times_zero_1" (formula "21") (term "0,1,0"))
      (rule "qeq_literals" (formula "21") (term "1,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
      (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
      (rule "add_literals" (formula "21") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "21") (term "1,0,0"))
      (rule "add_zero_right" (formula "21") (term "0,0"))
      (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0"))
      (rule "add_literals" (formula "21") (term "1,0,0"))
      (rule "times_zero_1" (formula "21") (term "0,0"))
      (rule "leq_literals" (formula "21") (term "0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
      (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
      (rule "add_literals" (formula "21") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "21") (term "1,0,0"))
      (rule "add_zero_right" (formula "21") (term "0,0"))
      (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0"))
      (rule "add_literals" (formula "21") (term "1,0,0"))
      (rule "times_zero_1" (formula "21") (term "0,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "elimGcdGeq" (formula "5") (term "0,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_4") (inst "elimGcdRightDiv=mul(quotient_5, Z(neglit(1(#))))"))
      (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "5") (term "0,0,0,0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,0,0"))
      (rule "add_literals" (formula "5") (term "1,1,0,1,0,0,0"))
      (rule "times_zero_1" (formula "5") (term "1,0,1,0,0,0"))
      (rule "add_zero_right" (formula "5") (term "0,1,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0"))
      (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
      (rule "polySimp_mulAssoc" (formula "5") (term "0,0,1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,0,0,0"))
      (rule "polySimp_pullOutFactor0" (formula "5") (term "0,1,0,0,0"))
      (rule "add_literals" (formula "5") (term "1,0,1,0,0,0"))
      (rule "times_zero_1" (formula "5") (term "0,1,0,0,0"))
      (rule "leq_literals" (formula "5") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "polySimp_mulAssoc" (formula "5") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0"))
      (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
      (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
      (rule "add_literals" (formula "5") (term "0,0,0,0"))
      (rule "qeq_literals" (formula "5") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=quotient_5"))
      (rule "equal_literals" (formula "2") (term "0,0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
      (rule "polySimp_homoEq" (formula "2"))
      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,0"))
      (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,0"))
      (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
      (rule "div_literals" (formula "2") (term "0,0,1,0"))
      (rule "add_zero_left" (formula "2") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "1,0"))
      (rule "times_zero_1" (formula "2") (term "0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "polyDiv_pullOut" (formula "4") (term "1,1,0") (inst "polyDivCoeff=quotient_5"))
      (rule "equal_literals" (formula "4") (term "0,1,1,0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "4") (term "1,1,0,0,1,1,0"))
      (rule "times_zero_1" (formula "4") (term "1,0,0,1,1,0"))
      (rule "add_literals" (formula "4") (term "0,0,1,1,0"))
      (rule "div_literals" (formula "4") (term "0,1,1,0"))
      (rule "polySimp_addComm1" (formula "4") (term "1,0"))
      (rule "polySimp_addAssoc" (formula "4") (term "0,1,0"))
      (rule "add_literals" (formula "4") (term "0,0,1,0"))
      (rule "add_zero_left" (formula "4") (term "0,1,0"))
      (rule "polyDiv_pullOut" (formula "4") (term "0,1,2,0") (inst "polyDivCoeff=quotient_5"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0,1,2,0"))
      (rule "equal_literals" (formula "4") (term "0,0,1,2,0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0,1,2,0"))
      (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,2,0"))
      (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,2,0"))
      (rule "add_literals" (formula "4") (term "0,0,0,1,2,0"))
      (rule "div_literals" (formula "4") (term "0,0,1,2,0"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,2,0"))
      (rule "polySimp_rightDist" (formula "4") (term "1,2,0"))
      (rule "mul_literals" (formula "4") (term "0,1,2,0"))
      (rule "polySimp_addComm1" (formula "4") (term "2,0"))
      (rule "polySimp_addAssoc" (formula "4") (term "0,2,0"))
      (rule "polySimp_addComm1" (formula "4") (term "0,0,2,0"))
      (rule "add_literals" (formula "4") (term "0,0,0,2,0"))
      (rule "add_zero_left" (formula "4") (term "0,0,2,0"))
      (rule "polySimp_pullOutFactor0" (formula "4") (term "0,2,0"))
      (rule "add_literals" (formula "4") (term "1,0,2,0"))
      (rule "polySimp_elimOne" (formula "4") (term "0,2,0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "eqSymm" (formula "4"))
      (rule "close" (formula "20") (ifseqformula "4"))
   )
)
(branch "right >= 2 + left FALSE"
   (rule "inEqSimp_geqRight" (formula "15"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1"))
   (rule "polySimp_rightDist" (formula "1") (term "1"))
   (rule "mul_literals" (formula "1") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
   (rule "if" (formula "16") (term "1"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "eval_order_array_access3" (formula "16") (term "1") (inst "#v0=x_arr") (inst "#v2=x") (inst "#v1=x_1"))
   (rule "variableDeclarationAssign" (formula "16") (term "1"))
   (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_arr"))
   (rule "assignment" (formula "16") (term "1"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "variableDeclarationAssign" (formula "16") (term "1"))
   (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_2"))
   (rule "assignment" (formula "16") (term "1"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x_3"))
   (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_3"))
   (rule "compound_assignment_5_nonsimple" (formula "16") (term "1"))
   (rule "ifElseUnfold" (formula "16") (term "1") (inst "#boolv=x_4"))
   (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_4"))
   (rule "compound_less_equal_than_comparison_1" (formula "16") (term "1") (inst "#v0=x_5"))
   (rule "variableDeclarationAssign" (formula "16") (term "1"))
   (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_5"))
   (rule "assignment_read_length" (formula "16") (term "1"))
   (branch "Normal Execution (a != null)"
      (builtin "One Step Simplification" (formula "16"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "less_equal_than_comparison_simple" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "ifthenelse_split" (formula "17") (term "0,1,0"))
      (branch "self.a.length <= right TRUE"
         (rule "ifElse" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "assignment" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "ifSplit" (formula "18"))
         (branch "if x_3 true"
            (builtin "One Step Simplification" (formula "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "true_left" (formula "1"))
            (rule "blockThrow" (formula "18") (term "1"))
            (rule "arrayLengthIsAShort" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "arrayLengthNotNegative" (formula "1") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "throwUnfold" (formula "22") (term "1") (inst "#v0=a"))
            (rule "variableDeclarationAssign" (formula "22") (term "1"))
            (rule "variableDeclaration" (formula "22") (term "1") (newnames "a_3"))
            (builtin "One Step Simplification" (formula "11"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "translateJavaMulInt" (formula "12") (term "0,0,0"))
            (rule "translateJavaAddInt" (formula "10") (term "1"))
            (rule "translateJavaSubInt" (formula "15") (term "0,1"))
            (rule "translateJavaSubInt" (formula "14") (term "1,0"))
            (rule "translateJavaAddInt" (formula "12") (term "0"))
            (rule "translateJavaSubInt" (formula "10") (term "0,1"))
            (rule "translateJavaSubInt" (formula "12") (term "0,0"))
            (rule "polySimp_elimSub" (formula "15") (term "0,1"))
            (rule "polySimp_elimSub" (formula "14") (term "1,0"))
            (rule "polySimp_elimSub" (formula "10") (term "0,1"))
            (rule "polySimp_elimSub" (formula "12") (term "0,0"))
            (rule "polySimp_homoEq" (formula "15") (term "1"))
            (rule "polySimp_homoEq" (formula "10"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,1"))
            (rule "inEqSimp_gtToGeq" (formula "11"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
            (rule "polySimp_addComm0" (formula "14") (term "1,0"))
            (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "polySimp_addComm0" (formula "15") (term "1,1,0,1"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0"))
            (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,1"))
            (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1"))
            (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
            (rule "polySimp_sepPosMonomial" (formula "10"))
            (rule "polySimp_mulComm0" (formula "10") (term "1"))
            (rule "polySimp_rightDist" (formula "10") (term "1"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1"))
            (rule "polySimp_rightDist" (formula "10") (term "0,1"))
            (rule "mul_literals" (formula "10") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
            (rule "polySimp_elimOne" (formula "10") (term "1,0,1"))
            (rule "applyEq" (formula "3") (term "0") (ifseqformula "10"))
            (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "10"))
            (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0"))
            (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,1,0"))
            (rule "add_literals" (formula "14") (term "1,1,0,1,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "14") (term "0,1,0"))
            (rule "applyEq" (formula "6") (term "0") (ifseqformula "10"))
            (rule "inEqSimp_homoInEq0" (formula "6"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,0"))
            (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
            (rule "mul_literals" (formula "6") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
            (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "10"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
            (rule "mul_literals" (formula "12") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
            (rule "add_literals" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
            (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "10"))
            (rule "applyEq" (formula "15") (term "0,1,0,1") (ifseqformula "10"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "15") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "15") (term "0,1,0,1"))
            (rule "mul_literals" (formula "15") (term "0,0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1"))
            (rule "add_literals" (formula "15") (term "0,0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
            (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
            (rule "add_literals" (formula "15") (term "0,0,1"))
            (rule "applyEq" (formula "20") (term "0,1,0,0,0,0") (ifseqformula "10"))
            (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "10"))
            (rule "applyEq" (formula "5") (term "1") (ifseqformula "10"))
            (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "10"))
            (rule "polySimp_addAssoc" (formula "11") (term "0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0"))
            (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "10"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,0"))
            (rule "add_zero_left" (formula "13") (term "0,0,0"))
            (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "15") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "eqSymm" (formula "15") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "14") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "eqSymm" (formula "14") (term "0,1"))
            (rule "applyEqRigid" (formula "14") (term "1,0,1") (ifseqformula "15"))
            (rule "polySimp_sepNegMonomial" (formula "17") (term "1"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
            (rule "polySimp_elimOne" (formula "17") (term "0,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "polySimp_elimOne" (formula "6") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
            (rule "polySimp_elimOne" (formula "12") (term "0"))
            (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "19") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "1") (term "0,1"))
            (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
            (rule "mul_literals" (formula "12") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "14"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
            (rule "polySimp_elimOne" (formula "14") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "14"))
            (rule "andLeft" (formula "6"))
            (rule "inEqSimp_homoInEq1" (formula "6"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,0"))
            (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
            (rule "mul_literals" (formula "6") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0"))
            (rule "polySimp_addComm1" (formula "6") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
            (rule "add_literals" (formula "6") (term "1,1,0"))
            (rule "times_zero_1" (formula "6") (term "1,0"))
            (rule "add_zero_right" (formula "6") (term "0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0"))
            (rule "polySimp_addComm0" (formula "6") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
            (rule "add_literals" (formula "6") (term "1,1,0"))
            (rule "times_zero_1" (formula "6") (term "1,0"))
            (rule "add_zero_right" (formula "6") (term "0"))
            (rule "leq_literals" (formula "6"))
            (rule "closeFalse" (formula "6"))
         )
         (branch "if x_3 false"
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "self.a.length <= right FALSE"
         (rule "inEqSimp_leqRight" (formula "17"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "ifElse" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "less_than_comparison_simple" (formula "18") (term "1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "blockEmpty" (formula "18") (term "1"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,1,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,1,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,1,0"))
         (rule "ifthenelse_split" (formula "18") (term "0,1,0"))
         (branch "right <= -1 TRUE"
            (rule "if" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "blockThrow" (formula "19") (term "1"))
            (rule "arrayLengthIsAShort" (formula "2") (term "0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "arrayLengthNotNegative" (formula "2") (term "0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "5"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "throwUnfold" (formula "21") (term "1") (inst "#v0=a"))
            (rule "variableDeclarationAssign" (formula "21") (term "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "a_2"))
            (builtin "One Step Simplification" (formula "10"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "true_left" (formula "9"))
            (rule "translateJavaSubInt" (formula "14") (term "0,1"))
            (rule "translateJavaMulInt" (formula "11") (term "0,0,0"))
            (rule "translateJavaAddInt" (formula "9") (term "1"))
            (rule "translateJavaSubInt" (formula "13") (term "1,0"))
            (rule "translateJavaSubInt" (formula "11") (term "0,0"))
            (rule "translateJavaSubInt" (formula "9") (term "0,1"))
            (rule "translateJavaAddInt" (formula "11") (term "0"))
            (rule "polySimp_elimSub" (formula "14") (term "0,1"))
            (rule "polySimp_elimSub" (formula "13") (term "1,0"))
            (rule "polySimp_elimSub" (formula "9") (term "0,1"))
            (rule "polySimp_elimSub" (formula "11") (term "0,0"))
            (rule "polySimp_homoEq" (formula "14") (term "1"))
            (rule "polySimp_homoEq" (formula "9"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
            (rule "inEqSimp_gtToGeq" (formula "10"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "12"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
            (rule "polySimp_addComm0" (formula "13") (term "1,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0"))
            (rule "polySimp_addComm0" (formula "14") (term "1,1,0,1"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0,0"))
            (rule "polySimp_addComm1" (formula "9") (term "0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
            (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1"))
            (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
            (rule "polySimp_sepPosMonomial" (formula "9"))
            (rule "polySimp_mulComm0" (formula "9") (term "1"))
            (rule "polySimp_rightDist" (formula "9") (term "1"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1"))
            (rule "polySimp_rightDist" (formula "9") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
            (rule "mul_literals" (formula "9") (term "0,0,1"))
            (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
            (rule "applyEq" (formula "19") (term "0,1,0,0,0,0") (ifseqformula "9"))
            (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "9"))
            (rule "applyEq" (formula "5") (term "0") (ifseqformula "9"))
            (rule "inEqSimp_homoInEq0" (formula "5"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
            (rule "mul_literals" (formula "5") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
            (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
            (rule "add_literals" (formula "5") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
            (rule "add_literals" (formula "5") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "5") (term "1,0,0"))
            (rule "add_literals" (formula "5") (term "0,0"))
            (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "9"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
            (rule "mul_literals" (formula "11") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,0,0"))
            (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "9"))
            (rule "polySimp_addAssoc" (formula "10") (term "0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
            (rule "add_literals" (formula "10") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0"))
            (rule "add_literals" (formula "10") (term "0,0"))
            (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "9"))
            (rule "polySimp_addAssoc" (formula "4") (term "1"))
            (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
            (rule "add_literals" (formula "4") (term "0,0,1"))
            (rule "add_zero_left" (formula "4") (term "0,1"))
            (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "9"))
            (rule "applyEq" (formula "14") (term "0,1,0,1") (ifseqformula "9"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "14") (term "0,1,0,1"))
            (rule "mul_literals" (formula "14") (term "0,0,1,0,1"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1"))
            (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
            (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "14") (term "0,0,1"))
            (rule "applyEq" (formula "2") (term "0") (ifseqformula "9"))
            (rule "inEqSimp_homoInEq0" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
            (rule "mul_literals" (formula "2") (term "0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
            (rule "add_literals" (formula "2") (term "0,0,0"))
            (rule "add_zero_left" (formula "2") (term "0,0"))
            (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "9"))
            (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0"))
            (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,1,0"))
            (rule "add_literals" (formula "13") (term "1,1,0,1,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "13") (term "0,1,0"))
            (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "9"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,0"))
            (rule "add_zero_left" (formula "12") (term "0,0,0"))
            (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "14") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_2"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "eqSymm" (formula "14") (term "0,1"))
            (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "17") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "1") (term "0,1"))
            (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "polySimp_elimOne" (formula "6") (term "0"))
            (rule "polySimp_sepNegMonomial" (formula "16") (term "1"))
            (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
            (rule "polySimp_elimOne" (formula "16") (term "0,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
            (rule "polySimp_elimOne" (formula "12") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "mul_literals" (formula "11") (term "1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "14") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "eqSymm" (formula "14") (term "0,1"))
            (rule "applyEqRigid" (formula "14") (term "1,0,1") (ifseqformula "15"))
            (rule "inEqSimp_sepNegMonomial0" (formula "13"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0"))
            (rule "polySimp_elimOne" (formula "13") (term "0"))
            (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "6"))
            (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "applyEqRigid" (formula "1") (term "1,0,0") (ifseqformula "11"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "11"))
            (rule "polySimp_addComm0" (formula "5") (term "1"))
            (rule "applyEqRigid" (formula "21") (term "1,0,1,0") (ifseqformula "11"))
            (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
            (rule "add_literals" (formula "21") (term "0,0,1,0"))
            (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
            (rule "qeq_literals" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "applyEq" (formula "20") (term "1,0,1,0,0,0,0") (ifseqformula "11"))
            (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,1,0,0,0,0"))
            (rule "applyEqRigid" (formula "13") (term "1,0,0") (ifseqformula "11"))
            (rule "add_literals" (formula "13") (term "0,0"))
            (rule "applyEq" (formula "3") (term "0") (ifseqformula "11"))
            (rule "inEqSimp_commuteLeq" (formula "3"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
            (rule "polySimp_elimOne" (formula "3") (term "1,0"))
            (rule "applyEq" (formula "6") (term "0") (ifseqformula "11"))
            (rule "leq_literals" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "10"))
            (rule "inEqSimp_homoInEq0" (formula "11"))
            (rule "mul_literals" (formula "11") (term "1,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0"))
            (rule "add_literals" (formula "11") (term "0,0"))
            (rule "add_zero_left" (formula "11") (term "0"))
            (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "10"))
            (rule "polySimp_addComm1" (formula "9") (term "1"))
            (rule "add_literals" (formula "9") (term "0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "mul_literals" (formula "3") (term "1"))
            (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "3"))
            (rule "qeq_literals" (formula "11") (term "0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "closeFalse" (formula "11"))
         )
         (branch "right <= -1 FALSE"
            (rule "inEqSimp_leqRight" (formula "18"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "if" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_1"))
            (rule "compound_addition_2" (formula "20") (term "1") (inst "#v0=x_3") (inst "#v1=x_4"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_6"))
            (rule "assignment_array2" (formula "20") (term "1"))
            (branch "Normal Execution (a != null)"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
               (rule "orRight" (formula "20"))
               (rule "variableDeclarationAssign" (formula "22") (term "1"))
               (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_7"))
               (rule "assignment_array2" (formula "22") (term "1"))
               (branch "Normal Execution (a != null)"
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "19")))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "orRight" (formula "22"))
                  (rule "inEqSimp_leqRight" (formula "20"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_ltRight" (formula "21"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_ltRight" (formula "23"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "assignmentAdditionInt" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "assignment_to_primitive_array_component" (formula "21") (term "1"))
                  (branch "Normal Execution (x_arr != null)"
                     (builtin "One Step Simplification" (formula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")) (ifInst ""  (formula "15")) (ifInst ""  (formula "4")))
                     (rule "true_left" (formula "1"))
                     (rule "translateJavaAddInt" (formula "21") (term "3,0,1,0"))
                     (rule "methodCallEmpty" (formula "21") (term "1"))
                     (rule "tryEmpty" (formula "21") (term "1"))
                     (rule "emptyModality" (formula "21") (term "1"))
                     (rule "andRight" (formula "21"))
                     (branch "Case 1"
                        (rule "andRight" (formula "21"))
                        (branch "Case 1"
                           (rule "andRight" (formula "21"))
                           (branch "Case 1"
                              (builtin "One Step Simplification" (formula "10"))
                              (builtin "One Step Simplification" (formula "9"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "9"))
                              (rule "allRight" (formula "19") (inst "sk=k_1"))
                              (rule "orRight" (formula "19"))
                              (rule "orRight" (formula "19"))
                              (rule "orRight" (formula "20"))
                              (rule "translateJavaSubInt" (formula "9") (term "0,1"))
                              (rule "translateJavaMulInt" (formula "11") (term "0,0,0"))
                              (rule "translateJavaSubInt" (formula "13") (term "1,0"))
                              (rule "translateJavaSubInt" (formula "14") (term "0,1"))
                              (rule "eqSymm" (formula "9"))
                              (rule "translateJavaAddInt" (formula "11") (term "0"))
                              (rule "translateJavaAddInt" (formula "9") (term "0"))
                              (rule "translateJavaSubInt" (formula "11") (term "0,0"))
                              (rule "polySimp_homoEq" (formula "22"))
                              (rule "polySimp_elimSub" (formula "13") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "14") (term "0,1"))
                              (rule "polySimp_elimSub" (formula "9") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "11") (term "0,0"))
                              (rule "polySimp_homoEq" (formula "14") (term "1"))
                              (rule "polySimp_homoEq" (formula "9"))
                              (rule "inEqSimp_leqRight" (formula "19"))
                              (rule "inEqSimp_geqRight" (formula "20"))
                              (rule "inEqSimp_ltToLeq" (formula "14"))
                              (rule "inEqSimp_gtToGeq" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "polySimp_addComm0" (formula "16") (term "1,1,0,1"))
                              (rule "polySimp_addComm1" (formula "11") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                              (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "11") (term "0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
                              (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "16") (term "0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "11") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                              (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "16") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_14"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "eqSymm" (formula "16") (term "0,1"))
                              (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "19") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_15"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1") (term "0,1"))
                              (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "23") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_16"))
                              (rule "eqSymm" (formula "1") (term "0,1"))
                              (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1"))
                              (rule "polySimp_rightDist" (formula "14") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                              (rule "mul_literals" (formula "14") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                              (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "17") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_10"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "eqSymm" (formula "17") (term "0,1"))
                              (rule "applyEqRigid" (formula "17") (term "1,0,1") (ifseqformula "18"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                              (rule "polySimp_elimOne" (formula "16") (term "0"))
                              (rule "polySimp_sepNegMonomial" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0"))
                              (rule "polySimp_sepNegMonomial" (formula "19") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                              (rule "polySimp_sepNegMonomial" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0"))
                              (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "13"))
                              (rule "polySimp_addAssoc" (formula "8") (term "1"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                              (rule "add_literals" (formula "8") (term "0,0,1"))
                              (rule "add_zero_left" (formula "8") (term "0,1"))
                              (rule "applyEq" (formula "1") (term "0,2,0,0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "13"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                              (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                              (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "13"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0,0"))
                              (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "13"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq1" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "13"))
                              (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "13"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "16") (term "0,0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq0" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "13"))
                              (rule "polySimp_homoEq" (formula "19") (term "1"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1"))
                              (rule "mul_literals" (formula "19") (term "0,0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                              (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "19") (term "0,0,1"))
                              (rule "applyEq" (formula "1") (term "0,2,1,3,0,0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "13"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,1,0"))
                              (rule "mul_literals" (formula "15") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,0,0"))
                              (rule "applyEq" (formula "25") (term "0,1,0,0,0,1,1") (ifseqformula "13"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,1"))
                              (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0,1,1"))
                              (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,1,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,1,1"))
                              (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,1,1"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,0,1,1"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,1,1"))
                              (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,1,1"))
                              (rule "applyEq" (formula "25") (term "0,2,0,0,1") (ifseqformula "13"))
                              (rule "applyEq" (formula "25") (term "0,2,1,3,0,0,1") (ifseqformula "13"))
                              (rule "applyEq" (formula "25") (term "0,2,1,3,0,1,0,1") (ifseqformula "13"))
                              (rule "applyEq" (formula "25") (term "0,2,0,1,0,1") (ifseqformula "13"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                              (rule "mul_literals" (formula "4") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1"))
                              (rule "mul_literals" (formula "7") (term "0,1"))
                              (rule "polySimp_sepNegMonomial" (formula "19") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,1"))
                              (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1,1"))
                              (rule "replace_known_left" (formula "25") (term "0,0,1,1") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "polySimp_addComm0" (formula "25") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "9"))
                              (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "add_literals" (formula "7") (term "0,0"))
                              (rule "applyEqRigid" (formula "25") (term "0,1,0,0") (ifseqformula "14"))
                              (rule "mul_literals" (formula "25") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0"))
                              (rule "add_zero_left" (formula "25") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "1,0,2,0,0,0") (ifseqformula "14"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,2,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,2,0,0,0"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq0" (formula "16"))
                              (rule "mul_literals" (formula "16") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "add_literals" (formula "16") (term "0,0"))
                              (rule "add_zero_left" (formula "16") (term "0"))
                              (rule "applyEq" (formula "1") (term "1,0,2,1,3,0,0,0") (ifseqformula "14"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,2,1,3,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,2,1,3,0,0,0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0"))
                              (rule "add_zero_left" (formula "4") (term "0,0"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "14"))
                              (rule "leq_literals" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "applyEqRigid" (formula "2") (term "1,0,0") (ifseqformula "13"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                              (rule "qeq_literals" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "applyEqRigid" (formula "8") (term "1,1") (ifseqformula "13"))
                              (rule "polySimp_addComm0" (formula "8") (term "1"))
                              (rule "applyEqRigid" (formula "14") (term "1,0,0") (ifseqformula "13"))
                              (rule "add_literals" (formula "14") (term "0,0"))
                              (rule "applyEqRigid" (formula "22") (term "1,0,2,0,1,1") (ifseqformula "13"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,2,0,1,1"))
                              (rule "add_literals" (formula "22") (term "0,0,2,0,1,1"))
                              (rule "applyEq" (formula "22") (term "1,0,2,0,1,1,1") (ifseqformula "13"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,2,0,1,1,1"))
                              (rule "add_literals" (formula "22") (term "0,0,2,0,1,1,1"))
                              (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "13"))
                              (rule "polySimp_addComm1" (formula "12") (term "1"))
                              (rule "add_literals" (formula "12") (term "0,1"))
                              (rule "applyEq" (formula "22") (term "1,0,2,1,3,0,1,1") (ifseqformula "13"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,2,1,3,0,1,1"))
                              (rule "add_literals" (formula "22") (term "0,0,2,1,3,0,1,1"))
                              (rule "applyEqRigid" (formula "22") (term "1,0,2,1,3,0,1,1,1") (ifseqformula "13"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,2,1,3,0,1,1,1"))
                              (rule "add_literals" (formula "22") (term "0,0,2,1,3,0,1,1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                              (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                              (rule "add_literals" (formula "6") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                              (rule "add_literals" (formula "6") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "6") (term "1,0,0"))
                              (rule "add_zero_right" (formula "6") (term "0,0"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "5"))
                              (rule "leq_literals" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "5") (term "0,0"))
                              (rule "add_zero_left" (formula "5") (term "0"))
                              (rule "selectOfStore" (formula "21") (term "1,1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "castDel" (formula "21") (term "1,1,1"))
                              (rule "eqSymm" (formula "21") (term "0,0,1,1"))
                              (rule "polySimp_homoEq" (formula "21") (term "1,0,1,1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,1,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,1,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,1,0,1,1"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,1,1"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0,1,1"))
                              (rule "polySimp_sepNegMonomial" (formula "21") (term "1,0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,1,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "0,1,0,1,1"))
                              (rule "selectOfStore" (formula "21") (term "1,2,1,1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "selectOfStore" (formula "21") (term "0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "16"))
                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "19")))
                              (rule "andLeft" (formula "16"))
                              (rule "inEqSimp_gtToGeq" (formula "16"))
                              (rule "mul_literals" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "17") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_11"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "eqSymm" (formula "17") (term "0,1"))
                              (rule "applyEqRigid" (formula "17") (term "1,0,1") (ifseqformula "18"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "mul_literals" (formula "16") (term "1"))
                              (rule "methodBodyExpand" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "methodBodyExpand" (formula "2") (term "1"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "methodBodyExpand" (formula "1") (term "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "methodBodyExpand" (formula "13") (term "1"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "17"))
                              (rule "leq_literals" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "methodBodyExpand" (formula "17") (term "1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "returnUnfold" (formula "15") (term "1") (inst "#v0=x_2"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_45"))
                              (rule "returnUnfold" (formula "2") (term "1") (inst "#v0=x_2"))
                              (rule "variableDeclarationAssign" (formula "2") (term "1"))
                              (rule "variableDeclaration" (formula "2") (term "1") (newnames "x_46"))
                              (rule "returnUnfold" (formula "1") (term "1") (inst "#v0=x_2"))
                              (rule "variableDeclarationAssign" (formula "1") (term "1"))
                              (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_47"))
                              (rule "compound_equality_comparison_1" (formula "15") (term "1") (inst "#v0=x_46"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_48"))
                              (rule "compound_equality_comparison_1" (formula "2") (term "1") (inst "#v0=x_47"))
                              (rule "variableDeclarationAssign" (formula "2") (term "1"))
                              (rule "variableDeclaration" (formula "2") (term "1") (newnames "x_49"))
                              (rule "compound_equality_comparison_1" (formula "1") (term "1") (inst "#v0=x_48"))
                              (rule "variableDeclarationAssign" (formula "1") (term "1"))
                              (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_50"))
                              (rule "assignmentModulo" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "equal_literals" (formula "15") (term "0,0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaMod" (formula "15") (term "0,0"))
                              (rule "assignmentModulo" (formula "2") (term "1"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "equal_literals" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "translateJavaMod" (formula "2") (term "0,0"))
                              (rule "assignmentModulo" (formula "1") (term "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "equal_literals" (formula "1") (term "0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "translateJavaMod" (formula "1") (term "0,1,0"))
                              (rule "equality_comparison_simple" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "equality_comparison_simple" (formula "2") (term "1"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "equality_comparison_simple" (formula "1") (term "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "methodCallReturn" (formula "15") (term "1"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "methodCallReturn" (formula "2") (term "1"))
                              (rule "assignment" (formula "2") (term "1"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "methodCallReturn" (formula "1") (term "1"))
                              (rule "assignment" (formula "1") (term "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "methodCallEmpty" (formula "15") (term "1"))
                              (rule "methodCallEmpty" (formula "2") (term "1"))
                              (rule "methodCallEmpty" (formula "1") (term "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "emptyModality" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "jmod_axiom" (formula "15") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "15") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                              (rule "emptyModality" (formula "2") (term "1"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "notLeft" (formula "2"))
                              (rule "jmod_axiom" (formula "18") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "18"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                              (rule "emptyModality" (formula "1") (term "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "jmod_axiom" (formula "17") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                              (rule "ifthenelse_split" (formula "23") (term "1,1"))
                              (branch "left = -1 + k_1 TRUE"
                                 (rule "polySimp_addAssoc" (formula "24") (term "1"))
                                 (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "1"))
                                 (rule "add_literals" (formula "6") (term "0,1"))
                                 (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,0"))
                                 (rule "times_zero_1" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "13") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "13") (term "0,0"))
                                 (rule "applyEq" (formula "18") (term "1,0,0,0") (ifseqformula "1"))
                                 (rule "polySimp_homoEq" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "qeq_literals" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0"))
                                 (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "12") (term "0,0"))
                                 (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "1"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "1"))
                                 (rule "add_literals" (formula "8") (term "0,1"))
                                 (rule "add_zero_left" (formula "8") (term "1"))
                                 (rule "applyEq" (formula "22") (term "1,0,2,1,1") (ifseqformula "1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,2,1,0,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,2,1,0,1"))
                                 (rule "add_zero_left" (formula "22") (term "0,2,1,0,1"))
                                 (rule "polySimp_pullOutFactor2" (formula "22") (term "0,1"))
                                 (rule "add_literals" (formula "22") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "22") (term "0,1"))
                                 (rule "add_zero_left" (formula "22") (term "1"))
                                 (rule "applyEq" (formula "22") (term "0,2,1") (ifseqformula "1"))
                                 (rule "bsum_one_summand_concrete2" (formula "22") (term "0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "closeTrue" (formula "22"))
                              )
                              (branch "left = -1 + k_1 FALSE"
                                 (rule "polySimp_pullOutFactor2" (formula "24") (term "1"))
                                 (rule "add_literals" (formula "24") (term "1,1"))
                                 (rule "times_zero_1" (formula "24") (term "1"))
                                 (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "23"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                 (rule "add_literals" (formula "1") (term "0,1"))
                                 (rule "add_zero_left" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0"))
                                 (rule "leq_literals" (formula "23") (term "0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "false_right" (formula "23"))
                                 (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,0"))
                                 (rule "times_zero_1" (formula "3") (term "0"))
                                 (rule "qeq_literals" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
                                 (rule "bsum_lower_equals_upper" (formula "23") (term "0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "closeTrue" (formula "23"))
                              )
                           )
                           (branch "Case 2"
                              (builtin "One Step Simplification" (formula "21"))
                              (builtin "Use Dependency Contract" (formula "21") (ifInst ""  (formula "17")) (contract "PrefixSumRec[java.lang.Object::<inv>()].JML accessible clause.0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "wellFormedStorePrimitiveArray" (formula "17") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "19")) (ifInst ""  (formula "7")) (ifInst ""  (formula "16")) (ifInst ""  (formula "21")) (ifInst ""  (formula "16")))
                              (rule "true_left" (formula "9"))
                              (rule "notLeft" (formula "16"))
                              (rule "translateJavaSubInt" (formula "9") (term "0,1"))
                              (rule "translateJavaMulInt" (formula "11") (term "0,0,0"))
                              (rule "translateJavaSubInt" (formula "13") (term "1,0"))
                              (rule "translateJavaSubInt" (formula "14") (term "0,1"))
                              (rule "eqSymm" (formula "9"))
                              (rule "translateJavaSubInt" (formula "11") (term "0,0"))
                              (rule "translateJavaAddInt" (formula "9") (term "0"))
                              (rule "translateJavaAddInt" (formula "11") (term "0"))
                              (rule "polySimp_elimSub" (formula "13") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "14") (term "0,1"))
                              (rule "polySimp_elimSub" (formula "9") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "11") (term "0,0"))
                              (rule "polySimp_homoEq" (formula "14") (term "1"))
                              (rule "polySimp_homoEq" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "10"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0"))
                              (rule "polySimp_addComm0" (formula "14") (term "1,1,0,1"))
                              (rule "polySimp_addComm1" (formula "9") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                              (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
                              (rule "mul_literals" (formula "9") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                              (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "17") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_20"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "1") (term "0,1"))
                              (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "15") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_21"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "eqSymm" (formula "15") (term "0,1"))
                              (rule "disjointToElementOf" (formula "18") (inst "fv=fv") (inst "ov=ov"))
                              (rule "allRight" (formula "18") (inst "sk=ov_0"))
                              (rule "allRight" (formula "18") (inst "sk=fv_0"))
                              (rule "orRight" (formula "18"))
                              (rule "notRight" (formula "19"))
                              (rule "notRight" (formula "19"))
                              (rule "polySimp_sepNegMonomial" (formula "18") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                              (rule "polySimp_sepNegMonomial" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "applyEq" (formula "23") (term "0,2,1,3,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "12"))
                              (rule "polySimp_addAssoc" (formula "16") (term "1,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0,1,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "16") (term "0,1,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,1,0"))
                              (rule "add_literals" (formula "16") (term "0,1,0"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "12"))
                              (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "12"))
                              (rule "polySimp_homoEq" (formula "18") (term "1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "0,1,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "18") (term "0,0,1"))
                              (rule "applyEq" (formula "1") (term "0,1,2") (ifseqformula "12"))
                              (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "12"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0"))
                              (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "12"))
                              (rule "polySimp_addAssoc" (formula "7") (term "1"))
                              (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                              (rule "add_literals" (formula "7") (term "0,0,1"))
                              (rule "add_zero_left" (formula "7") (term "0,1"))
                              (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "12"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
                              (rule "applyEq" (formula "23") (term "0,2,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq0" (formula "8"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                              (rule "mul_literals" (formula "8") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0"))
                              (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "12"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "15") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "2"))
                              (rule "andLeft" (formula "2"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                              (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "3"))
                              (rule "polySimp_sepNegMonomial" (formula "19") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                              (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "17") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_14"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "eqSymm" (formula "17") (term "0,1"))
                              (rule "applyEqRigid" (formula "17") (term "1,0,1") (ifseqformula "18"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1"))
                              (rule "mul_literals" (formula "7") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                              (rule "mul_literals" (formula "14") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                              (rule "polySimp_elimOne" (formula "16") (term "0"))
                              (rule "elementOfSingleton" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (builtin "One Step Simplification" (formula "10"))
                           (builtin "One Step Simplification" (formula "9"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "closeTrue" (formula "20"))
                        )
                     )
                     (branch "Case 2"
                        (builtin "One Step Simplification" (formula "10"))
                        (builtin "One Step Simplification" (formula "9"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "9"))
                        (rule "allRight" (formula "19") (inst "sk=f_1"))
                        (rule "allRight" (formula "19") (inst "sk=o_1"))
                        (rule "orRight" (formula "19"))
                        (rule "orRight" (formula "19"))
                        (rule "translateJavaSubInt" (formula "9") (term "0,1"))
                        (rule "translateJavaMulInt" (formula "11") (term "0,0,0"))
                        (rule "translateJavaSubInt" (formula "13") (term "1,0"))
                        (rule "translateJavaSubInt" (formula "14") (term "0,1"))
                        (rule "eqSymm" (formula "21"))
                        (rule "eqSymm" (formula "19") (term "1,1,0"))
                        (rule "translateJavaAddInt" (formula "9") (term "1"))
                        (rule "translateJavaAddInt" (formula "11") (term "0"))
                        (rule "translateJavaSubInt" (formula "11") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "13") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "14") (term "0,1"))
                        (rule "polySimp_elimSub" (formula "9") (term "0,1"))
                        (rule "polySimp_elimSub" (formula "11") (term "0,0"))
                        (rule "polySimp_homoEq" (formula "14") (term "1"))
                        (rule "polySimp_homoEq" (formula "9"))
                        (rule "inEqSimp_gtToGeq" (formula "10"))
                        (rule "inEqSimp_ltToLeq" (formula "12"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                        (rule "polySimp_addComm0" (formula "13") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,1,0,1"))
                        (rule "polySimp_addComm1" (formula "12") (term "0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                        (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                        (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                        (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "16") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_17"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1") (term "0,1"))
                        (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "15") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_18"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "eqSymm" (formula "15") (term "0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "10"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                        (rule "mul_literals" (formula "10") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,0,1"))
                        (rule "applyEq" (formula "21") (term "0,1,1,0,0,0") (ifseqformula "10"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "0,1,1,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,0,1,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0,0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,0,0"))
                        (rule "add_literals" (formula "21") (term "1,1,0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,0,1,0,0,0"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq0" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "23") (term "0,2,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "10"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0"))
                        (rule "add_literals" (formula "11") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0"))
                        (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "10"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                        (rule "mul_literals" (formula "12") (term "0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                        (rule "add_literals" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,0,0"))
                        (rule "applyEq" (formula "23") (term "0,2,1,3,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "16") (term "0,1,0,1") (ifseqformula "10"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "0,1,0,1"))
                        (rule "mul_literals" (formula "16") (term "0,0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                        (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "16") (term "0,0,1"))
                        (rule "applyEq" (formula "21") (term "1,0,1,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "10"))
                        (rule "polySimp_addAssoc" (formula "5") (term "1"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                        (rule "add_literals" (formula "5") (term "0,0,1"))
                        (rule "add_zero_left" (formula "5") (term "0,1"))
                        (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "10"))
                        (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,1,0"))
                        (rule "add_literals" (formula "14") (term "1,1,0,1,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,1,0"))
                        (rule "add_zero_right" (formula "14") (term "0,1,0"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "10"))
                        (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "10"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                        (rule "polySimp_sepNegMonomial" (formula "16") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "14") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_12"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "eqSymm" (formula "14") (term "0,1"))
                        (rule "applyEqRigid" (formula "14") (term "1,0,1") (ifseqformula "15"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0"))
                        (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "6"))
                        (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "11"))
                        (rule "leq_literals" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "0,0"))
                        (rule "applyEq" (formula "22") (term "1,0,2,1,3,0,0") (ifseqformula "10"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,2,1,3,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,2,1,3,0,0"))
                        (rule "applyEqRigid" (formula "20") (term "1,1,0,1,0,0") (ifseqformula "10"))
                        (rule "polySimp_addComm1" (formula "20") (term "1,0,1,0,0"))
                        (rule "add_literals" (formula "20") (term "0,1,0,1,0,0"))
                        (rule "applyEqRigid" (formula "20") (term "0,1,1,0,0,0") (ifseqformula "10"))
                        (rule "mul_literals" (formula "20") (term "1,1,0,0,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "1,0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,1,0,0,0"))
                        (rule "add_zero_left" (formula "20") (term "1,0,0,0"))
                        (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "10"))
                        (rule "polySimp_addComm0" (formula "5") (term "1"))
                        (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "10"))
                        (rule "qeq_literals" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq0" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0"))
                        (rule "add_literals" (formula "11") (term "0,0"))
                        (rule "add_zero_left" (formula "11") (term "0"))
                        (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "10"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "applyEqRigid" (formula "20") (term "1,0,2,0,0") (ifseqformula "10"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,2,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,2,0,0"))
                        (rule "applyEqRigid" (formula "11") (term "1,0,0") (ifseqformula "10"))
                        (rule "add_literals" (formula "11") (term "0,0"))
                        (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "10"))
                        (rule "polySimp_addComm1" (formula "9") (term "1"))
                        (rule "add_literals" (formula "9") (term "0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "2"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "selectOfStore" (formula "18") (term "0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "castDel" (formula "18") (term "0,1"))
                        (rule "orRight" (formula "18"))
                        (rule "notRight" (formula "18"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "20"))
                        (rule "eqSymm" (formula "2"))
                        (rule "eqSymm" (formula "1"))
                        (rule "replace_known_left" (formula "18") (term "0,1,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "applyEq" (formula "19") (term "1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "20") (term "2,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "1"))
                        (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "notRight" (formula "19"))
                        (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "typeEqDerived2" (formula "19") (term "0,1") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "castDel" (formula "19") (term "1,0,0,1,1"))
                        (rule "castDel" (formula "19") (term "0,0"))
                        (rule "castDel" (formula "19") (term "0,0,1"))
                        (rule "inEqSimp_homoInEq1" (formula "19") (term "0"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0"))
                        (rule "leq_literals" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                        (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "0,0"))
                        (rule "qeq_literals" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "notRight" (formula "19"))
                        (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "1") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_19"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1") (term "0,1"))
                        (rule "applyEqRigid" (formula "1") (term "1,0,1") (ifseqformula "2"))
                        (rule "narrowSelectArrayType" (formula "21") (term "0") (ifseqformula "9"))
                        (rule "polySimp_homoEq" (formula "21"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                        (rule "add_literals" (formula "21") (term "1,1,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0"))
                        (rule "add_zero_right" (formula "21") (term "0"))
                        (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "17"))
                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "20")))
                        (rule "andLeft" (formula "17"))
                        (rule "inEqSimp_gtToGeq" (formula "17"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0"))
                        (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "18") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_13"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "eqSymm" (formula "18") (term "0,1"))
                        (rule "applyEqRigid" (formula "18") (term "1,0,1") (ifseqformula "19"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                        (rule "mul_literals" (formula "17") (term "1"))
                        (rule "methodBodyExpand" (formula "6") (term "1"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "methodBodyExpand" (formula "16") (term "1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "methodBodyExpand" (formula "14") (term "1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "arrayLengthNotNegative" (formula "8") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "18"))
                        (rule "leq_literals" (formula "8") (term "0"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "methodBodyExpand" (formula "1") (term "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "methodBodyExpand" (formula "18") (term "1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x_2"))
                        (rule "variableDeclarationAssign" (formula "6") (term "1"))
                        (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_51"))
                        (rule "returnUnfold" (formula "16") (term "1") (inst "#v0=x_2"))
                        (rule "variableDeclarationAssign" (formula "16") (term "1"))
                        (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_52"))
                        (rule "returnUnfold" (formula "1") (term "1") (inst "#v0=x_2"))
                        (rule "variableDeclarationAssign" (formula "1") (term "1"))
                        (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_53"))
                        (rule "compound_equality_comparison_1" (formula "6") (term "1") (inst "#v0=x_52"))
                        (rule "variableDeclarationAssign" (formula "6") (term "1"))
                        (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_54"))
                        (rule "compound_equality_comparison_1" (formula "16") (term "1") (inst "#v0=x_53"))
                        (rule "variableDeclarationAssign" (formula "16") (term "1"))
                        (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_55"))
                        (rule "compound_equality_comparison_1" (formula "1") (term "1") (inst "#v0=x_54"))
                        (rule "variableDeclarationAssign" (formula "1") (term "1"))
                        (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_56"))
                        (rule "assignmentModulo" (formula "6") (term "1"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "equal_literals" (formula "6") (term "0,0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "translateJavaMod" (formula "6") (term "0,0"))
                        (rule "assignmentModulo" (formula "16") (term "1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "equal_literals" (formula "16") (term "0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "translateJavaMod" (formula "16") (term "0,0"))
                        (rule "assignmentModulo" (formula "1") (term "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "equal_literals" (formula "1") (term "0,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "translateJavaMod" (formula "1") (term "0,0"))
                        (rule "equality_comparison_simple" (formula "6") (term "1"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "equality_comparison_simple" (formula "16") (term "1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "equality_comparison_simple" (formula "1") (term "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "methodCallReturn" (formula "6") (term "1"))
                        (rule "assignment" (formula "6") (term "1"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "methodCallReturn" (formula "16") (term "1"))
                        (rule "assignment" (formula "16") (term "1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "methodCallReturn" (formula "1") (term "1"))
                        (rule "assignment" (formula "1") (term "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "methodCallEmpty" (formula "6") (term "1"))
                        (rule "methodCallEmpty" (formula "16") (term "1"))
                        (rule "methodCallEmpty" (formula "1") (term "1"))
                        (rule "emptyModality" (formula "6") (term "1"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "notLeft" (formula "6"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "jmod_axiom" (formula "19") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                        (rule "polySimp_sepNegMonomial" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                        (rule "emptyModality" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "jmod_axiom" (formula "15") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "15") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                        (rule "emptyModality" (formula "1") (term "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Null Reference (x_arr = null)"
                     (builtin "One Step Simplification" (formula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (x_arr != null, but x_2 Out of Bounds!)"
                     (builtin "One Step Simplification" (formula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "5"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (a = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (a != null, but _right Out of Bounds!)"
                  (builtin "One Step Simplification" (formula "23"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "inEqSimp_ltRight" (formula "22"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3") (term "1"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "3") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                  (rule "leq_literals" (formula "4") (term "0"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "inEqSimp_contradInEq1" (formula "3") (term "1") (ifseqformula "4"))
                  (rule "qeq_literals" (formula "3") (term "0,1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "3"))
                  (rule "andLeft" (formula "5"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0"))
                  (rule "add_zero_right" (formula "5") (term "0"))
                  (rule "leq_literals" (formula "5"))
                  (rule "closeFalse" (formula "5"))
               )
            )
            (branch "Null Reference (a = null)"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (a != null, but _left Out of Bounds!)"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "cut_direct" (formula "1") (term "1"))
               (branch "CUT: left <= -1 TRUE"
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                  (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "2"))
                  (rule "add_literals" (formula "6") (term "1"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                  (rule "leq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "4"))
                  (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "2"))
                  (rule "add_zero_right" (formula "4") (term "1"))
                  (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "21") (term "0,1,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                  (rule "leq_literals" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "arrayLengthIsAShort" (formula "3") (term "0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "4"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "4"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "19"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "throwUnfold" (formula "20") (term "1") (inst "#v0=a"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "a_1"))
                  (builtin "One Step Simplification" (formula "9"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "translateJavaMulInt" (formula "10") (term "0,0,0"))
                  (rule "translateJavaAddInt" (formula "8") (term "1"))
                  (rule "translateJavaSubInt" (formula "13") (term "0,1"))
                  (rule "translateJavaSubInt" (formula "12") (term "1,0"))
                  (rule "translateJavaSubInt" (formula "10") (term "0,0"))
                  (rule "translateJavaSubInt" (formula "8") (term "0,1"))
                  (rule "translateJavaAddInt" (formula "10") (term "0"))
                  (rule "polySimp_elimSub" (formula "13") (term "0,1"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "8") (term "0,1"))
                  (rule "polySimp_elimSub" (formula "10") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "13") (term "1"))
                  (rule "polySimp_homoEq" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
                  (rule "inEqSimp_gtToGeq" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "polySimp_addComm0" (formula "13") (term "1,1,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
                  (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
                  (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "3"))
                  (rule "add_zero_right" (formula "8") (term "0"))
                  (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "3"))
                  (rule "mul_literals" (formula "10") (term "1,0"))
                  (rule "add_zero_right" (formula "10") (term "0"))
                  (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "3"))
                  (rule "add_zero_right" (formula "9") (term "0"))
                  (rule "applyEq" (formula "13") (term "0,1,0,1") (ifseqformula "3"))
                  (rule "times_zero_2" (formula "13") (term "1,0,1"))
                  (rule "add_zero_right" (formula "13") (term "0,1"))
                  (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "3"))
                  (rule "add_zero_right" (formula "12") (term "1,0"))
                  (rule "applyEq" (formula "13") (term "1,0,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "3"))
                  (rule "add_zero_right" (formula "11") (term "0,0"))
                  (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "2"))
                  (rule "mul_literals" (formula "9") (term "1,0"))
                  (rule "add_literals" (formula "9") (term "0"))
                  (rule "qeq_literals" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "2"))
                  (rule "mul_literals" (formula "11") (term "1,0"))
                  (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "2"))
                  (rule "mul_literals" (formula "9") (term "1,0"))
                  (rule "add_literals" (formula "9") (term "0"))
                  (rule "qeq_literals" (formula "9"))
                  (rule "closeFalse" (formula "9"))
               )
               (branch "CUT: left <= -1 FALSE"
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_leqRight" (formula "18"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "qeq_literals" (formula "6") (term "0"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                  (rule "times_zero_1" (formula "3") (term "0,0"))
                  (rule "add_zero_left" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                  (rule "leq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "5") (term "0,0"))
                  (rule "add_zero_left" (formula "5") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "arrayLengthIsAShort" (formula "6") (term "0"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "7"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "throwUnfold" (formula "23") (term "1") (inst "#v0=a"))
                  (rule "variableDeclarationAssign" (formula "23") (term "1"))
                  (rule "variableDeclaration" (formula "23") (term "1") (newnames "a"))
                  (builtin "One Step Simplification" (formula "12"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "translateJavaSubInt" (formula "16") (term "0,1"))
                  (rule "translateJavaMulInt" (formula "13") (term "0,0,0"))
                  (rule "translateJavaSubInt" (formula "15") (term "1,0"))
                  (rule "translateJavaAddInt" (formula "11") (term "1"))
                  (rule "translateJavaSubInt" (formula "13") (term "0,0"))
                  (rule "translateJavaSubInt" (formula "11") (term "0,1"))
                  (rule "translateJavaAddInt" (formula "13") (term "0"))
                  (rule "polySimp_elimSub" (formula "16") (term "0,1"))
                  (rule "polySimp_elimSub" (formula "15") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "11") (term "0,1"))
                  (rule "polySimp_elimSub" (formula "13") (term "0,0"))
                  (rule "polySimp_homoEq" (formula "16") (term "1"))
                  (rule "polySimp_homoEq" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
                  (rule "inEqSimp_gtToGeq" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0"))
                  (rule "polySimp_addComm0" (formula "16") (term "1,1,0,1"))
                  (rule "polySimp_addComm1" (formula "14") (term "0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "11") (term "0"))
                  (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
                  (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "11"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,1"))
                  (rule "mul_literals" (formula "11") (term "0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,0,1"))
                  (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "11"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                  (rule "add_literals" (formula "7") (term "0,0,1"))
                  (rule "add_zero_left" (formula "7") (term "0,1"))
                  (rule "applyEq" (formula "21") (term "0,1,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "11"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                  (rule "mul_literals" (formula "13") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,0,0"))
                  (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "11"))
                  (rule "polySimp_addAssoc" (formula "15") (term "1,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "15") (term "0,0,1,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,1,0"))
                  (rule "add_literals" (formula "15") (term "1,1,0,1,0"))
                  (rule "times_zero_1" (formula "15") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "15") (term "0,1,0"))
                  (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "11"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0"))
                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "11"))
                  (rule "inEqSimp_homoInEq0" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "0,1,0"))
                  (rule "mul_literals" (formula "5") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "5") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "0,0"))
                  (rule "add_zero_left" (formula "5") (term "0"))
                  (rule "applyEq" (formula "16") (term "0,1,0,1") (ifseqformula "11"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "16") (term "0,1,0,1"))
                  (rule "mul_literals" (formula "16") (term "0,0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                  (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "16") (term "0,0,1"))
                  (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "11"))
                  (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "11"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0,0"))
                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "16") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_8"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "eqSymm" (formula "16") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0"))
                  (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "15") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_5"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "eqSymm" (formula "15") (term "0,1"))
                  (rule "applyEqRigid" (formula "15") (term "1,0,1") (ifseqformula "16"))
                  (rule "polySimp_sepNegMonomial" (formula "18") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1"))
                  (rule "inEqSimp_invertInEq1" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "times_zero_2" (formula "5") (term "1"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "20") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_9"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "1") (term "0,1"))
                  (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                  (rule "mul_literals" (formula "5") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0"))
                  (rule "inEqSimp_contradEq3" (formula "18") (term "1") (ifseqformula "6"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,1"))
                  (rule "add_literals" (formula "18") (term "0,0,1"))
                  (rule "qeq_literals" (formula "18") (term "0,1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "notLeft" (formula "18"))
                  (rule "apply_eq_boolean_rigid" (formula "17") (term "1,0,1") (ifseqformula "19"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "13"))
                  (rule "qeq_literals" (formula "6") (term "0"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "closeFalse" (formula "6"))
               )
            )
         )
      )
   )
   (branch "Null Reference (a = null)"
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "3"))
      (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "throwUnfold" (formula "17") (term "1") (inst "#v0=n"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "n"))
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "translateJavaSubInt" (formula "6") (term "0,1"))
      (rule "translateJavaSubInt" (formula "11") (term "0,1"))
      (rule "translateJavaSubInt" (formula "10") (term "1,0"))
      (rule "translateJavaMulInt" (formula "8") (term "0,0,0"))
      (rule "eqSymm" (formula "6"))
      (rule "translateJavaSubInt" (formula "8") (term "0,0"))
      (rule "translateJavaAddInt" (formula "6") (term "0"))
      (rule "translateJavaAddInt" (formula "8") (term "0"))
      (rule "polySimp_elimSub" (formula "11") (term "0,1"))
      (rule "polySimp_elimSub" (formula "10") (term "1,0"))
      (rule "polySimp_elimSub" (formula "6") (term "0,0"))
      (rule "polySimp_elimSub" (formula "8") (term "0,0"))
      (rule "polySimp_homoEq" (formula "11") (term "1"))
      (rule "polySimp_homoEq" (formula "6"))
      (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
      (rule "inEqSimp_gtToGeq" (formula "7"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
      (rule "polySimp_addComm0" (formula "10") (term "1,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0"))
      (rule "polySimp_addComm0" (formula "11") (term "1,1,0,1"))
      (rule "polySimp_addComm0" (formula "6") (term "0,1,1,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0"))
      (rule "polySimp_addComm0" (formula "8") (term "0,0"))
      (rule "polySimp_addComm1" (formula "6") (term "1,1,0"))
      (rule "polySimp_addComm0" (formula "6") (term "0,1,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
      (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,1"))
      (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1"))
      (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1"))
      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
      (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
      (rule "mul_literals" (formula "6") (term "0,0,1,0"))
      (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,1"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "polySimp_addComm0" (formula "6") (term "0,0"))
      (rule "applyEq" (formula "9") (term "0,0,1,0") (ifseqformula "1"))
      (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "13") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_10"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "0,1"))
      (rule "apply_eq_boolean_rigid" (formula "1") (term "1,0,1") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "Query_axiom_for_even_in_PrefixSumRec" (formula "12") (term "0,0,0") (inst "#res=x") (inst "#p0=x_1") (inst "even_sk=even_sk_11"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "eqSymm" (formula "12") (term "0,1"))
      (rule "polySimp_sepNegMonomial" (formula "13") (term "1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "0,1"))
      (rule "polySimp_sepNegMonomial" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "7"))
      (rule "polySimp_addAssoc" (formula "8") (term "0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0"))
      (rule "add_literals" (formula "8") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,0"))
      (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "7"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "0,1,0"))
      (rule "mul_literals" (formula "9") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
      (rule "add_literals" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,0,0"))
      (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "7"))
      (rule "polySimp_homoEq" (formula "13") (term "1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,1"))
      (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1"))
      (rule "mul_literals" (formula "13") (term "0,0,1,0,1"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,1"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1"))
      (rule "add_literals" (formula "13") (term "0,0,0,0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "13") (term "0,0,1"))
      (rule "applyEq" (formula "3") (term "0") (ifseqformula "7"))
      (rule "inEqSimp_homoInEq0" (formula "3"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
      (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
      (rule "mul_literals" (formula "3") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
      (rule "add_literals" (formula "3") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
      (rule "add_literals" (formula "3") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "3") (term "1,0,0"))
      (rule "add_zero_right" (formula "3") (term "0,0"))
      (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "7"))
      (rule "applyEq" (formula "17") (term "0,1,0,0,0,0") (ifseqformula "7"))
      (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "7"))
      (rule "polySimp_addAssoc" (formula "11") (term "1,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,1,0"))
      (rule "add_literals" (formula "11") (term "1,1,0,1,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,1,0"))
      (rule "add_zero_right" (formula "11") (term "0,1,0"))
      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "7"))
      (rule "applyEq" (formula "10") (term "1,0,0") (ifseqformula "7"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,0"))
      (rule "polySimp_sepNegMonomial" (formula "13") (term "1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0,1"))
      (rule "polySimp_elimOne" (formula "13") (term "0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1"))
      (rule "inEqSimp_sepNegMonomial1" (formula "9"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
      (rule "polySimp_elimOne" (formula "9") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
      (rule "polySimp_elimOne" (formula "3") (term "0"))
      (rule "Query_axiom_for_isPow2_in_PrefixSumRec" (formula "11") (term "0") (inst "#res=x") (inst "#p0=x_1") (inst "isPow2_sk=isPow2_sk_6"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "eqSymm" (formula "11") (term "0,1"))
      (rule "applyEqRigid" (formula "11") (term "1,0,1") (ifseqformula "12"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
      (rule "polySimp_elimOne" (formula "10") (term "0"))
      (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "3"))
      (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "applyEq" (formula "18") (term "1,0,1,0") (ifseqformula "8"))
      (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
      (rule "add_literals" (formula "18") (term "0,0,1,0"))
      (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "8"))
      (rule "leq_literals" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "7"))
      (rule "add_literals" (formula "11") (term "0,0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
      (rule "qeq_literals" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
      (rule "inEqSimp_homoInEq0" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1,0"))
      (rule "polySimp_addComm1" (formula "8") (term "0"))
      (rule "add_literals" (formula "8") (term "0,0"))
      (rule "add_zero_left" (formula "8") (term "0"))
      (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "7"))
      (rule "polySimp_addComm0" (formula "9") (term "1"))
      (rule "applyEq" (formula "16") (term "1,0,1,0,0,0,0") (ifseqformula "7"))
      (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,1,0,0,0,0"))
      (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "7"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "7"))
      (rule "polySimp_addComm1" (formula "6") (term "1"))
      (rule "add_literals" (formula "6") (term "0,1"))
      (rule "Class_invariant_axiom_for_PrefixSumRec" (formula "13"))
      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "2")))
      (rule "closeFalse" (formula "13"))
   )
)
)

}
