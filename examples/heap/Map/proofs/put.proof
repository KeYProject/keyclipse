\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Nov 13 21:42:39 CET 2013
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]RETREAT_MODE_OPTIONS_KEY=RETREAT_MODE_NONE
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=1000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=Strings-Strings\\:on , reach-reach\\:on , JavaCard-JavaCard\\:on , assertions-assertions\\:on , bigint-bigint\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , modelFields-modelFields\\:showSatisfiability , initialisation-initialisation\\:disableStaticInitialisation , sequences-sequences\\:on , integerSimplificationRules-integerSimplificationRules\\:full , runtimeExceptions-runtimeExceptions\\:ban , optimisedSelectRules-optimisedSelectRules\\:on
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "..";

\proofObligation "#Proof Obligation Settings
#Wed Nov 13 21:42:39 CET 2013
name=CaseStudyUseMaps.MapImplementation[CaseStudyUseMaps.Map2\\:\\:put(java.lang.Object,java.lang.Object)].JML normal_behavior operation contract.0
contract=CaseStudyUseMaps.MapImplementation[CaseStudyUseMaps.Map2\\:\\:put(java.lang.Object,java.lang.Object)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "kai" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "48962")

(branch "dummy ID"
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,0,0,0,1"))
(rule "eqSymm" (formula "10") (term "0,0,0,0,0,1"))
(rule "replace_known_right" (formula "4") (term "1") (ifseqformula "9"))
(builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "5") (term "1") (ifseqformula "8"))
(builtin "One Step Simplification" (formula "5"))
(rule "assignment" (formula "10") (term "1"))
(builtin "One Step Simplification" (formula "10"))
(rule "Class_invariant_axiom_for_CaseStudyUseMaps_MapImplementation" (formula "6") (inst "o=o") (inst "i=i") (inst "i_0=i_0") (inst "i1=i1") (inst "i2=i2") (inst "i_1=i_1") (inst "i_2=i_2") (inst "sk=sk_0"))
(branch "Use Axiom"
   (builtin "One Step Simplification" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "8"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "8"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "7"))
   (rule "eqSymm" (formula "21"))
   (rule "eqSymm" (formula "14") (term "1,0,0,1,0"))
   (rule "eqSymm" (formula "12"))
   (rule "eqSymm" (formula "8") (term "1,1,0,1,0"))
   (rule "eqSymm" (formula "8") (term "0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
   (rule "subsetSingletonLeft" (formula "17"))
   (rule "subsetSingletonLeft" (formula "16"))
   (rule "apply_eq_monomials" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "12"))
   (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "7") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "7") (term "1,1,1,0,0,1,0,0"))
   (rule "times_zero_1" (formula "7") (term "1,1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "7") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "8") (term "1,0,1,0"))
   (rule "nnf_imp2or" (formula "14") (term "0"))
   (rule "nnf_imp2or" (formula "13") (term "0"))
   (rule "nnf_imp2or" (formula "6") (term "0"))
   (rule "nnf_imp2or" (formula "7") (term "0"))
   (rule "nnf_imp2or" (formula "8") (term "0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "nnf_notAnd" (formula "13") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "6") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
   (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
   (rule "mul_literals" (formula "6") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "7") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
   (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
   (rule "mul_literals" (formula "7") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "8") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "8") (term "0,1,0"))
   (rule "nnf_notOr" (formula "14") (term "0,0,0"))
   (rule "nnf_notAnd" (formula "8") (term "0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,1,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,1,0"))
   (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,1,0"))
   (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,1,0"))
   (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0,1,0"))
   (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_put,savedHeapBefore_put"))
   (builtin "One Step Simplification" (formula "25"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "index_1"))
   (rule "commute_or" (formula "14") (term "0,0"))
   (rule "cnf_eqv" (formula "14") (term "1,0"))
   (rule "nnf_notEx" (formula "14") (term "0,1,1,0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0,1,1,0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0,0,1,1,0"))
   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0,0,1,1,0"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,1,0"))
   (rule "commute_or" (formula "8") (term "1,0,1,0"))
   (rule "cnf_rightDist" (formula "14") (term "0,0"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "shift_paren_or" (formula "8") (term "0,1,0"))
   (rule "arrayLengthNotNegative" (formula "15") (term "1"))
   (rule "mapSizeNotNegativeForFiniteMaps" (formula "16") (term "0"))
   (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "20"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "arrayLengthIsAShort" (formula "17") (term "1"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "true_left" (formula "17"))
   (rule "arrayLengthNotNegative" (formula "12") (term "0"))
   (rule "arrayLengthIsAShort" (formula "13") (term "0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (builtin "Use Operation Contract" (formula "28") (newnames "heapBefore_getIndexOfKey,result_1,exc_1") (contract "CaseStudyUseMaps.MapImplementation[CaseStudyUseMaps.MapImplementation::getIndexOfKey(java.lang.Object)].JML normal_behavior operation contract.0"))
   (branch "Post (getIndexOfKey)"
      (builtin "One Step Simplification" (formula "22"))
      (rule "translateJavaUnaryMinusInt" (formula "22") (term "1,2,0,0,1"))
      (rule "neg_literal" (formula "22") (term "1,2,0,0,1"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "24"))
      (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1"))
      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,1"))
      (rule "polySimp_addComm1" (formula "23") (term "0,0,1,1"))
      (rule "assignment" (formula "32") (term "1"))
      (builtin "One Step Simplification" (formula "32"))
      (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,1"))
      (rule "polySimp_elimOne" (formula "23") (term "0,0,1,1"))
      (rule "nnf_imp2or" (formula "24") (term "0"))
      (rule "nnf_notAnd" (formula "24") (term "1,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "nnf_notAnd" (formula "24") (term "0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "nnf_notOr" (formula "24") (term "0,0,0"))
      (rule "commute_or" (formula "24") (term "1,0"))
      (rule "commute_or" (formula "24") (term "0,0"))
      (rule "commute_or_2" (formula "24") (term "0"))
      (rule "shift_paren_or" (formula "24") (term "0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "cnf_rightDist" (formula "24") (term "0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "commute_or" (formula "24") (term "0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "typeEqDerived2" (formula "24") (term "0,0,1") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "castDel" (formula "24") (term "0,0"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "true_left" (formula "24"))
      (rule "Class_invariant_axiom_for_CaseStudyUseMaps_MapImplementation" (formula "24") (inst "o=o") (inst "i=i") (inst "i_0=i_0") (inst "i1=i1") (inst "i2=i2") (inst "i_1=i_1") (inst "i_2=i_2") (inst "sk=sk_1"))
      (branch "Use Axiom"
         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "9")) (ifInst ""  (formula "10")) (ifInst ""  (formula "11")) (ifInst ""  (formula "18")) (ifInst ""  (formula "21")))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "notLeft" (formula "26"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "eqSymm" (formula "29") (term "1,0,0,1,0"))
         (rule "eqSymm" (formula "32"))
         (rule "eqSymm" (formula "27"))
         (rule "eqSymm" (formula "26") (term "1,1,0,1,0"))
         (rule "eqSymm" (formula "26") (term "0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
         (rule "subsetSingletonLeft" (formula "30"))
         (rule "subsetSingletonLeft" (formula "29"))
         (rule "apply_eq_monomials" (formula "25") (term "1,0,0,1,0,0") (ifseqformula "13"))
         (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "25") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "25") (term "1,1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "25") (term "1,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "25") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,1,0"))
         (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
         (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0"))
         (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
         (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "26") (term "1,0,1,0"))
         (rule "nnf_imp2or" (formula "28") (term "0"))
         (rule "nnf_imp2or" (formula "27") (term "0"))
         (rule "nnf_imp2or" (formula "24") (term "0"))
         (rule "nnf_imp2or" (formula "25") (term "0"))
         (rule "nnf_imp2or" (formula "26") (term "0"))
         (rule "nnf_notAnd" (formula "28") (term "0,0"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "nnf_notAnd" (formula "27") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
         (rule "mul_literals" (formula "27") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "24") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "24") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "24") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "24") (term "0,1,0"))
         (rule "nnf_notOr" (formula "25") (term "0,0,0"))
         (rule "nnf_notAnd" (formula "24") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1,0"))
         (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0"))
         (rule "shift_paren_and" (formula "23") (term "1"))
         (rule "ex_pull_out2" (formula "15") (term "0,1,0"))
         (rule "all_pull_out2" (formula "15") (term "1,1,0"))
         (rule "all_pull_out3" (formula "8") (term "0"))
         (rule "commute_or" (formula "25") (term "0,0"))
         (rule "ifElseUnfold" (formula "32") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "32") (term "1") (newnames "x"))
         (rule "cnf_eqv" (formula "25") (term "1,0"))
         (rule "nnf_notEx" (formula "25") (term "0,1,1,0"))
         (rule "nnf_notAnd" (formula "25") (term "0,0,1,1,0"))
         (rule "nnf_notAnd" (formula "25") (term "0,0,0,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,1,1,0"))
         (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,1,1,0"))
         (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "25") (term "1,0,0,0,0,1,1,0"))
         (rule "shift_paren_or" (formula "8") (term "0,0"))
         (rule "commute_or" (formula "24") (term "1,0,1,0"))
         (rule "commute_or" (formula "15") (term "0,0,1,0"))
         (rule "commute_or_2" (formula "15") (term "0,1,1,0"))
         (rule "cnf_rightDist" (formula "25") (term "0,0"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
         (rule "shift_paren_or" (formula "24") (term "0,1,0"))
         (rule "commute_or_2" (formula "15") (term "0,0,1,1,0"))
         (rule "shift_paren_or" (formula "8") (term "0,0,0,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0,1") (ifseqformula "1"))
         (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "27"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreInLocSets" (formula "21") (ifseqformula "2"))
         (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "32")))
         (rule "true_left" (formula "21"))
         (rule "onlyCreatedObjectsAreInLocSets" (formula "22") (ifseqformula "2"))
         (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "32")))
         (rule "true_left" (formula "22"))
         (rule "commute_or" (formula "16") (term "0,0,0,1,1,0"))
         (rule "inequality_comparison_simple" (formula "34") (term "1"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "cnf_rightDist" (formula "16") (term "0,0,1,0"))
         (rule "commute_or" (formula "16") (term "1,0,0,1,0"))
         (rule "cnf_rightDist" (formula "16") (term "0,0,0,1,0"))
         (rule "commute_or" (formula "16") (term "1,0,0,0,1,0"))
         (rule "ex_pull_out2" (formula "27") (term "0,1,0"))
         (rule "commute_or" (formula "27") (term "0,0,1,0"))
         (rule "cnf_rightDist" (formula "27") (term "0,0,1,0"))
         (rule "commute_or" (formula "27") (term "1,0,0,1,0"))
         (rule "cnf_rightDist" (formula "27") (term "0,0,0,1,0"))
         (rule "commute_or" (formula "27") (term "1,0,0,0,1,0"))
         (rule "all_pull_out2" (formula "27") (term "1,1,0"))
         (rule "commute_or_2" (formula "27") (term "0,1,1,0"))
         (rule "commute_or_2" (formula "27") (term "0,0,1,1,0"))
         (rule "commute_or" (formula "27") (term "0,0,0,1,1,0"))
         (rule "all_pull_out3" (formula "26") (term "0"))
         (rule "shift_paren_or" (formula "26") (term "0,0"))
         (rule "shift_paren_or" (formula "26") (term "0,0,0"))
         (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
         (rule "ex_pull_out0" (formula "16") (term "1,0"))
         (rule "all_pull_out1" (formula "16") (term "0,1,0"))
         (rule "ex_pull_out3" (formula "16") (term "0"))
         (rule "all_pull_out3" (formula "16") (term "0,0"))
         (rule "cnf_rightDist" (formula "16") (term "0,0,0"))
         (rule "distr_forallAnd" (formula "16") (term "0,0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "distr_existsAnd1" (formula "16") (term "0"))
         (rule "distr_forallAnd" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "commute_or_2" (formula "17") (term "0,0"))
         (rule "shift_paren_or" (formula "17") (term "0,0,0"))
         (rule "swapQuantifiersAll" (formula "17"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "castDel" (formula "17") (term "1,0,0,1,0,0"))
         (rule "castDel" (formula "17") (term "1,0,0,0,0,0,0"))
         (rule "castDel" (formula "17") (term "0,1,0,0,0"))
         (rule "instanceof_static_type" (formula "17") (term "0,0,1,0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "cnf_rightDist" (formula "16") (term "0,0"))
         (rule "shift_paren_or" (formula "16") (term "1,0,0"))
         (rule "commute_or_2" (formula "16") (term "0,1,0,0"))
         (rule "cnf_rightDist" (formula "16") (term "0,0,0"))
         (rule "commute_or_2" (formula "16") (term "0,0,0,0"))
         (rule "shift_paren_or" (formula "16") (term "1,0,0,0"))
         (rule "commute_or" (formula "16") (term "0,0,0,0,0"))
         (rule "ifElse" (formula "33") (term "1"))
         (builtin "One Step Simplification" (formula "33"))
         (rule "ifthenelse_negated_for" (formula "33"))
         (rule "ifthenelse_split_for" (formula "33"))
         (branch "result_1 = -1 TRUE"
            (rule "replace_known_left" (formula "27") (term "2") (ifseqformula "1"))
            (rule "returnUnfold" (formula "34") (term "1") (inst "#v0=o"))
            (rule "variableDeclarationAssign" (formula "34") (term "1"))
            (rule "variableDeclaration" (formula "34") (term "1") (newnames "o_1"))
            (builtin "Use Operation Contract" (formula "34") (newnames "heapBefore_putCreateNew,result_3,exc_3,heapAfter_putCreateNew,anon_heap_putCreateNew") (contract "CaseStudyUseMaps.MapImplementation[CaseStudyUseMaps.MapImplementation::putCreateNew(java.lang.Object,java.lang.Object)].JML normal_behavior operation contract.0"))
            (branch "Post (putCreateNew)"
               (builtin "One Step Simplification" (formula "36"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0") (ifseqformula "29"))
               (rule "andLeft" (formula "30"))
               (rule "andLeft" (formula "30"))
               (rule "andLeft" (formula "32"))
               (rule "andLeft" (formula "32"))
               (rule "andLeft" (formula "33"))
               (rule "andLeft" (formula "34"))
               (rule "andLeft" (formula "35"))
               (rule "andLeft" (formula "34"))
               (rule "notLeft" (formula "36"))
               (rule "andLeft" (formula "36"))
               (rule "andLeft" (formula "34"))
               (rule "notLeft" (formula "36"))
               (rule "andLeft" (formula "37"))
               (rule "notLeft" (formula "36"))
               (rule "notLeft" (formula "35"))
               (rule "andLeft" (formula "34"))
               (rule "andLeft" (formula "37"))
               (rule "notLeft" (formula "35"))
               (rule "notLeft" (formula "34"))
               (rule "andLeft" (formula "36"))
               (rule "notLeft" (formula "37"))
               (rule "close" (formula "37") (ifseqformula "33"))
            )
            (branch "Exceptional Post (putCreateNew)"
               (builtin "One Step Simplification" (formula "36"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "1,0") (ifseqformula "29"))
               (rule "andLeft" (formula "30"))
               (rule "andLeft" (formula "30"))
               (rule "andLeft" (formula "32"))
               (rule "notLeft" (formula "30"))
               (rule "close" (formula "33") (ifseqformula "32"))
            )
            (branch "Pre (putCreateNew)"
               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "33")) (ifInst ""  (formula "32")) (ifInst ""  (formula "3")) (ifInst ""  (formula "6")) (ifInst ""  (formula "7")))
               (rule "applyEq" (formula "23") (term "2") (ifseqformula "11"))
               (rule "applyEq" (formula "24") (term "2") (ifseqformula "11"))
               (rule "applyEq" (formula "27") (term "0,2,0,1,1") (ifseqformula "1"))
               (rule "applyEq" (formula "27") (term "0,0,0,1") (ifseqformula "1"))
               (rule "qeq_literals" (formula "27") (term "0,0,1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "notLeft" (formula "27"))
               (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
               (rule "elementOfUnion" (formula "21"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "eqSymm" (formula "21") (term "1"))
               (rule "sortsDisjointModuloNull" (formula "21") (term "1"))
               (rule "replace_known_right" (formula "21") (term "1,1") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "27")))
               (rule "elementOfUnion" (formula "22"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "eqSymm" (formula "22") (term "1"))
               (rule "sortsDisjointModuloNull" (formula "22") (term "1"))
               (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "29")))
               (rule "elementOfUnion" (formula "21"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "elementOfUnion" (formula "21"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "Class_invariant_axiom_for_CaseStudyUseMaps_MapImplementation" (formula "30") (inst "o=o_2") (inst "i=i") (inst "i_0=i_0") (inst "i1=i1") (inst "i2=i2") (inst "i_1=i_1") (inst "i_2=i_2") (inst "sk=sk_3"))
               (branch "Use Axiom"
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")))
                  (rule "eqSymm" (formula "30") (term "0,1,0,1,0,1,0,0,0,0,0,0"))
                  (rule "eqSymm" (formula "30") (term "1,0,0,1,0,1,0,0,0"))
                  (rule "eqSymm" (formula "30") (term "1,1,0,1,0,1,0,0,0,0,0,0"))
                  (rule "eqSymm" (formula "30") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "30") (term "1,0,0,0,0,0"))
                  (rule "replace_known_left" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "26")))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0,1,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0,1,0,0,0,0"))
                  (rule "subsetSingletonLeft" (formula "30") (term "1,0"))
                  (rule "subsetSingletonLeft" (formula "30") (term "1"))
                  (rule "applyEq" (formula "30") (term "2,1") (ifseqformula "11"))
                  (rule "applyEq" (formula "30") (term "2,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0,1,0,0,0,0,0") (ifseqformula "14"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1,0,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,1,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,0,0,0,0"))
                  (rule "elementOfUnion" (formula "30") (term "1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "eqSymm" (formula "30") (term "1,1"))
                  (rule "sortsDisjointModuloNull" (formula "30") (term "1,1"))
                  (rule "replace_known_right" (formula "30") (term "1,1,1") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "25")))
                  (rule "elementOfUnion" (formula "30") (term "1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "elementOfUnion" (formula "30") (term "1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "eqSymm" (formula "30") (term "1,1"))
                  (rule "sortsDisjointModuloNull" (formula "30") (term "1,1"))
                  (rule "replace_known_right" (formula "30") (term "0,1,1") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "27")))
                  (rule "elementOfUnion" (formula "30") (term "1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "nnf_imp2or" (formula "30") (term "0,1"))
                  (rule "nnf_imp2or" (formula "30") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "nnf_imp2or" (formula "30") (term "0,1,0,0"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0"))
                  (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0"))
                  (rule "nnf_imp2or" (formula "30") (term "0,0,0,0"))
                  (rule "nnf_notOr" (formula "30") (term "0,0,0,1"))
                  (rule "nnf_imp2or" (formula "30") (term "0,1,0,0"))
                  (rule "nnf_imp2or" (formula "30") (term "0,1,0,1,0"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0"))
                  (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,0,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                  (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0,0"))
                  (rule "nnf_imp2or" (formula "30") (term "1,0,1,0,0"))
                  (rule "andRight" (formula "30"))
                  (branch "Case 1"
                     (rule "allRight" (formula "30") (inst "sk=i1_0"))
                     (rule "orRight" (formula "30"))
                     (rule "orRight" (formula "30"))
                     (rule "allRight" (formula "32") (inst "sk=i2_0"))
                     (rule "orRight" (formula "32"))
                     (rule "orRight" (formula "33"))
                     (rule "orRight" (formula "32"))
                     (rule "notRight" (formula "34"))
                     (rule "inEqSimp_leqRight" (formula "31"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_leqRight" (formula "33"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "34"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "notInDomain" (formula "28"))
                     (rule "allLeft" (formula "16") (inst "t=i1_0"))
                     (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0,0,0,0,0") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,1,0,0,0,0,0"))
                     (rule "leq_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0,0,0") (ifseqformula "5"))
                     (rule "qeq_literals" (formula "16") (term "0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "commute_or_2" (formula "16") (term "0,0"))
                     (rule "allLeft" (formula "14") (inst "t=i2_0"))
                     (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                     (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "6"))
                     (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "14") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0"))
                     (rule "leq_literals" (formula "14") (term "0,0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "notLeft" (formula "14"))
                     (rule "allLeft" (formula "16") (inst "t=i2_0"))
                     (rule "replace_known_left" (formula "16") (term "0,1") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "39")))
                     (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "16") (term "0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "2"))
                     (rule "andLeft" (formula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "16"))
                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                     (rule "add_literals" (formula "16") (term "1,1,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0"))
                     (rule "add_zero_right" (formula "16") (term "0"))
                     (rule "leq_literals" (formula "16"))
                     (rule "closeFalse" (formula "16"))
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "30") (inst "sk=o_2_0"))
                     (rule "orRight" (formula "30"))
                     (rule "orRight" (formula "30"))
                     (rule "eqSymm" (formula "32") (term "1,0,0"))
                     (rule "replace_known_right" (formula "30") (term "0,1") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "notRight" (formula "30"))
                     (rule "equiv_right" (formula "32"))
                     (branch "Case 1"
                        (rule "exLeft" (formula "1") (inst "sk=i_1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "notInDomain" (formula "27"))
                        (rule "allLeft" (formula "20") (inst "t=i_1"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                        (rule "applyEq" (formula "20") (term "1,0,1") (ifseqformula "4"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                        (rule "add_literals" (formula "20") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "20") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "20") (term "0,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "allLeft" (formula "14") (inst "t=i_1"))
                        (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "14") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "14") (term "0,0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "allLeft" (formula "13") (inst "t=i_1"))
                        (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                        (rule "applyEq" (formula "13") (term "0,0,1") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "38"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "notInDomain" (formula "38"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1,0,0,1,0,0") (ifseqformula "9"))
                        (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "33")))
                        (rule "true_left" (formula "16"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "9"))
                        (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                        (rule "true_left" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0") (ifseqformula "9"))
                        (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "39"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "6"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "1") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "allLeft" (formula "25") (inst "t=i_1"))
                        (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0,0"))
                        (rule "applyEq" (formula "25") (term "1,0,0,0,0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "25") (term "0,0,0,0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "25") (term "1,0") (ifseqformula "40"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "applyEq" (formula "25") (term "1,0,0,1") (ifseqformula "6"))
                        (rule "replace_known_left" (formula "25") (term "0,1") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                        (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                        (rule "add_literals" (formula "25") (term "0,0,1"))
                        (rule "leq_literals" (formula "25") (term "0,1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "25") (term "0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "closeFalse" (formula "25"))
                     )
                     (branch "Case 2"
                        (rule "nnf_ex2all" (formula "33"))
                        (rule "nnf_notAnd" (formula "1") (term "0"))
                        (rule "nnf_notAnd" (formula "1") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                        (rule "notInDomain" (formula "26"))
                        (rule "allLeft" (formula "20") (inst "t=o_2_0"))
                        (rule "exLeft" (formula "20") (inst "sk=i_0"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "eqSymm" (formula "22") (term "1,0"))
                        (rule "replace_known_right" (formula "22") (term "1,0,0") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                        (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "37")) (ifInst ""  (formula "4")))
                        (rule "replace_known_right" (formula "20") (term "1,0") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                        (rule "inEqSimp_homoInEq0" (formula "21"))
                        (rule "polySimp_addComm1" (formula "21") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                        (rule "mul_literals" (formula "21") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                        (rule "allLeft" (formula "2") (inst "t=i_0"))
                        (rule "replace_known_left" (formula "2") (term "0,1") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "21"))
                        (rule "qeq_literals" (formula "2") (term "0,0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "2"))
                        (rule "andLeft" (formula "22"))
                        (rule "inEqSimp_homoInEq1" (formula "22"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                        (rule "add_literals" (formula "22") (term "1,1,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0"))
                        (rule "add_zero_right" (formula "22") (term "0"))
                        (rule "leq_literals" (formula "22"))
                        (rule "closeFalse" (formula "22"))
                     )
                  )
               )
               (branch "Show Axiom Satisfiability"
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")))
                  (rule "closeTrue" (formula "30"))
               )
            )
         )
         (branch "result_1 = -1 FALSE"
            (rule "replace_known_right" (formula "26") (term "2") (ifseqformula "33"))
            (rule "returnUnfold" (formula "34") (term "1") (inst "#v0=o"))
            (rule "variableDeclarationAssign" (formula "34") (term "1"))
            (rule "variableDeclaration" (formula "34") (term "1") (newnames "o"))
            (builtin "Use Operation Contract" (formula "34") (newnames "heapBefore_putOverwrite,result_2,exc_2,heapAfter_putOverwrite,anon_heap_putOverwrite") (contract "CaseStudyUseMaps.MapImplementation[CaseStudyUseMaps.MapImplementation::putOverwrite(int,java.lang.Object)].JML normal_behavior operation contract.0"))
            (branch "Post (putOverwrite)"
               (builtin "One Step Simplification" (formula "28"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "andLeft" (formula "28"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,0") (ifseqformula "28"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0,0,0,1,1,0,1") (ifseqformula "28"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "31"))
               (rule "andLeft" (formula "32"))
               (rule "andLeft" (formula "33"))
               (rule "andLeft" (formula "34"))
               (rule "notLeft" (formula "35"))
               (rule "eqSymm" (formula "31"))
               (rule "eqSymm" (formula "32"))
               (rule "replace_known_right" (formula "30") (term "1") (ifseqformula "35"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "assignment" (formula "43") (term "1"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "pullOutSelect" (formula "31") (term "1,1,0") (inst "selectSK=selectSK_0"))
               (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "40")) (ifInst ""  (formula "3")))
               (rule "replaceKnownSelect_taclet0_0" (formula "33") (term "1,1,0"))
               (rule "elementOfUnion" (formula "31") (term "0,0"))
               (rule "elementOfSingleton" (formula "31") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "elementOfSingleton" (formula "31") (term "0,0"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "hideAuxiliaryEq" (formula "31"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "31") (term "1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "32") (term "1,1,0"))
               (rule "pullOutSelect" (formula "31") (term "1") (inst "selectSK=selectSK_1"))
               (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "40")) (ifInst ""  (formula "3")))
               (rule "elementOfUnion" (formula "31") (term "0,0"))
               (rule "elementOfSingleton" (formula "31") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "hideAuxiliaryEq" (formula "31"))
               (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "31") (term "1"))
               (rule "pullOutSelect" (formula "31") (term "1,0") (inst "selectSK=selectSK_2"))
               (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "37")) (ifInst ""  (formula "20")))
               (rule "replaceKnownSelect_taclet4_0" (formula "33") (term "1,0"))
               (rule "elementOfUnion" (formula "31") (term "0,0"))
               (rule "elementOfSingleton" (formula "31") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "eqSymm" (formula "31") (term "0,0,0"))
               (rule "replace_known_right" (formula "31") (term "0,0,0") (ifseqformula "39"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "elementOfSingleton" (formula "31") (term "0,0"))
               (builtin "One Step Simplification" (formula "31"))
               (rule "hideAuxiliaryEq" (formula "31"))
               (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "32") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "31") (term "1,0"))
               (rule "nnf_imp2or" (formula "33") (term "0"))
               (rule "nnf_notAnd" (formula "33") (term "0,0"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "nnf_notAnd" (formula "33") (term "1,0"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "nnf_notOr" (formula "33") (term "0,0,0"))
               (rule "nnf_notOr" (formula "33") (term "0,0,0,0"))
               (rule "commute_or" (formula "33") (term "1,0"))
               (rule "commute_or" (formula "33") (term "0,0"))
               (rule "commute_or_2" (formula "33") (term "0"))
               (rule "commuteUnion" (formula "28") (term "1,0"))
               (rule "Class_invariant_axiom_for_CaseStudyUseMaps_MapImplementation" (formula "34") (inst "o=o_1") (inst "i=i") (inst "i_0=i_0") (inst "i1=i1") (inst "i2=i2") (inst "i_1=i_1") (inst "i_2=i_2") (inst "sk=sk_2"))
               (branch "Use Axiom"
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "replaceKnownSelect_taclet2_0" (formula "34") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "34") (term "0,1"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "0,1,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet2_0" (formula "34") (term "0,0,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "0,1,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "34") (term "0,0,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "0,0,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet2_0" (formula "34") (term "0,1,1,0,1,0,0,0,0,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0,0,1,0,0,0,0,0") (ifseqformula "28"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "0,0,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet2_0" (formula "34") (term "0,0,1,0,1,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "34") (term "0,1,1,0,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "1,1,0,1,0,1,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "34") (term "0,0,1,0,1,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "1,0,1,0,0,1,0,1,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "1,1,0,1,0,1,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "0,1,1,0,0,0,1,0,1,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "1,0,1,0,0,1,0,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "0,1,1,0,0,0,1,0,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "notLeft" (formula "35"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "notLeft" (formula "36"))
                  (rule "andLeft" (formula "34"))
                  (rule "notLeft" (formula "35"))
                  (rule "eqSymm" (formula "47"))
                  (rule "eqSymm" (formula "41") (term "1,0,0,1,0"))
                  (rule "eqSymm" (formula "39"))
                  (rule "eqSymm" (formula "36") (term "0,1,0,1,0"))
                  (rule "eqSymm" (formula "36") (term "1,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                  (rule "subsetSingletonLeft" (formula "44"))
                  (rule "subsetSingletonLeft" (formula "43"))
                  (rule "apply_eq_monomials" (formula "35") (term "1,0,0,1,0,0") (ifseqformula "39"))
                  (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,0,1,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "35") (term "1,1,1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "35") (term "1,1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "35") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "40") (term "1,1,1,0") (inst "selectSK=selectSK_3"))
                  (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "28"))
                  (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "53")) (ifInst ""  (formula "3")))
                  (rule "replaceKnownSelect_taclet6_0" (formula "47") (term "0"))
                  (rule "replaceKnownSelect_taclet6_0" (formula "48") (term "0"))
                  (rule "replaceKnownSelect_taclet6_0" (formula "38") (term "0,0"))
                  (rule "replaceKnownSelect_taclet6_0" (formula "39") (term "0,0"))
                  (rule "replaceKnownSelect_taclet6_0" (formula "37") (term "0,1,1"))
                  (rule "replaceKnownSelect_taclet6_0" (formula "35") (term "1,0,0,1,0"))
                  (rule "eqSymm" (formula "48"))
                  (rule "eqSymm" (formula "39"))
                  (rule "elementOfUnion" (formula "40") (term "0,0"))
                  (rule "elementOfSingleton" (formula "40") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "elementOfSingleton" (formula "40") (term "0,0"))
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "hideAuxiliaryEq" (formula "40"))
                  (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "46") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "46") (term "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "38") (term "0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "38") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "37") (term "0,1,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "39") (term "1,1,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "35") (term "1,0,0,1,0"))
                  (rule "eqSymm" (formula "45"))
                  (rule "eqSymm" (formula "38"))
                  (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=selectSK_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "28"))
                  (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "49")) (ifInst ""  (formula "3")))
                  (rule "replaceKnownSelect_taclet8_0" (formula "42") (term "2"))
                  (rule "replaceKnownSelect_taclet8_0" (formula "43") (term "2"))
                  (rule "eqSymm" (formula "38"))
                  (rule "hideAuxiliaryEq" (formula "38"))
                  (rule "replaceKnownAuxiliaryConstant_taclet9_0" (formula "42") (term "2"))
                  (rule "replaceKnownAuxiliaryConstant_taclet9_0" (formula "41") (term "2"))
                  (rule "replaceKnownAuxiliaryConstant_taclet9_0" (formula "37") (term "1"))
                  (rule "elementOfUnion" (formula "37") (term "0,0"))
                  (rule "elementOfSingleton" (formula "37") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "37"))
                  (rule "elementOfSingleton" (formula "37") (term "0,0"))
                  (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "10")))
                  (rule "true_left" (formula "37"))
                  (rule "elementOfUnion" (formula "41"))
                  (builtin "One Step Simplification" (formula "41"))
                  (rule "eqSymm" (formula "41") (term "1"))
                  (rule "sortsDisjointModuloNull" (formula "41") (term "1"))
                  (rule "replace_known_right" (formula "41") (term "1,1") (ifseqformula "47"))
                  (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "45")))
                  (rule "elementOfUnion" (formula "40"))
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "eqSymm" (formula "40") (term "1"))
                  (rule "sortsDisjointModuloNull" (formula "40") (term "1"))
                  (rule "replace_known_right" (formula "40") (term "1,1") (ifseqformula "47"))
                  (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "45")))
                  (rule "elementOfUnion" (formula "41"))
                  (builtin "One Step Simplification" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "elementOfUnion" (formula "40"))
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "true_left" (formula "40"))
                  (rule "nnf_imp2or" (formula "36") (term "1,0,1,0"))
                  (rule "nnf_imp2or" (formula "38") (term "0"))
                  (rule "nnf_imp2or" (formula "34") (term "0"))
                  (rule "nnf_imp2or" (formula "37") (term "0"))
                  (rule "nnf_imp2or" (formula "35") (term "0"))
                  (rule "nnf_imp2or" (formula "36") (term "0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "nnf_notAnd" (formula "34") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                  (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                  (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "37") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                  (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "35") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                  (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                  (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "36") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                  (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                  (rule "nnf_imp2or" (formula "36") (term "0,1,0"))
                  (rule "nnf_notOr" (formula "38") (term "0,0,0"))
                  (rule "nnf_notAnd" (formula "36") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0"))
                  (rule "nnf_notOr" (formula "38") (term "0,0,0,0"))
                  (rule "shift_paren_or" (formula "33") (term "0,0"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "methodCallReturn" (formula "49") (term "1"))
                  (rule "assignment" (formula "49") (term "1"))
                  (builtin "One Step Simplification" (formula "49"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0,1,1") (ifseqformula "2"))
                  (rule "commute_or" (formula "39") (term "0,0"))
                  (rule "cnf_eqv" (formula "39") (term "1,0"))
                  (rule "nnf_notEx" (formula "39") (term "0,1,1,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,0,0,1,1,0"))
                  (rule "commute_or" (formula "37") (term "1,0,1,0"))
                  (rule "cnf_rightDist" (formula "34") (term "0"))
                  (rule "distr_forallAnd" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "commute_or" (formula "35") (term "0"))
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "typeEqDerived2" (formula "35") (term "0,0,1") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "castDel" (formula "35") (term "1,0,1"))
                  (rule "castDel" (formula "35") (term "0,0"))
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "true_left" (formula "35"))
                  (rule "cnf_rightDist" (formula "39") (term "0,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "cnf_rightDist" (formula "34") (term "0"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "commute_or" (formula "34") (term "0"))
                  (rule "shift_paren_or" (formula "37") (term "0,1,0"))
                  (rule "mapSizeNotNegativeForFiniteMaps" (formula "40") (term "0"))
                  (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "42"))
                  (builtin "One Step Simplification" (formula "40"))
                  (rule "cnf_rightDist" (formula "39") (term "0,0"))
                  (rule "commute_or" (formula "39") (term "1,0,0"))
                  (rule "methodCallEmpty" (formula "51") (term "1"))
                  (rule "tryEmpty" (formula "51") (term "1"))
                  (rule "emptyModality" (formula "51") (term "1"))
                  (rule "ifthenelse_split" (formula "51") (term "0,1,0,0,0,1") (userinteraction))
                  (branch "inDomain(heapAtPre_0[self_0.map], key) TRUE"
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "ifthenelse_split_for" (formula "28") (userinteraction))
                     (branch "inDomain(self_0.map, key) TRUE"
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "andRight" (formula "52") (userinteraction))
                        (branch "Case 1"
                           (rule "andRight" (formula "52") (userinteraction))
                           (branch "Case 1"
                              (rule "andRight" (formula "52"))
                              (branch "Case 1"
                                 (rule "orLeft" (formula "27"))
                                 (branch "self_0.keys[result_1] = null"
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "orLeft" (formula "34"))
                                    (branch "result_2.<created> = TRUE"
                                       (rule "replaceKnownSelect_taclet2_0" (formula "54") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "54") (term "1"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "26"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "29"))
                                       (rule "close" (formula "51") (ifseqformula "26"))
                                    )
                                    (branch " anon_heap_putOverwrite<<anonHeapFunction>>[result_2.<created>] = TRUE"
                                       (rule "replaceKnownSelect_taclet2_0" (formula "54") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "54") (term "1"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "29") (term "0") (ifseqformula "26"))
                                       (rule "eqSymm" (formula "29"))
                                       (rule "close" (formula "51") (ifseqformula "29"))
                                    )
                                 )
                                 (branch "self_0.keys[result_1].<created> = TRUE"
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "orLeft" (formula "34"))
                                    (branch "result_2.<created> = TRUE"
                                       (rule "replaceKnownSelect_taclet2_0" (formula "54") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "54") (term "1"))
                                       (rule "applyEq" (formula "24") (term "2") (ifseqformula "11"))
                                       (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "27"))
                                       (rule "close" (formula "50") (ifseqformula "32"))
                                    )
                                    (branch " anon_heap_putOverwrite<<anonHeapFunction>>[result_2.<created>] = TRUE"
                                       (rule "replaceKnownSelect_taclet2_0" (formula "54") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "54") (term "1"))
                                       (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "30"))
                                       (rule "close" (formula "54") (ifseqformula "35"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "orLeft" (formula "27"))
                                 (branch "self_0.keys[result_1] = null"
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "orLeft" (formula "34"))
                                    (branch "result_2.<created> = TRUE"
                                       (rule "applyEq" (formula "30") (term "0") (ifseqformula "27"))
                                       (rule "eqSymm" (formula "30"))
                                       (rule "close" (formula "52") (ifseqformula "30"))
                                    )
                                    (branch " anon_heap_putOverwrite<<anonHeapFunction>>[result_2.<created>] = TRUE"
                                       (rule "applyEq" (formula "30") (term "0") (ifseqformula "27"))
                                       (rule "eqSymm" (formula "30"))
                                       (rule "close" (formula "52") (ifseqformula "30"))
                                    )
                                 )
                                 (branch "self_0.keys[result_1].<created> = TRUE"
                                    (rule "andLeft" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "orLeft" (formula "34"))
                                    (branch "result_2.<created> = TRUE"
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "28"))
                                       (rule "close" (formula "52") (ifseqformula "34"))
                                    )
                                    (branch " anon_heap_putOverwrite<<anonHeapFunction>>[result_2.<created>] = TRUE"
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "22") (term "2") (ifseqformula "11"))
                                       (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "22") (term "2") (ifseqformula "11"))
                                       (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "28"))
                                       (rule "close" (formula "51") (ifseqformula "34"))
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "orLeft" (formula "27"))
                              (branch "self_0.keys[result_1] = null"
                                 (rule "andLeft" (formula "28"))
                                 (rule "andLeft" (formula "28"))
                                 (rule "orLeft" (formula "34"))
                                 (branch "result_2.<created> = TRUE"
                                    (rule "applyEq" (formula "23") (term "2") (ifseqformula "11"))
                                    (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "23") (term "2") (ifseqformula "11"))
                                    (rule "applyEq" (formula "29") (term "0") (ifseqformula "26"))
                                    (rule "eqSymm" (formula "29"))
                                    (rule "close" (formula "51") (ifseqformula "29"))
                                 )
                                 (branch " anon_heap_putOverwrite<<anonHeapFunction>>[result_2.<created>] = TRUE"
                                    (rule "applyEq" (formula "23") (term "2") (ifseqformula "11"))
                                    (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "30") (term "0") (ifseqformula "27"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "close" (formula "52") (ifseqformula "30"))
                                 )
                              )
                              (branch "self_0.keys[result_1].<created> = TRUE"
                                 (rule "Class_invariant_axiom_for_CaseStudyUseMaps_MapImplementation" (formula "52") (inst "o=o_2") (inst "i=i") (inst "i_0=i_0") (inst "i1=i1") (inst "i2=i2") (inst "i_1=i_1") (inst "i_2=i_2") (inst "sk=sk_11") (userinteraction))
                                 (branch "Use Axiom"
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "andRight" (formula "52") (userinteraction))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "52") (userinteraction))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "52") (userinteraction))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "52") (userinteraction))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "52") (userinteraction))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "52") (userinteraction))
                                                   (branch "Case 1"
                                                      (rule "replaceKnownSelect_taclet6_0" (formula "52") (term "0,1,1,0"))
                                                      (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "0,0,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "52") (term "0,1,1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "0,0,1,0"))
                                                      (rule "replaceKnownSelect_taclet6_0" (formula "52") (term "1,1,1,0,1"))
                                                      (rule "replaceKnownSelect_taclet2_0" (formula "52") (term "0,0,1,0,1"))
                                                      (rule "replaceKnownSelect_taclet6_0" (formula "52") (term "0,0,1,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "52") (term "1,1,1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "52") (term "0,0,1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "52") (term "0,0,1,0,0"))
                                                      (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "1,1,0,1,0,1"))
                                                      (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "0,1,1,0,0,1"))
                                                      (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "0,0,1,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet8_0" (formula "52") (term "0,1,0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "1,1,0,1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "0,1,1,0,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "0,0,1,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet9_0" (formula "52") (term "0,1,0,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet6_0" (formula "52") (term "0,1,1,1,0,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet6_0" (formula "52") (term "0,0,1,0,0,0,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "0,1,0,1,1,0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "52") (term "0,1,1,1,0,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "0,1,1,0,0,1,0,0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "52") (term "0,0,1,0,0,0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "0,1,0,1,1,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "46")) (ifInst ""  (formula "12")) (ifInst ""  (formula "13")))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "0,0,1,0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "0,1,1,0,0,1,0,0"))
                                                      (rule "replaceKnownSelect_taclet6_0" (formula "52") (term "1,0,0,1,0,1,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet6_0" (formula "52") (term "0,1,1,0,0,1,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "52") (term "1,0,0,1,0,1,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "52") (term "0,1,1,0,0,1,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "0,1,1,0,0,0,0,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "0,1,1,0,0,1,0,1,0,0"))
                                                      (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "1,0,0,1,0,0,0,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "1,1,0,1,0,1,0,1,0,0"))
                                                      (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "1,0,0,1,0,1,0,1,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "0,1,1,0,0,0,0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "0,1,1,0,0,1,0,1,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "1,0,0,1,0,0,0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "1,1,0,1,0,1,0,1,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "1,0,0,1,0,1,0,1,0,0"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "andLeft" (formula "28"))
                                                      (rule "eqSymm" (formula "54") (term "1,1,0,1,0,1,0,0"))
                                                      (rule "eqSymm" (formula "54") (term "1,0"))
                                                      (rule "eqSymm" (formula "54") (term "0,1,0,1,0,1,0,0"))
                                                      (rule "replace_known_right" (formula "54") (term "0,1,0,0,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "15")))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,0,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                      (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "24") (term "2") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "23") (term "2") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                      (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "50") (term "0,1,0,0,1,0,0,1,0,0") (ifseqformula "14"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,0,1,0"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,0,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "49") (ifseqformula "25"))
                                                      (rule "mul_literals" (formula "49") (term "1,0,0"))
                                                      (rule "add_literals" (formula "49") (term "0,0"))
                                                      (rule "leq_literals" (formula "49") (term "0"))
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "elementOfUnion" (formula "22"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "eqSymm" (formula "22") (term "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "22") (term "1"))
                                                      (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "46")))
                                                      (rule "elementOfUnion" (formula "21"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "eqSymm" (formula "21") (term "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "21") (term "1"))
                                                      (rule "replace_known_right" (formula "21") (term "1,1") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "44")))
                                                      (rule "elementOfUnion" (formula "22"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "elementOfUnion" (formula "21"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "nnf_imp2or" (formula "47") (term "1,0,1,0,1,0"))
                                                      (rule "nnf_imp2or" (formula "47") (term "0,1"))
                                                      (rule "nnf_imp2or" (formula "47") (term "0,0,0,0"))
                                                      (rule "nnf_imp2or" (formula "47") (term "0,1,0,0"))
                                                      (rule "nnf_imp2or" (formula "47") (term "0,1,0"))
                                                      (rule "nnf_notAnd" (formula "47") (term "0,0,1"))
                                                      (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,1"))
                                                      (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,1"))
                                                      (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,1"))
                                                      (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,1"))
                                                      (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,1"))
                                                      (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,1"))
                                                      (rule "add_zero_right" (formula "47") (term "0,0,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,1"))
                                                      (rule "mul_literals" (formula "47") (term "1,0,0,0,1"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "nnf_notAnd" (formula "47") (term "0,0,1"))
                                                      (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,1"))
                                                      (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,1"))
                                                      (rule "add_zero_right" (formula "47") (term "0,0,0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,1"))
                                                      (rule "mul_literals" (formula "47") (term "1,0,0,0,1"))
                                                      (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,1"))
                                                      (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,1"))
                                                      (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,1"))
                                                      (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,1"))
                                                      (rule "nnf_imp2or" (formula "47") (term "0,1,0,1"))
                                                      (rule "nnf_notAnd" (formula "47") (term "0,0,1,0"))
                                                      (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "47") (term "0,0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "47") (term "1,0,0,0,1,0"))
                                                      (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,1,0"))
                                                      (rule "replace_known_left" (formula "47") (term "1,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "nnf_notAnd" (formula "47") (term "0,0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,0"))
                                                      (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,0"))
                                                      (rule "mul_literals" (formula "47") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,0"))
                                                      (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,0"))
                                                      (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "allRight" (formula "47") (inst "sk=i1_5"))
                                                      (rule "orRight" (formula "47"))
                                                      (rule "orRight" (formula "47"))
                                                      (rule "allRight" (formula "49") (inst "sk=i2_5"))
                                                      (rule "orRight" (formula "49"))
                                                      (rule "notRight" (formula "49"))
                                                      (rule "orRight" (formula "50"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notRight" (formula "51"))
                                                      (rule "inEqSimp_leqRight" (formula "50"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "51"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=selectSK_50"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "25")))
                                                      (rule "eqSymm" (formula "4"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "47")) (ifInst ""  (formula "25")))
                                                      (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                      (rule "elementOfSingleton" (formula "3") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "eqSymm" (formula "3") (term "0,1,0,0"))
                                                      (rule "eqSymm" (formula "3") (term "1,1,0,0"))
                                                      (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                      (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                      (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "eqSymm" (formula "3"))
                                                      (rule "ex_pull_out2" (formula "42") (term "0,1,0"))
                                                      (rule "all_pull_out2" (formula "42") (term "1,1,0"))
                                                      (rule "all_pull_out3" (formula "40") (term "0"))
                                                      (rule "allLeft" (formula "15") (inst "t=i1_5"))
                                                      (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "cut_direct" (formula "35") (term "0"))
                                                      (branch "CUT: result_2.<created> = TRUE TRUE"
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "true_left" (formula "36"))
                                                         (rule "commute_or_2" (formula "15") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "41") (term "0,0"))
                                                         (rule "commute_or" (formula "43") (term "0,0,1,0"))
                                                         (rule "commute_or_2" (formula "43") (term "0,1,1,0"))
                                                         (rule "inDomainImpliesCreated" (formula "6"))
                                                         (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "43") (term "0,0,1,1,0"))
                                                         (rule "shift_paren_or" (formula "41") (term "0,0,0,0"))
                                                         (rule "commute_or" (formula "43") (term "0,0,0,1,1,0"))
                                                         (rule "cnf_rightDist" (formula "43") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "43") (term "1,0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "43") (term "0,0,0,1,0"))
                                                         (rule "commute_or" (formula "43") (term "1,0,0,0,1,0"))
                                                         (rule "ex_pull_out0" (formula "43") (term "1,0"))
                                                         (rule "allLeft" (formula "21") (inst "t=result_1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                                         (rule "applyEq" (formula "21") (term "1,0,1") (ifseqformula "32"))
                                                         (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "38"))
                                                         (rule "eqSymm" (formula "21") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "31"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "30"))
                                                         (rule "qeq_literals" (formula "21") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "allLeft" (formula "22") (inst "t=i1_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "22") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "allLeft" (formula "23") (inst "t=i2_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                                         (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "22"))
                                                         (rule "eqSymm" (formula "23") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "23") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "23") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "allLeft" (formula "42") (inst "t=result_1"))
                                                         (rule "replaceKnownSelect_taclet4_0" (formula "42") (term "0,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "42") (term "0,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                         (rule "applyEq" (formula "42") (term "0,0,1") (ifseqformula "34"))
                                                         (rule "replace_known_right" (formula "42") (term "0,1") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "allLeft" (formula "42") (inst "t=i1_5"))
                                                         (rule "replaceKnownSelect_taclet11_0" (formula "42") (term "0,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet12_0" (formula "42") (term "0,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                         (rule "applyEq" (formula "42") (term "0,0,1") (ifseqformula "3"))
                                                         (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "42") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "42") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "notLeft" (formula "42"))
                                                         (rule "allLeft" (formula "42") (inst "t=i2_5"))
                                                         (rule "replaceKnownSelect_taclet10_0" (formula "42") (term "0,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet12_0" (formula "42") (term "0,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                         (rule "applyEq" (formula "42") (term "0,0,1") (ifseqformula "3"))
                                                         (rule "replace_known_right" (formula "42") (term "0,1") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "allLeft" (formula "13") (inst "t=result_1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                         (rule "applyEq" (formula "13") (term "0,0,1") (ifseqformula "35"))
                                                         (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "allLeft" (formula "43") (inst "t=i2_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "1,0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "43") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "43") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "43") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "43") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "43") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "43") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "notLeft" (formula "43"))
                                                         (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=selectSK_51"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "8")))
                                                         (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "24"))
                                                         (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                         (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "allLeft" (formula "14") (inst "t=i2_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                         (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "4"))
                                                         (rule "replace_known_right" (formula "14") (term "0,1") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "allLeft" (formula "26") (inst "t=key"))
                                                         (rule "exLeft" (formula "26") (inst "sk=i_32"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "eqSymm" (formula "28") (term "1,0"))
                                                         (rule "replace_known_right" (formula "28") (term "1,0,0") (ifseqformula "61"))
                                                         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "7")) (ifInst ""  (formula "12")))
                                                         (rule "replace_known_left" (formula "26") (term "0,1") (ifseqformula "12"))
                                                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "7")) (ifInst ""  (formula "61")))
                                                         (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "61")) (ifInst ""  (formula "12")))
                                                         (rule "inEqSimp_homoInEq0" (formula "27"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                         (rule "mul_literals" (formula "27") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                         (rule "allLeft" (formula "15") (inst "t=result_1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                         (rule "applyEq" (formula "15") (term "0,0,1") (ifseqformula "23"))
                                                         (rule "replace_known_right" (formula "15") (term "0,1") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "allLeft" (formula "15") (inst "t=i1_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                         (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "15") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "notLeft" (formula "15"))
                                                         (rule "allLeft" (formula "15") (inst "t=i2_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                         (rule "applyEq" (formula "15") (term "0,0,1") (ifseqformula "25"))
                                                         (rule "replace_known_right" (formula "15") (term "0,1") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "true_left" (formula "15"))
                                                         (rule "allLeft" (formula "47") (inst "t=result_1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0") (ifseqformula "36"))
                                                         (rule "qeq_literals" (formula "47") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "37"))
                                                         (rule "inEqSimp_homoInEq1" (formula "47") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "47") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "47") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "notLeft" (formula "47"))
                                                         (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=selectSK_52"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "9")))
                                                         (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "23"))
                                                         (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "allLeft" (formula "47") (inst "t=i1_5"))
                                                         (rule "inEqSimp_commuteGeq" (formula "47") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "47") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "47") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_contradInEq1" (formula "47") (term "0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "47") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "notLeft" (formula "47"))
                                                         (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=selectSK_53"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "9")))
                                                         (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "eqSymm" (formula "1") (term "0,0"))
                                                         (rule "all_pull_out1" (formula "51") (term "0,1,0"))
                                                         (rule "allLeft" (formula "50") (inst "t=result_1"))
                                                         (rule "replaceKnownSelect_taclet14_0" (formula "50") (term "1,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "50") (term "1,1"))
                                                         (rule "replaceKnownSelect_taclet4_0" (formula "50") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "50") (term "1,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "50") (term "1,0"))
                                                         (rule "applyEq" (formula "50") (term "1,0,1") (ifseqformula "39"))
                                                         (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0") (ifseqformula "37"))
                                                         (rule "qeq_literals" (formula "50") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "38"))
                                                         (rule "inEqSimp_homoInEq1" (formula "50") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0"))
                                                         (rule "add_literals" (formula "50") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "50") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "50") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "50") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "allLeft" (formula "51") (inst "t=i1_5"))
                                                         (rule "replaceKnownSelect_taclet16_0" (formula "51") (term "1,1"))
                                                         (rule "replaceKnownSelect_taclet11_0" (formula "51") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet12_0" (formula "51") (term "1,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0"))
                                                         (rule "applyEq" (formula "51") (term "1,0,1") (ifseqformula "5"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "51") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "51") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "51"))
                                                         (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "51"))
                                                         (rule "hideAuxiliaryEq" (formula "51"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "applyEq" (formula "55") (term "0") (ifseqformula "1"))
                                                         (rule "ifEqualsNull" (formula "55"))
                                                         (rule "orRight" (formula "55"))
                                                         (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "false_right" (formula "56"))
                                                         (rule "allLeft" (formula "51") (inst "t=i2_5"))
                                                         (rule "replaceKnownSelect_taclet13_0" (formula "51") (term "1,1"))
                                                         (rule "replaceKnownSelect_taclet10_0" (formula "51") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet12_0" (formula "51") (term "1,0,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0"))
                                                         (rule "applyEq" (formula "51") (term "1,0,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "6"))
                                                         (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "inEqSimp_contradInEq1" (formula "51") (term "0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0"))
                                                         (rule "add_literals" (formula "51") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "51") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "51") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "51") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "applyEq" (formula "1") (term "1") (ifseqformula "51"))
                                                         (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                                         (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "eqSymm" (formula "50"))
                                                         (rule "applyEq" (formula "50") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                         (rule "ifEqualsNull" (formula "58"))
                                                         (rule "orRight" (formula "58"))
                                                         (rule "replace_known_right" (formula "59") (term "1") (ifseqformula "57"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "false_right" (formula "59"))
                                                         (rule "applyEq" (formula "1") (term "1") (ifseqformula "50"))
                                                         (rule "allLeft" (formula "16") (inst "t=i2_5"))
                                                         (rule "replace_known_left" (formula "16") (term "0,1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "68")))
                                                         (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                         (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "16") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "16"))
                                                         (rule "qeq_literals" (formula "5") (term "0"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "closeFalse" (formula "5"))
                                                      )
                                                      (branch "CUT: result_2.<created> = TRUE FALSE"
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "commute_or_2" (formula "15") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "41") (term "0,0"))
                                                         (rule "commute_or" (formula "43") (term "0,0,1,0"))
                                                         (rule "commute_or_2" (formula "43") (term "0,1,1,0"))
                                                         (rule "inDomainImpliesCreated" (formula "6"))
                                                         (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                                         (rule "commute_or_2" (formula "43") (term "0,0,1,1,0"))
                                                         (rule "shift_paren_or" (formula "41") (term "0,0,0,0"))
                                                         (rule "commute_or" (formula "43") (term "0,0,0,1,1,0"))
                                                         (rule "cnf_rightDist" (formula "43") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "43") (term "1,0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "43") (term "0,0,0,1,0"))
                                                         (rule "commute_or" (formula "43") (term "1,0,0,0,1,0"))
                                                         (rule "ex_pull_out0" (formula "43") (term "1,0"))
                                                         (rule "allLeft" (formula "21") (inst "t=result_1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                                         (rule "applyEq" (formula "21") (term "1,0,1") (ifseqformula "32"))
                                                         (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "38"))
                                                         (rule "eqSymm" (formula "21") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "31"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "30"))
                                                         (rule "qeq_literals" (formula "21") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "referencedObjectIsCreatedRightEQ" (formula "47") (ifseqformula "21") (ifseqformula "48"))
                                                         (rule "close" (formula "47") (ifseqformula "8"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "52") (inst "sk=o_2_12") (userinteraction))
                                                      (rule "impRight" (formula "52") (userinteraction))
                                                      (rule "equiv_right" (formula "53") (userinteraction))
                                                      (branch "Case 1"
                                                         (rule "replaceKnownSelect_taclet2_0" (formula "54") (term "0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "54") (term "0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0") (ifseqformula "32"))
                                                         (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "1,0,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "1") (term "1,0,1,0"))
                                                         (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0,1,1,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "1") (term "0,1,1,0,0"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "notLeft" (formula "3"))
                                                         (rule "exLeft" (formula "1") (inst "sk=i_38"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "50"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "inEqSimp_ltToLeq" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "1"))
                                                         (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "23") (term "0") (ifseqformula "25"))
                                                         (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "32"))
                                                         (rule "applyEq" (formula "25") (term "2") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "45") (term "0") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "26") (term "2") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "32"))
                                                         (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "32"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_contradEq7" (formula "54") (ifseqformula "29"))
                                                         (rule "add_zero_left" (formula "54") (term "0,0"))
                                                         (rule "mul_literals" (formula "54") (term "0,0"))
                                                         (rule "leq_literals" (formula "54") (term "0"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "false_right" (formula "54"))
                                                         (rule "elementOfUnion" (formula "25"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "eqSymm" (formula "25") (term "1"))
                                                         (rule "sortsDisjointModuloNull" (formula "25") (term "1"))
                                                         (rule "replace_known_right" (formula "25") (term "1,1") (ifseqformula "51"))
                                                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "49")))
                                                         (rule "elementOfUnion" (formula "26"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "eqSymm" (formula "26") (term "1"))
                                                         (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
                                                         (rule "replace_known_right" (formula "26") (term "0,1") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "51")))
                                                         (rule "elementOfUnion" (formula "25"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "elementOfUnion" (formula "25"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "true_left" (formula "25"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=selectSK_64"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "24")))
                                                         (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                                         (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                         (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "elementOfSingleton" (formula "3") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                         (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                         (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "ex_pull_out2" (formula "42") (term "0,1,0"))
                                                         (rule "commute_or" (formula "42") (term "0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "42") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "42") (term "1,0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "42") (term "0,0,0,1,0"))
                                                         (rule "commute_or" (formula "42") (term "1,0,0,0,1,0"))
                                                         (rule "all_pull_out3" (formula "40") (term "0"))
                                                         (rule "shift_paren_or" (formula "40") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "40") (term "0,0,0,0"))
                                                         (rule "all_pull_out2" (formula "42") (term "1,1,0"))
                                                         (rule "commute_or_2" (formula "42") (term "0,1,1,0"))
                                                         (rule "commute_or_2" (formula "42") (term "0,0,1,1,0"))
                                                         (rule "commute_or" (formula "42") (term "0,0,0,1,1,0"))
                                                         (rule "cut_direct" (formula "34") (term "0"))
                                                         (branch "CUT: result_2.<created> = TRUE TRUE"
                                                            (builtin "One Step Simplification" (formula "35"))
                                                            (rule "true_left" (formula "35"))
                                                            (rule "cut_direct" (formula "5") (term "0"))
                                                            (branch "CUT: o_2_12.<created> = TRUE TRUE"
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "ex_pull_out0" (formula "42") (term "1,0"))
                                                               (rule "all_pull_out1" (formula "42") (term "0,1,0"))
                                                               (rule "ex_pull_out3" (formula "42") (term "0"))
                                                               (rule "all_pull_out3" (formula "42") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                                                               (rule "distr_forallAnd" (formula "42") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "distr_existsAnd1" (formula "42") (term "0"))
                                                               (rule "distr_forallAnd" (formula "42"))
                                                               (rule "andLeft" (formula "42"))
                                                               (rule "cnf_rightDist" (formula "43") (term "0,0"))
                                                               (rule "distr_forallAnd" (formula "43") (term "0"))
                                                               (rule "distr_forallAnd" (formula "43"))
                                                               (rule "andLeft" (formula "43"))
                                                               (rule "commute_or_2" (formula "43") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "44") (term "0,0"))
                                                               (rule "commute_or_2" (formula "44") (term "0,0,0"))
                                                               (rule "shift_paren_or" (formula "43") (term "0,0,0"))
                                                               (rule "swapQuantifiersAll" (formula "43"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "castDel" (formula "43") (term "1,0,0,0,0,0,0"))
                                                               (rule "castDel" (formula "43") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "43") (term "0,1,0,0,0"))
                                                               (rule "instanceof_static_type" (formula "43") (term "0,0,1,0"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "commute_or" (formula "44") (term "0,0,0,0"))
                                                               (rule "swapQuantifiersAll" (formula "44"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "castDel" (formula "44") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "44") (term "1,0,0,0,0,0,0"))
                                                               (rule "castDel" (formula "44") (term "0,1,0,0,0"))
                                                               (rule "instanceof_static_type" (formula "44") (term "0,0,1,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "cnf_rightDist" (formula "42") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "42") (term "1,0,0"))
                                                               (rule "commute_or_2" (formula "42") (term "1,1,0,0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "42") (term "0,0,1,0,0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0,1,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                                                               (rule "commute_or" (formula "42") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "42") (term "0,0,1,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "42") (term "1,0,0,0"))
                                                               (rule "commute_or_2" (formula "42") (term "1,1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0,1,0,0,0"))
                                                               (rule "commute_or" (formula "42") (term "0,1,1,0,0,0"))
                                                               (rule "cnf_rightDist" (formula "42") (term "0,0,0,0"))
                                                               (rule "commute_or_2" (formula "42") (term "1,0,0,0,0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0,0,0,0,0"))
                                                               (rule "commute_or" (formula "42") (term "0,1,0,0,0,0"))
                                                               (rule "shift_paren_and" (formula "42") (term "0,0,0"))
                                                               (rule "shift_paren_and" (formula "42") (term "0,0"))
                                                               (rule "allLeft" (formula "41") (inst "t=result_1"))
                                                               (rule "replaceKnownSelect_taclet4_0" (formula "41") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "41") (term "1,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                                                               (rule "applyEq" (formula "41") (term "1,0,1") (ifseqformula "30"))
                                                               (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "28"))
                                                               (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "29"))
                                                               (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "41") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "pullOutSelect" (formula "41") (term "1") (inst "selectSK=selectSK_67"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "32"))
                                                               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "52")) (ifInst ""  (formula "7")))
                                                               (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "42"))
                                                               (rule "hideAuxiliaryEq" (formula "42"))
                                                               (rule "elementOfUnion" (formula "41") (term "0,0"))
                                                               (rule "elementOfSingleton" (formula "41") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "elementOfSingleton" (formula "41") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "eqSymm" (formula "41"))
                                                               (rule "allLeft" (formula "42") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet10_0" (formula "42") (term "1,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                               (rule "applyEqRigid" (formula "42") (term "1,0,1") (ifseqformula "4"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                                                               (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "42") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "42") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "pullOutSelect" (formula "42") (term "1") (inst "selectSK=selectSK_68"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "32"))
                                                               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "53")) (ifInst ""  (formula "7")))
                                                               (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "43"))
                                                               (rule "hideAuxiliaryEq" (formula "43"))
                                                               (rule "elementOfUnion" (formula "42") (term "0,0"))
                                                               (rule "elementOfSingleton" (formula "42") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "elementOfSingleton" (formula "42") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "eqSymm" (formula "42"))
                                                               (rule "eqSymm" (formula "42") (term "0,1"))
                                                               (rule "allLeft" (formula "21") (inst "t=key"))
                                                               (rule "exLeft" (formula "21") (inst "sk=i_40"))
                                                               (rule "andLeft" (formula "21"))
                                                               (rule "andLeft" (formula "21"))
                                                               (rule "eqSymm" (formula "23") (term "1,0"))
                                                               (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "11"))
                                                               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "6")) (ifInst ""  (formula "59")))
                                                               (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "6"))
                                                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "59")) (ifInst ""  (formula "11")))
                                                               (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "6"))
                                                               (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "59")) (ifInst ""  (formula "11")))
                                                               (rule "inEqSimp_homoInEq0" (formula "22"))
                                                               (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                               (rule "mul_literals" (formula "22") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                                               (rule "allLeft" (formula "20") (inst "t=result_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                               (rule "applyEq" (formula "20") (term "1,0,1") (ifseqformula "34"))
                                                               (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "40"))
                                                               (rule "eqSymm" (formula "20") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "33"))
                                                               (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "20") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "32"))
                                                               (rule "qeq_literals" (formula "20") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "allLeft" (formula "21") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                                               (rule "applyEq" (formula "21") (term "1,0,1") (ifseqformula "3"))
                                                               (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "21"))
                                                               (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "21") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "21"))
                                                               (rule "allLeft" (formula "13") (inst "t=result_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                               (rule "applyEq" (formula "13") (term "0,0,1") (ifseqformula "36"))
                                                               (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "allLeft" (formula "13") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                               (rule "applyEq" (formula "13") (term "0,0,1") (ifseqformula "3"))
                                                               (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "55"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "allLeft" (formula "14") (inst "t=result_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                               (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "21"))
                                                               (rule "replace_known_right" (formula "14") (term "0,1") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "allLeft" (formula "14") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "14"))
                                                               (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                               (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "14") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "14"))
                                                               (rule "notLeft" (formula "14"))
                                                               (rule "allLeft" (formula "43") (inst "t=result_1"))
                                                               (rule "replaceKnownSelect_taclet4_0" (formula "43") (term "0,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "43") (term "0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0"))
                                                               (rule "applyEq" (formula "43") (term "0,0,1") (ifseqformula "35"))
                                                               (rule "replace_known_right" (formula "43") (term "0,1") (ifseqformula "63"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "true_left" (formula "43"))
                                                               (rule "allLeft" (formula "43") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet10_0" (formula "43") (term "0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "43") (term "1,0"))
                                                               (rule "applyEq" (formula "43") (term "0,0,1") (ifseqformula "4"))
                                                               (rule "replace_known_right" (formula "43") (term "0,1") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "true_left" (formula "43"))
                                                               (rule "allLeft" (formula "44") (inst "t=result_1"))
                                                               (rule "replaceKnownSelect_taclet11_0" (formula "44") (term "0,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet12_0" (formula "44") (term "0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0"))
                                                               (rule "applyEq" (formula "44") (term "0,0,1") (ifseqformula "47"))
                                                               (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "34"))
                                                               (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "44") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "44") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "44") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "44") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "33"))
                                                               (rule "qeq_literals" (formula "44") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "notLeft" (formula "44"))
                                                               (rule "allLeft" (formula "44") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet13_0" (formula "44") (term "0,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet14_0" (formula "44") (term "0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "44") (term "1,0"))
                                                               (rule "applyEq" (formula "44") (term "0,0,1") (ifseqformula "48"))
                                                               (rule "ifEqualsNull" (formula "44") (term "0,1"))
                                                               (rule "replace_known_right" (formula "44") (term "1,1,0,1") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "inEqSimp_contradInEq1" (formula "44") (term "0,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "44") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "inEqSimp_contradInEq1" (formula "44") (term "0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "44") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0"))
                                                               (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "44") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "44") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "notLeft" (formula "44"))
                                                               (rule "inDomainImpliesCreated" (formula "6"))
                                                               (rule "notInDomain" (formula "65"))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "48"))
                                                               (rule "applyEq" (formula "48") (term "1") (ifseqformula "1"))
                                                               (rule "allLeft" (formula "23") (inst "t=i_40"))
                                                               (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                                               (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "27"))
                                                               (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "43"))
                                                               (rule "eqSymm" (formula "23") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "26"))
                                                               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "23") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "25"))
                                                               (rule "qeq_literals" (formula "23") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "allLeft" (formula "14") (inst "t=i_40"))
                                                               (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                               (rule "applyEq" (formula "14") (term "0,0,1") (ifseqformula "28"))
                                                               (rule "replace_known_right" (formula "14") (term "0,1") (ifseqformula "67"))
                                                               (builtin "One Step Simplification" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "allLeft" (formula "15") (inst "t=i_40"))
                                                               (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                                                               (rule "applyEq" (formula "15") (term "0,0,1") (ifseqformula "24"))
                                                               (rule "replace_known_right" (formula "15") (term "0,1") (ifseqformula "61"))
                                                               (builtin "One Step Simplification" (formula "15"))
                                                               (rule "true_left" (formula "15"))
                                                               (rule "allLeft" (formula "45") (inst "t=i_40"))
                                                               (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "26"))
                                                               (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "45") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "45") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "45") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "25"))
                                                               (rule "qeq_literals" (formula "45") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "notLeft" (formula "45"))
                                                               (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=selectSK_69"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "32")))
                                                               (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "28"))
                                                               (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                               (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,1,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "65"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "allLeft" (formula "16") (inst "t=result_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "16") (term "1,0,0,0,0,0"))
                                                               (rule "applyEq" (formula "16") (term "1,0,1,0") (ifseqformula "38"))
                                                               (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0,0,0,0") (ifseqformula "36"))
                                                               (rule "qeq_literals" (formula "16") (term "0,0,0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "16"))
                                                               (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0,0,0,0") (ifseqformula "37"))
                                                               (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "1,1,0,0,0,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0"))
                                                               (rule "leq_literals" (formula "16") (term "0,0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "16"))
                                                               (rule "commute_or_2" (formula "16") (term "0,0"))
                                                               (rule "allLeft" (formula "17") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0,0,0,0,0"))
                                                               (rule "applyEq" (formula "17") (term "1,0,1,0") (ifseqformula "4"))
                                                               (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0,0,0,0") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,0,0,0") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0,0"))
                                                               (rule "leq_literals" (formula "17") (term "0,0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "commute_or_2" (formula "17") (term "0,0"))
                                                               (rule "allLeft" (formula "31") (inst "t=i_38"))
                                                               (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0,0"))
                                                               (rule "applyEq" (formula "31") (term "1,0,0,1") (ifseqformula "4"))
                                                               (rule "replace_known_left" (formula "31") (term "0,1") (ifseqformula "6"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "applyEq" (formula "31") (term "1,0,0,0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "31") (term "0,1") (ifseqformula "4"))
                                                               (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "3"))
                                                               (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                               (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "31") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                                               (rule "qeq_literals" (formula "31") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "allLeft" (formula "32") (inst "t=result_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "32") (term "1,0,0"))
                                                               (rule "applyEq" (formula "32") (term "1,0,0,0,0") (ifseqformula "41"))
                                                               (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "7"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "true_left" (formula "32"))
                                                               (rule "allLeft" (formula "49") (inst "t=i_40"))
                                                               (rule "inEqSimp_commuteGeq" (formula "49") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "28"))
                                                               (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "49") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "49") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "49") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "27"))
                                                               (rule "qeq_literals" (formula "49") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "notLeft" (formula "49"))
                                                               (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=selectSK_70"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "9")))
                                                               (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "26"))
                                                               (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "eqSymm" (formula "1") (term "0,0"))
                                                               (rule "ifthenelse_split" (formula "2") (term "0"))
                                                               (branch "result_1 = i_38 TRUE"
                                                                  (rule "eqSymm" (formula "3"))
                                                                  (rule "replace_known_left" (formula "62") (term "0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "applyEq" (formula "42") (term "0,2,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "25") (term "0,2,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "63") (term "0,2,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0"))
                                                                  (rule "applyEq" (formula "53") (term "1") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "42") (term "0,1,1,1,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "40"))
                                                                  (rule "eqSymm" (formula "6"))
                                                                  (rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "51") (term "0,2,1") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "61") (term "0") (ifseqformula "25"))
                                                                  (rule "applyEq" (formula "26") (term "1") (ifseqformula "25"))
                                                                  (rule "applyEq" (formula "69") (term "1") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "19") (term "1,0,1,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "32") (term "1") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "7") (term "1") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "50") (term "1,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "58") (term "0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "6"))
                                                                  (rule "allLeft" (formula "48") (inst "t=i_40"))
                                                                  (rule "replaceKnownSelect_taclet17_0" (formula "48") (term "1,1"))
                                                                  (rule "replaceKnownSelect_taclet15_0" (formula "48") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "48") (term "1,0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0"))
                                                                  (rule "applyEq" (formula "48") (term "0,1") (ifseqformula "47"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "27"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "48") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "48") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "48") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "48") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "26"))
                                                                  (rule "qeq_literals" (formula "48") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "48"))
                                                                  (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "48"))
                                                                  (rule "hideAuxiliaryEq" (formula "48"))
                                                                  (rule "allLeft" (formula "46") (inst "t=i_38"))
                                                                  (rule "replaceKnownSelect_taclet10_0" (formula "46") (term "1,0,1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "46") (term "1,0,0,0,0,0"))
                                                                  (rule "applyEq" (formula "46") (term "1,0,1,0") (ifseqformula "7"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0,0,0,0,0") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "46") (term "1,1,0,0,1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "46") (term "1,0,0,1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "46") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "leq_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0,0,0,0") (ifseqformula "4"))
                                                                  (rule "qeq_literals" (formula "46") (term "0,0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "commute_or_2" (formula "46") (term "0,0"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch "i_40 = i_38 TRUE"
                                                                     (rule "applyEq" (formula "27") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEqRigid" (formula "25") (term "0,2,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "27") (term "0,2,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "applyEqRigid" (formula "25") (term "1,1") (ifseqformula "1"))
                                                                     (rule "allLeft" (formula "47") (inst "t=i_38"))
                                                                     (rule "replaceKnownSelect_taclet10_0" (formula "47") (term "0,1,0"))
                                                                     (rule "replaceKnownSelect_taclet10_0" (formula "47") (term "1,0,0,1"))
                                                                     (rule "replaceKnownSelect_taclet10_0" (formula "47") (term "1,0,0,0,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "47") (term "1,0,0"))
                                                                     (rule "applyEq" (formula "47") (term "1,0,0,1") (ifseqformula "7"))
                                                                     (rule "replace_known_left" (formula "47") (term "0,1") (ifseqformula "13"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "applyEq" (formula "47") (term "1,0,0,0") (ifseqformula "7"))
                                                                     (rule "replace_known_right" (formula "47") (term "0,0,0") (ifseqformula "60"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "7"))
                                                                     (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "59"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "5"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "47") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "47") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "47") (ifseqformula "4"))
                                                                     (rule "qeq_literals" (formula "47") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "closeFalse" (formula "47"))
                                                                  )
                                                                  (branch "i_40 = i_38 FALSE"
                                                                     (rule "eqSymm" (formula "1"))
                                                                     (rule "applyEq" (formula "48") (term "1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
                                                                     (rule "allLeft" (formula "17") (inst "t=i_40"))
                                                                     (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "29"))
                                                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "56")))
                                                                     (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "28"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "17") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "17") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "17"))
                                                                     (rule "qeq_literals" (formula "27") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "closeFalse" (formula "27"))
                                                                  )
                                                               )
                                                               (branch "result_1 = i_38 FALSE"
                                                                  (rule "eqSymm" (formula "2"))
                                                                  (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "60"))
                                                                  (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "false_right" (formula "62"))
                                                                  (rule "applyEq" (formula "53") (term "1") (ifseqformula "2"))
                                                                  (rule "allLeft" (formula "54") (inst "t=i_40"))
                                                                  (rule "replaceKnownSelect_taclet17_0" (formula "54") (term "1,1"))
                                                                  (rule "replaceKnownSelect_taclet15_0" (formula "54") (term "1,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "54") (term "1,0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "54") (term "1,0"))
                                                                  (rule "applyEq" (formula "54") (term "0,1") (ifseqformula "52"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "54") (term "1,0") (ifseqformula "29"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "54") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "54") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "54") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "54") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "54") (term "0") (ifseqformula "28"))
                                                                  (rule "qeq_literals" (formula "54") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "54"))
                                                                  (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "54"))
                                                                  (rule "hideAuxiliaryEq" (formula "54"))
                                                                  (rule "allLeft" (formula "51") (inst "t=i_38"))
                                                                  (rule "replaceKnownSelect_taclet10_0" (formula "51") (term "1,0,1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "51") (term "1,0,0,0,0,0"))
                                                                  (rule "applyEqRigid" (formula "51") (term "1,0,1,0") (ifseqformula "6"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "qeq_literals" (formula "51") (term "0,0,0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0,0,0,0") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "51") (term "1,1,0,0,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "51") (term "0,0,0,0,0,0,0"))
                                                                  (rule "leq_literals" (formula "51") (term "0,0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "commute_or_2" (formula "51") (term "0,0"))
                                                                  (rule "allLeft" (formula "52") (inst "t=result_1"))
                                                                  (rule "replaceKnownSelect_taclet4_0" (formula "52") (term "1,0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "52") (term "1,0,1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0,0,0,0,0"))
                                                                  (rule "applyEq" (formula "52") (term "1,0,1,0") (ifseqformula "41"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0,0,0,0,0") (ifseqformula "39"))
                                                                  (rule "qeq_literals" (formula "52") (term "0,0,0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0,0,0,0") (ifseqformula "40"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "52") (term "1,1,0,0,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "52") (term "0,0,0,0,0,0,0"))
                                                                  (rule "leq_literals" (formula "52") (term "0,0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "commute_or_2" (formula "52") (term "0,0"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0") (ifseqformula "10"))
                                                                  (rule "applyEq" (formula "5") (term "1,0,1") (ifseqformula "6"))
                                                                  (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "8"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "true_left" (formula "5"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "1") (ifseqformula "42"))
                                                                  (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "64"))
                                                                  (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch "result_1 = i_40 TRUE"
                                                                     (rule "eqSymm" (formula "2"))
                                                                     (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "25") (term "0,2,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "42") (term "0,1,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "39") (term "0,2,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "60") (term "0,2,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "50") (term "0,2,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "51") (term "0,2,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "48") (term "1,1,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "17") (term "1,1,0,0,0") (ifseqformula "1"))
                                                                     (rule "allLeft" (formula "30") (inst "t=o_2_12"))
                                                                     (rule "exLeft" (formula "30") (inst "sk=i_42"))
                                                                     (rule "andLeft" (formula "30"))
                                                                     (rule "andLeft" (formula "30"))
                                                                     (rule "eqSymm" (formula "32") (term "1,0"))
                                                                     (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "34"))
                                                                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "65")) (ifInst ""  (formula "7")))
                                                                     (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "34"))
                                                                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "65")) (ifInst ""  (formula "7")))
                                                                     (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "34"))
                                                                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "65")) (ifInst ""  (formula "7")))
                                                                     (rule "inEqSimp_homoInEq0" (formula "31"))
                                                                     (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                                     (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                                     (rule "mul_literals" (formula "31") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                                     (rule "allLeft" (formula "35") (inst "t=i_40"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "35") (term "1,0,0"))
                                                                     (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "29"))
                                                                     (rule "replace_known_right" (formula "35") (term "1,0") (ifseqformula "73"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "applyEq" (formula "35") (term "1,0,0,1") (ifseqformula "29"))
                                                                     (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "13"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "29"))
                                                                     (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "8"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "allLeft" (formula "19") (inst "t=i_40"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0,0,0"))
                                                                     (rule "applyEq" (formula "19") (term "1,0,1,0") (ifseqformula "30"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,0,0,0,0") (ifseqformula "28"))
                                                                     (rule "qeq_literals" (formula "19") (term "0,0,0,0,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,0,0,0") (ifseqformula "29"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "19") (term "1,1,0,0,0,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0,0"))
                                                                     (rule "leq_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "commute_or_2" (formula "19") (term "0,0"))
                                                                     (rule "allLeft" (formula "52") (inst "t=i_40"))
                                                                     (rule "replaceKnownSelect_taclet15_0" (formula "52") (term "1,0,1,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet16_0" (formula "52") (term "1,0,1,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0,0,0,0,0") (ifseqformula "27"))
                                                                     (rule "qeq_literals" (formula "52") (term "0,0,0,0,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0,0,0,0") (ifseqformula "28"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "52") (term "1,1,0,0,0,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "52") (term "0,0,0,0,0,0,0"))
                                                                     (rule "leq_literals" (formula "52") (term "0,0,0,0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                     (rule "commute_or_2" (formula "52") (term "0,0"))
                                                                     (rule "allLeft" (formula "58") (inst "t=i_38"))
                                                                     (rule "replaceKnownSelect_taclet10_0" (formula "58") (term "0,1,0"))
                                                                     (rule "replaceKnownSelect_taclet10_0" (formula "58") (term "1,0,0,1"))
                                                                     (rule "replaceKnownSelect_taclet10_0" (formula "58") (term "1,0,0,0,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "58") (term "1,0,0"))
                                                                     (rule "applyEq" (formula "58") (term "1,0,0,1") (ifseqformula "6"))
                                                                     (rule "replace_known_left" (formula "58") (term "0,1") (ifseqformula "7"))
                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "applyEq" (formula "58") (term "0,1") (ifseqformula "6"))
                                                                     (rule "replace_known_right" (formula "58") (term "1") (ifseqformula "66"))
                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "6"))
                                                                     (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "74"))
                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "58") (term "1") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "58") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "58") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "58") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "58") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "58") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "58") (ifseqformula "3"))
                                                                     (rule "qeq_literals" (formula "58") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "closeFalse" (formula "58"))
                                                                  )
                                                                  (branch "result_1 = i_40 FALSE"
                                                                     (rule "eqSymm" (formula "1"))
                                                                     (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "55") (term "1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                                                     (rule "allLeft" (formula "31") (inst "t=o_2_12"))
                                                                     (rule "exLeft" (formula "31") (inst "sk=i_41"))
                                                                     (rule "andLeft" (formula "31"))
                                                                     (rule "andLeft" (formula "31"))
                                                                     (rule "eqSymm" (formula "33") (term "1,0"))
                                                                     (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "69")) (ifInst ""  (formula "7")))
                                                                     (rule "replace_known_right" (formula "31") (term "1,0") (ifseqformula "69"))
                                                                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "35")) (ifInst ""  (formula "7")))
                                                                     (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "69")) (ifInst ""  (formula "7")))
                                                                     (rule "inEqSimp_homoInEq0" (formula "32"))
                                                                     (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                                     (rule "mul_literals" (formula "32") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                                     (rule "allLeft" (formula "17") (inst "t=i_40"))
                                                                     (rule "eqSymm" (formula "17") (term "1,0,0"))
                                                                     (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "31"))
                                                                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "67")))
                                                                     (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "30"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "17") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "29"))
                                                                     (rule "qeq_literals" (formula "17") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "closeFalse" (formula "17"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "CUT: o_2_12.<created> = TRUE FALSE"
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "referencedObjectIsCreatedRightEQ" (formula "45") (ifseqformula "3") (ifseqformula "46"))
                                                               (rule "close" (formula "45") (ifseqformula "8"))
                                                            )
                                                         )
                                                         (branch "CUT: result_2.<created> = TRUE FALSE"
                                                            (builtin "One Step Simplification" (formula "34"))
                                                            (rule "cut_direct" (formula "5") (term "0"))
                                                            (branch "CUT: o_2_12.<created> = TRUE TRUE"
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "ex_pull_out0" (formula "42") (term "1,0"))
                                                               (rule "all_pull_out1" (formula "42") (term "0,1,0"))
                                                               (rule "ex_pull_out3" (formula "42") (term "0"))
                                                               (rule "all_pull_out3" (formula "42") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                                                               (rule "distr_forallAnd" (formula "42") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "distr_existsAnd1" (formula "42") (term "0"))
                                                               (rule "distr_forallAnd" (formula "42"))
                                                               (rule "andLeft" (formula "42"))
                                                               (rule "cnf_rightDist" (formula "43") (term "0,0"))
                                                               (rule "distr_forallAnd" (formula "43") (term "0"))
                                                               (rule "distr_forallAnd" (formula "43"))
                                                               (rule "andLeft" (formula "43"))
                                                               (rule "commute_or_2" (formula "43") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "44") (term "0,0"))
                                                               (rule "commute_or_2" (formula "44") (term "0,0,0"))
                                                               (rule "shift_paren_or" (formula "43") (term "0,0,0"))
                                                               (rule "swapQuantifiersAll" (formula "43"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "castDel" (formula "43") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "43") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "43") (term "1,0,0,0,0,0,0"))
                                                               (rule "instanceof_static_type" (formula "43") (term "0,0,1,0"))
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "commute_or" (formula "44") (term "0,0,0,0"))
                                                               (rule "swapQuantifiersAll" (formula "44"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "castDel" (formula "44") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "44") (term "1,0,0,0,0,0,0"))
                                                               (rule "castDel" (formula "44") (term "1,0,0,1,0,0"))
                                                               (rule "instanceof_static_type" (formula "44") (term "0,0,1,0"))
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "cnf_rightDist" (formula "42") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "42") (term "1,0,0"))
                                                               (rule "commute_or_2" (formula "42") (term "1,1,0,0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "42") (term "0,0,1,0,0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0,1,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "42") (term "0,0,0"))
                                                               (rule "commute_or" (formula "42") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "42") (term "0,0,1,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "42") (term "1,0,0,0"))
                                                               (rule "commute_or_2" (formula "42") (term "1,1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0,1,0,0,0"))
                                                               (rule "commute_or" (formula "42") (term "0,1,1,0,0,0"))
                                                               (rule "cnf_rightDist" (formula "42") (term "0,0,0,0"))
                                                               (rule "commute_or_2" (formula "42") (term "1,0,0,0,0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0,0,0,0,0"))
                                                               (rule "commute_or" (formula "42") (term "0,1,0,0,0,0"))
                                                               (rule "shift_paren_and" (formula "42") (term "0,0,0"))
                                                               (rule "shift_paren_and" (formula "42") (term "0,0"))
                                                               (rule "allLeft" (formula "41") (inst "t=result_1"))
                                                               (rule "replaceKnownSelect_taclet4_0" (formula "41") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "41") (term "1,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                                                               (rule "applyEq" (formula "41") (term "1,0,1") (ifseqformula "30"))
                                                               (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "29"))
                                                               (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "41") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "28"))
                                                               (rule "qeq_literals" (formula "41") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "pullOutSelect" (formula "41") (term "1") (inst "selectSK=selectSK_65"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "32"))
                                                               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "53")) (ifInst ""  (formula "7")))
                                                               (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "42"))
                                                               (rule "hideAuxiliaryEq" (formula "42"))
                                                               (rule "elementOfUnion" (formula "41") (term "0,0"))
                                                               (rule "elementOfSingleton" (formula "41") (term "1,0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "eqSymm" (formula "41"))
                                                               (rule "allLeft" (formula "42") (inst "t=i_38"))
                                                               (rule "replaceKnownSelect_taclet10_0" (formula "42") (term "1,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                               (rule "applyEq" (formula "42") (term "1,0,1") (ifseqformula "4"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                                                               (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "42") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "42") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "pullOutSelect" (formula "42") (term "1") (inst "selectSK=selectSK_66"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "32"))
                                                               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "54")) (ifInst ""  (formula "7")))
                                                               (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "43"))
                                                               (rule "hideAuxiliaryEq" (formula "43"))
                                                               (rule "elementOfUnion" (formula "42") (term "0,0"))
                                                               (rule "elementOfSingleton" (formula "42") (term "1,0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "eqSymm" (formula "42") (term "1,0,0"))
                                                               (rule "elementOfSingleton" (formula "42") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "eqSymm" (formula "42"))
                                                               (rule "allLeft" (formula "21") (inst "t=key"))
                                                               (rule "exLeft" (formula "21") (inst "sk=i_39"))
                                                               (rule "andLeft" (formula "21"))
                                                               (rule "andLeft" (formula "21"))
                                                               (rule "eqSymm" (formula "23") (term "1,0"))
                                                               (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "60"))
                                                               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "6")) (ifInst ""  (formula "11")))
                                                               (rule "replace_known_left" (formula "22") (term "0,1") (ifseqformula "11"))
                                                               (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "6")) (ifInst ""  (formula "60")))
                                                               (rule "replace_known_right" (formula "21") (term "1,0") (ifseqformula "60"))
                                                               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "6")) (ifInst ""  (formula "11")))
                                                               (rule "inEqSimp_homoInEq0" (formula "22"))
                                                               (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                               (rule "mul_literals" (formula "22") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                                               (rule "allLeft" (formula "20") (inst "t=result_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                               (rule "applyEq" (formula "20") (term "1,0,1") (ifseqformula "34"))
                                                               (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "40"))
                                                               (rule "eqSymm" (formula "20") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "33"))
                                                               (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "20") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "32"))
                                                               (rule "qeq_literals" (formula "20") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "referencedObjectIsCreatedRightEQ" (formula "53") (ifseqformula "20") (ifseqformula "55"))
                                                               (rule "close" (formula "53") (ifseqformula "8"))
                                                            )
                                                            (branch "CUT: o_2_12.<created> = TRUE FALSE"
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "referencedObjectIsCreatedRightEQ" (formula "45") (ifseqformula "3") (ifseqformula "47"))
                                                               (rule "close" (formula "45") (ifseqformula "8"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "exRight" (formula "54") (inst "t=result_1") (userinteraction))
                                                         (rule "replaceKnownSelect_taclet2_0" (formula "1") (term "0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "1") (term "0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0") (ifseqformula "32"))
                                                         (rule "replaceKnownSelect_taclet0_0" (formula "54") (term "1,0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "54") (term "1,0,1"))
                                                         (rule "replaceKnownSelect_taclet4_0" (formula "54") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "54") (term "0,1"))
                                                         (rule "replaceKnownSelect_taclet0_0" (formula "54") (term "0,1,1,0"))
                                                         (rule "replaceKnownSelect_taclet0_0" (formula "55") (term "1,0,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "54") (term "0,1,1,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "55") (term "1,0,1,0"))
                                                         (rule "replaceKnownSelect_taclet0_0" (formula "55") (term "0,1,1,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "55") (term "0,1,1,0,0"))
                                                         (rule "andLeft" (formula "30"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "andLeft" (formula "31"))
                                                         (rule "notLeft" (formula "3"))
                                                         (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "inEqSimp_ltToLeq" (formula "57") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "58") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0"))
                                                         (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "30"))
                                                         (builtin "One Step Simplification" (formula "57"))
                                                         (rule "inEqSimp_commuteLeq" (formula "58") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "57") (term "0,0"))
                                                         (rule "applyEq" (formula "22") (term "0") (ifseqformula "24"))
                                                         (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                                         (rule "applyEq" (formula "55") (term "0,1") (ifseqformula "30"))
                                                         (rule "eqSymm" (formula "55") (term "1"))
                                                         (rule "applyEq" (formula "23") (term "2") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                                         (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "24") (term "2") (ifseqformula "13"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "54") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "0,0"))
                                                         (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "inEqSimp_contradEq7" (formula "52") (ifseqformula "27"))
                                                         (rule "add_zero_left" (formula "52") (term "0,0"))
                                                         (rule "mul_literals" (formula "52") (term "0,0"))
                                                         (rule "leq_literals" (formula "52") (term "0"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "elementOfUnion" (formula "23"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "eqSymm" (formula "23") (term "1"))
                                                         (rule "sortsDisjointModuloNull" (formula "23") (term "1"))
                                                         (rule "replace_known_right" (formula "23") (term "1,1") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "47")))
                                                         (rule "elementOfUnion" (formula "24"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "eqSymm" (formula "24") (term "1"))
                                                         (rule "sortsDisjointModuloNull" (formula "24") (term "1"))
                                                         (rule "replace_known_right" (formula "24") (term "0,1") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "49")))
                                                         (rule "elementOfUnion" (formula "23"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "elementOfUnion" (formula "23"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "nnf_ex2all" (formula "51"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                         (rule "ex_pull_out2" (formula "40") (term "0,1,0"))
                                                         (rule "commute_or" (formula "40") (term "0,0,1,0"))
                                                         (rule "cnf_rightDist" (formula "40") (term "0,0,1,0"))
                                                         (rule "commute_or" (formula "40") (term "1,0,0,1,0"))
                                                         (rule "all_pull_out2" (formula "40") (term "1,1,0"))
                                                         (rule "commute_or_2" (formula "40") (term "0,1,1,0"))
                                                         (rule "commute_or_2" (formula "40") (term "0,0,1,1,0"))
                                                         (rule "commute_or" (formula "40") (term "0,0,0,1,1,0"))
                                                         (rule "all_pull_out3" (formula "38") (term "0"))
                                                         (rule "shift_paren_or" (formula "38") (term "0,0"))
                                                         (rule "shift_paren_or" (formula "38") (term "0,0,0"))
                                                         (rule "shift_paren_or" (formula "38") (term "0,0,0,0"))
                                                         (rule "cnf_rightDist" (formula "40") (term "0,0,0,1,0"))
                                                         (rule "commute_or" (formula "40") (term "1,0,0,0,1,0"))
                                                         (rule "cut_direct" (formula "32") (term "0"))
                                                         (branch "CUT: result_2.<created> = TRUE TRUE"
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "cut_direct" (formula "3") (term "0"))
                                                            (branch "CUT: o_2_12.<created> = TRUE TRUE"
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "ex_pull_out0" (formula "40") (term "1,0"))
                                                               (rule "all_pull_out1" (formula "40") (term "0,1,0"))
                                                               (rule "ex_pull_out3" (formula "40") (term "0"))
                                                               (rule "all_pull_out3" (formula "40") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0,0"))
                                                               (rule "distr_forallAnd" (formula "40") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "distr_existsAnd1" (formula "40") (term "0"))
                                                               (rule "distr_forallAnd" (formula "40"))
                                                               (rule "andLeft" (formula "40"))
                                                               (rule "cnf_rightDist" (formula "41") (term "0,0"))
                                                               (rule "distr_forallAnd" (formula "41") (term "0"))
                                                               (rule "distr_forallAnd" (formula "41"))
                                                               (rule "andLeft" (formula "41"))
                                                               (rule "commute_or_2" (formula "41") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0,0"))
                                                               (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                                               (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                                               (rule "swapQuantifiersAll" (formula "41"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "castDel" (formula "41") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "41") (term "1,0,0,0,0,0,0"))
                                                               (rule "castDel" (formula "41") (term "0,1,0,0,0"))
                                                               (rule "instanceof_static_type" (formula "41") (term "0,0,1,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "commute_or" (formula "42") (term "0,0,0,0"))
                                                               (rule "swapQuantifiersAll" (formula "42"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "castDel" (formula "42") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "42") (term "1,0,0,0,0,0,0"))
                                                               (rule "castDel" (formula "42") (term "1,0,0,1,0,0"))
                                                               (rule "instanceof_static_type" (formula "42") (term "0,0,1,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "1,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "1,1,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "0,0,1,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,1,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,0,1,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "1,0,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "1,1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,1,0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,1,1,0,0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "1,0,0,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,0,0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,1,0,0,0,0"))
                                                               (rule "shift_paren_and" (formula "40") (term "0,0,0"))
                                                               (rule "shift_paren_and" (formula "40") (term "0,0"))
                                                               (rule "inDomainImpliesCreated" (formula "4"))
                                                               (rule "inDomainImpliesCreated" (formula "2"))
                                                               (rule "allLeft" (formula "11") (inst "t=result_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                               (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "29"))
                                                               (rule "replace_known_right" (formula "11") (term "0,1") (ifseqformula "53"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "allLeft" (formula "19") (inst "t=key"))
                                                               (rule "exLeft" (formula "19") (inst "sk=i_44"))
                                                               (rule "andLeft" (formula "19"))
                                                               (rule "andLeft" (formula "19"))
                                                               (rule "eqSymm" (formula "21") (term "1,0"))
                                                               (rule "replace_known_left" (formula "19") (term "0,0,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "55")) (ifInst ""  (formula "9")))
                                                               (rule "replace_known_left" (formula "20") (term "0,0,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "55")) (ifInst ""  (formula "9")))
                                                               (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "9"))
                                                               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "4")) (ifInst ""  (formula "55")))
                                                               (rule "inEqSimp_homoInEq0" (formula "20"))
                                                               (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                               (rule "mul_literals" (formula "20") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                               (rule "allLeft" (formula "40") (inst "t=result_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0") (ifseqformula "29"))
                                                               (rule "qeq_literals" (formula "40") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "30"))
                                                               (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
                                                               (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "40") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "40") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "notLeft" (formula "40"))
                                                               (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=selectSK_72"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
                                                               (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "allLeft" (formula "42") (inst "t=result_1"))
                                                               (rule "replaceKnownSelect_taclet10_0" (formula "42") (term "1,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "42") (term "1,1"))
                                                               (rule "replaceKnownSelect_taclet4_0" (formula "42") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "42") (term "1,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                               (rule "applyEq" (formula "42") (term "1,0,1") (ifseqformula "31"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "29"))
                                                               (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "30"))
                                                               (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                                                               (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "42") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "allLeft" (formula "39") (inst "t=result_1"))
                                                               (rule "replaceKnownSelect_taclet4_0" (formula "39") (term "0,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "39") (term "0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0"))
                                                               (rule "applyEq" (formula "39") (term "0,0,1") (ifseqformula "31"))
                                                               (rule "replace_known_right" (formula "39") (term "0,1") (ifseqformula "58"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "true_left" (formula "39"))
                                                               (rule "allLeft" (formula "18") (inst "t=result_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                                               (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "38"))
                                                               (rule "eqSymm" (formula "18") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "31"))
                                                               (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "18") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "30"))
                                                               (rule "qeq_literals" (formula "18") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "allLeft" (formula "12") (inst "t=result_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                               (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "19"))
                                                               (rule "replace_known_right" (formula "12") (term "0,1") (ifseqformula "53"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "allLeft" (formula "1") (inst "t=result_1"))
                                                               (rule "replaceKnownSelect_taclet4_0" (formula "1") (term "0,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "1") (term "0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0"))
                                                               (rule "applyEq" (formula "1") (term "0,0,1") (ifseqformula "33"))
                                                               (rule "eqSymm" (formula "1") (term "0,1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,1") (ifseqformula "60"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "allLeft" (formula "41") (inst "t=i_44"))
                                                               (rule "inEqSimp_commuteGeq" (formula "41") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "20"))
                                                               (rule "qeq_literals" (formula "41") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "21"))
                                                               (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                                               (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "41") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "notLeft" (formula "41"))
                                                               (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=selectSK_73"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "6")))
                                                               (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "eqSymm" (formula "1") (term "0,0"))
                                                               (rule "allLeft" (formula "45") (inst "t=i_44"))
                                                               (rule "replaceKnownSelect_taclet12_0" (formula "45") (term "1,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "22"))
                                                               (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "45") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "45") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "45") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "45") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "21"))
                                                               (rule "qeq_literals" (formula "45") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "pullOutSelect" (formula "45") (term "1,0") (inst "selectSK=selectSK_74"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "35"))
                                                               (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "57")) (ifInst ""  (formula "27")))
                                                               (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "46"))
                                                               (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "46"))
                                                               (rule "hideAuxiliaryEq" (formula "46"))
                                                               (rule "eqSymm" (formula "1"))
                                                               (rule "applyEq" (formula "52") (term "0") (ifseqformula "1"))
                                                               (rule "ifEqualsNull" (formula "52"))
                                                               (rule "orRight" (formula "52"))
                                                               (rule "applyEq" (formula "45") (term "2,0") (ifseqformula "23"))
                                                               (rule "elementOfUnion" (formula "45") (term "0,0"))
                                                               (rule "elementOfSingleton" (formula "45") (term "1,0,0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "eqSymm" (formula "45") (term "0,1,0,0"))
                                                               (rule "eqSymm" (formula "45") (term "1,1,0,0"))
                                                               (rule "replace_known_right" (formula "45") (term "0,1,0,0") (ifseqformula "59"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "elementOfSingleton" (formula "45") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "45"))
                                                               (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "45"))
                                                               (rule "hideAuxiliaryEq" (formula "45"))
                                                               (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "1") (term "1") (ifseqformula "44"))
                                                               (rule "allLeft" (formula "41") (inst "t=i_44"))
                                                               (rule "replaceKnownSelect_taclet13_0" (formula "41") (term "0,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "41") (term "0,0,1"))
                                                               (rule "replace_known_right" (formula "41") (term "0,1") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "true_left" (formula "41"))
                                                               (rule "allLeft" (formula "20") (inst "t=i_44"))
                                                               (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                               (rule "applyEq" (formula "20") (term "1,0,1") (ifseqformula "24"))
                                                               (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "40"))
                                                               (rule "eqSymm" (formula "20") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "23"))
                                                               (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "20") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "22"))
                                                               (rule "qeq_literals" (formula "20") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "20"))
                                                               (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "false_right" (formula "53"))
                                                               (rule "applyEq" (formula "45") (term "2,0") (ifseqformula "20"))
                                                               (rule "allLeft" (formula "2") (inst "t=i_44"))
                                                               (rule "replaceKnownSelect_taclet13_0" (formula "2") (term "0,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "2") (term "0,0,1"))
                                                               (rule "eqSymm" (formula "2") (term "0,1"))
                                                               (rule "replace_known_right" (formula "2") (term "0,1") (ifseqformula "63"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "allLeft" (formula "12") (inst "t=i_44"))
                                                               (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                               (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "25"))
                                                               (rule "replace_known_right" (formula "12") (term "0,1") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "allLeft" (formula "13") (inst "t=i_44"))
                                                               (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                               (rule "applyEq" (formula "13") (term "0,0,1") (ifseqformula "21"))
                                                               (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "allLeft" (formula "26") (inst "t=result_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0"))
                                                               (rule "applyEq" (formula "26") (term "1,0,0,1") (ifseqformula "35"))
                                                               (rule "replace_known_left" (formula "26") (term "0,1") (ifseqformula "10"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "35"))
                                                               (rule "replace_known_right" (formula "26") (term "1") (ifseqformula "62"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "35"))
                                                               (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "5"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "true_left" (formula "26"))
                                                               (rule "cut_direct" (formula "52") (term "0"))
                                                               (branch "CUT: result_1 = i_44 TRUE"
                                                                  (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "replace_known_left" (formula "46") (term "0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "eqSymm" (formula "46"))
                                                                  (rule "applyEq" (formula "46") (term "0,2,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "true_left" (formula "46"))
                                                                  (rule "applyEq" (formula "53") (term "0,2,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "36") (term "0,1,1,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "33") (term "0,2,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "20") (term "0,2,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "2") (term "0,2,1") (ifseqformula "1"))
                                                                  (rule "allLeft" (formula "44") (inst "t=i_44"))
                                                                  (rule "replaceKnownSelect_taclet13_0" (formula "44") (term "0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "44") (term "0,1,0"))
                                                                  (rule "replaceKnownSelect_taclet13_0" (formula "44") (term "1,0,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "44") (term "1,0,0,1"))
                                                                  (rule "replaceKnownSelect_taclet13_0" (formula "44") (term "1,0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "44") (term "1,0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "44") (term "1,0") (ifseqformula "57"))
                                                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "11")))
                                                                  (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "44") (term "1,0") (ifseqformula "22"))
                                                                  (rule "qeq_literals" (formula "44") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "23"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "44") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "allLeft" (formula "46") (inst "t=i_44"))
                                                                  (rule "replaceKnownSelect_taclet13_0" (formula "46") (term "0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "46") (term "0,1,0"))
                                                                  (rule "replaceKnownSelect_taclet13_0" (formula "46") (term "1,0,0,1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "46") (term "1,0,0,1"))
                                                                  (rule "replaceKnownSelect_taclet13_0" (formula "46") (term "1,0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "46") (term "1,0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "46") (term "1,0") (ifseqformula "58"))
                                                                  (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "44")))
                                                                  (rule "true_left" (formula "46"))
                                                                  (rule "allLeft" (formula "26") (inst "t=i_44"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,0"))
                                                                  (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "24"))
                                                                  (rule "replace_known_right" (formula "26") (term "1,0") (ifseqformula "58"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "applyEq" (formula "26") (term "1,0,0,0") (ifseqformula "24"))
                                                                  (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "8"))
                                                                  (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "25"))
                                                                  (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "58"))
                                                                  (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "25"))
                                                                  (rule "allLeft" (formula "43") (inst "t=o_2_12"))
                                                                  (rule "exLeft" (formula "43") (inst "sk=i_45"))
                                                                  (rule "andLeft" (formula "43"))
                                                                  (rule "andLeft" (formula "43"))
                                                                  (rule "andLeft" (formula "43"))
                                                                  (rule "andLeft" (formula "43"))
                                                                  (rule "andLeft" (formula "43"))
                                                                  (rule "eqSymm" (formula "48") (term "1,0"))
                                                                  (rule "eqSymm" (formula "47") (term "1,0"))
                                                                  (rule "replace_known_right" (formula "48") (term "1,0,0") (ifseqformula "56"))
                                                                  (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "4")))
                                                                  (rule "replace_known_left" (formula "47") (term "0,0,0,0") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "56")) (ifInst ""  (formula "5")))
                                                                  (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "47"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "true_left" (formula "48"))
                                                                  (rule "replace_known_right" (formula "46") (term "1,0") (ifseqformula "55"))
                                                                  (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "4")))
                                                                  (rule "replace_known_right" (formula "45") (term "1,0") (ifseqformula "55"))
                                                                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "4")) (ifInst ""  (formula "5")))
                                                                  (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "true_left" (formula "46"))
                                                                  (rule "replace_known_right" (formula "43") (term "1,0") (ifseqformula "54"))
                                                                  (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "4")) (ifInst ""  (formula "5")))
                                                                  (rule "replace_known_left" (formula "44") (term "0,0,0,0") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "43")) (ifInst ""  (formula "54")))
                                                                  (rule "true_left" (formula "44"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "44"))
                                                                  (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "1"))
                                                                  (rule "mul_literals" (formula "44") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                                                  (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=selectSK_75"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "33"))
                                                                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "56")) (ifInst ""  (formula "28")))
                                                                  (rule "applyEqRigid" (formula "45") (term "1") (ifseqformula "46"))
                                                                  (rule "elementOfUnion" (formula "45") (term "0,0"))
                                                                  (rule "elementOfSingleton" (formula "45") (term "1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "eqSymm" (formula "45") (term "0,1,0,0"))
                                                                  (rule "replace_known_right" (formula "45") (term "0,1,0,0") (ifseqformula "58"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "elementOfSingleton" (formula "45") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "allLeft" (formula "39") (inst "t=i_45"))
                                                                  (rule "replaceKnownSelect_taclet16_0" (formula "39") (term "0,0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0"))
                                                                  (rule "applyEq" (formula "39") (term "0,0,1") (ifseqformula "47"))
                                                                  (rule "replace_known_right" (formula "39") (term "0,1") (ifseqformula "55"))
                                                                  (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "true_left" (formula "39"))
                                                                  (rule "allLeft" (formula "14") (inst "t=i_45"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "44"))
                                                                  (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "45"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "14") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "notLeft" (formula "14"))
                                                                  (rule "allLeft" (formula "42") (inst "t=i_45"))
                                                                  (rule "replaceKnownSelect_taclet16_0" (formula "42") (term "1,0,1"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                                  (rule "applyEq" (formula "42") (term "1,0,1") (ifseqformula "47"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "42") (term "0,0") (ifseqformula "44"))
                                                                  (rule "qeq_literals" (formula "42") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "45"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "42") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "pullOutSelect" (formula "42") (term "1") (inst "selectSK=selectSK_76"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "33"))
                                                                  (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "60")) (ifInst ""  (formula "7")))
                                                                  (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "43"))
                                                                  (rule "hideAuxiliaryEq" (formula "43"))
                                                                  (rule "elementOfUnion" (formula "42") (term "0,0"))
                                                                  (rule "elementOfSingleton" (formula "42") (term "0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "elementOfSingleton" (formula "42") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "eqSymm" (formula "42"))
                                                                  (rule "allLeft" (formula "21") (inst "t=i_45"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                                                  (rule "applyEq" (formula "21") (term "1,0,1") (ifseqformula "47"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "46"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                                  (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                                  (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                                                  (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "45"))
                                                                  (rule "qeq_literals" (formula "21") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "allLeft" (formula "13") (inst "t=i_45"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                                                                  (rule "applyEq" (formula "13") (term "0,0,1") (ifseqformula "48"))
                                                                  (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "58"))
                                                                  (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "allLeft" (formula "3") (inst "t=i_45"))
                                                                  (rule "replaceKnownSelect_taclet16_0" (formula "3") (term "0,0,1"))
                                                                  (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "49"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "3") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "46"))
                                                                  (rule "qeq_literals" (formula "3") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "47") (ifseqformula "3"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "47"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "47") (term "0"))
                                                                  (rule "add_literals" (formula "47") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "47") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "47") (term "0"))
                                                                  (rule "leq_literals" (formula "47"))
                                                                  (rule "closeFalse" (formula "47"))
                                                               )
                                                               (branch "CUT: result_1 = i_44 FALSE"
                                                                  (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "false_right" (formula "53"))
                                                                  (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "52"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "eqSymm" (formula "45"))
                                                                  (rule "applyEq" (formula "1") (term "1") (ifseqformula "45"))
                                                                  (rule "applyEq" (formula "53") (term "0") (ifseqformula "45"))
                                                                  (rule "allLeft" (formula "14") (inst "t=i_44"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "applyEq" (formula "14") (term "1,0,1,0") (ifseqformula "25"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0,0,0,0") (ifseqformula "23"))
                                                                  (rule "qeq_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0,0,0") (ifseqformula "24"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                                                                  (rule "leq_literals" (formula "14") (term "0,0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "commute_or_2" (formula "14") (term "0,0"))
                                                                  (rule "allLeft" (formula "45") (inst "t=i_44"))
                                                                  (rule "replaceKnownSelect_taclet13_0" (formula "45") (term "1,0,1,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "45") (term "1,0,1,0"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0,0,0,0,0") (ifseqformula "24"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "45") (term "1,1,0,0,1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "45") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "leq_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "45") (term "0,0,0,0,0") (ifseqformula "23"))
                                                                  (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "commute_or_2" (formula "45") (term "0,0"))
                                                                  (rule "allLeft" (formula "14") (inst "t=result_1"))
                                                                  (rule "replace_known_left" (formula "14") (term "0,1") (ifseqformula "36"))
                                                                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "55")))
                                                                  (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "34"))
                                                                  (rule "qeq_literals" (formula "14") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "35"))
                                                                  (rule "andLeft" (formula "14"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "14"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "14") (term "0"))
                                                                  (rule "leq_literals" (formula "14"))
                                                                  (rule "closeFalse" (formula "14"))
                                                               )
                                                            )
                                                            (branch "CUT: o_2_12.<created> = TRUE FALSE"
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "ex_pull_out0" (formula "40") (term "1,0"))
                                                               (rule "all_pull_out1" (formula "40") (term "0,1,0"))
                                                               (rule "ex_pull_out3" (formula "40") (term "0"))
                                                               (rule "all_pull_out3" (formula "40") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0,0"))
                                                               (rule "distr_forallAnd" (formula "40") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "distr_existsAnd1" (formula "40") (term "0"))
                                                               (rule "distr_forallAnd" (formula "40"))
                                                               (rule "andLeft" (formula "40"))
                                                               (rule "cnf_rightDist" (formula "41") (term "0,0"))
                                                               (rule "distr_forallAnd" (formula "41") (term "0"))
                                                               (rule "distr_forallAnd" (formula "41"))
                                                               (rule "andLeft" (formula "41"))
                                                               (rule "commute_or_2" (formula "41") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0,0"))
                                                               (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                                               (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                                               (rule "swapQuantifiersAll" (formula "41"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "castDel" (formula "41") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "41") (term "1,0,0,0,0,0,0"))
                                                               (rule "castDel" (formula "41") (term "0,1,0,0,0"))
                                                               (rule "instanceof_static_type" (formula "41") (term "0,0,1,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "commute_or" (formula "42") (term "0,0,0,0"))
                                                               (rule "swapQuantifiersAll" (formula "42"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "castDel" (formula "42") (term "1,0,0,0,0,0,0"))
                                                               (rule "castDel" (formula "42") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "42") (term "0,1,0,0,0"))
                                                               (rule "instanceof_static_type" (formula "42") (term "0,0,1,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "1,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "1,1,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "0,0,1,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,1,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,0,1,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "1,0,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "1,1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,1,0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,1,1,0,0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "1,0,0,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,0,0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,1,0,0,0,0"))
                                                               (rule "shift_paren_and" (formula "40") (term "0,0,0"))
                                                               (rule "shift_paren_and" (formula "40") (term "0,0"))
                                                               (rule "inDomainImpliesCreated" (formula "4"))
                                                               (rule "inDomainImpliesCreated" (formula "2"))
                                                               (rule "close" (formula "46") (ifseqformula "2"))
                                                            )
                                                         )
                                                         (branch "CUT: result_2.<created> = TRUE FALSE"
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "cut_direct" (formula "3") (term "0"))
                                                            (branch "CUT: o_2_12.<created> = TRUE TRUE"
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "ex_pull_out0" (formula "40") (term "1,0"))
                                                               (rule "all_pull_out1" (formula "40") (term "0,1,0"))
                                                               (rule "ex_pull_out3" (formula "40") (term "0"))
                                                               (rule "all_pull_out3" (formula "40") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0,0"))
                                                               (rule "distr_forallAnd" (formula "40") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "distr_existsAnd1" (formula "40") (term "0"))
                                                               (rule "distr_forallAnd" (formula "40"))
                                                               (rule "andLeft" (formula "40"))
                                                               (rule "cnf_rightDist" (formula "41") (term "0,0"))
                                                               (rule "distr_forallAnd" (formula "41") (term "0"))
                                                               (rule "distr_forallAnd" (formula "41"))
                                                               (rule "andLeft" (formula "41"))
                                                               (rule "commute_or_2" (formula "41") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0,0"))
                                                               (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                                               (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                                               (rule "swapQuantifiersAll" (formula "41"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "castDel" (formula "41") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "41") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "41") (term "1,0,0,0,0,0,0"))
                                                               (rule "instanceof_static_type" (formula "41") (term "0,0,1,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "commute_or" (formula "42") (term "0,0,0,0"))
                                                               (rule "swapQuantifiersAll" (formula "42"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "castDel" (formula "42") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "42") (term "1,0,0,0,0,0,0"))
                                                               (rule "castDel" (formula "42") (term "1,0,0,1,0,0"))
                                                               (rule "instanceof_static_type" (formula "42") (term "0,0,1,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "1,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "1,1,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "0,0,1,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,1,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,0,1,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "1,0,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "1,1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,1,0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,1,1,0,0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "1,0,0,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,0,0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,1,0,0,0,0"))
                                                               (rule "shift_paren_and" (formula "40") (term "0,0,0"))
                                                               (rule "shift_paren_and" (formula "40") (term "0,0"))
                                                               (rule "inDomainImpliesCreated" (formula "4"))
                                                               (rule "inDomainImpliesCreated" (formula "2"))
                                                               (rule "allLeft" (formula "11") (inst "t=result_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                                                               (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "29"))
                                                               (rule "replace_known_right" (formula "11") (term "0,1") (ifseqformula "54"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "allLeft" (formula "19") (inst "t=key"))
                                                               (rule "exLeft" (formula "19") (inst "sk=i_43"))
                                                               (rule "andLeft" (formula "19"))
                                                               (rule "andLeft" (formula "19"))
                                                               (rule "eqSymm" (formula "21") (term "1,0"))
                                                               (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "4")) (ifInst ""  (formula "9")))
                                                               (rule "replace_known_left" (formula "20") (term "0,0,0,0") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "56")) (ifInst ""  (formula "9")))
                                                               (rule "replace_known_left" (formula "19") (term "0,1") (ifseqformula "9"))
                                                               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "4")) (ifInst ""  (formula "56")))
                                                               (rule "inEqSimp_homoInEq0" (formula "20"))
                                                               (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                               (rule "mul_literals" (formula "20") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                               (rule "allLeft" (formula "40") (inst "t=result_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0") (ifseqformula "29"))
                                                               (rule "qeq_literals" (formula "40") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "30"))
                                                               (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
                                                               (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "40") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "40") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "notLeft" (formula "40"))
                                                               (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=selectSK_71"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "6")))
                                                               (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "allLeft" (formula "42") (inst "t=result_1"))
                                                               (rule "replaceKnownSelect_taclet10_0" (formula "42") (term "1,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet11_0" (formula "42") (term "1,1"))
                                                               (rule "replaceKnownSelect_taclet4_0" (formula "42") (term "1,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "42") (term "1,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "42") (term "1,0"))
                                                               (rule "applyEq" (formula "42") (term "1,0,1") (ifseqformula "31"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "30"))
                                                               (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "42") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "42") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "42") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "42") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "29"))
                                                               (rule "qeq_literals" (formula "42") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "allLeft" (formula "39") (inst "t=result_1"))
                                                               (rule "replaceKnownSelect_taclet4_0" (formula "39") (term "0,0,1"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet5_0" (formula "39") (term "0,0,1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0"))
                                                               (rule "applyEq" (formula "39") (term "0,0,1") (ifseqformula "31"))
                                                               (rule "replace_known_right" (formula "39") (term "0,1") (ifseqformula "59"))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "true_left" (formula "39"))
                                                               (rule "allLeft" (formula "18") (inst "t=result_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                                               (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "32"))
                                                               (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "38"))
                                                               (rule "eqSymm" (formula "18") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "31"))
                                                               (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "18") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "30"))
                                                               (rule "qeq_literals" (formula "18") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "referencedObjectIsCreatedRightEQ" (formula "51") (ifseqformula "18") (ifseqformula "53"))
                                                               (rule "close" (formula "51") (ifseqformula "6"))
                                                            )
                                                            (branch "CUT: o_2_12.<created> = TRUE FALSE"
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "ex_pull_out0" (formula "40") (term "1,0"))
                                                               (rule "all_pull_out1" (formula "40") (term "0,1,0"))
                                                               (rule "ex_pull_out3" (formula "40") (term "0"))
                                                               (rule "all_pull_out3" (formula "40") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0,0"))
                                                               (rule "distr_forallAnd" (formula "40") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "40"))
                                                               (rule "distr_existsAnd1" (formula "40") (term "0"))
                                                               (rule "distr_forallAnd" (formula "40"))
                                                               (rule "andLeft" (formula "40"))
                                                               (rule "cnf_rightDist" (formula "41") (term "0,0"))
                                                               (rule "distr_forallAnd" (formula "41") (term "0"))
                                                               (rule "distr_forallAnd" (formula "41"))
                                                               (rule "andLeft" (formula "41"))
                                                               (rule "commute_or_2" (formula "41") (term "0,0"))
                                                               (rule "shift_paren_or" (formula "42") (term "0,0"))
                                                               (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                                               (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                                               (rule "swapQuantifiersAll" (formula "41"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "castDel" (formula "41") (term "1,0,0,1,0,0"))
                                                               (rule "castDel" (formula "41") (term "1,0,0,0,0,0,0"))
                                                               (rule "castDel" (formula "41") (term "0,1,0,0,0"))
                                                               (rule "instanceof_static_type" (formula "41") (term "0,0,1,0"))
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "commute_or" (formula "42") (term "0,0,0,0"))
                                                               (rule "swapQuantifiersAll" (formula "42"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "castDel" (formula "42") (term "0,1,0,0,0"))
                                                               (rule "castDel" (formula "42") (term "1,0,0,0,0,0,0"))
                                                               (rule "castDel" (formula "42") (term "1,0,0,1,0,0"))
                                                               (rule "instanceof_static_type" (formula "42") (term "0,0,1,0"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "1,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "1,1,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "0,0,1,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,1,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,0,1,1,0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "1,0,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "1,1,0,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,1,0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,1,1,0,0,0"))
                                                               (rule "cnf_rightDist" (formula "40") (term "0,0,0,0"))
                                                               (rule "commute_or_2" (formula "40") (term "1,0,0,0,0"))
                                                               (rule "shift_paren_or" (formula "40") (term "0,0,0,0,0"))
                                                               (rule "commute_or" (formula "40") (term "0,1,0,0,0,0"))
                                                               (rule "shift_paren_and" (formula "40") (term "0,0,0"))
                                                               (rule "shift_paren_and" (formula "40") (term "0,0"))
                                                               (rule "inDomainImpliesCreated" (formula "4"))
                                                               (rule "inDomainImpliesCreated" (formula "2"))
                                                               (rule "close" (formula "46") (ifseqformula "2"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "0,1"))
                                                   (rule "replaceKnownSelect_taclet2_0" (formula "52") (term "0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "52") (term "0,0"))
                                                   (rule "close" (formula "52") (ifseqformula "42"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "replaceKnownSelect_taclet6_0" (formula "52") (term "1,0"))
                                                (rule "replaceKnownSelect_taclet0_0" (formula "52") (term "0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "52") (term "1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "0,0"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "notRight" (formula "53"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "close" (formula "50") (ifseqformula "1"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "replaceKnownSelect_taclet8_0" (formula "52") (term "1"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet9_0" (formula "52") (term "1"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "andLeft" (formula "28"))
                                             (rule "subsetSingletonLeft" (formula "54"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "42") (term "0") (ifseqformula "43"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                             (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "22") (term "2") (ifseqformula "11"))
                                             (rule "applyEq" (formula "21") (term "2") (ifseqformula "11"))
                                             (rule "close" (formula "50") (ifseqformula "21"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "replaceKnownSelect_taclet8_0" (formula "52") (term "1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet9_0" (formula "52") (term "1"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "subsetSingletonLeft" (formula "54"))
                                          (rule "applyEq" (formula "24") (term "2") (ifseqformula "11"))
                                          (rule "close" (formula "54") (ifseqformula "24"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "replaceKnownSelect_taclet2_0" (formula "52") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "52") (term "0"))
                                       (rule "close" (formula "52") (ifseqformula "43"))
                                    )
                                 )
                                 (branch "Show Axiom Satisfiability"
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "closeTrue" (formula "52"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "andLeft" (formula "28"))
                           (rule "andLeft" (formula "28"))
                           (rule "allRight" (formula "54") (inst "sk=f_2"))
                           (rule "allRight" (formula "54") (inst "sk=o_5"))
                           (rule "orRight" (formula "54"))
                           (rule "orRight" (formula "54"))
                           (rule "eqSymm" (formula "56"))
                           (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "30"))
                           (rule "applyEq" (formula "24") (term "2") (ifseqformula "11"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                           (rule "applyEq" (formula "26") (term "1,0,1") (ifseqformula "29"))
                           (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "6"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                           (rule "applyEq" (formula "21") (term "2") (ifseqformula "11"))
                           (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "41"))
                           (rule "applyEq" (formula "50") (term "2") (ifseqformula "11"))
                           (rule "inEqSimp_contradEq7" (formula "49") (ifseqformula "25"))
                           (rule "add_zero_left" (formula "49") (term "0,0"))
                           (rule "mul_literals" (formula "49") (term "0,0"))
                           (rule "leq_literals" (formula "49") (term "0"))
                           (builtin "One Step Simplification" (formula "49"))
                           (rule "false_right" (formula "49"))
                           (rule "elementOfUnion" (formula "22"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "eqSymm" (formula "22") (term "1"))
                           (rule "sortsDisjointModuloNull" (formula "22") (term "1"))
                           (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "46")))
                           (rule "elementOfUnion" (formula "21"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "eqSymm" (formula "21") (term "1"))
                           (rule "sortsDisjointModuloNull" (formula "21") (term "1"))
                           (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "46")))
                           (rule "elementOfUnion" (formula "49"))
                           (builtin "One Step Simplification" (formula "49"))
                           (rule "orRight" (formula "49"))
                           (rule "elementOfUnion" (formula "22"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "elementOfUnion" (formula "21"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "elementOfUnion" (formula "47"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "orRight" (formula "47"))
                           (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=selectSK_14"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                           (rule "eqSymm" (formula "52"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "50"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "48"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "inDomain(self_0.map, key) FALSE"
                        (rule "closeFalse" (formula "28"))
                     )
                  )
                  (branch "inDomain(heapAtPre_0[self_0.map], key) FALSE"
                     (builtin "One Step Simplification" (formula "52"))
                     (builtin "One Step Simplification" (formula "51"))
                     (rule "replaceKnownSelect_taclet2_0" (formula "52") (term "1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "52") (term "1,0,0,0"))
                     (rule "eqSymm" (formula "52") (term "1,0,0,1"))
                     (rule "eqSymm" (formula "52") (term "1,0,0"))
                     (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "51"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "closeFalse" (formula "27"))
                  )
               )
               (branch "Show Axiom Satisfiability"
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "closeTrue" (formula "35"))
               )
            )
            (branch "Exceptional Post (putOverwrite)"
               (builtin "One Step Simplification" (formula "28"))
               (builtin "One Step Simplification" (formula "36"))
               (rule "andLeft" (formula "28"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1,0") (ifseqformula "28"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0,0,0,1,1,0,1") (ifseqformula "28"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "30"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "31"))
               (rule "notLeft" (formula "29"))
               (rule "close" (formula "33") (ifseqformula "32"))
            )
            (branch "Pre (putOverwrite)"
               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")) (ifInst ""  (formula "2")) (ifInst ""  (formula "6")))
               (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0"))
               (rule "applyEq" (formula "22") (term "2") (ifseqformula "10"))
               (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
               (rule "applyEq" (formula "22") (term "2") (ifseqformula "10"))
               (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
               (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
               (rule "elementOfUnion" (formula "20"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "eqSymm" (formula "20") (term "1"))
               (rule "sortsDisjointModuloNull" (formula "20") (term "1"))
               (rule "replace_known_right" (formula "20") (term "0,1") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "28")))
               (rule "elementOfUnion" (formula "21"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "eqSymm" (formula "21") (term "1"))
               (rule "sortsDisjointModuloNull" (formula "21") (term "1"))
               (rule "replace_known_right" (formula "21") (term "1,1") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "26")))
               (rule "elementOfUnion" (formula "20"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "elementOfUnion" (formula "20"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "commute_and_2" (formula "30"))
               (rule "commute_and" (formula "30") (term "0"))
               (rule "Class_invariant_axiom_for_CaseStudyUseMaps_MapImplementation" (formula "30") (term "0,0") (inst "o=o_2") (inst "i=i") (inst "i_0=i_0") (inst "i1=i1") (inst "i2=i2") (inst "i_1=i_1") (inst "i_2=i_2") (inst "sk=sk_5"))
               (branch "Use Axiom"
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "10")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")))
                  (rule "eqSymm" (formula "30") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                  (rule "eqSymm" (formula "30") (term "0,1,0,0,0,0"))
                  (rule "eqSymm" (formula "30") (term "1,0,0,1,0,1,0,0,0,0,0"))
                  (rule "eqSymm" (formula "30") (term "1,0,0,0,0,0,0,0"))
                  (rule "eqSymm" (formula "30") (term "1,1,0,1,0,1,0,0,0,0,0,0,0,0"))
                  (rule "replace_known_left" (formula "30") (term "1,0,0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "25")))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,0,1,0,1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0,1,0,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0,1,0,0,0,0,0,0"))
                  (rule "subsetSingletonLeft" (formula "30") (term "1,0,0,0"))
                  (rule "subsetSingletonLeft" (formula "30") (term "1,0,0"))
                  (rule "applyEq" (formula "30") (term "2,1,0,0,0") (ifseqformula "10"))
                  (rule "applyEq" (formula "30") (term "2,1,0,0") (ifseqformula "10"))
                  (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,0,0") (ifseqformula "13"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,1,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,1,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,0,1,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "elementOfUnion" (formula "30") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "eqSymm" (formula "30") (term "1,1,0,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "30") (term "1,1,0,0,0"))
                  (rule "replace_known_right" (formula "30") (term "1,1,1,0,0,0") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "24")))
                  (rule "elementOfUnion" (formula "30") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "eqSymm" (formula "30") (term "1,1,0,0"))
                  (rule "sortsDisjointModuloNull" (formula "30") (term "1,1,0,0"))
                  (rule "replace_known_right" (formula "30") (term "1,1,1,0,0") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "24")))
                  (rule "elementOfUnion" (formula "30") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "elementOfUnion" (formula "30") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "nnf_imp2or" (formula "30") (term "0,1,0,0"))
                  (rule "nnf_imp2or" (formula "30") (term "0,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,1,0,0"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "nnf_notOr" (formula "30") (term "0,0,0,1,0,0"))
                  (rule "nnf_imp2or" (formula "30") (term "0,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0,0,0"))
                  (rule "replace_known_left" (formula "30") (term "1,0,0,0") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0,0,0"))
                  (rule "nnf_imp2or" (formula "30") (term "0,0,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "30") (term "0,1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "30") (term "0,1,0,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "replace_known_left" (formula "30") (term "0,0,0,0,0") (ifseqformula "7"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0"))
                  (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "30") (term "1,0,1,0,0,0,0"))
                  (rule "ifthenelse_split_for" (formula "22"))
                  (branch "inDomain(self_0.map, key) TRUE"
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "24")))
                     (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "23"))
                     (rule "mul_literals" (formula "32") (term "1,0,0"))
                     (rule "add_zero_left" (formula "32") (term "0,0"))
                     (rule "leq_literals" (formula "32") (term "0"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "false_right" (formula "32"))
                     (rule "andRight" (formula "32"))
                     (branch "Case 1"
                        (rule "allRight" (formula "32") (inst "sk=i1_2"))
                        (rule "orRight" (formula "32"))
                        (rule "orRight" (formula "32"))
                        (rule "allRight" (formula "34") (inst "sk=i2_2"))
                        (rule "orRight" (formula "34"))
                        (rule "orRight" (formula "35"))
                        (rule "orRight" (formula "34"))
                        (rule "notRight" (formula "36"))
                        (rule "inEqSimp_geqRight" (formula "34"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "34"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "35"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "allLeft" (formula "14") (inst "t=i1_2"))
                        (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0,0,0,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0,0,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0"))
                        (rule "leq_literals" (formula "14") (term "0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "commute_or_2" (formula "14") (term "0,0"))
                        (rule "allLeft" (formula "12") (inst "t=result_1"))
                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                        (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "32"))
                        (rule "replace_known_right" (formula "12") (term "0,1") (ifseqformula "38"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "allLeft" (formula "12") (inst "t=i1_2"))
                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                        (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "12") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "12") (term "0,0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "allLeft" (formula "20") (inst "t=i1_2"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "20") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "20") (term "0,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "allLeft" (formula "12") (inst "t=i2_2"))
                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                        (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "12") (term "0,1") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "allLeft" (formula "22") (inst "t=key"))
                        (rule "exLeft" (formula "22") (inst "sk=i_8"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "eqSymm" (formula "24") (term "1,0"))
                        (rule "replace_known_right" (formula "24") (term "1,0,0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "32")) (ifInst ""  (formula "10")))
                        (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "32")) (ifInst ""  (formula "10")))
                        (rule "replace_known_right" (formula "23") (term "1,0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "32")) (ifInst ""  (formula "10")))
                        (rule "inEqSimp_homoInEq0" (formula "23"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "mul_literals" (formula "23") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                        (rule "allLeft" (formula "13") (inst "t=result_1"))
                        (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "35"))
                        (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "13") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "34"))
                        (rule "qeq_literals" (formula "13") (term "0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "notLeft" (formula "13"))
                        (rule "allLeft" (formula "13") (inst "t=i1_2"))
                        (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "13") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0"))
                        (rule "leq_literals" (formula "13") (term "0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "notLeft" (formula "13"))
                        (rule "allLeft" (formula "13") (inst "t=i2_2"))
                        (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "13") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "13") (term "0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "notLeft" (formula "13"))
                        (rule "allLeft" (formula "21") (inst "t=result_1"))
                        (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                        (rule "applyEq" (formula "21") (term "1,0,1") (ifseqformula "36"))
                        (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "35"))
                        (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "21") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "34"))
                        (rule "qeq_literals" (formula "21") (term "0,0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "allLeft" (formula "22") (inst "t=i2_2"))
                        (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                        (rule "applyEq" (formula "22") (term "1,0,1") (ifseqformula "5"))
                        (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "20"))
                        (rule "eqSymm" (formula "22") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "22") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0,0"))
                        (rule "leq_literals" (formula "22") (term "0,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "applyEq" (formula "38") (term "0") (ifseqformula "22"))
                        (rule "allLeft" (formula "14") (inst "t=i2_2"))
                        (rule "replace_known_right" (formula "14") (term "1,0,0") (ifseqformula "48"))
                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "5")))
                        (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                        (rule "add_literals" (formula "14") (term "0,0,1"))
                        (rule "leq_literals" (formula "14") (term "0,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "closeFalse" (formula "14"))
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "32") (inst "sk=o_2_3"))
                        (rule "orRight" (formula "32"))
                        (rule "orRight" (formula "32"))
                        (rule "eqSymm" (formula "34") (term "1,0,0"))
                        (rule "replace_known_right" (formula "32") (term "0,1") (ifseqformula "33"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "notRight" (formula "32"))
                        (rule "equiv_right" (formula "34"))
                        (branch "Case 1"
                           (rule "exLeft" (formula "1") (inst "sk=i_6"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "allLeft" (formula "11") (inst "t=result_1"))
                           (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                           (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "30"))
                           (rule "replace_known_right" (formula "11") (term "0,1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "allLeft" (formula "12") (inst "t=result_1"))
                           (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "28"))
                           (rule "qeq_literals" (formula "12") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "12") (term "0,0,0"))
                           (rule "leq_literals" (formula "12") (term "0,0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "notLeft" (formula "12"))
                           (rule "allLeft" (formula "12") (inst "t=i_6"))
                           (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "12") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                           (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0"))
                           (rule "leq_literals" (formula "12") (term "0,0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "notLeft" (formula "12"))
                           (rule "allLeft" (formula "18") (inst "t=result_1"))
                           (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                           (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "30"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "28"))
                           (rule "qeq_literals" (formula "18") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0,0"))
                           (rule "leq_literals" (formula "18") (term "0,0"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "allLeft" (formula "19") (inst "t=i_6"))
                           (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                           (rule "applyEq" (formula "19") (term "1,0,1") (ifseqformula "3"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "19") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "19") (term "0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "allLeft" (formula "21") (inst "t=key"))
                           (rule "exLeft" (formula "21") (inst "sk=i_7"))
                           (rule "andLeft" (formula "21"))
                           (rule "andLeft" (formula "21"))
                           (rule "eqSymm" (formula "23") (term "1,0"))
                           (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "42")) (ifInst ""  (formula "9")))
                           (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "42")) (ifInst ""  (formula "9")))
                           (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "31")) (ifInst ""  (formula "9")))
                           (rule "inEqSimp_homoInEq0" (formula "22"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                           (rule "mul_literals" (formula "22") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                           (rule "allLeft" (formula "11") (inst "t=i_6"))
                           (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                           (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "3"))
                           (rule "replace_known_right" (formula "11") (term "0,1") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "inDomainImpliesCreated" (formula "31"))
                           (rule "allLeft" (formula "11") (inst "t=i_7"))
                           (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                           (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "24"))
                           (rule "replace_known_right" (formula "11") (term "0,1") (ifseqformula "43"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "allLeft" (formula "20") (inst "t=i_7"))
                           (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                           (rule "applyEq" (formula "20") (term "1,0,1") (ifseqformula "24"))
                           (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "18"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "22"))
                           (rule "qeq_literals" (formula "20") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "23"))
                           (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0"))
                           (rule "leq_literals" (formula "20") (term "0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "applyEq" (formula "18") (term "1") (ifseqformula "20"))
                           (rule "applyEq" (formula "37") (term "0") (ifseqformula "20"))
                           (rule "notInDomain" (formula "45"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "1") (term "1") (ifseqformula "20"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0,1,1,1,0,0,1,0,0,0") (ifseqformula "7"))
                           (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "30")))
                           (rule "true_left" (formula "26"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1,0") (ifseqformula "7"))
                           (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "41")))
                           (rule "true_left" (formula "6"))
                           (rule "allLeft" (formula "27") (inst "t=result_1"))
                           (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0,0"))
                           (rule "applyEq" (formula "27") (term "1,0,0,1") (ifseqformula "37"))
                           (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "10"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "applyEq" (formula "27") (term "1,0,0,0") (ifseqformula "37"))
                           (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "34"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "37"))
                           (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "37"))
                           (rule "allLeft" (formula "14") (inst "t=i_6"))
                           (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "applyEq" (formula "14") (term "1,0,1,0") (ifseqformula "4"))
                           (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0,0,0,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,0,0,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0"))
                           (rule "leq_literals" (formula "14") (term "0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "commute_or_2" (formula "14") (term "0,0"))
                           (rule "allLeft" (formula "15") (inst "t=result_1"))
                           (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "applyEq" (formula "15") (term "1,0,1,0") (ifseqformula "38"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0,0,0,0") (ifseqformula "36"))
                           (rule "qeq_literals" (formula "15") (term "0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0,0,0,0") (ifseqformula "37"))
                           (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,0"))
                           (rule "leq_literals" (formula "15") (term "0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "commute_or_2" (formula "15") (term "0,0"))
                           (rule "allLeft" (formula "15") (inst "t=i_7"))
                           (rule "eqSymm" (formula "15") (term "1,0,0"))
                           (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "27"))
                           (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1"))
                           (rule "leq_literals" (formula "15") (term "0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "26"))
                           (rule "qeq_literals" (formula "15") (term "0,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "15"))
                           (rule "applyEq" (formula "24") (term "0,2,0") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "applyEq" (formula "37") (term "0,2,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "36") (term "0") (ifseqformula "15"))
                           (rule "applyEq" (formula "16") (term "1,1,0,0,0") (ifseqformula "15"))
                           (rule "allLeft" (formula "29") (inst "t=i_6"))
                           (rule "inEqSimp_commuteGeq" (formula "29") (term "1,0,0"))
                           (rule "applyEq" (formula "29") (term "1,0,0,1") (ifseqformula "4"))
                           (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "4"))
                           (rule "replace_known_right" (formula "29") (term "1") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "4"))
                           (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "46"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                           (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "29") (term "0,0,1"))
                           (rule "leq_literals" (formula "29") (term "0,1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "29") (term "0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "closeFalse" (formula "29"))
                        )
                        (branch "Case 2"
                           (rule "nnf_ex2all" (formula "35"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "allLeft" (formula "1") (inst "t=result_1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0"))
                           (rule "applyEq" (formula "1") (term "0,0,1") (ifseqformula "29"))
                           (rule "eqSymm" (formula "1") (term "0,1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "27"))
                           (rule "qeq_literals" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "28"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "allLeft" (formula "18") (inst "t=key"))
                           (rule "exLeft" (formula "18") (inst "sk=i_4"))
                           (rule "andLeft" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "eqSymm" (formula "20") (term "1,0"))
                           (rule "replace_known_left" (formula "20") (term "0,1") (ifseqformula "8"))
                           (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "28")) (ifInst ""  (formula "38")))
                           (rule "replace_known_left" (formula "18") (term "0,0,0,0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "38")) (ifInst ""  (formula "8")))
                           (rule "replace_known_left" (formula "19") (term "0,0,0,0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "38")) (ifInst ""  (formula "8")))
                           (rule "inEqSimp_homoInEq0" (formula "19"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1"))
                           (rule "polySimp_rightDist" (formula "19") (term "1"))
                           (rule "mul_literals" (formula "19") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                           (rule "allLeft" (formula "21") (inst "t=o_2_3"))
                           (rule "exLeft" (formula "21") (inst "sk=i_5"))
                           (rule "andLeft" (formula "21"))
                           (rule "andLeft" (formula "21"))
                           (rule "eqSymm" (formula "23") (term "1,0"))
                           (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                           (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                           (rule "replace_known_right" (formula "21") (term "1,0") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                           (rule "inEqSimp_homoInEq0" (formula "22"))
                           (rule "polySimp_addComm1" (formula "22") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1"))
                           (rule "mul_literals" (formula "22") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                           (rule "allLeft" (formula "11") (inst "t=result_1"))
                           (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "33"))
                           (rule "qeq_literals" (formula "11") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "34"))
                           (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                           (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0,0"))
                           (rule "leq_literals" (formula "11") (term "0,0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "notLeft" (formula "11"))
                           (rule "allLeft" (formula "10") (inst "t=result_1"))
                           (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
                           (rule "applyEq" (formula "10") (term "0,0,1") (ifseqformula "35"))
                           (rule "replace_known_right" (formula "10") (term "0,1") (ifseqformula "43"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "allLeft" (formula "17") (inst "t=result_1"))
                           (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
                           (rule "applyEq" (formula "17") (term "1,0,1") (ifseqformula "35"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "34"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "17") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "33"))
                           (rule "qeq_literals" (formula "17") (term "0,0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "allLeft" (formula "1") (inst "t=i_5"))
                           (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "23"))
                           (rule "qeq_literals" (formula "1") (term "0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "1"))
                           (rule "andLeft" (formula "24"))
                           (rule "inEqSimp_homoInEq1" (formula "24"))
                           (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                           (rule "add_literals" (formula "24") (term "1,1,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0"))
                           (rule "add_zero_right" (formula "24") (term "0"))
                           (rule "leq_literals" (formula "24"))
                           (rule "closeFalse" (formula "24"))
                        )
                     )
                  )
                  (branch "inDomain(self_0.map, key) FALSE"
                     (rule "closeFalse" (formula "22"))
                  )
               )
               (branch "Show Axiom Satisfiability"
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "10")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "10")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")))
                  (rule "closeTrue" (formula "30"))
               )
            )
         )
      )
      (branch "Show Axiom Satisfiability"
         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "9")) (ifInst ""  (formula "10")) (ifInst ""  (formula "11")) (ifInst ""  (formula "18")) (ifInst ""  (formula "21")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "9")) (ifInst ""  (formula "10")) (ifInst ""  (formula "11")) (ifInst ""  (formula "18")) (ifInst ""  (formula "21")))
         (rule "closeTrue" (formula "25"))
      )
   )
   (branch "Exceptional Post (getIndexOfKey)"
      (builtin "One Step Simplification" (formula "22"))
      (rule "translateJavaUnaryMinusInt" (formula "22") (term "1,2,0,0,1"))
      (rule "neg_literal" (formula "22") (term "1,2,0,0,1"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "24"))
      (rule "notLeft" (formula "22"))
      (rule "close" (formula "26") (ifseqformula "25"))
   )
   (branch "Pre (getIndexOfKey)"
      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")) (ifInst ""  (formula "1")) (ifInst ""  (formula "4")))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
      (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
      (rule "applyEq" (formula "17") (term "2") (ifseqformula "9"))
      (rule "applyEq" (formula "18") (term "2") (ifseqformula "9"))
      (rule "elementOfUnion" (formula "17"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "eqSymm" (formula "17") (term "1"))
      (rule "sortsDisjointModuloNull" (formula "17") (term "1"))
      (rule "replace_known_right" (formula "17") (term "0,1") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "23")))
      (rule "elementOfUnion" (formula "18"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "eqSymm" (formula "18") (term "1"))
      (rule "sortsDisjointModuloNull" (formula "18") (term "1"))
      (rule "replace_known_right" (formula "18") (term "0,1") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")))
      (rule "elementOfUnion" (formula "17"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "elementOfUnion" (formula "17"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "Class_invariant_axiom_for_CaseStudyUseMaps_MapImplementation" (formula "24") (inst "o=o_2") (inst "i=i") (inst "i_0=i_0") (inst "i1=i1") (inst "i2=i2") (inst "i_1=i_1") (inst "i_2=i_2") (inst "sk=sk_6"))
      (branch "Use Axiom"
         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "9")) (ifInst ""  (formula "10")) (ifInst ""  (formula "11")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")))
         (rule "eqSymm" (formula "24") (term "1,1,0,1,0,1,0,0,0,0,0,0"))
         (rule "eqSymm" (formula "24") (term "1,0,0,0,0,0"))
         (rule "eqSymm" (formula "24") (term "1,0,0,1,0,1,0,0,0"))
         (rule "eqSymm" (formula "24") (term "0,1,0,1,0,1,0,0,0,0,0,0"))
         (rule "eqSymm" (formula "24") (term "0,1,0,0"))
         (rule "replace_known_left" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "20")))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,1,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,0,1,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,0,0,0,0"))
         (rule "subsetSingletonLeft" (formula "24") (term "1,0"))
         (rule "subsetSingletonLeft" (formula "24") (term "1"))
         (rule "applyEq" (formula "24") (term "2,1") (ifseqformula "9"))
         (rule "applyEq" (formula "24") (term "2,1,0") (ifseqformula "9"))
         (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,1,0,0,0,0,0") (ifseqformula "12"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0,0,0,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1,0,0,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,1,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,1,0,1,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,1,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,1,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,0,0,0,0"))
         (rule "elementOfUnion" (formula "24") (term "1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "eqSymm" (formula "24") (term "1,1"))
         (rule "sortsDisjointModuloNull" (formula "24") (term "1,1"))
         (rule "replace_known_right" (formula "24") (term "0,1,1") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "21")))
         (rule "elementOfUnion" (formula "24") (term "1,0"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "eqSymm" (formula "24") (term "1,1,0"))
         (rule "sortsDisjointModuloNull" (formula "24") (term "1,1,0"))
         (rule "replace_known_right" (formula "24") (term "0,1,1,0") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "21")))
         (rule "elementOfUnion" (formula "24") (term "1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "elementOfUnion" (formula "24") (term "1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "nnf_imp2or" (formula "24") (term "0,1"))
         (rule "nnf_imp2or" (formula "24") (term "0,1,0"))
         (rule "nnf_notAnd" (formula "24") (term "0,0,1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "nnf_imp2or" (formula "24") (term "0,1,0,0"))
         (rule "nnf_notOr" (formula "24") (term "0,0,0,1"))
         (rule "nnf_notAnd" (formula "24") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1,0"))
         (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0"))
         (rule "replace_known_left" (formula "24") (term "1,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "nnf_notAnd" (formula "24") (term "0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1,0"))
         (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0"))
         (rule "nnf_imp2or" (formula "24") (term "0,1,0,0"))
         (rule "nnf_imp2or" (formula "24") (term "0,0,0,0"))
         (rule "nnf_imp2or" (formula "24") (term "0,1,0,1,0"))
         (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0,0"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,0"))
         (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "nnf_notAnd" (formula "24") (term "0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0"))
         (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "nnf_imp2or" (formula "24") (term "1,0,1,0,0"))
         (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1,0,0"))
         (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0,0"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,0"))
         (rule "ex_pull_out2" (formula "14") (term "0,1,0"))
         (rule "all_pull_out2" (formula "14") (term "1,1,0"))
         (rule "all_pull_out3" (formula "8") (term "0"))
         (rule "shift_paren_or" (formula "8") (term "0,0"))
         (rule "commute_or" (formula "14") (term "0,0,1,0"))
         (rule "commute_or_2" (formula "14") (term "0,1,1,0"))
         (rule "shift_paren_or" (formula "8") (term "0,0,0"))
         (rule "andRight" (formula "24"))
         (branch "Case 1"
            (rule "allRight" (formula "24") (inst "sk=i1_3"))
            (rule "orRight" (formula "24"))
            (rule "orRight" (formula "24"))
            (rule "allRight" (formula "26") (inst "sk=i2_3"))
            (rule "orRight" (formula "26"))
            (rule "orRight" (formula "26"))
            (rule "orRight" (formula "28"))
            (rule "notRight" (formula "28"))
            (rule "inEqSimp_leqRight" (formula "25"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "26"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_geqRight" (formula "28"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_leqRight" (formula "28"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "commute_or_2" (formula "19") (term "0,0,1,1,0"))
            (rule "shift_paren_or" (formula "13") (term "0,0,0,0"))
            (rule "cnf_rightDist" (formula "19") (term "0,0,1,0"))
            (rule "commute_or" (formula "19") (term "1,0,0,1,0"))
            (rule "commute_or" (formula "19") (term "0,0,0,1,1,0"))
            (rule "cnf_rightDist" (formula "19") (term "0,0,0,1,0"))
            (rule "commute_or" (formula "19") (term "1,0,0,0,1,0"))
            (rule "ex_pull_out0" (formula "19") (term "1,0"))
            (rule "all_pull_out1" (formula "19") (term "0,1,0"))
            (rule "ex_pull_out3" (formula "19") (term "0"))
            (rule "all_pull_out3" (formula "19") (term "0,0"))
            (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
            (rule "distr_forallAnd" (formula "19") (term "0,0"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "distr_existsAnd1" (formula "19") (term "0"))
            (rule "distr_forallAnd" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "commute_or_2" (formula "20") (term "0,0"))
            (rule "shift_paren_or" (formula "20") (term "0,0,0"))
            (rule "swapQuantifiersAll" (formula "20"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "castDel" (formula "20") (term "0,1,0,0,0"))
            (rule "castDel" (formula "20") (term "1,0,0,0,0,0,0"))
            (rule "castDel" (formula "20") (term "1,0,0,1,0,0"))
            (rule "instanceof_static_type" (formula "20") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "cnf_rightDist" (formula "19") (term "0,0"))
            (rule "shift_paren_or" (formula "19") (term "1,0,0"))
            (rule "commute_or_2" (formula "19") (term "0,1,0,0"))
            (rule "cnf_rightDist" (formula "19") (term "0,0,0"))
            (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "19") (term "1,0,0,0"))
            (rule "commute_or" (formula "19") (term "0,0,0,0,0"))
            (rule "allLeft" (formula "13") (inst "t=i1_3"))
            (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0,0,0,0") (ifseqformula "4"))
            (rule "qeq_literals" (formula "13") (term "0,0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,0,0,0") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0"))
            (rule "leq_literals" (formula "13") (term "0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "commute_or_2" (formula "13") (term "0,0"))
            (rule "allLeft" (formula "11") (inst "t=i2_3"))
            (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
            (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "5"))
            (rule "inEqSimp_contradInEq1" (formula "11") (term "0,0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "11") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0"))
            (rule "leq_literals" (formula "11") (term "0,0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "notLeft" (formula "11"))
            (rule "allLeft" (formula "19") (inst "t=i2_3"))
            (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
            (rule "applyEq" (formula "19") (term "1,0,1") (ifseqformula "5"))
            (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
            (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
            (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "19") (term "0,0"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "allLeft" (formula "20") (inst "t=i1_3"))
            (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
            (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "19"))
            (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "3"))
            (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
            (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
            (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
            (rule "leq_literals" (formula "20") (term "0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "4"))
            (rule "qeq_literals" (formula "20") (term "0,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "applyEq" (formula "19") (term "1") (ifseqformula "20"))
            (rule "allLeft" (formula "12") (inst "t=i2_3"))
            (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
            (rule "applyEq" (formula "12") (term "0,0,1") (ifseqformula "21"))
            (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "12") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
            (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0"))
            (rule "leq_literals" (formula "12") (term "0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "notLeft" (formula "12"))
            (rule "allLeft" (formula "13") (inst "t=i2_3"))
            (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "5"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "36")))
            (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "13") (term "0,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "13"))
            (rule "andLeft" (formula "2"))
            (rule "inEqSimp_homoInEq1" (formula "2"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "1,1,0"))
            (rule "times_zero_1" (formula "2") (term "1,0"))
            (rule "add_zero_right" (formula "2") (term "0"))
            (rule "leq_literals" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
         (branch "Case 2"
            (rule "allRight" (formula "24") (inst "sk=o_2_4"))
            (rule "orRight" (formula "24"))
            (rule "orRight" (formula "24"))
            (rule "eqSymm" (formula "26") (term "1,0,0"))
            (rule "replace_known_right" (formula "24") (term "0,1") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "notRight" (formula "24"))
            (rule "equiv_right" (formula "26"))
            (branch "Case 1"
               (rule "exLeft" (formula "1") (inst "sk=i_10"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq0" (formula "2"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "commute_or_2" (formula "18") (term "0,0,1,1,0"))
               (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
               (rule "cnf_rightDist" (formula "18") (term "0,0,1,0"))
               (rule "commute_or" (formula "18") (term "1,0,0,1,0"))
               (rule "commute_or" (formula "18") (term "0,0,0,1,1,0"))
               (rule "cnf_rightDist" (formula "18") (term "0,0,0,1,0"))
               (rule "commute_or" (formula "18") (term "1,0,0,0,1,0"))
               (rule "ex_pull_out0" (formula "18") (term "1,0"))
               (rule "all_pull_out1" (formula "18") (term "0,1,0"))
               (rule "ex_pull_out3" (formula "18") (term "0"))
               (rule "all_pull_out3" (formula "18") (term "0,0"))
               (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
               (rule "distr_forallAnd" (formula "18") (term "0,0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "distr_existsAnd1" (formula "18") (term "0"))
               (rule "distr_forallAnd" (formula "18"))
               (rule "andLeft" (formula "18"))
               (rule "commute_or_2" (formula "19") (term "0,0"))
               (rule "shift_paren_or" (formula "19") (term "0,0,0"))
               (rule "swapQuantifiersAll" (formula "19"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "castDel" (formula "19") (term "1,0,0,0,0,0,0"))
               (rule "castDel" (formula "19") (term "0,1,0,0,0"))
               (rule "castDel" (formula "19") (term "1,0,0,1,0,0"))
               (rule "instanceof_static_type" (formula "19") (term "0,0,1,0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "cnf_rightDist" (formula "18") (term "0,0"))
               (rule "shift_paren_or" (formula "18") (term "1,0,0"))
               (rule "commute_or_2" (formula "18") (term "0,1,0,0"))
               (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
               (rule "commute_or_2" (formula "18") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "18") (term "1,0,0,0"))
               (rule "commute_or" (formula "18") (term "0,0,0,0,0"))
               (rule "allLeft" (formula "10") (inst "t=i_10"))
               (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
               (rule "applyEq" (formula "10") (term "0,0,1") (ifseqformula "3"))
               (rule "replace_known_right" (formula "10") (term "0,1") (ifseqformula "30"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "allLeft" (formula "11") (inst "t=i_10"))
               (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
               (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
               (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
               (rule "add_literals" (formula "11") (term "0,0,1,0"))
               (rule "leq_literals" (formula "11") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "11") (term "0,0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "notLeft" (formula "11"))
               (rule "allLeft" (formula "17") (inst "t=i_10"))
               (rule "inEqSimp_commuteGeq" (formula "17") (term "1,0"))
               (rule "applyEq" (formula "17") (term "1,0,1") (ifseqformula "3"))
               (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "17") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
               (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,0"))
               (rule "leq_literals" (formula "17") (term "0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "notInDomain" (formula "32"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
               (rule "eqSymm" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0,0") (ifseqformula "6"))
               (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0,0") (ifseqformula "6"))
               (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "0") (ifseqformula "6"))
               (rule "applyEq" (formula "4") (term "1,0,1") (ifseqformula "5"))
               (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1") (ifseqformula "6"))
               (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "allLeft" (formula "24") (inst "t=i_10"))
               (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0,0"))
               (rule "applyEq" (formula "24") (term "1,0,0,0,0") (ifseqformula "4"))
               (rule "replace_known_right" (formula "24") (term "0,0,0,0") (ifseqformula "37"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "applyEq" (formula "24") (term "1,0,0,1") (ifseqformula "4"))
               (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "4"))
               (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "36"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "24") (term "0,0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "3"))
               (rule "andLeft" (formula "24"))
               (rule "inEqSimp_homoInEq1" (formula "24"))
               (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
               (rule "add_literals" (formula "24") (term "1,1,0"))
               (rule "times_zero_1" (formula "24") (term "1,0"))
               (rule "add_literals" (formula "24") (term "0"))
               (rule "leq_literals" (formula "24"))
               (rule "closeFalse" (formula "24"))
            )
            (branch "Case 2"
               (rule "nnf_ex2all" (formula "27"))
               (rule "nnf_notAnd" (formula "1") (term "0"))
               (rule "nnf_notAnd" (formula "1") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
               (rule "commute_or_2" (formula "17") (term "0,0,1,1,0"))
               (rule "shift_paren_or" (formula "11") (term "0,0,0,0"))
               (rule "cnf_rightDist" (formula "17") (term "0,0,1,0"))
               (rule "commute_or" (formula "17") (term "1,0,0,1,0"))
               (rule "commute_or" (formula "17") (term "0,0,0,1,1,0"))
               (rule "cnf_rightDist" (formula "17") (term "0,0,0,1,0"))
               (rule "commute_or" (formula "17") (term "1,0,0,0,1,0"))
               (rule "ex_pull_out0" (formula "17") (term "1,0"))
               (rule "all_pull_out1" (formula "17") (term "0,1,0"))
               (rule "ex_pull_out3" (formula "17") (term "0"))
               (rule "all_pull_out3" (formula "17") (term "0,0"))
               (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
               (rule "distr_forallAnd" (formula "17") (term "0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "distr_existsAnd1" (formula "17") (term "0"))
               (rule "distr_forallAnd" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "commute_or_2" (formula "18") (term "0,0"))
               (rule "shift_paren_or" (formula "18") (term "0,0,0"))
               (rule "swapQuantifiersAll" (formula "18"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "castDel" (formula "18") (term "1,0,0,0,0,0,0"))
               (rule "castDel" (formula "18") (term "1,0,0,1,0,0"))
               (rule "castDel" (formula "18") (term "0,1,0,0,0"))
               (rule "instanceof_static_type" (formula "18") (term "0,0,1,0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "cnf_rightDist" (formula "17") (term "0,0"))
               (rule "shift_paren_or" (formula "17") (term "1,0,0"))
               (rule "commute_or_2" (formula "17") (term "0,1,0,0"))
               (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
               (rule "commute_or_2" (formula "17") (term "0,0,0,0"))
               (rule "shift_paren_or" (formula "17") (term "1,0,0,0"))
               (rule "commute_or" (formula "17") (term "0,0,0,0,0"))
               (rule "allLeft" (formula "17") (inst "t=o_2_4"))
               (rule "exLeft" (formula "17") (inst "sk=i_9"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "eqSymm" (formula "19") (term "1,0"))
               (rule "replace_known_left" (formula "19") (term "0,0,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
               (rule "replace_known_left" (formula "17") (term "0,0,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
               (rule "replace_known_right" (formula "18") (term "1,0") (ifseqformula "31"))
               (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
               (rule "inEqSimp_homoInEq0" (formula "18"))
               (rule "polySimp_addComm1" (formula "18") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18"))
               (rule "polySimp_mulComm0" (formula "18") (term "1"))
               (rule "polySimp_rightDist" (formula "18") (term "1"))
               (rule "mul_literals" (formula "18") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1"))
               (rule "allLeft" (formula "1") (inst "t=i_9"))
               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "18"))
               (rule "qeq_literals" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_literals" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Show Axiom Satisfiability"
         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "9")) (ifInst ""  (formula "10")) (ifInst ""  (formula "11")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "9")) (ifInst ""  (formula "10")) (ifInst ""  (formula "11")) (ifInst ""  (formula "16")) (ifInst ""  (formula "17")))
         (rule "closeTrue" (formula "24"))
      )
   )
)
(branch "Show Axiom Satisfiability"
   (builtin "One Step Simplification" (formula "7"))
   (rule "closeTrue" (formula "7"))
)
)

}
