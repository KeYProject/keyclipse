\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Oct 28 15:18:12 CET 2013
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]RETREAT_MODE_OPTIONS_KEY=RETREAT_MODE_NONE
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , optimisedSelectRules-optimisedSelectRules\\:on , bigint-bigint\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , sequences-sequences\\:on , integerSimplificationRules-integerSimplificationRules\\:full , Strings-Strings\\:on , reach-reach\\:on , assertions-assertions\\:on , modelFields-modelFields\\:treatAsAxiom , initialisation-initialisation\\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\\:allow
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "..";

\proofObligation "#Proof Obligation Settings
#Mon Oct 28 15:18:12 CET 2013
name=CaseStudyUseMaps.MapImplementation[CaseStudyUseMaps.MapImplementation\\:\\:copyArray([Ljava.lang.Object,[Ljava.lang.Object,int,int,int)].JML normal_behavior operation contract.0
contract=CaseStudyUseMaps.MapImplementation[CaseStudyUseMaps.MapImplementation\\:\\:copyArray([Ljava.lang.Object,[Ljava.lang.Object,int,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "christoph" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "11105")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "translateJavaAddInt" (formula "1") (term "0,1,1,1,1,1,1,1,0,1,0"))
(rule "translateJavaAddInt" (formula "1") (term "0,0,1,1,1,1,1,0,1,0"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,1,1,0,0,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,0,1,0,0,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,0,0,0,1,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "2,2,0,0,0,0,1,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "9"))
(rule "eqSymm" (formula "21") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "19"))
(rule "eqSymm" (formula "17"))
(rule "replace_known_right" (formula "4") (term "1") (ifseqformula "16"))
(builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "5") (term "1") (ifseqformula "15"))
(builtin "One Step Simplification" (formula "5"))
(rule "polySimp_elimSub" (formula "21") (term "2,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "21") (term "1,2,2,0,0,0,0,1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
(rule "polySimp_addComm1" (formula "21") (term "2,2,0,0,0,0,1,0,1"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "polySimp_addComm0" (formula "21") (term "0,2,2,0,0,0,0,1,0,1"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "inEqSimp_commuteLeq" (formula "10"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "elementOfArrayRange" (formula "21") (term "0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,1,0,0,0,0,1,0,1"))
(rule "assignment" (formula "21") (term "1"))
(builtin "One Step Simplification" (formula "21"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "13") (term "0"))
(rule "nnf_imp2or" (formula "14") (term "0"))
(rule "nnf_notAnd" (formula "13") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
(rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
(rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
(rule "mul_literals" (formula "13") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "14") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
(rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
(rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
(rule "mul_literals" (formula "14") (term "1,0,0,0"))
(rule "nnf_imp2or" (formula "21") (term "0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "21") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0,0,0,0,1"))
(rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,0,0,1"))
(rule "Class_invariant_axiom_for_CaseStudyUseMaps_MapImplementation" (formula "12") (inst "i=i") (inst "o=o") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i1=i1") (inst "i2=i2") (inst "i_4=i_4") (inst "i_5=i_5"))
(builtin "One Step Simplification" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "12"))
(rule "eqSymm" (formula "21") (term "1,0,0,1,0"))
(rule "eqSymm" (formula "19"))
(rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
(rule "eqSymm" (formula "13") (term "0,1,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "20") (term "0,0"))
(rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
(rule "add_literals" (formula "20") (term "0,0,0,0"))
(rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
(rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
(rule "subsetSingletonLeft" (formula "25"))
(rule "subsetSingletonLeft" (formula "24"))
(rule "apply_eq_monomials" (formula "12") (term "1,0,0,1,0,0") (ifseqformula "19"))
(rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_pullOutFactor1b" (formula "12") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "12") (term "1,1,1,0,0,1,0,0"))
(rule "times_zero_1" (formula "12") (term "1,1,0,0,1,0,0"))
(rule "add_zero_right" (formula "12") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0"))
(rule "mul_literals" (formula "19") (term "1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
(rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0,1,0"))
(rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0,1,0"))
(rule "mul_literals" (formula "20") (term "0,1,1,0,0,0,1,0"))
(rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
(rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
(rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "12") (term "1,0,1,0"))
(rule "nnf_imp2or" (formula "22") (term "0"))
(rule "nnf_imp2or" (formula "20") (term "0"))
(rule "nnf_imp2or" (formula "15") (term "0"))
(rule "nnf_imp2or" (formula "14") (term "0"))
(rule "nnf_imp2or" (formula "12") (term "0"))
(rule "nnf_notAnd" (formula "22") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
(rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
(rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
(rule "mul_literals" (formula "22") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "20") (term "0,0"))
(builtin "One Step Simplification" (formula "20"))
(rule "nnf_notAnd" (formula "15") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
(rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
(rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
(rule "mul_literals" (formula "15") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "14") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
(rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
(rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
(rule "mul_literals" (formula "14") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "12") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
(rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
(rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
(rule "mul_literals" (formula "12") (term "1,0,0,0"))
(rule "nnf_imp2or" (formula "12") (term "0,1,0"))
(rule "nnf_notOr" (formula "20") (term "0,0,0"))
(rule "nnf_notAnd" (formula "12") (term "0,0,1,0"))
(rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0"))
(rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "12") (term "0,0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
(rule "mul_literals" (formula "12") (term "1,0,0,0,1,0"))
(rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,0"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,0"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,0"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,0"))
(rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0"))
(rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,0"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0"))
(rule "shift_paren_or" (formula "19") (term "0"))
(rule "commute_or_2" (formula "22") (term "0"))
(rule "methodBodyExpand" (formula "36") (term "1") (newnames "heapBefore_copyArray,savedHeapBefore_copyArray"))
(builtin "One Step Simplification" (formula "36"))
(rule "commute_or" (formula "20") (term "0,0"))
(rule "commute_or" (formula "22") (term "0,0"))
(rule "commute_or" (formula "12") (term "1,0,1,0"))
(rule "cnf_eqv" (formula "20") (term "1,0"))
(rule "nnf_notEx" (formula "20") (term "0,1,1,0"))
(rule "nnf_notAnd" (formula "20") (term "0,0,1,1,0"))
(rule "nnf_notAnd" (formula "20") (term "0,0,0,1,1,0"))
(rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,0,1,1,0"))
(rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,1,1,0"))
(rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,1,1,0"))
(rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,1,1,0"))
(rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,1,1,0"))
(rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0,1,1,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0,1,1,0"))
(rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,1,0"))
(rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,1,0"))
(rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,0,1,1,0"))
(rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0,1,1,0"))
(rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0,1,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0,1,1,0"))
(rule "mul_literals" (formula "20") (term "1,0,0,0,0,1,1,0"))
(rule "shift_paren_or" (formula "12") (term "0,1,0"))
(rule "arrayLengthIsAShort" (formula "8") (term "0"))
(builtin "One Step Simplification" (formula "8"))
(rule "true_left" (formula "8"))
(rule "arrayLengthNotNegative" (formula "8") (term "0"))
(rule "arrayLengthNotNegative" (formula "11") (term "0"))
(rule "arrayLengthIsAShort" (formula "12") (term "0"))
(builtin "One Step Simplification" (formula "12"))
(rule "true_left" (formula "12"))
(rule "cnf_rightDist" (formula "22") (term "0,0"))
(builtin "One Step Simplification" (formula "22"))
(rule "for_to_while" (formula "38") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "variableDeclarationAssign" (formula "38") (term "1"))
(rule "variableDeclaration" (formula "38") (term "1") (newnames "i"))
(rule "assignment" (formula "38") (term "1"))
(builtin "One Step Simplification" (formula "38"))
(rule "arrayLengthNotNegative" (formula "23") (term "1"))
(rule "arrayLengthIsAShort" (formula "24") (term "1"))
(builtin "One Step Simplification" (formula "24"))
(rule "true_left" (formula "24"))
(rule "arrayLengthIsAShort" (formula "20") (term "0"))
(builtin "One Step Simplification" (formula "20"))
(rule "true_left" (formula "20"))
(rule "arrayLengthNotNegative" (formula "20") (term "0"))
(rule "ex_pull_out2" (formula "23") (term "0,1,0"))
(rule "commute_or" (formula "23") (term "0,0,1,0"))
(rule "cnf_rightDist" (formula "23") (term "0,0,1,0"))
(rule "commute_or" (formula "23") (term "1,0,0,1,0"))
(rule "cnf_rightDist" (formula "23") (term "0,0,0,1,0"))
(rule "commute_or" (formula "23") (term "1,0,0,0,1,0"))
(rule "all_pull_out3" (formula "14") (term "0"))
(rule "shift_paren_or" (formula "14") (term "0,0"))
(rule "shift_paren_or" (formula "14") (term "0,0,0"))
(rule "shift_paren_or" (formula "14") (term "0,0,0,0"))
(rule "all_pull_out2" (formula "23") (term "1,1,0"))
(rule "commute_or_2" (formula "23") (term "0,1,1,0"))
(rule "commute_or_2" (formula "23") (term "0,0,1,1,0"))
(rule "commute_or" (formula "23") (term "0,0,0,1,1,0"))
(rule "ex_pull_out0" (formula "23") (term "1,0"))
(builtin "Loop Invariant" (formula "40") (newnames "heapBeforeLoop,iBeforeLoop,i_0,anon_heap_loop,o,f,variant,b"))
(branch "Invariant Initially Valid"
   (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "4")))
   (rule "translateJavaAddInt" (formula "40") (term "0,2,1,1,0,1,0,1"))
   (rule "translateJavaSubInt" (formula "40") (term "1,0"))
   (rule "translateJavaAddInt" (formula "40") (term "0,2,0,1,0,1,0,1"))
   (rule "leq_literals" (formula "40") (term "0,0,0,1"))
   (builtin "One Step Simplification" (formula "40"))
   (rule "polySimp_elimSub" (formula "40") (term "1,0"))
   (rule "times_zero_2" (formula "40") (term "1,1,0"))
   (rule "add_zero_right" (formula "40") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,0,1"))
   (rule "mul_literals" (formula "40") (term "1,0,0,1,0,0,1,0,1"))
   (rule "add_literals" (formula "40") (term "0,0,1,0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,1"))
   (rule "replace_known_left" (formula "40") (term "0,0,1") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "40"))
   (rule "inEqSimp_commuteLeq" (formula "40") (term "0"))
   (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "40"))
   (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0"))
   (rule "applyEq" (formula "27") (term "2") (ifseqformula "15"))
   (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
   (rule "applyEq" (formula "27") (term "2") (ifseqformula "15"))
   (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
   (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
   (rule "elementOfUnion" (formula "26"))
   (builtin "One Step Simplification" (formula "26"))
   (rule "eqSymm" (formula "26") (term "1"))
   (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
   (rule "replace_known_right" (formula "26") (term "1,1") (ifseqformula "36"))
   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "32")))
   (rule "elementOfUnion" (formula "27"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "eqSymm" (formula "27") (term "1"))
   (rule "sortsDisjointModuloNull" (formula "27") (term "1"))
   (rule "replace_known_right" (formula "27") (term "1,1") (ifseqformula "36"))
   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "32")))
   (rule "elementOfUnion" (formula "26"))
   (builtin "One Step Simplification" (formula "26"))
   (rule "true_left" (formula "26"))
   (rule "elementOfUnion" (formula "26"))
   (builtin "One Step Simplification" (formula "26"))
   (rule "true_left" (formula "26"))
   (rule "nnf_imp2or" (formula "37") (term "0,1"))
   (rule "nnf_imp2or" (formula "37") (term "0,0"))
   (rule "nnf_notAnd" (formula "37") (term "0,0,1"))
   (builtin "One Step Simplification" (formula "37"))
   (rule "nnf_notAnd" (formula "37") (term "1,0,1"))
   (builtin "One Step Simplification" (formula "37"))
   (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
   (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,0"))
   (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0,0"))
   (rule "add_literals" (formula "37") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0"))
   (rule "mul_literals" (formula "37") (term "1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "37"))
   (rule "allRight" (formula "37") (inst "sk=o_3"))
   (rule "orRight" (formula "37"))
   (rule "orRight" (formula "37"))
   (rule "orRight" (formula "39"))
   (rule "notRight" (formula "37"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "39"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
   (rule "closeFalse" (formula "1"))
)
(branch "Body Preserves Invariant"
   (builtin "One Step Simplification" (formula "42"))
   (builtin "One Step Simplification" (formula "33"))
   (rule "translateJavaSubInt" (formula "42") (term "0,1,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "42") (term "2,1,0,1,0,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "42") (term "0,1,1,1,1,0,1,1"))
   (rule "translateJavaSubInt" (formula "42") (term "2,2,0,0,0,0,1,0,1,1,0,1,1"))
   (rule "translateJavaSubInt" (formula "42") (term "2,1,0,1,1,0,0"))
   (rule "translateJavaAddInt" (formula "42") (term "0,2,1,1,0,1,0,0,0,1,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "42") (term "0,2,0,1,0,1,0,0,0,1,1,0,1,1"))
   (rule "translateJavaSubInt" (formula "42") (term "1,0,1,1,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "33") (term "0,2,1,0,0,1,0,1,0,0"))
   (rule "translateJavaAddInt" (formula "33") (term "0,2,0,1,0,1,0,0"))
   (rule "translateJavaAddInt" (formula "33") (term "0,2,1,0,1,1,0,1,0,0"))
   (rule "translateJavaSubInt" (formula "33") (term "1,1"))
   (rule "translateJavaAddInt" (formula "33") (term "0,2,1,1,0,1,0,0"))
   (rule "translateJavaAddInt" (formula "42") (term "0,2,1,0,1,0,1,1,0,1"))
   (rule "translateJavaAddInt" (formula "42") (term "0,2,2,0,0,0,0,1,0,1,1,0,1,1"))
   (rule "translateJavaAddInt" (formula "42") (term "0,2,1,0,1,1,0,0"))
   (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,1,0,1,0,0"))
   (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,1,0,0"))
   (rule "impRight" (formula "42"))
   (rule "andLeft" (formula "34"))
   (rule "andLeft" (formula "34"))
   (rule "andLeft" (formula "34"))
   (rule "andLeft" (formula "34"))
   (rule "eqSymm" (formula "47") (term "1,0,0,1,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "47") (term "0,1,1,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "47") (term "1,0,1,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "47") (term "0,1,1,1,0"))
   (rule "polySimp_elimSub" (formula "47") (term "2,2,0,0,0,0,1,0,1,1,0,1"))
   (rule "mul_literals" (formula "47") (term "1,2,2,0,0,0,0,1,0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "47") (term "2,1,0,1,0,1,1,0"))
   (rule "mul_literals" (formula "47") (term "1,2,1,0,1,0,1,1,0"))
   (rule "polySimp_elimSub" (formula "1") (term "2,1,0,1,1,0"))
   (rule "mul_literals" (formula "1") (term "1,2,1,0,1,1,0"))
   (rule "polySimp_elimSub" (formula "38") (term "1"))
   (rule "polySimp_elimSub" (formula "36") (term "2,1,0,1,1,0"))
   (rule "mul_literals" (formula "36") (term "1,2,1,0,1,1,0"))
   (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,1,0"))
   (rule "mul_literals" (formula "36") (term "1,2,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "47") (term "1,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "47") (term "0,1,1,1,0"))
   (rule "polySimp_addComm1" (formula "47") (term "2,2,0,0,0,0,1,0,1,1,0,1"))
   (rule "polySimp_addComm1" (formula "47") (term "2,1,0,1,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "1") (term "2,1,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "38") (term "1"))
   (rule "polySimp_addComm1" (formula "36") (term "2,1,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "36") (term "2,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,0,0,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "34"))
   (rule "inEqSimp_commuteLeq" (formula "35"))
   (rule "polySimp_addComm1" (formula "47") (term "0,1,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "47") (term "0,2,2,0,0,0,0,1,0,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "47") (term "0,2,1,0,1,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "1") (term "0,2,1,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "36") (term "0,2,1,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "36") (term "0,2,1,0,0,1,0"))
   (rule "inEqSimp_homoInEq0" (formula "47") (term "0,1,1,1,0,1"))
   (rule "mul_literals" (formula "47") (term "1,0,0,1,1,1,0,1"))
   (rule "add_zero_right" (formula "47") (term "0,0,1,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,1,1,1,0,1"))
   (rule "inEqSimp_homoInEq0" (formula "38"))
   (rule "times_zero_2" (formula "38") (term "1,0"))
   (rule "add_zero_right" (formula "38") (term "0"))
   (rule "elementOfArrayRange" (formula "47") (term "0,0,0,0,1,0,1,1,0,1") (inst "iv=iv"))
   (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0,0,1,0,0,0,0,1,0,1,1,0,1"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclarationAssign" (formula "47") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
   (rule "variableDeclaration" (formula "47") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "47") (term "1"))
   (builtin "One Step Simplification" (formula "47"))
   (rule "variableDeclaration" (formula "47") (term "1") (newnames "thrownExc"))
   (rule "blockThrow" (formula "47") (term "1,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "38"))
   (rule "polySimp_mulLiterals" (formula "38") (term "1"))
   (rule "polySimp_elimOne" (formula "38") (term "1"))
   (rule "inEqSimp_sepNegMonomial1" (formula "46") (term "0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "46") (term "0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "46") (term "0,1,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "1,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "46") (term "0,1,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "46") (term "0,1,1,1,1,0,1"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "nnf_imp2or" (formula "36") (term "0"))
   (rule "nnf_imp2or" (formula "35") (term "0"))
   (rule "nnf_notAnd" (formula "36") (term "1,0"))
   (builtin "One Step Simplification" (formula "36"))
   (rule "nnf_notAnd" (formula "35") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
   (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
   (rule "mul_literals" (formula "35") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "36") (term "0,0"))
   (builtin "One Step Simplification" (formula "36"))
   (rule "nnf_notOr" (formula "36") (term "0,0,0"))
   (rule "nnf_imp2or" (formula "46") (term "0,1,0,0,1,1,0,1"))
   (rule "nnf_notOr" (formula "36") (term "0,0,0,0"))
   (rule "nnf_imp2or" (formula "46") (term "0,1,0,0,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "46") (term "0,0,1,0,0,1,1,0,1"))
   (builtin "One Step Simplification" (formula "46"))
   (rule "nnf_notAnd" (formula "46") (term "1,0,1,0,0,1,1,0,1"))
   (builtin "One Step Simplification" (formula "46"))
   (rule "nnf_notAnd" (formula "46") (term "0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "46") (term "1,0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "add_literals" (formula "46") (term "0,0,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "46") (term "1,0,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
   (rule "nnf_notOr" (formula "46") (term "0,0,0,1,0,0,1,1,0,1"))
   (rule "commute_or" (formula "36") (term "1,0"))
   (rule "commute_or" (formula "36") (term "0,0"))
   (rule "commute_or_2" (formula "36") (term "0"))
   (rule "shift_paren_or" (formula "36") (term "0,0"))
   (builtin "One Step Simplification" (formula "36"))
   (rule "cnf_rightDist" (formula "36") (term "0"))
   (rule "distr_forallAnd" (formula "36"))
   (rule "andLeft" (formula "36"))
   (rule "commute_or" (formula "37") (term "0"))
   (builtin "One Step Simplification" (formula "37"))
   (rule "castDel" (formula "37") (term "1,0,1,0"))
   (rule "castDel" (formula "37") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "37"))
   (rule "true_left" (formula "37"))
   (rule "cnf_rightDist" (formula "36") (term "0"))
   (builtin "One Step Simplification" (formula "36"))
   (rule "commute_or" (formula "36") (term "0"))
   (rule "all_pull_out1" (formula "23") (term "0,1,0"))
   (rule "less_than_comparison_simple" (formula "37") (term "1"))
   (builtin "One Step Simplification" (formula "37"))
   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "37") (term "0,0,0,1,0"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "2"))
   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "methodCallEmpty" (formula "39") (term "1"))
   (builtin "One Step Simplification" (formula "39"))
   (rule "onlyCreatedObjectsAreInLocSets" (formula "29") (ifseqformula "3"))
   (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "46"))
   (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "4")))
   (rule "true_left" (formula "29"))
   (rule "emptyModality" (formula "39") (term "1"))
   (builtin "One Step Simplification" (formula "39"))
   (rule "notRight" (formula "39"))
   (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "1"))
   (rule "inEqSimp_homoInEq0" (formula "37") (term "0"))
   (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
   (rule "add_literals" (formula "37") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "37") (term "1,0,0"))
   (rule "add_literals" (formula "37") (term "0,0"))
   (rule "qeq_literals" (formula "37") (term "0"))
   (builtin "One Step Simplification" (formula "37"))
   (rule "true_left" (formula "37"))
   (rule "onlyCreatedObjectsAreInLocSets" (formula "31") (ifseqformula "4"))
   (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "5"))
   (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "45")))
   (rule "true_left" (formula "31"))
   (rule "ex_pull_out3" (formula "26") (term "0"))
   (rule "ifUnfold" (formula "47") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "47") (term "1") (newnames "x"))
   (rule "less_than_comparison_simple" (formula "47") (term "1"))
   (builtin "One Step Simplification" (formula "47"))
   (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "47") (term "0,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "47") (term "0,0,0,1,0"))
   (rule "replace_known_left" (formula "47") (term "0,0,1,0") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "47"))
   (rule "all_pull_out3" (formula "26") (term "0,0"))
   (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
   (rule "distr_forallAnd" (formula "26") (term "0,0"))
   (builtin "One Step Simplification" (formula "26"))
   (rule "distr_existsAnd1" (formula "26") (term "0"))
   (rule "distr_forallAnd" (formula "26"))
   (rule "andLeft" (formula "26"))
   (rule "commute_or_2" (formula "27") (term "0,0"))
   (rule "shift_paren_or" (formula "27") (term "0,0,0"))
   (rule "swapQuantifiersAll" (formula "27"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "castDel" (formula "27") (term "0,1,0,0,0"))
   (rule "castDel" (formula "27") (term "1,0,0,0,0,0,0"))
   (rule "castDel" (formula "27") (term "1,0,0,1,0,0"))
   (rule "instanceof_static_type" (formula "27") (term "0,0,1,0"))
   (builtin "One Step Simplification" (formula "27"))
   (rule "cnf_rightDist" (formula "26") (term "0,0"))
   (rule "shift_paren_or" (formula "26") (term "1,0,0"))
   (rule "commute_or_2" (formula "26") (term "0,1,0,0"))
   (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
   (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
   (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
   (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
   (rule "if" (formula "48") (term "1"))
   (builtin "One Step Simplification" (formula "48"))
   (rule "eval_order_array_access2" (formula "48") (term "1") (inst "#v0=x") (inst "#ar1=o_arr"))
   (rule "variableDeclarationAssign" (formula "48") (term "1"))
   (rule "variableDeclaration" (formula "48") (term "1") (newnames "o_arr"))
   (rule "assignment" (formula "48") (term "1"))
   (builtin "One Step Simplification" (formula "48"))
   (rule "variableDeclarationAssign" (formula "48") (term "1"))
   (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_1"))
   (rule "assignmentAdditionInt" (formula "48") (term "1"))
   (builtin "One Step Simplification" (formula "48"))
   (rule "translateJavaAddInt" (formula "48") (term "0,1,0"))
   (rule "eval_order_array_access3" (formula "48") (term "1") (inst "#v1=o") (inst "#v2=x_2") (inst "#v0=o_arr_1"))
   (rule "variableDeclarationAssign" (formula "48") (term "1"))
   (rule "variableDeclaration" (formula "48") (term "1") (newnames "o_arr_1"))
   (rule "assignment" (formula "48") (term "1"))
   (builtin "One Step Simplification" (formula "48"))
   (rule "variableDeclarationAssign" (formula "48") (term "1"))
   (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_2"))
   (rule "assignment" (formula "48") (term "1"))
   (builtin "One Step Simplification" (formula "48"))
   (rule "ifUnfold" (formula "48") (term "1") (inst "#boolv=x_3"))
   (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_3"))
   (rule "compound_assignment_5_nonsimple" (formula "48") (term "1"))
   (rule "ifElseUnfold" (formula "48") (term "1") (inst "#boolv=x_4"))
   (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_4"))
   (rule "compound_less_equal_than_comparison_1" (formula "48") (term "1") (inst "#v0=x_5"))
   (rule "variableDeclarationAssign" (formula "48") (term "1"))
   (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_5"))
   (rule "eval_order_access2" (formula "48") (term "1") (inst "#v0=o_arr_2"))
   (rule "variableDeclarationAssign" (formula "48") (term "1"))
   (rule "variableDeclaration" (formula "48") (term "1") (newnames "o_arr_2"))
   (rule "remove_parentheses_right" (formula "48") (term "1"))
   (rule "assignment" (formula "48") (term "1"))
   (builtin "One Step Simplification" (formula "48"))
   (rule "assignment_read_length" (formula "48") (term "1"))
   (branch "Normal Execution (o_arr_2 != null)"
      (builtin "One Step Simplification" (formula "49"))
      (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "43")))
      (rule "false_right" (formula "48"))
      (rule "less_equal_than_comparison_simple" (formula "48") (term "1"))
      (builtin "One Step Simplification" (formula "48"))
      (rule "ifElseSplit" (formula "48"))
      (branch "if x_4 true"
         (builtin "One Step Simplification" (formula "49"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "ifEnterThen" (formula "49") (term "1"))
         (rule "assignment" (formula "49") (term "1"))
         (builtin "One Step Simplification" (formula "49"))
         (rule "blockThrow" (formula "49") (term "1"))
         (rule "blockThrow" (formula "49") (term "1"))
         (builtin "One Step Simplification" (formula "49"))
         (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
         (rule "polySimp_rightDist" (formula "13") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
         (rule "polySimp_pullOutFactor2" (formula "13") (term "0,0,0"))
         (rule "add_literals" (formula "13") (term "1,0,0,0"))
         (rule "times_zero_1" (formula "13") (term "0,0,0"))
         (rule "add_zero_left" (formula "13") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "polySimp_elimOne" (formula "13") (term "0"))
         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "13"))
         (rule "andLeft" (formula "2"))
         (rule "inEqSimp_homoInEq1" (formula "2"))
         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
         (rule "add_literals" (formula "2") (term "1,1,0"))
         (rule "times_zero_1" (formula "2") (term "1,0"))
         (rule "add_zero_right" (formula "2") (term "0"))
         (rule "leq_literals" (formula "2"))
         (rule "closeFalse" (formula "2"))
      )
      (branch "if x_4 false"
         (builtin "One Step Simplification" (formula "49"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "40"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "polySimp_rightDist" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
         (rule "mul_literals" (formula "1") (term "0,0,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
         (rule "less_than_comparison_simple" (formula "49") (term "1"))
         (builtin "One Step Simplification" (formula "49"))
         (rule "inEqSimp_ltToLeq" (formula "49") (term "0,0,1,0"))
         (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,1,0"))
         (rule "add_zero_right" (formula "49") (term "0,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,0"))
         (rule "blockEmpty" (formula "49") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0"))
         (rule "if" (formula "49") (term "1"))
         (builtin "One Step Simplification" (formula "49"))
         (rule "variableDeclarationAssign" (formula "49") (term "1,2"))
         (rule "variableDeclaration" (formula "49") (term "1,2") (newnames "o"))
         (rule "eval_order_array_access5" (formula "49") (term "1,2") (inst "#v1=x_3") (inst "#ar1=o_arr_2"))
         (rule "variableDeclarationAssign" (formula "49") (term "1,2"))
         (rule "variableDeclaration" (formula "49") (term "1,2") (newnames "o_arr_3"))
         (rule "assignment" (formula "49") (term "1,2"))
         (builtin "One Step Simplification" (formula "49"))
         (rule "variableDeclarationAssign" (formula "49") (term "1,2"))
         (rule "variableDeclaration" (formula "49") (term "1,2") (newnames "x_6"))
         (rule "blockThrow" (formula "49") (term "1,1"))
         (rule "blockThrow" (formula "49") (term "1,1"))
         (builtin "One Step Simplification" (formula "49"))
         (rule "assignmentAdditionInt" (formula "49") (term "1,2"))
         (builtin "One Step Simplification" (formula "49"))
         (rule "translateJavaAddInt" (formula "49") (term "0,1,0,2"))
         (rule "assignment_array2" (formula "49") (term "1,2"))
         (branch "Normal Execution (o_arr_3 != null)"
            (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "43")))
            (builtin "One Step Simplification" (formula "50"))
            (rule "orRight" (formula "49"))
            (rule "inEqSimp_ltRight" (formula "50"))
            (rule "mul_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "50"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "assignment_to_reference_array_component" (formula "51") (term "1,2"))
            (branch "Normal Execution (o_arr_1 != null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
               (builtin "One Step Simplification" (formula "52"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_ltToLeq" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "array_store_known_dynamic_array_type" (formula "3") (ifseqformula "22"))
               (rule "instanceof_static_type" (formula "3") (term "0,1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "blockEmpty" (formula "53") (term "1,2"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
               (rule "mul_literals" (formula "3") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
               (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "52") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "52") (term "0,0,0"))
               (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "52") (term "0,0,0"))
               (rule "leq_literals" (formula "52") (term "0,0"))
               (builtin "One Step Simplification" (formula "52"))
               (rule "pullOutSelect" (formula "52") (term "3,0,1,0") (inst "selectSK=selectSK_0"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "13")))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "52"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "52") (term "3,0,1,0"))
               (rule "postincrement" (formula "52") (term "1"))
               (rule "compound_int_cast_expression" (formula "52") (term "1") (inst "#v=x"))
               (rule "variableDeclarationAssign" (formula "52") (term "1"))
               (rule "variableDeclaration" (formula "52") (term "1") (newnames "x_9"))
               (rule "remove_parentheses_right" (formula "52") (term "1"))
               (rule "assignmentAdditionInt" (formula "52") (term "1"))
               (builtin "One Step Simplification" (formula "52"))
               (rule "translateJavaAddInt" (formula "52") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "52") (term "0,1,0"))
               (rule "widening_identity_cast_5" (formula "52") (term "1"))
               (rule "assignment" (formula "52") (term "1"))
               (builtin "One Step Simplification" (formula "52"))
               (rule "tryEmpty" (formula "52") (term "1"))
               (rule "methodCallEmpty" (formula "52") (term "1"))
               (rule "emptyModality" (formula "52") (term "1"))
               (builtin "One Step Simplification" (formula "52"))
               (rule "andRight" (formula "52"))
               (branch "Case 1"
                  (rule "andRight" (formula "52"))
                  (branch "Case 1"
                     (rule "andRight" (formula "52"))
                     (branch "Case 1"
                        (rule "andRight" (formula "52"))
                        (branch "Case 1"
                           (rule "andRight" (formula "52"))
                           (branch "Case 1"
                              (rule "inEqSimp_geqRight" (formula "52"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "36") (term "2") (ifseqformula "23"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                              (rule "applyEq" (formula "36") (term "2") (ifseqformula "23"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "41"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Case 2"
                              (rule "inEqSimp_leqRight" (formula "52"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                              (rule "applyEq" (formula "35") (term "2") (ifseqformula "23"))
                              (rule "applyEq" (formula "36") (term "2") (ifseqformula "23"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "52") (inst "sk=x_10"))
                           (rule "orRight" (formula "52"))
                           (rule "orRight" (formula "52"))
                           (rule "inEqSimp_leqRight" (formula "52"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "53"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "applyEq" (formula "38") (term "2") (ifseqformula "24"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                           (rule "applyEq" (formula "36") (term "2") (ifseqformula "24"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "elementOfUnion" (formula "37"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "eqSymm" (formula "37") (term "1"))
                           (rule "sortsDisjointModuloNull" (formula "37") (term "1"))
                           (rule "replace_known_right" (formula "37") (term "0,1") (ifseqformula "46"))
                           (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "50")))
                           (rule "elementOfUnion" (formula "36"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "eqSymm" (formula "36") (term "1"))
                           (rule "sortsDisjointModuloNull" (formula "36") (term "1"))
                           (rule "replace_known_right" (formula "36") (term "0,1") (ifseqformula "46"))
                           (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "50")))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "elementOfUnion" (formula "37"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "true_left" (formula "37"))
                           (rule "elementOfUnion" (formula "36"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=selectSK_72"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "52"))
                           (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "1") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=selectSK_73"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "15")))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0,0"))
                           (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=selectSK_74"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "17")))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "53"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "applyEq_and_int4" (formula "1") (term "0,0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "0,0,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_invertInEq0" (formula "1") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,0"))
                           (rule "times_zero_2" (formula "1") (term "1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,0,0"))
                           (rule "replace_known_left" (formula "1") (term "1,0,0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "commute_and" (formula "1") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0,0,0,0"))
                           (rule "instanceof_static_type" (formula "1") (term "0,1,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                           (rule "allLeft" (formula "40") (inst "t=add(beginSource, i_0)"))
                           (rule "inEqSimp_commuteGeq" (formula "40") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "40") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "40") (term "0,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "40") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "40") (term "0,0,0,0"))
                           (rule "add_literals" (formula "40") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "40") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "inEqSimp_contradInEq1" (formula "40") (term "0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "40") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
                           (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,0"))
                           (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0,0"))
                           (rule "leq_literals" (formula "40") (term "0,0"))
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "notLeft" (formula "40"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "x_10 ≤ -1 + numberCopies TRUE"
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "4") (term "0,0"))
                              (rule "add_zero_left" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "4"))
                              (rule "leq_literals" (formula "18") (term "0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "x_10 = i_0 TRUE"
                                 (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,0"))
                                 (rule "times_zero_1" (formula "3") (term "0"))
                                 (rule "qeq_literals" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "applyEqRigid" (formula "53") (term "1,0,2,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "closeTrue" (formula "53"))
                              )
                              (branch "x_10 = i_0 FALSE"
                                 (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "eqSymm" (formula "54"))
                                 (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "44"))
                                 (rule "inEqSimp_contradEq3" (formula "44") (ifseqformula "2"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,0"))
                                 (rule "qeq_literals" (formula "44") (term "0"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "false_right" (formula "44"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "4") (term "0,0"))
                                 (rule "add_zero_left" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "42") (term "0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "true_left" (formula "42"))
                                 (rule "allLeft" (formula "42") (inst "t=x_10"))
                                 (rule "replaceKnownSelect_taclet3_0" (formula "42") (term "0,1"))
                                 (rule "replaceKnownSelect_taclet5_0" (formula "42") (term "1,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet7_0" (formula "42") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "42") (term "1,1"))
                                 (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_contradInEq0" (formula "42") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "42") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "42") (term "0,0,1"))
                                 (rule "leq_literals" (formula "42") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_contradInEq1" (formula "42") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "42") (term "0"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "closeFalse" (formula "42"))
                              )
                           )
                           (branch "x_10 ≤ -1 + numberCopies FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "inEqSimp_leqRight" (formula "44"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                              (rule "andLeft" (formula "10"))
                              (rule "inEqSimp_homoInEq1" (formula "10"))
                              (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "1,1,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0"))
                              (rule "add_literals" (formula "10") (term "0"))
                              (rule "leq_literals" (formula "10"))
                              (rule "closeFalse" (formula "10"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "selectOfStore" (formula "52") (term "0,0,0,0,0,0") (userinteraction))
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "allRight" (formula "52") (inst "sk=o_7") (userinteraction))
                        (rule "orRight" (formula "52"))
                        (rule "orRight" (formula "52"))
                        (rule "orRight" (formula "54"))
                        (rule "replace_known_right" (formula "52") (term "0,0,0") (ifseqformula "54") (userinteraction))
                        (rule "replace_known_right" (formula "52") (term "0,1") (ifseqformula "53") (userinteraction))
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "instAll" (formula "52") (term "1,0,0") (ifseqformula "43") (userinteraction))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "54") (userinteraction))
                        (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "55") (userinteraction))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                        (rule "closeFalse" (formula "1") (userinteraction))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "52") (inst "sk=f_3"))
                     (rule "allRight" (formula "52") (inst "sk=o_6"))
                     (rule "orRight" (formula "52"))
                     (rule "orRight" (formula "52"))
                     (rule "eqSymm" (formula "54"))
                     (rule "eqSymm" (formula "52") (term "0,0,0,1"))
                     (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                     (rule "applyEq" (formula "34") (term "2") (ifseqformula "22"))
                     (rule "applyEq" (formula "35") (term "2") (ifseqformula "22"))
                     (rule "elementOfUnion" (formula "34"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "eqSymm" (formula "34") (term "1"))
                     (rule "sortsDisjointModuloNull" (formula "34") (term "1"))
                     (rule "replace_known_right" (formula "34") (term "0,1") (ifseqformula "44"))
                     (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "48")))
                     (rule "elementOfUnion" (formula "35"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "eqSymm" (formula "35") (term "1"))
                     (rule "sortsDisjointModuloNull" (formula "35") (term "1"))
                     (rule "replace_known_right" (formula "35") (term "1,1") (ifseqformula "48"))
                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "44")))
                     (rule "elementOfUnion" (formula "34"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "elementOfUnion" (formula "34"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=selectSK_76"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "52"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=selectSK_77"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "51"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "cut_direct" (formula "51") (term "0,0"))
                     (branch "CUT: o_6 = null TRUE"
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "false_right" (formula "52"))
                        (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "51") (term "0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "51") (term "0"))
                        (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "46"))
                        (builtin "One Step Simplification" (formula "51"))
                        (rule "false_right" (formula "51"))
                        (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "2") (term "1,0,0"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "46"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "applyEqRigid" (formula "50") (term "1,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "50"))
                        (rule "closeTrue" (formula "50"))
                     )
                     (branch "CUT: o_6 = null FALSE"
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "notRight" (formula "52"))
                        (rule "cut_direct" (formula "51") (term "0"))
                        (branch "CUT: o_6 = target TRUE"
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "53") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                           (rule "nnf_ex2all" (formula "51"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,1,1,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                           (rule "commute_or" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (rule "allLeft" (formula "38") (inst "t=add(beginTarget, i_0)"))
                           (rule "inEqSimp_commuteGeq" (formula "38") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                           (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                           (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "38") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "38") (term "0,0,0"))
                           (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "38") (term "0,0,0"))
                           (rule "leq_literals" (formula "38") (term "0,0"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "notLeft" (formula "38"))
                           (rule "allLeft" (formula "39") (inst "t=add(beginSource, i_0)"))
                           (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "0,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "39") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "39") (term "0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "39") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0"))
                           (rule "leq_literals" (formula "39") (term "0,0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "notLeft" (formula "39"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "f_3 = arr(beginTarget + i_0) TRUE"
                              (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "0,0,0"))
                              (rule "castDel" (formula "1") (term "0,1,0"))
                              (rule "instanceof_static_type" (formula "1") (term "0,0,1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,1"))
                              (rule "add_literals" (formula "1") (term "1,0,0,0,1"))
                              (rule "times_zero_1" (formula "1") (term "0,0,0,1"))
                              (rule "add_zero_left" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "applyEq" (formula "54") (term "2,0") (ifseqformula "3"))
                              (rule "narrowSelectArrayType" (formula "54") (term "0") (ifseqformula "11") (ifseqformula "49"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "leq_literals" (formula "1") (term "0,1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "41"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "f_3 = arr(beginTarget + i_0) FALSE"
                              (rule "close" (formula "55") (ifseqformula "3"))
                           )
                        )
                        (branch "CUT: o_6 = target FALSE"
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "false_right" (formula "52"))
                           (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "51"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "52"))
                  (branch "Case 1"
                     (rule "inEqSimp_leqRight" (formula "52"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                     (rule "applyEq" (formula "35") (term "2") (ifseqformula "23"))
                     (rule "applyEq" (formula "36") (term "2") (ifseqformula "23"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
                     (rule "andLeft" (formula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "6"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                     (rule "add_literals" (formula "6") (term "1,1,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0"))
                     (rule "add_zero_right" (formula "6") (term "0"))
                     (rule "leq_literals" (formula "6"))
                     (rule "closeFalse" (formula "6"))
                  )
                  (branch "Case 2"
                     (rule "polySimp_mulComm0" (formula "52") (term "1,1"))
                     (rule "inEqSimp_geqRight" (formula "52"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "Null Reference (o_arr_1 = null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (o_arr_1 != null, but x_2 Out of Bounds!)"
               (builtin "One Step Simplification" (formula "52"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "blockThrow" (formula "52") (term "1,2"))
               (builtin "One Step Simplification" (formula "52"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
               (rule "mul_literals" (formula "2") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
               (rule "polySimp_rightDist" (formula "1") (term "1,1"))
               (rule "mul_literals" (formula "1") (term "0,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0"))
               (rule "leq_literals" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
               (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "1"))
               (rule "times_zero_1" (formula "42") (term "0,0"))
               (rule "add_zero_left" (formula "42") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "42"))
               (rule "polySimp_mulLiterals" (formula "42") (term "0"))
               (rule "polySimp_elimOne" (formula "42") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "42"))
               (rule "qeq_literals" (formula "15") (term "0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "closeFalse" (formula "15"))
            )
            (branch "Array Store Exception (incompatible dynamic element type of o_arr_1 and o)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
               (builtin "One Step Simplification" (formula "52"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "3"))
               (rule "inEqSimp_ltToLeq" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "array_store_known_dynamic_array_type" (formula "45") (ifseqformula "21"))
               (rule "orRight" (formula "45"))
               (rule "instanceof_static_type" (formula "46") (term "0"))
               (builtin "One Step Simplification" (formula "46"))
               (rule "closeTrue" (formula "46"))
            )
         )
         (branch "Null Reference (o_arr_3 = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (o_arr_3 != null, but x_6 Out of Bounds!)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
            (builtin "One Step Simplification" (formula "50"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
            (rule "blockThrow" (formula "50") (term "1,2"))
            (builtin "One Step Simplification" (formula "50"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1,1"))
            (rule "commute_or" (formula "1"))
            (rule "methodCallThrow" (formula "50") (term "1,0,0,1"))
            (rule "tryCatchThrow" (formula "50") (term "1,0,0,1"))
            (rule "ifElseUnfold" (formula "50") (term "1,0,0,1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "50") (term "1,0,0,1") (newnames "x_7"))
            (rule "equality_comparison_simple" (formula "50") (term "1,0,0,1"))
            (rule "throwUnfold" (formula "50") (term "1") (inst "#v0=a"))
            (rule "variableDeclarationAssign" (formula "50") (term "1"))
            (rule "variableDeclaration" (formula "50") (term "1") (newnames "a"))
            (rule "instanceCreationAssignment" (formula "50") (term "1") (inst "#v0=a_1"))
            (rule "variableDeclarationAssign" (formula "50") (term "1"))
            (rule "variableDeclaration" (formula "50") (term "1") (newnames "a_1"))
            (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "50") (term "1") (inst "#v0=a_2"))
            (rule "variableDeclaration" (formula "50") (term "1") (newnames "a_2"))
            (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
            (builtin "One Step Simplification" (formula "50"))
            (rule "variableDeclaration" (formula "50") (term "1") (newnames "__NEW__"))
            (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "50") (term "1") (inst "#v0=a_3"))
            (rule "variableDeclaration" (formula "50") (term "1") (newnames "a_3"))
            (rule "allocateInstance" (formula "50"))
            (builtin "One Step Simplification" (formula "51"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
            (rule "notLeft" (formula "1"))
            (rule "orRight" (formula "43"))
            (rule "blockEmpty" (formula "54") (term "1"))
            (rule "assignment" (formula "54") (term "1"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodBodyExpand" (formula "54") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "assignment_write_attribute_this" (formula "54") (term "1"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallWithinClass" (formula "54") (term "1"))
            (rule "methodBodyExpand" (formula "54") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallSuper" (formula "54") (term "1"))
            (rule "methodBodyExpand" (formula "54") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallSuper" (formula "54") (term "1"))
            (rule "methodBodyExpand" (formula "54") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallSuper" (formula "54") (term "1"))
            (rule "methodBodyExpand" (formula "54") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallSuper" (formula "54") (term "1"))
            (rule "methodBodyExpand" (formula "54") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallSuper" (formula "54") (term "1"))
            (rule "methodBodyExpand" (formula "54") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallEmpty" (formula "54") (term "1"))
            (rule "blockEmpty" (formula "54") (term "1"))
            (rule "assignment_write_attribute_this" (formula "54") (term "1"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "castDel" (formula "54") (term "1,0,1,0"))
            (rule "assignment_write_attribute_this" (formula "54") (term "1"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "castDel" (formula "54") (term "1,0,1,0"))
            (rule "methodCallEmpty" (formula "54") (term "1"))
            (rule "methodCallEmpty" (formula "54") (term "1"))
            (rule "methodCallEmpty" (formula "54") (term "1"))
            (rule "methodCallEmpty" (formula "54") (term "1"))
            (rule "methodCallEmpty" (formula "54") (term "1"))
            (rule "blockEmpty" (formula "54") (term "1"))
            (rule "methodCallReturnIgnoreResult" (formula "54") (term "1"))
            (rule "methodCallReturn" (formula "54") (term "1"))
            (rule "assignment" (formula "54") (term "1"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallEmpty" (formula "54") (term "1"))
            (rule "blockEmpty" (formula "54") (term "1"))
            (rule "assignment" (formula "54") (term "1"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodBodyExpand" (formula "54") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallSuper" (formula "54") (term "1"))
            (rule "methodBodyExpand" (formula "54") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallSuper" (formula "54") (term "1"))
            (rule "methodBodyExpand" (formula "54") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallSuper" (formula "54") (term "1"))
            (rule "methodBodyExpand" (formula "54") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallSuper" (formula "54") (term "1"))
            (rule "methodBodyExpand" (formula "54") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallSuper" (formula "54") (term "1"))
            (rule "methodBodyExpand" (formula "54") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallEmpty" (formula "54") (term "1"))
            (rule "blockEmpty" (formula "54") (term "1"))
            (rule "assignment_write_attribute_this" (formula "54") (term "1"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "castDel" (formula "54") (term "1,0,1,0"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "assignment_write_attribute_this" (formula "54") (term "1"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "castDel" (formula "54") (term "1,0,1,0"))
            (builtin "One Step Simplification" (formula "54"))
            (rule "methodCallEmpty" (formula "54") (term "1"))
            (rule "methodCallEmpty" (formula "54") (term "1"))
            (rule "methodCallEmpty" (formula "54") (term "1"))
            (rule "methodCallEmpty" (formula "54") (term "1"))
            (rule "methodCallEmpty" (formula "54") (term "1"))
            (rule "blockEmpty" (formula "54") (term "1"))
            (rule "assignment_write_attribute" (formula "54") (term "1"))
            (branch "Normal Execution (a_1 != null)"
               (builtin "One Step Simplification" (formula "55"))
               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "45")))
               (rule "false_right" (formula "54"))
               (rule "assignment" (formula "54") (term "1"))
               (builtin "One Step Simplification" (formula "54"))
               (rule "tryCatchThrow" (formula "54") (term "1"))
               (rule "ifElseUnfold" (formula "54") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "54") (term "1") (newnames "x_8"))
               (rule "equality_comparison_simple" (formula "54") (term "1"))
               (builtin "One Step Simplification" (formula "54"))
               (rule "replace_known_right" (formula "54") (term "0,0,1,0") (ifseqformula "45"))
               (builtin "One Step Simplification" (formula "54"))
               (rule "ifElseSplit" (formula "54"))
               (branch "if x_8 true"
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_8 false"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "55"))
                  (rule "true_left" (formula "1"))
                  (rule "ifElse" (formula "54") (term "1"))
                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "45")))
                  (rule "instanceof_static_type" (formula "54") (term "0,0"))
                  (builtin "One Step Simplification" (formula "54"))
                  (rule "variableDeclaration" (formula "54") (term "1") (newnames "e"))
                  (rule "reference_type_cast" (formula "54") (term "1"))
                  (branch "Normal Execution (a instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "55"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                     (rule "instanceof_static_type" (formula "1") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "assignment" (formula "54") (term "1"))
                     (builtin "One Step Simplification" (formula "54"))
                     (rule "assignment" (formula "54") (term "1"))
                     (builtin "One Step Simplification" (formula "54"))
                     (rule "methodCallEmpty" (formula "54") (term "1"))
                     (rule "emptyModality" (formula "54") (term "1"))
                     (builtin "One Step Simplification" (formula "54"))
                     (rule "replace_known_right" (formula "54") (term "0,0,1,0") (ifseqformula "45"))
                     (builtin "One Step Simplification" (formula "54"))
                     (rule "ifElseSplit" (formula "54"))
                     (branch "if x_7 true"
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_7 false"
                        (builtin "One Step Simplification" (formula "55"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "ifElse" (formula "54") (term "1"))
                        (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "45")))
                        (rule "instanceof_static_type" (formula "54") (term "0,0"))
                        (builtin "One Step Simplification" (formula "54"))
                        (rule "variableDeclaration" (formula "54") (term "1") (newnames "e_1"))
                        (rule "reference_type_cast" (formula "54") (term "1"))
                        (branch "Normal Execution (thrownExc instanceof java.lang.Exception)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "castDel" (formula "55") (term "0,1,0"))
                           (rule "instanceof_static_type" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "assignment" (formula "54") (term "1"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "emptyModality" (formula "54") (term "1"))
                           (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "45")))
                           (rule "false_right" (formula "54"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                           (rule "applyEq" (formula "33") (term "2") (ifseqformula "21"))
                           (rule "applyEq" (formula "34") (term "2") (ifseqformula "21"))
                           (rule "elementOfUnion" (formula "33"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "eqSymm" (formula "33") (term "1"))
                           (rule "sortsDisjointModuloNull" (formula "33") (term "1"))
                           (rule "replace_known_right" (formula "33") (term "0,1") (ifseqformula "46"))
                           (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "50")))
                           (rule "elementOfUnion" (formula "34"))
                           (builtin "One Step Simplification" (formula "34"))
                           (rule "eqSymm" (formula "34") (term "1"))
                           (rule "sortsDisjointModuloNull" (formula "34") (term "1"))
                           (rule "replace_known_right" (formula "34") (term "1,1") (ifseqformula "50"))
                           (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "46")))
                           (rule "elementOfUnion" (formula "33"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "elementOfUnion" (formula "33"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "cut_direct" (formula "2") (term "1"))
                           (branch "CUT: source.length ≤ beginSource + i_0 TRUE"
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "17") (term "0,0"))
                              (rule "add_zero_left" (formula "17") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                              (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                              (rule "polySimp_pullOutFactor2" (formula "19") (term "0,0,0"))
                              (rule "add_literals" (formula "19") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "19") (term "0,0,0"))
                              (rule "add_zero_left" (formula "19") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "19"))
                              (rule "andLeft" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_literals" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                           (branch "CUT: source.length ≤ beginSource + i_0 FALSE"
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "inEqSimp_leqRight" (formula "40"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                              (rule "mul_literals" (formula "1") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "3"))
                              (rule "times_zero_1" (formula "38") (term "0,0"))
                              (rule "add_zero_left" (formula "38") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                              (rule "polySimp_elimOne" (formula "38") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "38") (ifseqformula "17"))
                              (rule "qeq_literals" (formula "38") (term "0"))
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "closeFalse" (formula "38"))
                           )
                        )
                        (branch "ClassCastException (!(thrownExc instanceof java.lang.Exception))"
                           (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "45")))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "instanceof_static_type" (formula "54") (term "0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "closeTrue" (formula "54"))
                        )
                     )
                  )
                  (branch "ClassCastException (!(a instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "45")))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "instanceof_static_type" (formula "54") (term "0"))
                     (builtin "One Step Simplification" (formula "54"))
                     (rule "closeTrue" (formula "54"))
                  )
               )
            )
            (branch "Null Reference (a_1 = null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
   )
   (branch "Null Reference (o_arr_2 = null)"
      (builtin "One Step Simplification" (formula "49"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Use Case"
   (builtin "One Step Simplification" (formula "33"))
   (builtin "One Step Simplification" (formula "42"))
   (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,1,0,1,0"))
   (rule "translateJavaAddInt" (formula "33") (term "0,2,1,1,0,1,0"))
   (rule "translateJavaAddInt" (formula "33") (term "0,2,0,1,0,1,0"))
   (rule "translateJavaSubInt" (formula "33") (term "2,1,0,0,1,0,1,0"))
   (rule "translateJavaAddInt" (formula "42") (term "0,2,1,0,1,1,0"))
   (rule "translateJavaAddInt" (formula "33") (term "0,2,1,0,1,1,0,1,0"))
   (rule "translateJavaAddInt" (formula "33") (term "0,2,1,0,0,1,0,1,0"))
   (rule "translateJavaSubInt" (formula "42") (term "2,1,0,1,1,0"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "33"))
   (rule "andLeft" (formula "33"))
   (rule "polySimp_elimSub" (formula "45") (term "2,1,0,1,1,0"))
   (rule "mul_literals" (formula "45") (term "1,2,1,0,1,1,0"))
   (rule "polySimp_elimSub" (formula "35") (term "2,1,0,1,1,0"))
   (rule "mul_literals" (formula "35") (term "1,2,1,0,1,1,0"))
   (rule "polySimp_elimSub" (formula "35") (term "2,1,0,0,1,0"))
   (rule "mul_literals" (formula "35") (term "1,2,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "45") (term "2,1,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "35") (term "2,1,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "35") (term "2,1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "45") (term "0,2,1,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "35") (term "0,2,1,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "35") (term "0,2,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "34"))
   (rule "inEqSimp_commuteLeq" (formula "33"))
   (rule "variableDeclarationAssign" (formula "45") (term "1"))
   (rule "variableDeclaration" (formula "45") (term "1") (newnames "b_1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "36") (term "0"))
   (rule "nnf_imp2or" (formula "35") (term "0"))
   (rule "nnf_notAnd" (formula "36") (term "1,0"))
   (builtin "One Step Simplification" (formula "36"))
   (rule "nnf_notAnd" (formula "35") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
   (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
   (rule "mul_literals" (formula "35") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "36") (term "0,0"))
   (builtin "One Step Simplification" (formula "36"))
   (rule "nnf_notOr" (formula "36") (term "0,0,0"))
   (rule "nnf_notOr" (formula "36") (term "0,0,0,0"))
   (rule "commute_or" (formula "36") (term "1,0"))
   (rule "commute_or" (formula "36") (term "0,0"))
   (rule "commute_or_2" (formula "36") (term "0"))
   (rule "shift_paren_or" (formula "36") (term "0,0"))
   (builtin "One Step Simplification" (formula "36"))
   (rule "cnf_rightDist" (formula "36") (term "0"))
   (rule "distr_forallAnd" (formula "36"))
   (rule "andLeft" (formula "36"))
   (rule "commute_or" (formula "37") (term "0"))
   (builtin "One Step Simplification" (formula "37"))
   (rule "castDel" (formula "37") (term "1,0,1,0"))
   (rule "castDel" (formula "37") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "37"))
   (rule "true_left" (formula "37"))
   (rule "cnf_rightDist" (formula "36") (term "0"))
   (builtin "One Step Simplification" (formula "36"))
   (rule "commute_or" (formula "36") (term "0"))
   (rule "less_than_comparison_simple" (formula "45") (term "1"))
   (builtin "One Step Simplification" (formula "45"))
   (rule "inEqSimp_ltToLeq" (formula "45") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "45") (term "0,0,0,1,0"))
   (rule "all_pull_out1" (formula "23") (term "0,1,0"))
   (rule "methodCallEmpty" (formula "45") (term "1"))
   (rule "emptyModality" (formula "45") (term "1"))
   (builtin "One Step Simplification" (formula "45"))
   (rule "impRight" (formula "45"))
   (rule "notLeft" (formula "1"))
   (rule "inEqSimp_geqRight" (formula "37"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
   (rule "polySimp_elimOne" (formula "1") (term "1"))
   (rule "inEqSimp_antiSymm" (formula "35") (ifseqformula "1"))
   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
   (rule "times_zero_1" (formula "7") (term "0,0"))
   (rule "add_zero_left" (formula "7") (term "0"))
   (rule "methodCallEmpty" (formula "47") (term "1"))
   (rule "tryEmpty" (formula "47") (term "1"))
   (rule "emptyModality" (formula "47") (term "1"))
   (rule "Class_invariant_axiom_for_CaseStudyUseMaps_MapImplementation" (formula "47") (term "1,0,0,1") (inst "i=i_6") (inst "o=o_1") (inst "i_0=i_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i1=i1") (inst "i2=i2") (inst "i_4=i_4") (inst "i_5=i_5") (userinteraction))
   (rule "andRight" (formula "47"))
   (branch "Case 1"
      (rule "andRight" (formula "47"))
      (branch "Case 1"
         (rule "andRight" (formula "47"))
         (branch "Case 1"
            (builtin "One Step Simplification" (formula "47"))
            (rule "allRight" (formula "47") (inst "sk=index_0"))
            (rule "orRight" (formula "47"))
            (rule "orRight" (formula "47"))
            (rule "inEqSimp_geqRight" (formula "48"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_leqRight" (formula "48"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "applyEq" (formula "9") (term "0") (ifseqformula "37"))
            (rule "applyEq" (formula "29") (term "2") (ifseqformula "17"))
            (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "36"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "applyEq" (formula "30") (term "2") (ifseqformula "17"))
            (rule "applyEq" (formula "48") (term "1,2,1,0,0") (ifseqformula "36"))
            (rule "eqSymm" (formula "48"))
            (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
            (rule "applyEq" (formula "3") (term "0") (ifseqformula "35"))
            (rule "inEqSimp_homoInEq0" (formula "3"))
            (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "1,0"))
            (rule "times_zero_1" (formula "3") (term "0"))
            (rule "qeq_literals" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "34"))
            (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "34"))
            (rule "applyEq" (formula "35") (term "0") (ifseqformula "34"))
            (rule "inEqSimp_homoInEq1" (formula "35"))
            (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
            (rule "add_literals" (formula "35") (term "1,0"))
            (rule "times_zero_1" (formula "35") (term "0"))
            (rule "leq_literals" (formula "35"))
            (rule "true_left" (formula "35"))
            (rule "applyEq" (formula "35") (term "1,2,1,0,0,1,0") (ifseqformula "34"))
            (rule "eqSymm" (formula "35") (term "1,0"))
            (rule "applyEq" (formula "45") (term "1,2,1,0,0") (ifseqformula "34"))
            (rule "eqSymm" (formula "45"))
            (rule "applyEq" (formula "35") (term "1,2,1,0,0,1,0") (ifseqformula "34"))
            (rule "eqSymm" (formula "35") (term "1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "elementOfUnion" (formula "27"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "eqSymm" (formula "27") (term "1"))
            (rule "sortsDisjointModuloNull" (formula "27") (term "1"))
            (rule "replace_known_right" (formula "27") (term "1,1") (ifseqformula "42"))
            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "38")))
            (rule "elementOfUnion" (formula "28"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "eqSymm" (formula "28") (term "1"))
            (rule "sortsDisjointModuloNull" (formula "28") (term "1"))
            (rule "replace_known_right" (formula "28") (term "0,1") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "42")))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "1"))
            (rule "leq_literals" (formula "34") (term "0"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "true_left" (formula "34"))
            (rule "elementOfUnion" (formula "28"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "true_left" (formula "28"))
            (rule "elementOfUnion" (formula "28"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "true_left" (formula "28"))
            (rule "pullOutSelect" (formula "43") (term "1") (inst "selectSK=selectSK_61"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "9")))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "43"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=selectSK_62"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "8")))
            (rule "eqSymm" (formula "44"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0,0"))
            (rule "applyEq_and_int4" (formula "1") (term "0,0,0,0"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,1,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,0,0"))
            (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,1,0,0,0,0"))
            (rule "add_literals" (formula "1") (term "1,0,0,1,0,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "0,0,1,0,0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,1,0,0,0,0"))
            (rule "inEqSimp_invertInEq0" (formula "1") (term "1,0,0,0,0"))
            (rule "times_zero_2" (formula "1") (term "1,1,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,0,0"))
            (rule "replace_known_left" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "commute_and" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "0,0,0,0"))
            (rule "instanceof_static_type" (formula "1") (term "0,1,0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "eqSymm" (formula "43"))
            (rule "ex_pull_out3" (formula "24") (term "0"))
            (rule "all_pull_out3" (formula "24") (term "0,0"))
            (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
            (rule "distr_forallAnd" (formula "24") (term "0,0"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "distr_existsAnd1" (formula "24") (term "0"))
            (rule "distr_forallAnd" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "commute_or_2" (formula "25") (term "0,0"))
            (rule "shift_paren_or" (formula "25") (term "0,0,0"))
            (rule "swapQuantifiersAll" (formula "25"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "castDel" (formula "25") (term "1,0,0,0,0,0,0"))
            (rule "castDel" (formula "25") (term "0,1,0,0,0"))
            (rule "castDel" (formula "25") (term "1,0,0,1,0,0"))
            (rule "instanceof_static_type" (formula "25") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "cnf_rightDist" (formula "24") (term "0,0"))
            (rule "shift_paren_or" (formula "24") (term "1,0,0"))
            (rule "commute_or_2" (formula "24") (term "0,1,0,0"))
            (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
            (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
            (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
            (rule "allLeft" (formula "34") (inst "t=index_0"))
            (rule "replaceKnownSelect_taclet2_0" (formula "34") (term "0,1"))
            (rule "replaceKnownSelect_taclet0_0" (formula "34") (term "1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet3_0" (formula "34") (term "0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_0" (formula "34") (term "1,1"))
            (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "45"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "2"))
            (rule "qeq_literals" (formula "34") (term "0,0"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "34"))
            (rule "andLeft" (formula "3"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "polySimp_addComm0" (formula "3") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "1,1,0"))
            (rule "times_zero_1" (formula "3") (term "1,0"))
            (rule "add_zero_right" (formula "3") (term "0"))
            (rule "leq_literals" (formula "3"))
            (rule "closeFalse" (formula "3"))
         )
         (branch "Case 2"
            (rule "andRight" (formula "47"))
            (branch "Case 1"
               (rule "andRight" (formula "47"))
               (branch "Case 1"
                  (rule "andRight" (formula "47"))
                  (branch "Case 1"
                     (rule "andRight" (formula "47"))
                     (branch "Case 1"
                        (rule "andRight" (formula "47"))
                        (branch "Case 1"
                           (rule "andRight" (formula "47"))
                           (branch "Case 1"
                              (rule "andRight" (formula "47"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "47"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "47"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "47"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "47"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "47"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "47"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "47"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "47"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "47"))
                                                         (branch "Case 1"
                                                            (rule "andRight" (formula "47"))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "47"))
                                                               (branch "Case 1"
                                                                  (rule "andRight" (formula "47"))
                                                                  (branch "Case 1"
                                                                     (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "allRight" (formula "47") (inst "sk=i_5_1"))
                                                                     (rule "impRight" (formula "47"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notRight" (formula "49"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                     (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,1,0") (ifseqformula "38"))
                                                                     (rule "applyEq" (formula "1") (term "1,2,1,0,0") (ifseqformula "38"))
                                                                     (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                                                     (rule "applyEq" (formula "39") (term "1,2,1,0,0,1,0") (ifseqformula "37"))
                                                                     (rule "eqSymm" (formula "39") (term "1,0"))
                                                                     (rule "applyEq" (formula "1") (term "1,2,1,0,1,0") (ifseqformula "37"))
                                                                     (rule "applyEq" (formula "30") (term "2") (ifseqformula "19"))
                                                                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "37"))
                                                                     (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "36"))
                                                                     (rule "applyEq" (formula "30") (term "2") (ifseqformula "18"))
                                                                     (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "36"))
                                                                     (rule "applyEq" (formula "37") (term "0") (ifseqformula "36"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "37"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "37") (term "0"))
                                                                     (rule "add_literals" (formula "37") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "37") (term "0"))
                                                                     (rule "leq_literals" (formula "37"))
                                                                     (rule "true_left" (formula "37"))
                                                                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "36"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                     (rule "add_literals" (formula "4") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "4") (term "0"))
                                                                     (rule "qeq_literals" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "applyEq" (formula "36") (term "1,2,1,0,0,1,0") (ifseqformula "35"))
                                                                     (rule "eqSymm" (formula "36") (term "1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                     (rule "elementOfUnion" (formula "28"))
                                                                     (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "eqSymm" (formula "28") (term "1"))
                                                                     (rule "sortsDisjointModuloNull" (formula "28") (term "1"))
                                                                     (rule "replace_known_right" (formula "28") (term "1,1") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "39")))
                                                                     (rule "elementOfUnion" (formula "29"))
                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                     (rule "eqSymm" (formula "29") (term "1"))
                                                                     (rule "sortsDisjointModuloNull" (formula "29") (term "1"))
                                                                     (rule "replace_known_right" (formula "29") (term "1,1") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")))
                                                                     (rule "elementOfUnion" (formula "28"))
                                                                     (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "true_left" (formula "28"))
                                                                     (rule "elementOfUnion" (formula "28"))
                                                                     (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "true_left" (formula "28"))
                                                                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=selectSK_23"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                                                                     (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                                                     (rule "ifEqualsNull" (formula "1"))
                                                                     (rule "pullOutSelect" (formula "4") (term "0,0") (inst "selectSK=selectSK_24"))
                                                                     (rule "applyEq" (formula "1") (term "0,0,0,1,0,0,1") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "1") (term "1,0,1,1") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "1") (term "1,0,0,1,1,0,0,1") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "1") (term "0,0,0,0,0,1") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "4"))
                                                                     (rule "simplifySelectOfAnon" (formula "4"))
                                                                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "43")) (ifInst ""  (formula "7")))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0,1"))
                                                                     (rule "elementOfArrayRange" (formula "4") (term "0,0") (inst "iv=iv"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "applyEqReverse" (formula "1") (term "1,0,1,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "1") (term "1,0,1,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "1") (term "1,0,0,0,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "1") (term "1,0,0,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0,1") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "1") (term "1,0,0,1,1,0,0,1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0,1"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,1,0,0,1") (ifseqformula "37"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "37")) (ifInst ""  (formula "43")))
                                                                     (rule "cnf_rightDist" (formula "1"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "commute_or" (formula "1"))
                                                                     (rule "cnf_rightDist" (formula "2"))
                                                                     (rule "andLeft" (formula "2"))
                                                                     (rule "commute_or" (formula "2"))
                                                                     (rule "commute_or" (formula "3"))
                                                                     (rule "cnf_rightDist" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "commute_or" (formula "1"))
                                                                     (rule "ex_pull_out3" (formula "27") (term "0"))
                                                                     (rule "all_pull_out3" (formula "27") (term "0,0"))
                                                                     (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                                                     (rule "distr_forallAnd" (formula "27") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "distr_existsAnd1" (formula "27") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "27"))
                                                                     (rule "andLeft" (formula "27"))
                                                                     (rule "commute_or_2" (formula "28") (term "0,0"))
                                                                     (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                                                     (rule "swapQuantifiersAll" (formula "28"))
                                                                     (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "castDel" (formula "28") (term "0,1,0,0,0"))
                                                                     (rule "castDel" (formula "28") (term "1,0,0,0,0,0,0"))
                                                                     (rule "castDel" (formula "28") (term "1,0,0,1,0,0"))
                                                                     (rule "instanceof_static_type" (formula "28") (term "0,0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                                                     (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                                                     (rule "commute_or_2" (formula "27") (term "0,1,0,0"))
                                                                     (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                                                     (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                                                     (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                                                     (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                                                     (rule "allLeft" (formula "26") (inst "t=i_5_1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                                                     (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "26") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "5"))
                                                                     (rule "qeq_literals" (formula "26") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "allLeft" (formula "22") (inst "t=i_5_1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                                                     (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "22") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "5"))
                                                                     (rule "qeq_literals" (formula "22") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                     (rule "notLeft" (formula "22"))
                                                                     (rule "allLeft" (formula "21") (inst "t=i_5_1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "6"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "5"))
                                                                     (rule "qeq_literals" (formula "21") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "notLeft" (formula "21"))
                                                                     (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "41"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "41"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "43"))
                                                                     (rule "close" (formula "40") (ifseqformula "6"))
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "notRight" (formula "47"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "36"))
                                                                     (rule "applyEq" (formula "30") (term "2") (ifseqformula "17"))
                                                                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "36"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                                     (rule "add_literals" (formula "2") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "2") (term "0"))
                                                                     (rule "qeq_literals" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                                                     (rule "applyEq" (formula "35") (term "0") (ifseqformula "34"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "35"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                                                                     (rule "add_literals" (formula "35") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "35") (term "0"))
                                                                     (rule "leq_literals" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "applyEq" (formula "35") (term "1,2,1,0,0,1,0") (ifseqformula "34"))
                                                                     (rule "eqSymm" (formula "35") (term "1,0"))
                                                                     (rule "applyEq" (formula "1") (term "1,2,1,0,0") (ifseqformula "34"))
                                                                     (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "34"))
                                                                     (rule "applyEq" (formula "27") (term "2") (ifseqformula "16"))
                                                                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "34"))
                                                                     (rule "applyEq" (formula "34") (term "1,2,1,0,0,1,0") (ifseqformula "33"))
                                                                     (rule "eqSymm" (formula "34") (term "1,0"))
                                                                     (rule "elementOfUnion" (formula "27"))
                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "eqSymm" (formula "27") (term "1"))
                                                                     (rule "sortsDisjointModuloNull" (formula "27") (term "1"))
                                                                     (rule "replace_known_right" (formula "27") (term "1,1") (ifseqformula "41"))
                                                                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "37")))
                                                                     (rule "elementOfUnion" (formula "26"))
                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "eqSymm" (formula "26") (term "1"))
                                                                     (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
                                                                     (rule "replace_known_right" (formula "26") (term "0,1") (ifseqformula "37"))
                                                                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "41")))
                                                                     (rule "elementOfUnion" (formula "27"))
                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                     (rule "true_left" (formula "27"))
                                                                     (rule "elementOfUnion" (formula "26"))
                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "true_left" (formula "26"))
                                                                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=selectSK_22"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "4")))
                                                                     (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                                     (rule "close" (formula "35") (ifseqformula "2"))
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "allRight" (formula "47") (inst "sk=i_4_1"))
                                                                  (rule "impRight" (formula "47"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "notRight" (formula "49"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "2"))
                                                                  (rule "applyEq" (formula "32") (term "2") (ifseqformula "19"))
                                                                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "38"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                  (rule "add_literals" (formula "4") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "0"))
                                                                  (rule "qeq_literals" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "applyEq" (formula "38") (term "0") (ifseqformula "37"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "38"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "38") (term "0"))
                                                                  (rule "add_literals" (formula "38") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "38") (term "0"))
                                                                  (rule "leq_literals" (formula "38"))
                                                                  (rule "true_left" (formula "38"))
                                                                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                                                  (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,1,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "29") (term "2") (ifseqformula "18"))
                                                                  (rule "applyEq" (formula "1") (term "1,2,1,0,1,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "37") (term "1,2,1,0,0,1,0") (ifseqformula "36"))
                                                                  (rule "eqSymm" (formula "37") (term "1,0"))
                                                                  (rule "applyEq" (formula "1") (term "1,2,1,0,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "9") (term "0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "36") (term "1,2,1,0,0,1,0") (ifseqformula "35"))
                                                                  (rule "eqSymm" (formula "36") (term "1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                  (rule "elementOfUnion" (formula "29"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "eqSymm" (formula "29") (term "1"))
                                                                  (rule "sortsDisjointModuloNull" (formula "29") (term "1"))
                                                                  (rule "replace_known_right" (formula "29") (term "1,1") (ifseqformula "43"))
                                                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")))
                                                                  (rule "elementOfUnion" (formula "28"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "eqSymm" (formula "28") (term "1"))
                                                                  (rule "sortsDisjointModuloNull" (formula "28") (term "1"))
                                                                  (rule "replace_known_right" (formula "28") (term "1,1") (ifseqformula "43"))
                                                                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "39")))
                                                                  (rule "elementOfUnion" (formula "29"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "true_left" (formula "29"))
                                                                  (rule "elementOfUnion" (formula "28"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=selectSK_25"))
                                                                  (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "6")))
                                                                  (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "22"))
                                                                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=selectSK_26"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                                                  (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                                                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                  (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
                                                                  (rule "ifEqualsNull" (formula "1"))
                                                                  (rule "cnf_rightDist" (formula "1"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "commute_or" (formula "1"))
                                                                  (rule "cnf_rightDist" (formula "2"))
                                                                  (rule "andLeft" (formula "2"))
                                                                  (rule "commute_or" (formula "2"))
                                                                  (rule "cnf_rightDist" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "commute_or" (formula "1"))
                                                                  (rule "ex_pull_out3" (formula "27") (term "0"))
                                                                  (rule "all_pull_out3" (formula "27") (term "0,0"))
                                                                  (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                                                  (rule "distr_forallAnd" (formula "27") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "distr_existsAnd1" (formula "27") (term "0"))
                                                                  (rule "distr_forallAnd" (formula "27"))
                                                                  (rule "andLeft" (formula "27"))
                                                                  (rule "commute_or_2" (formula "28") (term "0,0"))
                                                                  (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                                                  (rule "swapQuantifiersAll" (formula "28"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "castDel" (formula "28") (term "0,1,0,0,0"))
                                                                  (rule "castDel" (formula "28") (term "1,0,0,0,0,0,0"))
                                                                  (rule "castDel" (formula "28") (term "1,0,0,1,0,0"))
                                                                  (rule "instanceof_static_type" (formula "28") (term "0,0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                                                  (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                                                  (rule "commute_or_2" (formula "27") (term "0,1,0,0"))
                                                                  (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                                                  (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                                                  (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                                                  (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                                                  (rule "cut_direct" (formula "3") (term "0"))
                                                                  (branch "CUT: self.values[i_4_1] = null TRUE"
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "allLeft" (formula "25") (inst "t=i_4_1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                                                     (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "2"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "5"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "25") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "4"))
                                                                     (rule "qeq_literals" (formula "25") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "allLeft" (formula "31") (inst "t=i_4_1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "4"))
                                                                     (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "5"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                                     (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                                     (rule "leq_literals" (formula "31") (term "0,1"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "allLeft" (formula "20") (inst "t=i_4_1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "4"))
                                                                     (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "5"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "20") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                     (rule "notLeft" (formula "20"))
                                                                     (rule "allLeft" (formula "21") (inst "t=i_4_1"))
                                                                     (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "4"))
                                                                     (rule "qeq_literals" (formula "21") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "5"))
                                                                     (rule "andLeft" (formula "21"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "21"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                                                     (rule "add_literals" (formula "21") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "21") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "21") (term "0"))
                                                                     (rule "leq_literals" (formula "21"))
                                                                     (rule "closeFalse" (formula "21"))
                                                                  )
                                                                  (branch "CUT: self.values[i_4_1] = null FALSE"
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "3"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "39"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "41"))
                                                                     (rule "close" (formula "38") (ifseqformula "5"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "notRight" (formula "47"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEq" (formula "37") (term "0") (ifseqformula "36"))
                                                               (rule "inEqSimp_homoInEq1" (formula "37"))
                                                               (rule "polySimp_pullOutFactor1" (formula "37") (term "0"))
                                                               (rule "add_literals" (formula "37") (term "1,0"))
                                                               (rule "times_zero_1" (formula "37") (term "0"))
                                                               (rule "leq_literals" (formula "37"))
                                                               (rule "true_left" (formula "37"))
                                                               (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "8") (term "0") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "2") (term "0") (ifseqformula "35"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                               (rule "add_literals" (formula "2") (term "1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "0"))
                                                               (rule "qeq_literals" (formula "2"))
                                                               (rule "true_left" (formula "2"))
                                                               (rule "applyEq" (formula "1") (term "1,2,1,0,0") (ifseqformula "34"))
                                                               (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "34"))
                                                               (rule "applyEq" (formula "27") (term "2") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                                               (rule "applyEq" (formula "34") (term "1,2,1,0,0,1,0") (ifseqformula "33"))
                                                               (rule "eqSymm" (formula "34") (term "1,0"))
                                                               (rule "applyEq" (formula "27") (term "2") (ifseqformula "15"))
                                                               (rule "applyEq" (formula "34") (term "1,2,1,0,0,1,0") (ifseqformula "33"))
                                                               (rule "eqSymm" (formula "34") (term "1,0"))
                                                               (rule "elementOfUnion" (formula "26"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "eqSymm" (formula "26") (term "1"))
                                                               (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
                                                               (rule "replace_known_right" (formula "26") (term "0,1") (ifseqformula "37"))
                                                               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "41")))
                                                               (rule "elementOfUnion" (formula "27"))
                                                               (builtin "One Step Simplification" (formula "27"))
                                                               (rule "eqSymm" (formula "27") (term "1"))
                                                               (rule "sortsDisjointModuloNull" (formula "27") (term "1"))
                                                               (rule "replace_known_right" (formula "27") (term "0,1") (ifseqformula "37"))
                                                               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "41")))
                                                               (rule "elementOfUnion" (formula "26"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "true_left" (formula "26"))
                                                               (rule "elementOfUnion" (formula "26"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "true_left" (formula "26"))
                                                               (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=selectSK_27"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "4")))
                                                               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                               (rule "close" (formula "36") (ifseqformula "2"))
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "allRight" (formula "47") (inst "sk=i1_1"))
                                                            (rule "impRight" (formula "47"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "allRight" (formula "49") (inst "sk=i2_1"))
                                                            (rule "impRight" (formula "49"))
                                                            (rule "impRight" (formula "50"))
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "eqSymm" (formula "52"))
                                                            (rule "eqSymm" (formula "1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "4"))
                                                            (rule "inEqSimp_commuteLeq" (formula "2"))
                                                            (rule "applyEq" (formula "6") (term "0") (ifseqformula "40"))
                                                            (rule "inEqSimp_homoInEq0" (formula "6"))
                                                            (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "1,0"))
                                                            (rule "times_zero_1" (formula "6") (term "0"))
                                                            (rule "qeq_literals" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "applyEq" (formula "40") (term "0") (ifseqformula "39"))
                                                            (rule "inEqSimp_homoInEq1" (formula "40"))
                                                            (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                                            (rule "add_literals" (formula "40") (term "1,0"))
                                                            (rule "times_zero_1" (formula "40") (term "0"))
                                                            (rule "leq_literals" (formula "40"))
                                                            (rule "true_left" (formula "40"))
                                                            (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                                            (rule "applyEq" (formula "31") (term "2") (ifseqformula "20"))
                                                            (rule "applyEq" (formula "39") (term "1,2,1,0,0,1,0") (ifseqformula "38"))
                                                            (rule "eqSymm" (formula "39") (term "1,0"))
                                                            (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "32") (term "2") (ifseqformula "20"))
                                                            (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,1,0") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "5") (term "1,2,1,0,0,0,1,0") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "1") (term "1,2,1,0,1,0") (ifseqformula "38"))
                                                            (rule "eqSymm" (formula "1"))
                                                            (rule "applyEq" (formula "11") (term "0") (ifseqformula "38"))
                                                            (rule "applyEq" (formula "1") (term "1,2,1,0,0") (ifseqformula "37"))
                                                            (rule "eqSymm" (formula "1"))
                                                            (rule "applyEq" (formula "38") (term "1,2,1,0,0,1,0") (ifseqformula "37"))
                                                            (rule "eqSymm" (formula "38") (term "1,0"))
                                                            (rule "applyEq" (formula "1") (term "1,2,1,0,0") (ifseqformula "37"))
                                                            (rule "eqSymm" (formula "1"))
                                                            (rule "applyEq" (formula "1") (term "1,2,1,0,1,0") (ifseqformula "37"))
                                                            (rule "eqSymm" (formula "1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                            (rule "elementOfUnion" (formula "30"))
                                                            (builtin "One Step Simplification" (formula "30"))
                                                            (rule "eqSymm" (formula "30") (term "1"))
                                                            (rule "sortsDisjointModuloNull" (formula "30") (term "1"))
                                                            (rule "replace_known_right" (formula "30") (term "0,1") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "45")))
                                                            (rule "elementOfUnion" (formula "31"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "eqSymm" (formula "31") (term "1"))
                                                            (rule "sortsDisjointModuloNull" (formula "31") (term "1"))
                                                            (rule "replace_known_right" (formula "31") (term "0,1") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "45")))
                                                            (rule "elementOfUnion" (formula "30"))
                                                            (builtin "One Step Simplification" (formula "30"))
                                                            (rule "true_left" (formula "30"))
                                                            (rule "elementOfUnion" (formula "30"))
                                                            (builtin "One Step Simplification" (formula "30"))
                                                            (rule "true_left" (formula "30"))
                                                            (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=selectSK_28"))
                                                            (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "1"))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "8")))
                                                            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
                                                            (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "pullOutSelect" (formula "1") (term "1") (inst "selectSK=selectSK_29"))
                                                            (rule "simplifySelectOfAnon" (formula "2"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                                            (rule "simplifySelectOfAnon" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                            (rule "elementOfArrayRange" (formula "2") (term "0,0,0") (inst "iv=iv"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")))
                                                            (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                            (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                            (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                            (rule "ex_pull_out3" (formula "27") (term "0"))
                                                            (rule "all_pull_out3" (formula "27") (term "0,0"))
                                                            (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                                            (rule "distr_forallAnd" (formula "27") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "27"))
                                                            (rule "distr_existsAnd1" (formula "27") (term "0"))
                                                            (rule "distr_forallAnd" (formula "27"))
                                                            (rule "andLeft" (formula "27"))
                                                            (rule "commute_or_2" (formula "28") (term "0,0"))
                                                            (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                                            (rule "swapQuantifiersAll" (formula "28"))
                                                            (builtin "One Step Simplification" (formula "28"))
                                                            (rule "castDel" (formula "28") (term "0,1,0,0,0"))
                                                            (rule "castDel" (formula "28") (term "1,0,0,1,0,0"))
                                                            (rule "castDel" (formula "28") (term "1,0,0,0,0,0,0"))
                                                            (rule "instanceof_static_type" (formula "28") (term "0,0,1,0"))
                                                            (builtin "One Step Simplification" (formula "28"))
                                                            (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                                            (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                                            (rule "commute_or_2" (formula "27") (term "0,1,0,0"))
                                                            (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                                            (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                                            (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                                            (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "self.keys.<created> = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "1") (term "1") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "eqSymm" (formula "1"))
                                                               (rule "allLeft" (formula "19") (inst "t=i1_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "19") (term "1,1,0,0,1,0,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "leq_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,0,0,0") (ifseqformula "5"))
                                                               (rule "qeq_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "commute_or_2" (formula "19") (term "0,0"))
                                                               (rule "allLeft" (formula "27") (inst "t=i2_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "27") (term "1,0"))
                                                               (rule "applyEq" (formula "27") (term "1,0,1") (ifseqformula "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "3"))
                                                               (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "27"))
                                                               (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                               (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "27") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "27"))
                                                               (rule "allLeft" (formula "22") (inst "t=i2_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                                               (rule "applyEq" (formula "22") (term "0,0,1") (ifseqformula "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "22") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "22"))
                                                               (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "3"))
                                                               (rule "qeq_literals" (formula "22") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "22"))
                                                               (rule "notLeft" (formula "22"))
                                                               (rule "allLeft" (formula "23") (inst "t=i2_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "3"))
                                                               (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                               (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "23") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "notLeft" (formula "23"))
                                                               (rule "allLeft" (formula "23") (inst "t=i1_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "23") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "5"))
                                                               (rule "qeq_literals" (formula "23") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "notLeft" (formula "23"))
                                                               (rule "allLeft" (formula "33") (inst "t=i2_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                                               (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                               (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "33") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                                               (rule "qeq_literals" (formula "33") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "allLeft" (formula "28") (inst "t=i1_1"))
                                                               (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0"))
                                                               (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "27"))
                                                               (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                                               (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                                                               (rule "leq_literals" (formula "28") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "28"))
                                                               (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "5"))
                                                               (rule "qeq_literals" (formula "28") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "28"))
                                                               (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
                                                               (rule "applyEq" (formula "45") (term "0") (ifseqformula "28"))
                                                               (rule "allLeft" (formula "19") (inst "t=i2_1"))
                                                               (rule "replace_known_right" (formula "19") (term "1,0,0") (ifseqformula "55"))
                                                               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "1")))
                                                               (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "3"))
                                                               (rule "qeq_literals" (formula "19") (term "0,0"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "19"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0"))
                                                               (rule "add_literals" (formula "4") (term "0"))
                                                               (rule "leq_literals" (formula "4"))
                                                               (rule "closeFalse" (formula "4"))
                                                            )
                                                            (branch "self.keys.<created> = TRUE FALSE"
                                                               (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "41"))
                                                               (rule "close" (formula "40") (ifseqformula "7"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "notRight" (formula "47"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEq" (formula "1") (term "1,2,1,0,0") (ifseqformula "36"))
                                                         (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "37") (term "1,2,1,0,0,1,0") (ifseqformula "35"))
                                                         (rule "eqSymm" (formula "37") (term "1,0"))
                                                         (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "28") (term "2") (ifseqformula "17"))
                                                         (rule "applyEq" (formula "29") (term "2") (ifseqformula "17"))
                                                         (rule "applyEq" (formula "8") (term "0") (ifseqformula "35"))
                                                         (rule "applyEq" (formula "35") (term "0") (ifseqformula "34"))
                                                         (rule "inEqSimp_homoInEq1" (formula "35"))
                                                         (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                                                         (rule "add_literals" (formula "35") (term "1,0"))
                                                         (rule "times_zero_1" (formula "35") (term "0"))
                                                         (rule "leq_literals" (formula "35"))
                                                         (rule "true_left" (formula "35"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "34"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "0"))
                                                         (rule "qeq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEq" (formula "34") (term "1,2,1,0,0,1,0") (ifseqformula "33"))
                                                         (rule "eqSymm" (formula "34") (term "1,0"))
                                                         (rule "elementOfUnion" (formula "26"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "eqSymm" (formula "26") (term "1"))
                                                         (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
                                                         (rule "replace_known_right" (formula "26") (term "0,1") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "41")))
                                                         (rule "elementOfUnion" (formula "27"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "eqSymm" (formula "27") (term "1"))
                                                         (rule "sortsDisjointModuloNull" (formula "27") (term "1"))
                                                         (rule "replace_known_right" (formula "27") (term "0,1") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "41")))
                                                         (rule "elementOfUnion" (formula "26"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "elementOfUnion" (formula "26"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=selectSK_30"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "4")))
                                                         (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "35") (ifseqformula "2"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "notRight" (formula "47"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEq" (formula "1") (term "1,2,1,0,0") (ifseqformula "36"))
                                                      (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                      (rule "applyEq" (formula "37") (term "1,2,1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "eqSymm" (formula "37") (term "1,0"))
                                                      (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "28") (term "2") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "29") (term "2") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "35") (term "0") (ifseqformula "34"))
                                                      (rule "inEqSimp_homoInEq1" (formula "35"))
                                                      (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                                                      (rule "add_literals" (formula "35") (term "1,0"))
                                                      (rule "times_zero_1" (formula "35") (term "0"))
                                                      (rule "leq_literals" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "34"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0"))
                                                      (rule "qeq_literals" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEq" (formula "34") (term "1,2,1,0,0,1,0") (ifseqformula "33"))
                                                      (rule "eqSymm" (formula "34") (term "1,0"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "eqSymm" (formula "26") (term "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
                                                      (rule "replace_known_right" (formula "26") (term "0,1") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "41")))
                                                      (rule "elementOfUnion" (formula "27"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "eqSymm" (formula "27") (term "1"))
                                                      (rule "sortsDisjointModuloNull" (formula "27") (term "1"))
                                                      (rule "replace_known_right" (formula "27") (term "0,1") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "41")))
                                                      (rule "elementOfUnion" (formula "26"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "elementOfUnion" (formula "26"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=selectSK_31"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "4")))
                                                      (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "close" (formula "36") (ifseqformula "2"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "applyEq" (formula "37") (term "1,2,1,0,0,1,0") (ifseqformula "35"))
                                                   (rule "eqSymm" (formula "37") (term "1,0"))
                                                   (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "35"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "35"))
                                                   (rule "applyEq" (formula "35") (term "0") (ifseqformula "34"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35"))
                                                   (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                                                   (rule "add_literals" (formula "35") (term "1,0"))
                                                   (rule "times_zero_1" (formula "35") (term "0"))
                                                   (rule "leq_literals" (formula "35"))
                                                   (rule "true_left" (formula "35"))
                                                   (rule "applyEq" (formula "45") (term "1,2,1,0,0") (ifseqformula "34"))
                                                   (rule "eqSymm" (formula "45"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "34"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "0"))
                                                   (rule "qeq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "33"))
                                                   (rule "applyEq" (formula "27") (term "2") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "25") (term "2") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "43") (term "1,2,1,0,0,1,0,0") (ifseqformula "32"))
                                                   (rule "applyEq" (formula "33") (term "1,2,1,0,0,1,0") (ifseqformula "32"))
                                                   (rule "eqSymm" (formula "33") (term "1,0"))
                                                   (rule "applyEq" (formula "43") (term "1,2,1,0,0,1,0") (ifseqformula "32"))
                                                   (rule "eqSymm" (formula "43"))
                                                   (rule "elementOfUnion" (formula "26"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "eqSymm" (formula "26") (term "1"))
                                                   (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
                                                   (rule "replace_known_right" (formula "26") (term "0,1") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "40")))
                                                   (rule "elementOfUnion" (formula "25"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "eqSymm" (formula "25") (term "1"))
                                                   (rule "sortsDisjointModuloNull" (formula "25") (term "1"))
                                                   (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "40")))
                                                   (rule "elementOfUnion" (formula "26"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "true_left" (formula "26"))
                                                   (rule "elementOfUnion" (formula "25"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "pullOutSelect" (formula "41") (term "0,1,0,1") (inst "selectSK=selectSK_32"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "3")))
                                                   (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "42") (term "0,1,0,1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=selectSK_33"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "3")))
                                                   (rule "eqSymm" (formula "42"))
                                                   (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "applyEq" (formula "41") (term "1") (ifseqformula "14"))
                                                   (rule "pullOutSelect" (formula "41") (term "0,1,0") (inst "selectSK=selectSK_34"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "3")))
                                                   (rule "eqSymm" (formula "42"))
                                                   (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "42") (term "0,1,1") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "42"))
                                                   (rule "closeTrue" (formula "42"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "allRight" (formula "47") (inst "sk=i_3_1"))
                                                (rule "impRight" (formula "47"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notRight" (formula "49"))
                                                (rule "inEqSimp_ltToLeq" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "applyEq" (formula "1") (term "1,2,1,0,0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "30") (term "2") (ifseqformula "19"))
                                                (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "37"))
                                                (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "1") (term "1,2,1,0,1,0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "37"))
                                                (rule "inEqSimp_homoInEq1" (formula "38"))
                                                (rule "polySimp_pullOutFactor1" (formula "38") (term "0"))
                                                (rule "add_literals" (formula "38") (term "1,0"))
                                                (rule "times_zero_1" (formula "38") (term "0"))
                                                (rule "leq_literals" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "37"))
                                                (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "36"))
                                                (rule "applyEq" (formula "37") (term "1,2,1,0,0,1,0") (ifseqformula "36"))
                                                (rule "eqSymm" (formula "37") (term "1,0"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "36"))
                                                (rule "inEqSimp_homoInEq0" (formula "4"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "1,0"))
                                                (rule "times_zero_1" (formula "4") (term "0"))
                                                (rule "qeq_literals" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "applyEq" (formula "29") (term "2") (ifseqformula "17"))
                                                (rule "applyEq" (formula "36") (term "1,2,1,0,0,1,0") (ifseqformula "35"))
                                                (rule "eqSymm" (formula "36") (term "1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                (rule "elementOfUnion" (formula "28"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "eqSymm" (formula "28") (term "1"))
                                                (rule "sortsDisjointModuloNull" (formula "28") (term "1"))
                                                (rule "replace_known_right" (formula "28") (term "1,1") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "39")))
                                                (rule "elementOfUnion" (formula "29"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "eqSymm" (formula "29") (term "1"))
                                                (rule "sortsDisjointModuloNull" (formula "29") (term "1"))
                                                (rule "replace_known_right" (formula "29") (term "1,1") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")))
                                                (rule "elementOfUnion" (formula "28"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "elementOfUnion" (formula "28"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=selectSK_35"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                                                (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                                (rule "ifEqualsNull" (formula "1"))
                                                (rule "pullOutSelect" (formula "4") (term "0,0") (inst "selectSK=selectSK_36"))
                                                (rule "applyEq" (formula "1") (term "0,0,0,0,0,1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "0,0,0,1,0,0,1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0,0,1,1,0,0,1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "4"))
                                                (rule "simplifySelectOfAnon" (formula "4"))
                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "43")) (ifInst ""  (formula "7")))
                                                (rule "eqSymm" (formula "1") (term "0,0,0,0,1"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                (rule "elementOfArrayRange" (formula "4") (term "0,0") (inst "iv=iv"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,0,0,0") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,0,1,1,0,0,1") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,0,0,0,1") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0,1") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,1,0") (ifseqformula "4"))
                                                (rule "applyEqReverse" (formula "1") (term "1,0,1,1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0,0,1"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0,1") (ifseqformula "43"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "37")) (ifInst ""  (formula "37")))
                                                (rule "cnf_rightDist" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "commute_or" (formula "1"))
                                                (rule "cnf_rightDist" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "commute_or" (formula "2"))
                                                (rule "commute_or" (formula "3"))
                                                (rule "cnf_rightDist" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or" (formula "1"))
                                                (rule "ex_pull_out3" (formula "27") (term "0"))
                                                (rule "all_pull_out3" (formula "27") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                                (rule "distr_forallAnd" (formula "27") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "distr_existsAnd1" (formula "27") (term "0"))
                                                (rule "distr_forallAnd" (formula "27"))
                                                (rule "andLeft" (formula "27"))
                                                (rule "commute_or_2" (formula "28") (term "0,0"))
                                                (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                                (rule "swapQuantifiersAll" (formula "28"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "castDel" (formula "28") (term "0,1,0,0,0"))
                                                (rule "castDel" (formula "28") (term "1,0,0,0,0,0,0"))
                                                (rule "castDel" (formula "28") (term "1,0,0,1,0,0"))
                                                (rule "instanceof_static_type" (formula "28") (term "0,0,1,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                                (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                                (rule "commute_or_2" (formula "27") (term "0,1,0,0"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                                (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                                (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                                (rule "allLeft" (formula "26") (inst "t=i_3_1"))
                                                (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "26") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "5"))
                                                (rule "qeq_literals" (formula "26") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "allLeft" (formula "21") (inst "t=i_3_1"))
                                                (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "5"))
                                                (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0"))
                                                (rule "leq_literals" (formula "21") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "notLeft" (formula "21"))
                                                (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "42"))
                                                (rule "close" (formula "40") (ifseqformula "6"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "allRight" (formula "47") (inst "sk=i_2_1"))
                                             (rule "impRight" (formula "47"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "notRight" (formula "49"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "2"))
                                             (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                             (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "37"))
                                             (rule "applyEq" (formula "39") (term "1,2,1,0,0,1,0") (ifseqformula "37"))
                                             (rule "eqSymm" (formula "39") (term "1,0"))
                                             (rule "applyEq" (formula "1") (term "1,2,1,0,0") (ifseqformula "37"))
                                             (rule "applyEq" (formula "30") (term "2") (ifseqformula "19"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "37"))
                                             (rule "inEqSimp_homoInEq0" (formula "4"))
                                             (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,0"))
                                             (rule "times_zero_1" (formula "4") (term "0"))
                                             (rule "qeq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,1,0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "36"))
                                             (rule "applyEq" (formula "1") (term "1,2,1,0,1,0") (ifseqformula "35"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "35"))
                                             (rule "inEqSimp_homoInEq1" (formula "36"))
                                             (rule "polySimp_pullOutFactor1" (formula "36") (term "0"))
                                             (rule "add_literals" (formula "36") (term "1,0"))
                                             (rule "times_zero_1" (formula "36") (term "0"))
                                             (rule "leq_literals" (formula "36"))
                                             (rule "true_left" (formula "36"))
                                             (rule "applyEq" (formula "29") (term "2") (ifseqformula "17"))
                                             (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "35"))
                                             (rule "applyEq" (formula "36") (term "1,2,1,0,0,1,0") (ifseqformula "35"))
                                             (rule "eqSymm" (formula "36") (term "1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "elementOfUnion" (formula "28"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "eqSymm" (formula "28") (term "1"))
                                             (rule "sortsDisjointModuloNull" (formula "28") (term "1"))
                                             (rule "replace_known_right" (formula "28") (term "1,1") (ifseqformula "43"))
                                             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "39")))
                                             (rule "elementOfUnion" (formula "29"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29") (term "1"))
                                             (rule "sortsDisjointModuloNull" (formula "29") (term "1"))
                                             (rule "replace_known_right" (formula "29") (term "1,1") (ifseqformula "43"))
                                             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "39")))
                                             (rule "elementOfUnion" (formula "28"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "elementOfUnion" (formula "28"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=selectSK_37"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "6")))
                                             (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "3") (term "0,0") (inst "selectSK=selectSK_38"))
                                             (rule "simplifySelectOfAnon" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")) (ifInst ""  (formula "6")))
                                             (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=selectSK_39"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                             (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                             (rule "ifthenelse_negated" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                             (rule "ifEqualsNull" (formula "1"))
                                             (rule "cnf_rightDist" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "commute_or" (formula "1"))
                                             (rule "cnf_rightDist" (formula "2"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "commute_or" (formula "2"))
                                             (rule "cnf_rightDist" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "commute_or" (formula "1"))
                                             (rule "ex_pull_out3" (formula "27") (term "0"))
                                             (rule "all_pull_out3" (formula "27") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                             (rule "distr_forallAnd" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "distr_existsAnd1" (formula "27") (term "0"))
                                             (rule "distr_forallAnd" (formula "27"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "commute_or_2" (formula "28") (term "0,0"))
                                             (rule "shift_paren_or" (formula "28") (term "0,0,0"))
                                             (rule "swapQuantifiersAll" (formula "28"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "castDel" (formula "28") (term "0,1,0,0,0"))
                                             (rule "castDel" (formula "28") (term "1,0,0,0,0,0,0"))
                                             (rule "castDel" (formula "28") (term "1,0,0,1,0,0"))
                                             (rule "instanceof_static_type" (formula "28") (term "0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "cnf_rightDist" (formula "27") (term "0,0"))
                                             (rule "shift_paren_or" (formula "27") (term "1,0,0"))
                                             (rule "commute_or_2" (formula "27") (term "0,1,0,0"))
                                             (rule "cnf_rightDist" (formula "27") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                                             (rule "shift_paren_or" (formula "27") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                                             (rule "cut_direct" (formula "3") (term "0"))
                                             (branch "CUT: self.values[i_2_1] = null TRUE"
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "allLeft" (formula "21") (inst "t=i_2_1"))
                                                (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "21") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "5"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "inEqSimp_homoInEq1" (formula "21"))
                                                (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                                (rule "add_literals" (formula "21") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "21") (term "1,0"))
                                                (rule "add_zero_right" (formula "21") (term "0"))
                                                (rule "leq_literals" (formula "21"))
                                                (rule "closeFalse" (formula "21"))
                                             )
                                             (branch "CUT: self.values[i_2_1] = null FALSE"
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "referencedObjectIsCreatedRight" (formula "39") (ifseqformula "42"))
                                                (rule "close" (formula "39") (ifseqformula "6"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "applyEq" (formula "37") (term "1,2,1,0,0,1,0") (ifseqformula "35"))
                                          (rule "eqSymm" (formula "37") (term "1,0"))
                                          (rule "applyEq" (formula "29") (term "2") (ifseqformula "16"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                          (rule "applyEq" (formula "45") (term "1,2,1,0,0,0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "34") (term "0") (ifseqformula "33"))
                                          (rule "inEqSimp_homoInEq1" (formula "34"))
                                          (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                                          (rule "add_literals" (formula "34") (term "1,0"))
                                          (rule "times_zero_1" (formula "34") (term "0"))
                                          (rule "leq_literals" (formula "34"))
                                          (rule "true_left" (formula "34"))
                                          (rule "applyEq" (formula "26") (term "2") (ifseqformula "15"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "32"))
                                          (rule "applyEq" (formula "33") (term "1,2,1,0,0,1,0") (ifseqformula "32"))
                                          (rule "eqSymm" (formula "33") (term "1,0"))
                                          (rule "elementOfUnion" (formula "26"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "eqSymm" (formula "26") (term "1"))
                                          (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
                                          (rule "replace_known_right" (formula "26") (term "0,1") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "40")))
                                          (rule "elementOfUnion" (formula "25"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "eqSymm" (formula "25") (term "1"))
                                          (rule "sortsDisjointModuloNull" (formula "25") (term "1"))
                                          (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "40")))
                                          (rule "elementOfUnion" (formula "26"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "elementOfUnion" (formula "25"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "pullOutSelect" (formula "41") (term "0,0") (inst "selectSK=selectSK_40"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "3")))
                                          (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "1"))
                                          (rule "close" (formula "42") (ifseqformula "18"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "applyEq" (formula "37") (term "1,2,1,0,0,1,0") (ifseqformula "35"))
                                       (rule "eqSymm" (formula "37") (term "1,0"))
                                       (rule "applyEq" (formula "29") (term "2") (ifseqformula "16"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "45") (term "1,2,1,0,0,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "33"))
                                       (rule "applyEq" (formula "34") (term "0") (ifseqformula "33"))
                                       (rule "inEqSimp_homoInEq1" (formula "34"))
                                       (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                                       (rule "add_literals" (formula "34") (term "1,0"))
                                       (rule "times_zero_1" (formula "34") (term "0"))
                                       (rule "leq_literals" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "applyEq" (formula "26") (term "2") (ifseqformula "15"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "33") (term "1,2,1,0,0,1,0") (ifseqformula "32"))
                                       (rule "eqSymm" (formula "33") (term "1,0"))
                                       (rule "elementOfUnion" (formula "26"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "eqSymm" (formula "26") (term "1"))
                                       (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
                                       (rule "replace_known_right" (formula "26") (term "0,1") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "40")))
                                       (rule "elementOfUnion" (formula "25"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "eqSymm" (formula "25") (term "1"))
                                       (rule "sortsDisjointModuloNull" (formula "25") (term "1"))
                                       (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "40")))
                                       (rule "elementOfUnion" (formula "26"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "elementOfUnion" (formula "25"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "true_left" (formula "25"))
                                       (rule "pullOutSelect" (formula "41") (term "0,0") (inst "selectSK=selectSK_41"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "3")))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "1"))
                                       (rule "close" (formula "42") (ifseqformula "19"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "eqSymm" (formula "47"))
                                    (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "25") (term "2") (ifseqformula "14"))
                                    (rule "applyEq" (formula "34") (term "1,2,1,0,0,1,0") (ifseqformula "32"))
                                    (rule "eqSymm" (formula "34") (term "1,0"))
                                    (rule "applyEq" (formula "26") (term "2") (ifseqformula "14"))
                                    (rule "applyEq" (formula "33") (term "0") (ifseqformula "32"))
                                    (rule "inEqSimp_homoInEq1" (formula "33"))
                                    (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                    (rule "add_literals" (formula "33") (term "1,0"))
                                    (rule "times_zero_1" (formula "33") (term "0"))
                                    (rule "leq_literals" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "applyEq" (formula "43") (term "1,2,1,0,0,0") (ifseqformula "32"))
                                    (rule "eqSymm" (formula "43"))
                                    (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "32"))
                                    (rule "applyEq" (formula "33") (term "1,2,1,0,0,1,0") (ifseqformula "32"))
                                    (rule "eqSymm" (formula "33") (term "1,0"))
                                    (rule "applyEq" (formula "43") (term "1,2,1,0,0,0") (ifseqformula "32"))
                                    (rule "eqSymm" (formula "43"))
                                    (rule "elementOfUnion" (formula "25"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "eqSymm" (formula "25") (term "1"))
                                    (rule "sortsDisjointModuloNull" (formula "25") (term "1"))
                                    (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "40")))
                                    (rule "elementOfUnion" (formula "26"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "eqSymm" (formula "26") (term "1"))
                                    (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
                                    (rule "replace_known_right" (formula "26") (term "0,1") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "40")))
                                    (rule "elementOfUnion" (formula "25"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "elementOfUnion" (formula "25"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "pullOutSelect" (formula "41") (term "0,0") (inst "selectSK=selectSK_42"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "3")))
                                    (rule "eqSymm" (formula "42"))
                                    (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "42") (term "0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "applyEq" (formula "41") (term "1") (ifseqformula "19"))
                                    (rule "pullOutSelect" (formula "41") (term "0,0") (inst "selectSK=selectSK_43"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "3")))
                                    (rule "eqSymm" (formula "42"))
                                    (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "42") (term "0,1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "closeTrue" (formula "42"))
                                 )
                              )
                              (branch "Case 2"
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "allRight" (formula "47") (inst "sk=i_1_1"))
                                 (rule "orRight" (formula "47"))
                                 (rule "orRight" (formula "48"))
                                 (rule "inEqSimp_ltRight" (formula "47"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "48"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,1,0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "9") (term "0") (ifseqformula "37"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "36"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,0"))
                                 (rule "times_zero_1" (formula "3") (term "0"))
                                 (rule "qeq_literals" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "47") (term "1,2,1,0,1,1,0") (ifseqformula "35"))
                                 (rule "applyEq" (formula "29") (term "2") (ifseqformula "16"))
                                 (rule "applyEq" (formula "47") (term "1,2,1,0,0,0") (ifseqformula "35"))
                                 (rule "applyEq" (formula "36") (term "0") (ifseqformula "35"))
                                 (rule "inEqSimp_homoInEq1" (formula "36"))
                                 (rule "polySimp_pullOutFactor1" (formula "36") (term "0"))
                                 (rule "add_literals" (formula "36") (term "1,0"))
                                 (rule "times_zero_1" (formula "36") (term "0"))
                                 (rule "leq_literals" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "35"))
                                 (rule "applyEq" (formula "46") (term "1,2,1,0,1,0") (ifseqformula "35"))
                                 (rule "applyEq" (formula "36") (term "1,2,1,0,0,1,0") (ifseqformula "35"))
                                 (rule "eqSymm" (formula "36") (term "1,0"))
                                 (rule "applyEq" (formula "28") (term "2") (ifseqformula "16"))
                                 (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "35"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "45") (term "1,2,1,0,1,1") (ifseqformula "34"))
                                 (rule "applyEq" (formula "45") (term "1,2,1,0,1") (ifseqformula "34"))
                                 (rule "applyEq" (formula "35") (term "1,2,1,0,0,1,0") (ifseqformula "34"))
                                 (rule "eqSymm" (formula "35") (term "1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "elementOfUnion" (formula "28"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "eqSymm" (formula "28") (term "1"))
                                 (rule "sortsDisjointModuloNull" (formula "28") (term "1"))
                                 (rule "replace_known_right" (formula "28") (term "0,1") (ifseqformula "38"))
                                 (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "42")))
                                 (rule "elementOfUnion" (formula "27"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "eqSymm" (formula "27") (term "1"))
                                 (rule "sortsDisjointModuloNull" (formula "27") (term "1"))
                                 (rule "replace_known_right" (formula "27") (term "0,1") (ifseqformula "38"))
                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "42")))
                                 (rule "elementOfUnion" (formula "28"))
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "elementOfUnion" (formula "27"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "pullOutSelect" (formula "43") (term "1,1,0") (inst "selectSK=selectSK_44"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "5")))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "44") (term "1,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "43") (term "0,0") (inst "selectSK=selectSK_45"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "5")))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "43") (term "1,1") (inst "selectSK=selectSK_46"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "5")))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "44") (term "1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "43") (term "1,0") (inst "selectSK=selectSK_47"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "44") (term "1") (inst "selectSK=selectSK_48"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "ex_pull_out3" (formula "25") (term "0"))
                                 (rule "all_pull_out3" (formula "25") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                 (rule "distr_forallAnd" (formula "25") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "distr_existsAnd1" (formula "25") (term "0"))
                                 (rule "distr_forallAnd" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "commute_or_2" (formula "26") (term "0,0"))
                                 (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                 (rule "swapQuantifiersAll" (formula "26"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "castDel" (formula "26") (term "1,0,0,0,0,0,0"))
                                 (rule "castDel" (formula "26") (term "0,1,0,0,0"))
                                 (rule "castDel" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "instanceof_static_type" (formula "26") (term "0,0,1,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "cnf_rightDist" (formula "25") (term "0,0"))
                                 (rule "shift_paren_or" (formula "25") (term "1,0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0,1,0,0"))
                                 (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "25") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "self.keys.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "47") (term "1,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "allLeft" (formula "19") (inst "t=i_1_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "19") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "19") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "allLeft" (formula "20") (inst "t=i_1_1"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "leq_literals" (formula "20") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "self.values.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "allLeft" (formula "24") (inst "t=i_1_1"))
                                       (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "49"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "24") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "24"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch "self.values.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "42"))
                                       (rule "close" (formula "38") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "self.keys.<created> = TRUE FALSE"
                                    (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "39"))
                                    (rule "close" (formula "38") (ifseqformula "5"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "47") (inst "sk=o_1_2") (userinteraction))
                              (rule "impRight" (formula "47"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "equiv_right" (formula "49") (userinteraction))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "2"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "exLeft" (formula "1") (inst "sk=i_0_5"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "39"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "1,0"))
                                 (rule "times_zero_1" (formula "5") (term "0"))
                                 (rule "qeq_literals" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "38"))
                                 (rule "applyEq" (formula "3") (term "1,2,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "3") (term "1,2,1,0,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "2") (term "1,2,1,0,0,0,1,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "51") (term "1,2,1,0,0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "40") (term "1,2,1,0,0,1,0") (ifseqformula "38"))
                                 (rule "eqSymm" (formula "40") (term "1,0"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "37"))
                                 (rule "applyEq" (formula "38") (term "0") (ifseqformula "37"))
                                 (rule "inEqSimp_homoInEq1" (formula "38"))
                                 (rule "polySimp_pullOutFactor1" (formula "38") (term "0"))
                                 (rule "add_literals" (formula "38") (term "1,0"))
                                 (rule "times_zero_1" (formula "38") (term "0"))
                                 (rule "leq_literals" (formula "38"))
                                 (rule "true_left" (formula "38"))
                                 (rule "applyEq" (formula "30") (term "2") (ifseqformula "18"))
                                 (rule "applyEq" (formula "31") (term "2") (ifseqformula "18"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "37") (term "1,2,1,0,0,1,0") (ifseqformula "36"))
                                 (rule "eqSymm" (formula "37") (term "1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "elementOfUnion" (formula "29"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "eqSymm" (formula "29") (term "1"))
                                 (rule "sortsDisjointModuloNull" (formula "29") (term "1"))
                                 (rule "replace_known_right" (formula "29") (term "1,1") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "41")))
                                 (rule "elementOfUnion" (formula "30"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "eqSymm" (formula "30") (term "1"))
                                 (rule "sortsDisjointModuloNull" (formula "30") (term "1"))
                                 (rule "replace_known_right" (formula "30") (term "1,1") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "41")))
                                 (rule "elementOfUnion" (formula "29"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "elementOfUnion" (formula "29"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=selectSK_67"))
                                 (rule "simplifySelectOfAnon" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "elementOfArrayRange" (formula "3") (term "0,0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "eqSymm" (formula "3") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,1,0,0,0"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                 (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=selectSK_68"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "8")))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "2") (term "0,0") (inst "selectSK=selectSK_69"))
                                 (rule "applyEq" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "4") (term "0,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "2"))
                                 (rule "simplifySelectOfAnon" (formula "2"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")) (ifInst ""  (formula "8")))
                                 (rule "eqSymm" (formula "4") (term "0,0,0,0"))
                                 (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "applyEqReverse" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0,0,0,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "2"))
                                 (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "eqSymm" (formula "3") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "ex_pull_out3" (formula "26") (term "0"))
                                 (rule "cut_direct" (formula "5") (term "0"))
                                 (branch "CUT: o_1_2.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "all_pull_out3" (formula "26") (term "0,0"))
                                    (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                    (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "distr_existsAnd1" (formula "26") (term "0"))
                                    (rule "distr_forallAnd" (formula "26"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "commute_or_2" (formula "27") (term "0,0"))
                                    (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                    (rule "swapQuantifiersAll" (formula "27"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "castDel" (formula "27") (term "1,0,0,0,0,0,0"))
                                    (rule "castDel" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "castDel" (formula "27") (term "0,1,0,0,0"))
                                    (rule "instanceof_static_type" (formula "27") (term "0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                    (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0,1,0,0"))
                                    (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "25") (inst "t=i_0_5"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "25") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "25") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "self.keys.<created> = TRUE TRUE"
                                       (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "4"))
                                       (rule "allLeft" (formula "32") (inst "t=i_0_5"))
                                       (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                       (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "4"))
                                       (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                       (rule "leq_literals" (formula "32") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "32") (term "0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "closeFalse" (formula "32"))
                                    )
                                    (branch "self.keys.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "40") (ifseqformula "42"))
                                       (rule "close" (formula "40") (ifseqformula "6"))
                                    )
                                 )
                                 (branch "CUT: o_1_2.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "all_pull_out3" (formula "26") (term "0,0"))
                                    (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                    (rule "distr_forallAnd" (formula "26") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "distr_existsAnd1" (formula "26") (term "0"))
                                    (rule "distr_forallAnd" (formula "26"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "commute_or_2" (formula "27") (term "0,0"))
                                    (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                                    (rule "swapQuantifiersAll" (formula "27"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "castDel" (formula "27") (term "0,1,0,0,0"))
                                    (rule "castDel" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "castDel" (formula "27") (term "1,0,0,0,0,0,0"))
                                    (rule "instanceof_static_type" (formula "27") (term "0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "cnf_rightDist" (formula "26") (term "0,0"))
                                    (rule "shift_paren_or" (formula "26") (term "1,0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0,1,0,0"))
                                    (rule "cnf_rightDist" (formula "26") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "26") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "25") (inst "t=i_0_5"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "25") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "25") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "allLeft" (formula "31") (inst "t=i_0_5"))
                                    (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "31") (term "0,0,1"))
                                    (rule "leq_literals" (formula "31") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "31") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "allLeft" (formula "20") (inst "t=i_0_5"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "20") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "20") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "allLeft" (formula "21") (inst "t=i_0_5"))
                                    (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "leq_literals" (formula "21") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "self.keys.<created> = TRUE TRUE"
                                       (rule "referencedObjectIsCreatedRightEQ" (formula "44") (ifseqformula "4") (ifseqformula "45"))
                                       (rule "close" (formula "44") (ifseqformula "7"))
                                    )
                                    (branch "self.keys.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "46"))
                                       (rule "close" (formula "41") (ifseqformula "6"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectOfAnon" (formula "1") (term "0") (userinteraction))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv") (userinteraction))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "5")))
                                 (rule "instAll" (formula "50") (term "1,1,0,1") (ifseqformula "40") (userinteraction))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "42") (userinteraction))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "42") (userinteraction))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "cut_direct" (formula "3") (term "0") (userinteraction))
                                 (branch "CUT: o_1_2.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "4"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "true_left" (formula "4"))
                                    (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0"))
                                    (rule "applyEq" (formula "50") (term "1,2,1,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "50") (term "1,2,1,0,1,0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "37"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "37"))
                                    (rule "inEqSimp_homoInEq0" (formula "3"))
                                    (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,0"))
                                    (rule "times_zero_1" (formula "3") (term "0"))
                                    (rule "qeq_literals" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "applyEq" (formula "38") (term "1,2,1,0,0,1,0") (ifseqformula "36"))
                                    (rule "eqSymm" (formula "38") (term "1,0"))
                                    (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "35") (term "0") (ifseqformula "34"))
                                    (rule "inEqSimp_homoInEq1" (formula "35"))
                                    (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                                    (rule "add_literals" (formula "35") (term "1,0"))
                                    (rule "times_zero_1" (formula "35") (term "0"))
                                    (rule "leq_literals" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "applyEq" (formula "28") (term "2") (ifseqformula "16"))
                                    (rule "applyEq" (formula "27") (term "2") (ifseqformula "16"))
                                    (rule "applyEq" (formula "35") (term "1,2,1,0,0,1,0") (ifseqformula "34"))
                                    (rule "eqSymm" (formula "35") (term "1,0"))
                                    (rule "applyEq" (formula "46") (term "1,2,1,0,0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
                                    (rule "elementOfUnion" (formula "28"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "eqSymm" (formula "28") (term "1"))
                                    (rule "sortsDisjointModuloNull" (formula "28") (term "1"))
                                    (rule "replace_known_right" (formula "28") (term "1,1") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "39")))
                                    (rule "elementOfUnion" (formula "27"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "eqSymm" (formula "27") (term "1"))
                                    (rule "sortsDisjointModuloNull" (formula "27") (term "1"))
                                    (rule "replace_known_right" (formula "27") (term "0,1") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "43")))
                                    (rule "elementOfUnion" (formula "28"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "elementOfUnion" (formula "27"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "pullOutSelect" (formula "44") (term "1,0,1,0") (inst "selectSK=selectSK_70"))
                                    (rule "applyEq" (formula "45") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "5")))
                                    (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "45") (term "0,1,1,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "45") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "nnf_ex2all" (formula "44"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "ex_pull_out3" (formula "24") (term "0"))
                                    (rule "all_pull_out3" (formula "24") (term "0,0"))
                                    (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                    (rule "distr_forallAnd" (formula "24") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "distr_existsAnd1" (formula "24") (term "0"))
                                    (rule "distr_forallAnd" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "commute_or_2" (formula "25") (term "0,0"))
                                    (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                    (rule "swapQuantifiersAll" (formula "25"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "castDel" (formula "25") (term "0,1,0,0,0"))
                                    (rule "castDel" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "castDel" (formula "25") (term "1,0,0,0,0,0,0"))
                                    (rule "instanceof_static_type" (formula "25") (term "0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "cnf_rightDist" (formula "24") (term "0,0"))
                                    (rule "shift_paren_or" (formula "24") (term "1,0,0"))
                                    (rule "commute_or_2" (formula "24") (term "0,1,0,0"))
                                    (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                                    (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                                    (rule "allLeft" (formula "24") (inst "t=o_1_2"))
                                    (rule "exLeft" (formula "24") (inst "sk=i_0_6"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "eqSymm" (formula "26") (term "1,0"))
                                    (rule "replace_known_left" (formula "26") (term "0,1") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "2")) (ifInst ""  (formula "40")))
                                    (rule "replace_known_right" (formula "24") (term "1,0") (ifseqformula "40"))
                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                                    (rule "replace_known_right" (formula "25") (term "1,0") (ifseqformula "40"))
                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                                    (rule "inEqSimp_homoInEq0" (formula "25"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                    (rule "mul_literals" (formula "25") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                    (rule "allLeft" (formula "23") (inst "t=i_0_6"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                    (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "27"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "25"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "26"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0"))
                                    (rule "leq_literals" (formula "23") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "allLeft" (formula "18") (inst "t=i_0_6"))
                                    (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                                    (rule "applyEq" (formula "18") (term "0,0,1") (ifseqformula "28"))
                                    (rule "replace_known_right" (formula "18") (term "0,1") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "allLeft" (formula "32") (inst "t=i_0_6"))
                                    (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                    (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "27"))
                                    (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "allLeft" (formula "19") (inst "t=i_0_6"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "19") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "26"))
                                    (rule "qeq_literals" (formula "19") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "allLeft" (formula "1") (inst "t=i_0_6"))
                                    (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "1") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "26"))
                                    (rule "qeq_literals" (formula "1") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=selectSK_71"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                    (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "28"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "self.keys.<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "closeTrue" (formula "43"))
                                    )
                                    (branch "self.keys.<created> = TRUE FALSE"
                                       (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "46"))
                                       (rule "close" (formula "42") (ifseqformula "5"))
                                    )
                                 )
                                 (branch "CUT: o_1_2.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "3"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "applyEq" (formula "47") (term "1,2,1,0,0,0") (ifseqformula "35"))
                           (rule "eqSymm" (formula "47"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                           (rule "applyEq" (formula "27") (term "2") (ifseqformula "16"))
                           (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "34"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "34"))
                           (rule "applyEq" (formula "35") (term "1,2,1,0,0,1,0") (ifseqformula "33"))
                           (rule "eqSymm" (formula "35") (term "1,0"))
                           (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "33"))
                           (rule "applyEq" (formula "34") (term "0") (ifseqformula "33"))
                           (rule "inEqSimp_homoInEq1" (formula "34"))
                           (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                           (rule "add_literals" (formula "34") (term "1,0"))
                           (rule "times_zero_1" (formula "34") (term "0"))
                           (rule "leq_literals" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "33"))
                           (rule "inEqSimp_homoInEq0" (formula "1"))
                           (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,0"))
                           (rule "times_zero_1" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "26") (term "2") (ifseqformula "14"))
                           (rule "applyEq" (formula "43") (term "1,2,1,0,0,0") (ifseqformula "32"))
                           (rule "eqSymm" (formula "43"))
                           (rule "applyEq" (formula "33") (term "1,2,1,0,0,1,0") (ifseqformula "32"))
                           (rule "eqSymm" (formula "33") (term "1,0"))
                           (rule "elementOfUnion" (formula "25"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "eqSymm" (formula "25") (term "1"))
                           (rule "sortsDisjointModuloNull" (formula "25") (term "1"))
                           (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "40")))
                           (rule "elementOfUnion" (formula "26"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "eqSymm" (formula "26") (term "1"))
                           (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
                           (rule "replace_known_right" (formula "26") (term "0,1") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "40")))
                           (rule "elementOfUnion" (formula "25"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "elementOfUnion" (formula "25"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "pullOutSelect" (formula "41") (term "0,1") (inst "selectSK=selectSK_53"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "3")))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "42") (term "0,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "41") (term "0,0") (inst "selectSK=selectSK_54"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "3")))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "1"))
                           (rule "close" (formula "42") (ifseqformula "24"))
                        )
                     )
                     (branch "Case 2"
                        (builtin "One Step Simplification" (formula "47"))
                        (rule "allRight" (formula "47") (inst "sk=i_6_1"))
                        (rule "impRight" (formula "47"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "applyEq" (formula "2") (term "1,2,1,0,0,0,1,0") (ifseqformula "37"))
                        (rule "applyEq" (formula "49") (term "1,2,1,0,1") (ifseqformula "37"))
                        (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "37"))
                        (rule "applyEq" (formula "38") (term "0") (ifseqformula "37"))
                        (rule "inEqSimp_homoInEq1" (formula "38"))
                        (rule "polySimp_pullOutFactor1" (formula "38") (term "0"))
                        (rule "add_literals" (formula "38") (term "1,0"))
                        (rule "times_zero_1" (formula "38") (term "0"))
                        (rule "leq_literals" (formula "38"))
                        (rule "true_left" (formula "38"))
                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "37"))
                        (rule "applyEq" (formula "47") (term "1,2,1,0,1,1") (ifseqformula "36"))
                        (rule "applyEq" (formula "37") (term "1,2,1,0,0,1,0") (ifseqformula "36"))
                        (rule "eqSymm" (formula "37") (term "1,0"))
                        (rule "applyEq" (formula "47") (term "1,2,1,0,0") (ifseqformula "36"))
                        (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "36"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "36"))
                        (rule "inEqSimp_homoInEq0" (formula "3"))
                        (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,0"))
                        (rule "times_zero_1" (formula "3") (term "0"))
                        (rule "qeq_literals" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                        (rule "applyEq" (formula "28") (term "2") (ifseqformula "16"))
                        (rule "applyEq" (formula "27") (term "2") (ifseqformula "16"))
                        (rule "applyEq" (formula "35") (term "1,2,1,0,0,1,0") (ifseqformula "34"))
                        (rule "eqSymm" (formula "35") (term "1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "elementOfUnion" (formula "28"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "eqSymm" (formula "28") (term "1"))
                        (rule "sortsDisjointModuloNull" (formula "28") (term "1"))
                        (rule "replace_known_right" (formula "28") (term "0,1") (ifseqformula "38"))
                        (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "42")))
                        (rule "elementOfUnion" (formula "27"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "eqSymm" (formula "27") (term "1"))
                        (rule "sortsDisjointModuloNull" (formula "27") (term "1"))
                        (rule "replace_known_right" (formula "27") (term "0,1") (ifseqformula "38"))
                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "42")))
                        (rule "elementOfUnion" (formula "28"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "elementOfUnion" (formula "27"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "pullOutSelect" (formula "43") (term "1") (inst "selectSK=selectSK_55"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                        (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=selectSK_56"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "6")))
                        (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "3") (term "0,0") (inst "selectSK=selectSK_57"))
                        (rule "applyEq" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")) (ifInst ""  (formula "6")))
                        (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                        (rule "elementOfArrayRange" (formula "3") (term "0,0") (inst "iv=iv"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "3"))
                        (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "3"))
                        (rule "applyEqReverse" (formula "1") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
                        (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "3"))
                        (rule "applyEqReverse" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                        (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "ex_pull_out3" (formula "24") (term "0"))
                        (rule "all_pull_out3" (formula "24") (term "0,0"))
                        (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                        (rule "distr_forallAnd" (formula "24") (term "0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "distr_existsAnd1" (formula "24") (term "0"))
                        (rule "distr_forallAnd" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "commute_or_2" (formula "25") (term "0,0"))
                        (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                        (rule "swapQuantifiersAll" (formula "25"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "castDel" (formula "25") (term "0,1,0,0,0"))
                        (rule "castDel" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "castDel" (formula "25") (term "1,0,0,0,0,0,0"))
                        (rule "instanceof_static_type" (formula "25") (term "0,0,1,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "cnf_rightDist" (formula "24") (term "0,0"))
                        (rule "shift_paren_or" (formula "24") (term "1,0,0"))
                        (rule "commute_or_2" (formula "24") (term "0,1,0,0"))
                        (rule "cnf_rightDist" (formula "24") (term "0,0,0"))
                        (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                        (rule "shift_paren_or" (formula "24") (term "1,0,0,0"))
                        (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "self.keys.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "allLeft" (formula "23") (inst "t=i_6_1"))
                           (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "23") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0"))
                           (rule "leq_literals" (formula "23") (term "0,0"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "allLeft" (formula "29") (inst "t=i_6_1"))
                           (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "47"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "29") (term "0,0"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "29"))
                           (rule "andLeft" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                           (rule "add_literals" (formula "3") (term "1,1,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "leq_literals" (formula "3"))
                           (rule "closeFalse" (formula "3"))
                        )
                        (branch "self.keys.<created> = TRUE FALSE"
                           (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "38"))
                           (rule "close" (formula "37") (ifseqformula "4"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "subsetSingletonLeft" (formula "47"))
                     (rule "applyEq" (formula "28") (term "2") (ifseqformula "16"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "35"))
                     (rule "applyEq" (formula "46") (term "1,2,1,0,2") (ifseqformula "34"))
                     (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "34"))
                     (rule "applyEq" (formula "28") (term "2") (ifseqformula "15"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "34"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,0"))
                     (rule "times_zero_1" (formula "1") (term "0"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "33"))
                     (rule "inEqSimp_homoInEq1" (formula "34"))
                     (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                     (rule "add_literals" (formula "34") (term "1,0"))
                     (rule "times_zero_1" (formula "34") (term "0"))
                     (rule "leq_literals" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "applyEq" (formula "34") (term "1,2,1,0,0,1,0") (ifseqformula "33"))
                     (rule "eqSymm" (formula "34") (term "1,0"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                     (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "32"))
                     (rule "applyEq" (formula "33") (term "1,2,1,0,0,1,0") (ifseqformula "32"))
                     (rule "eqSymm" (formula "33") (term "1,0"))
                     (rule "elementOfUnion" (formula "25"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "eqSymm" (formula "25") (term "1"))
                     (rule "sortsDisjointModuloNull" (formula "25") (term "1"))
                     (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "40")))
                     (rule "elementOfUnion" (formula "26"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "eqSymm" (formula "26") (term "1"))
                     (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
                     (rule "replace_known_right" (formula "26") (term "0,1") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "40")))
                     (rule "elementOfUnion" (formula "25"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "elementOfUnion" (formula "25"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "pullOutSelect" (formula "41") (term "2") (inst "selectSK=selectSK_58"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "3")))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "42") (term "2") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "applyEq" (formula "41") (term "2") (ifseqformula "14"))
                     (rule "elementOfUnion" (formula "41"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "orRight" (formula "41"))
                     (rule "eqSymm" (formula "42"))
                     (rule "sortsDisjointModuloNull" (formula "42"))
                     (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "38"))
                     (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "34")))
                     (rule "false_right" (formula "42"))
                     (rule "elementOfUnion" (formula "41"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "closeTrue" (formula "41"))
                  )
               )
               (branch "Case 2"
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "subsetSingletonLeft" (formula "47"))
                  (rule "applyEq" (formula "47") (term "1,2,1,0,2") (ifseqformula "35"))
                  (rule "applyEq" (formula "28") (term "2") (ifseqformula "16"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                  (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "34"))
                  (rule "applyEq" (formula "36") (term "1,2,1,0,0,1,0") (ifseqformula "34"))
                  (rule "eqSymm" (formula "36") (term "1,0"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "34"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "1,0"))
                  (rule "times_zero_1" (formula "1") (term "0"))
                  (rule "qeq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "34") (term "0") (ifseqformula "33"))
                  (rule "inEqSimp_homoInEq1" (formula "34"))
                  (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                  (rule "add_literals" (formula "34") (term "1,0"))
                  (rule "times_zero_1" (formula "34") (term "0"))
                  (rule "leq_literals" (formula "34"))
                  (rule "true_left" (formula "34"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "33"))
                  (rule "applyEq" (formula "26") (term "2") (ifseqformula "14"))
                  (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "32"))
                  (rule "applyEq" (formula "33") (term "1,2,1,0,0,1,0") (ifseqformula "32"))
                  (rule "eqSymm" (formula "33") (term "1,0"))
                  (rule "elementOfUnion" (formula "25"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "eqSymm" (formula "25") (term "1"))
                  (rule "sortsDisjointModuloNull" (formula "25") (term "1"))
                  (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "40")))
                  (rule "elementOfUnion" (formula "26"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "eqSymm" (formula "26") (term "1"))
                  (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
                  (rule "replace_known_right" (formula "26") (term "0,1") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "40")))
                  (rule "elementOfUnion" (formula "25"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "elementOfUnion" (formula "25"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "pullOutSelect" (formula "41") (term "2") (inst "selectSK=selectSK_59"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "3")))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "42") (term "2") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "applyEq" (formula "41") (term "2") (ifseqformula "14"))
                  (rule "elementOfUnion" (formula "41"))
                  (builtin "One Step Simplification" (formula "41"))
                  (rule "orRight" (formula "41"))
                  (rule "eqSymm" (formula "42"))
                  (rule "sortsDisjointModuloNull" (formula "42"))
                  (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "38"))
                  (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "34")))
                  (rule "false_right" (formula "42"))
                  (rule "elementOfUnion" (formula "41"))
                  (builtin "One Step Simplification" (formula "41"))
                  (rule "closeTrue" (formula "41"))
               )
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "47"))
               (rule "applyEq" (formula "47") (term "1,2,1,0,0") (ifseqformula "35"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
               (rule "inEqSimp_homoInEq0" (formula "1"))
               (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,0"))
               (rule "times_zero_1" (formula "1") (term "0"))
               (rule "qeq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "27") (term "2") (ifseqformula "15"))
               (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "34"))
               (rule "applyEq" (formula "28") (term "2") (ifseqformula "15"))
               (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
               (rule "applyEq" (formula "34") (term "0") (ifseqformula "33"))
               (rule "inEqSimp_homoInEq1" (formula "34"))
               (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
               (rule "add_literals" (formula "34") (term "1,0"))
               (rule "times_zero_1" (formula "34") (term "0"))
               (rule "leq_literals" (formula "34"))
               (rule "true_left" (formula "34"))
               (rule "applyEq" (formula "6") (term "0") (ifseqformula "33"))
               (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "32"))
               (rule "applyEq" (formula "33") (term "1,2,1,0,0,1,0") (ifseqformula "32"))
               (rule "eqSymm" (formula "33") (term "1,0"))
               (rule "applyEq" (formula "33") (term "1,2,1,0,0,1,0") (ifseqformula "32"))
               (rule "eqSymm" (formula "33") (term "1,0"))
               (rule "elementOfUnion" (formula "25"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "eqSymm" (formula "25") (term "1"))
               (rule "sortsDisjointModuloNull" (formula "25") (term "1"))
               (rule "replace_known_right" (formula "25") (term "1,1") (ifseqformula "40"))
               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "36")))
               (rule "elementOfUnion" (formula "26"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "eqSymm" (formula "26") (term "1"))
               (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
               (rule "replace_known_right" (formula "26") (term "1,1") (ifseqformula "40"))
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "36")))
               (rule "elementOfUnion" (formula "25"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "elementOfUnion" (formula "25"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=selectSK_60"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "3")))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
               (rule "close" (formula "42") (ifseqformula "26"))
            )
         )
      )
      (branch "Case 2"
         (builtin "One Step Simplification" (formula "47"))
         (rule "closeTrue" (formula "47"))
      )
   )
   (branch "Case 2"
      (builtin "One Step Simplification" (formula "47"))
      (rule "allRight" (formula "47") (inst "sk=f_2"))
      (rule "allRight" (formula "47") (inst "sk=o_4"))
      (rule "orRight" (formula "47"))
      (rule "orRight" (formula "47"))
      (rule "eqSymm" (formula "49"))
      (rule "eqSymm" (formula "47") (term "0,0,0,1"))
      (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
      (rule "applyEq" (formula "35") (term "0") (ifseqformula "34"))
      (rule "inEqSimp_homoInEq1" (formula "35"))
      (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
      (rule "add_literals" (formula "35") (term "1,0"))
      (rule "times_zero_1" (formula "35") (term "0"))
      (rule "leq_literals" (formula "35"))
      (rule "true_left" (formula "35"))
      (rule "applyEq" (formula "47") (term "1,2,1,0,0") (ifseqformula "34"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "34"))
      (rule "inEqSimp_homoInEq0" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,0"))
      (rule "times_zero_1" (formula "1") (term "0"))
      (rule "qeq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "applyEq" (formula "27") (term "2") (ifseqformula "15"))
      (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "33"))
      (rule "applyEq" (formula "6") (term "0") (ifseqformula "33"))
      (rule "applyEq" (formula "43") (term "1,1,1,0,1") (ifseqformula "32"))
      (rule "applyEq" (formula "33") (term "1,2,1,0,0,1,0") (ifseqformula "32"))
      (rule "eqSymm" (formula "33") (term "1,0"))
      (rule "applyEq" (formula "25") (term "2") (ifseqformula "14"))
      (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "32"))
      (rule "applyEq" (formula "33") (term "1,2,1,0,0,1,0") (ifseqformula "32"))
      (rule "eqSymm" (formula "33") (term "1,0"))
      (rule "elementOfUnion" (formula "26"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "eqSymm" (formula "26") (term "1"))
      (rule "sortsDisjointModuloNull" (formula "26") (term "1"))
      (rule "replace_known_right" (formula "26") (term "1,1") (ifseqformula "40"))
      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "36")))
      (rule "elementOfUnion" (formula "25"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "eqSymm" (formula "25") (term "1"))
      (rule "sortsDisjointModuloNull" (formula "25") (term "1"))
      (rule "replace_known_right" (formula "25") (term "1,1") (ifseqformula "40"))
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "36")))
      (rule "elementOfUnion" (formula "26"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "true_left" (formula "26"))
      (rule "elementOfUnion" (formula "25"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "true_left" (formula "25"))
      (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=selectSK_63"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
      (rule "eqSymm" (formula "44"))
      (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
      (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "42"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
