\settings {
"#Proof-Settings-Config-File
#Fri Sep 11 22:56:40 CEST 2009
[View]FontIndex=2
[General]UseOCL=false
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[General]OneStepSimplification=true
[DecisionProcedure]WaitForAllProvers=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[DecisionProcedure]Timeout=600
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[View]ShowWholeTaclet=false
[View]MaxTooltipLines=40
[General]DnDDirectionSensitive=true
[General]StupidMode=true
[DecisionProcedure]savefile=false
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[Choice]DefaultChoices=assertions-assertions\:on , programRules-programRules\:Java , intRules-intRules\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\:ban
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[DecisionProcedure]ActiveRule=Simplify
[General]UseJML=true
[View]HideClosedSubtrees=false
[View]HideIntermediateProofsteps=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource ".";



\programVariables {
  CellClient self;
  Heap heapAtPre;
  java.lang.Exception exc;
  int result;
}

\rules {
 Class_invariant_axiom {
  \schemaVar \term Heap h;
  \schemaVar \term CellClient cc;
  \assumes (CellClient::exactInstance(cc) = TRUE ==> 
  )
  \find ( java.lang.Object::<inv>(h, cc) )
  \replacewith ( true )
  \heuristics ( simplify )
 }; 
}


\problem {
     wellFormed(heap)
   & !self = null
   &   boolean::select(heap,
                       self,
                       java.lang.Object::<created>)
     = TRUE
   & CellClient::exactInstance(self) = TRUE
   & java.lang.Object::<inv>(heap, self)
   & \forall Heap h; \forall Cell c; \forall Object o; \forall Field f; 
       {heap:=h} (elementOf(pair(o,f), c.footprint) 
                  -> (o.<created>=TRUE))
-> {heapAtPre:=heap}
     \[{
         exc=null;try {
           result=self.m()@CellClient;
         }  catch (java.lang.Throwable e) {
           exc=e;
         }
       }\] (  (   exc = null
               ->   result = Z(5(#))
                  & java.lang.Object::<inv>(heap, self))
            & exc = null
            & \forall java.lang.Object o;
                \forall Field f;
                  (  elementOf(pair(o, f), allLocs)
                   |   any::select(heap, o, f)
                     = any::select(heapAtPre, o, f)))

}
