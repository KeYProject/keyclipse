\settings {
"#Proof-Settings-Config-File
#Tue Jun 11 11:55:16 CEST 2013
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]RETREAT_MODE_OPTIONS_KEY=RETREAT_MODE_NONE
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[Label]Instantiators=
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=50000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=Strings-Strings\\:on , reach-reach\\:on , JavaCard-JavaCard\\:on , assertions-assertions\\:on , bigint-bigint\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , modelFields-modelFields\\:showSatisfiability , initialisation-initialisation\\:disableStaticInitialisation , sequences-sequences\\:on , integerSimplificationRules-integerSimplificationRules\\:full , runtimeExceptions-runtimeExceptions\\:ban
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}



\sorts{
alpha;
}

\predicates{
}

\functions{
alpha alpha::cast(any);
alpha alpha::seqGet(Seq,int);
int f_idx;
any f_x;
}

\schemaVariables{
}

\rules{
}

\proofObligation "#Proof Obligation Settings
#Tue Jun 11 11:55:16 CEST 2013
name=getOfSeqSingleton
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "3f0199c8330b513c7802d0f9a530113dde585166"))

(autoModeTime "58")

(branch "dummy ID"
(rule "defOfSeqSingleton" (formula "1") (term "0,0") (inst "uSub=uSub") (userinteraction))
(rule "eqSymm" (formula "1"))
(rule "getOfSeqDef" (formula "1") (term "1"))
(rule "sub_literals" (formula "1") (term "1,1,0,1"))
(rule "eqSymm" (formula "1"))
(rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
(rule "mul_literals" (formula "1") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "1") (term "0,0,1,0,0"))
(rule "add_zero_left" (formula "1") (term "0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
(rule "commute_and" (formula "1") (term "0,0"))
(rule "inEqSimp_and_antiSymm0" (formula "1") (term "0,0"))
(builtin "One Step Simplification" (formula "1"))
(rule "closeTrue" (formula "1"))
)

}
