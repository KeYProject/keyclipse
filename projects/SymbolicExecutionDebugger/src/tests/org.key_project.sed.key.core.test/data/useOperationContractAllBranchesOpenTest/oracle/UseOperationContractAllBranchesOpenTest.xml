<?xml version="1.0" encoding="UTF-8"?>
<launch xmlns="http://key-project.org/sed/serialization">
   <sedTarget xml:id="_d0462a73-9dda-4c7a-b321-3bee11df1d4c" name="main(int, UseOperationContractAllBranchesOpenTest)" modelIdentifier="org.key_project.sed.key.core">
      <sedThread xml:id="_58cd3fd5-7b86-47ac-b468-366f7c0d7b1e" name="&lt;start&gt;" pathCondition="true">
         <sedMethodCall xml:id="_02128e2f-ce4b-476b-b26d-503e07f27957" name="UseOperationContractAllBranchesOpenTest.main(x,obj);" pathCondition="true" lineNumber="-1" charStart="77" charEnd="81">
            <sedStatement xml:id="_3ff283d1-7a3b-46c6-adba-87833b6311d0" name="int magicNumber = obj.magic(x);" pathCondition="true" lineNumber="-1" charStart="149" charEnd="180">
               <sedMethodContract xml:id="_29cc9d42-9516-43bf-bb47-84e4a7b0d5a2" name="result_0 = obj.magic(x) catch(exc_0)
pre: x &lt; javaUnaryMinusInt(10) &amp; obj.&lt;inv&gt;
| x &gt;= 10
&amp; obj.&lt;inv&gt;
post: (     x &lt; javaUnaryMinusInt(10)
      &amp; heapBefore_magic_0[obj.&lt;inv&gt;]
   -&gt;   !exc_0 = null
      &amp; (  (     java.lang.Throwable::instance(exc_0)
               = TRUE
            -&gt; obj.&lt;inv&gt;)
         &amp; java.lang.Exception::instance(exc_0) = TRUE))
&amp; (   x &gt;= 10 &amp; heapBefore_magic_0[obj.&lt;inv&gt;]
   -&gt; result_0 = 42 &amp; obj.&lt;inv&gt; &amp; exc_0 = null)
mod: \if (true)  \then (allLocs)  \else (allLocs)
\cap \if (x &gt;= 10 &amp; obj.&lt;inv&gt;)
         \then (allLocs)
         \else (allLocs)
termination: diamond" pathCondition="true" lineNumber="-1" charStart="573" charEnd="578" preconditionComplied="false" hasNotNullCheck="true" notNullCheckComplied="false">
                  <sedBranchCondition xml:id="_e70570ee-a256-455a-af85-8b4a2e3c91b5" name="Post (magic): and(and(java.lang.Object::&lt;inv&gt;(heap,obj),geq(x,Z(0(1(#))))),not(equals(obj,null)))" pathCondition="and(and(java.lang.Object::&lt;inv&gt;(heap,obj),geq(x,Z(0(1(#))))),not(equals(obj,null)))">
                     <sedStatement xml:id="_edd8807d-d526-42ec-97c5-e3ca172ab5e4" name="int magicNumberCopy = magicNumber;" pathCondition="and(and(java.lang.Object::&lt;inv&gt;(heap,obj),geq(x,Z(0(1(#))))),not(equals(obj,null)))" lineNumber="-1" charStart="185" charEnd="219">
                        <sedStatement xml:id="_92aaca3b-0e30-476b-ad74-3db5bdc8be0c" name="return magicNumber+magicNumberCopy;" pathCondition="and(and(java.lang.Object::&lt;inv&gt;(heap,obj),geq(x,Z(0(1(#))))),not(equals(obj,null)))" lineNumber="-1" charStart="224" charEnd="261">
                           <sedMethodReturn xml:id="_e9696492-ca36-47ed-aa83-e8e775f2be02" name="&lt;return of UseOperationContractAllBranchesOpenTest.main(x,obj);&gt;" pathCondition="and(and(java.lang.Object::&lt;inv&gt;(heap,obj),geq(x,Z(0(1(#))))),not(equals(obj,null)))" lineNumber="-1" charStart="77" charEnd="81">
                              <sedTermination xml:id="_842c2500-7fe6-4a44-9679-69dc25c40b0b" name="&lt;end&gt;" pathCondition="and(and(java.lang.Object::&lt;inv&gt;(heap,obj),geq(x,Z(0(1(#))))),not(equals(obj,null)))" verified="true">
                              </sedTermination>
                           </sedMethodReturn>
                        </sedStatement>
                     </sedStatement>
                  </sedBranchCondition>
                  <sedBranchCondition xml:id="_505f6c63-92f7-4b8d-b171-65bf0a244e21" name="Exceptional Post (magic): and(and(java.lang.Object::&lt;inv&gt;(heap,obj),leq(x,Z(neglit(1(1(#)))))),not(equals(obj,null)))" pathCondition="and(and(java.lang.Object::&lt;inv&gt;(heap,obj),leq(x,Z(neglit(1(1(#)))))),not(equals(obj,null)))">
                     <sedBranchCondition xml:id="_a370efe2-4eb4-4a91-9b1e-2d304fbee6cc" name="and(not(equals(exc_0,null)),equals(java.lang.Exception::instance(exc_0),TRUE))" pathCondition="and(and(and(and(java.lang.Object::&lt;inv&gt;(heap,obj),leq(x,Z(neglit(1(1(#)))))),not(equals(exc_0,null))),equals(java.lang.Exception::instance(exc_0),TRUE)),not(equals(obj,null)))">
                        <sedStatement xml:id="_bad41623-2505-4231-a7cb-f4872d9dc8dc" name="return -1;" pathCondition="and(and(and(and(java.lang.Object::&lt;inv&gt;(heap,obj),leq(x,Z(neglit(1(1(#)))))),not(equals(exc_0,null))),equals(java.lang.Exception::instance(exc_0),TRUE)),not(equals(obj,null)))" lineNumber="-1" charStart="296" charEnd="306">
                           <sedMethodReturn xml:id="_9c9e48f9-8490-4ffe-929e-98fe66f9522e" name="&lt;return of UseOperationContractAllBranchesOpenTest.main(x,obj);&gt;" pathCondition="and(and(and(and(java.lang.Object::&lt;inv&gt;(heap,obj),leq(x,Z(neglit(1(1(#)))))),not(equals(exc_0,null))),equals(java.lang.Exception::instance(exc_0),TRUE)),not(equals(obj,null)))" lineNumber="-1" charStart="77" charEnd="81">
                              <sedTermination xml:id="_108089e1-3631-42a8-8310-e7e1105b8802" name="&lt;end&gt;" pathCondition="and(and(and(and(java.lang.Object::&lt;inv&gt;(heap,obj),leq(x,Z(neglit(1(1(#)))))),not(equals(exc_0,null))),equals(java.lang.Exception::instance(exc_0),TRUE)),not(equals(obj,null)))" verified="true">
                              </sedTermination>
                           </sedMethodReturn>
                        </sedStatement>
                     </sedBranchCondition>
                     <sedBranchCondition xml:id="_f2fb71a6-210f-4b60-9646-0ea80c22bb49" name="imp(equals(java.lang.Exception::instance(exc_0),TRUE),equals(exc_0,null))" pathCondition="and(and(and(java.lang.Object::&lt;inv&gt;(heap,obj),leq(x,Z(neglit(1(1(#)))))),not(equals(obj,null))),imp(equals(java.lang.Exception::instance(exc_0),TRUE),equals(exc_0,null)))">
                        <sedExceptionalTermination xml:id="_c6eb7d25-e6d5-4078-a484-8752f206c185" name="&lt;uncaught java.lang.Throwable&gt;" pathCondition="and(and(and(java.lang.Object::&lt;inv&gt;(heap,obj),leq(x,Z(neglit(1(1(#)))))),not(equals(obj,null))),imp(equals(java.lang.Exception::instance(exc_0),TRUE),equals(exc_0,null)))" verified="true">
                        </sedExceptionalTermination>
                     </sedBranchCondition>
                  </sedBranchCondition>
               </sedMethodContract>
            </sedStatement>
         </sedMethodCall>
      </sedThread>
   </sedTarget>
</launch>
