<?xml version="1.0" encoding="UTF-8"?>
<launch xmlns="http://key-project.org/sed/serialization">
   <sedTarget xml:id="_7d34584e-6180-4d28-82df-622843bfc0e6" name="sum(int[])" modelIdentifier="org.key_project.sed.key.core">
      <sedThread xml:id="_4fba9a31-c114-4ece-9717-20e266777035" name="&lt;start&gt;" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java">
         <sedMethodCall xml:id="_461438bd-5f91-49ed-8114-398f6984f924" name="&lt;call ArraySumWhile.sum(array)&gt;" pathCondition="true" lineNumber="-1" charStart="166" charEnd="169" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java">
            <sedStatement xml:id="_2ef87856-fe3c-4d4a-b21a-bb45cf599e42" name="int result = 0;" pathCondition="true" lineNumber="-1" charStart="188" charEnd="203" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java">
               <sedStatement xml:id="_a0654a1e-d3a4-4dd6-b1e3-a9205f1f6adf" name="int i = 0;" pathCondition="true" lineNumber="-1" charStart="207" charEnd="217" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java">
                  <sedLoopInvariant xml:id="_8982e7c1-e307-41b5-be5e-288b4a98b755" name="invariant: i &gt;= 0
&amp; (  i &lt;= array.length
   &amp;   result_1
     = javaCastInt(bsum{int j;}(0, i, array[j])));
variant: javaSubInt(array.length, i)
mod: false" pathCondition="true" lineNumber="-1" charStart="407" charEnd="471" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java" initiallyValid="true">
                     <sedBranchCondition xml:id="_9a0df1af-d443-4402-84de-73b4e6ab1c22" name="Body Preserves Invariant: and(or(lt(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0))),not(equals(array,null)))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),not(equals(array,null))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java">
                        <sedBranchCondition xml:id="_b103fc22-25da-4f19-84bf-56ba3e8fa92b" name="not(equals(array,null))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),not(equals(array,null))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java">
                           <sedStatement xml:id="_805dd800-4ec3-46b7-aedb-a6536dd5505a" name="result_1+=array[i];" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),not(equals(array,null))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" lineNumber="-1" charStart="438" charEnd="457" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java">
                              <sedStatement xml:id="_2053546a-4633-4d58-ae22-2553fb7e19fa" name="i++;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),not(equals(array,null))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" lineNumber="-1" charStart="462" charEnd="466" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java">
                                 <sedLoopBodyTermination xml:id="_42c72784-0c80-46e5-9af6-9cbee3a26713" name="&lt;loop body end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),not(equals(array,null))),gt(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java" verified="true">
                                 </sedLoopBodyTermination>
                              </sedStatement>
                           </sedStatement>
                        </sedBranchCondition>
                        <sedBranchCondition xml:id="_1f8d9c89-3c34-413e-8a01-e51ed329ea6c" name="equals(array,null)" pathCondition="lt(length(array),Z(0(#)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java">
                           <sedExceptionalMethodReturn xml:id="_19cef1f8-3c10-4926-af26-9a779818da00" name="&lt;exceptional return of &lt;call ArraySumWhile.sum(array)&gt;&gt;" pathCondition="lt(length(array),Z(0(#)))" lineNumber="-1" charStart="166" charEnd="169" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java" methodReturnConditionRef="_e3c3bfce-07fc-45e3-8e77-8ed338337293">
                              <sedExceptionalTermination xml:id="_48d79625-ab62-4aa6-a1a5-51a85a58dba0" name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="lt(length(array),Z(0(#)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java" verified="true">
                              </sedExceptionalTermination>
                           </sedExceptionalMethodReturn>
                        </sedBranchCondition>
                     </sedBranchCondition>
                     <sedBranchCondition xml:id="_6abc68cb-d434-40b6-93ce-d9d7d84f386b" name="Use Case: and(or(lt(length(array),Z(0(#))),and(and(geq(i_0,Z(0(#))),equals(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0))),not(equals(array,null)))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),not(equals(array,null))),equals(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java">
                        <sedStatement xml:id="_d96caa68-acbd-4ef8-80a5-bf202c11774f" name="return result_1;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),not(equals(array,null))),equals(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" lineNumber="-1" charStart="475" charEnd="489" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java">
                           <sedMethodReturn xml:id="_dced3ee3-8240-4a31-904b-319dd15bc137" name="&lt;return of ArraySumWhile.sum(array)&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),not(equals(array,null))),equals(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" lineNumber="-1" charStart="166" charEnd="169" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java" methodReturnConditionRef="_a6c15c39-5ded-458a-8790-5fe9c238751b">
                              <sedTermination xml:id="_630d6a06-3218-46dc-9a5c-4e1a16a2a887" name="&lt;end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),not(equals(array,null))),equals(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotKeYDebugTargetSuspendResumeTest_useLoopInvariantArraySumWhile\src\ArraySumWhile.java" verified="true">
                              </sedTermination>
                              <sedGroupStartCondition xml:id="_a6c15c39-5ded-458a-8790-5fe9c238751b" name="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),not(equals(array,null))),equals(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
                                 <sedChildReference nodeIdRef="_dced3ee3-8240-4a31-904b-319dd15bc137"/>
                              </sedGroupStartCondition>
                           </sedMethodReturn>
                        </sedStatement>
                     </sedBranchCondition>
                  </sedLoopInvariant>
               </sedStatement>
            </sedStatement>
            <sedMethodCallMethodReturnCondition xml:id="_e3c3bfce-07fc-45e3-8e77-8ed338337293" name="false" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_19cef1f8-3c10-4926-af26-9a779818da00"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_a6c15c39-5ded-458a-8790-5fe9c238751b" name="imp(geq(length(array),Z(0(#))),and(and(and(geq(i_0,Z(0(#))),not(equals(array,null))),equals(length(array),i_0)),equals(bsum{j:int}(Z(0(#)),i_0,int::select(heap,array,arr(j))),result_1_0)))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_dced3ee3-8240-4a31-904b-319dd15bc137"/>
            </sedMethodCallMethodReturnCondition>
            <sedGroupEndReference nodeIdRef="_e3c3bfce-07fc-45e3-8e77-8ed338337293"/>
            <sedGroupEndReference nodeIdRef="_a6c15c39-5ded-458a-8790-5fe9c238751b"/>
         </sedMethodCall>
         <sedTerminationEntry nodeIdRef="_42c72784-0c80-46e5-9af6-9cbee3a26713"/>
         <sedTerminationEntry nodeIdRef="_48d79625-ab62-4aa6-a1a5-51a85a58dba0"/>
         <sedTerminationEntry nodeIdRef="_630d6a06-3218-46dc-9a5c-4e1a16a2a887"/>
      </sedThread>
   </sedTarget>
</launch>
