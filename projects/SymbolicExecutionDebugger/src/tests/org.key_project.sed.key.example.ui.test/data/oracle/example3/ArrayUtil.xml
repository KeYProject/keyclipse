<?xml version="1.0" encoding="UTF-8"?>
<launch xmlns="http://key-project.org/sed/serialization">
   <sedTarget xml:id="_83d99717-c45d-4318-ab75-fa59d58b4340" name="example3.ArrayUtil[example3.ArrayUtil::indexOf([Ljava.lang.Object,example3.ArrayUtil.Filter)].JML normal_behavior operation contract.0" modelIdentifier="org.key_project.sed.key.core">
      <sedThread xml:id="_61fd9022-96c0-4954-adee-7020fa0467c4" name="&lt;start&gt;" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java">
         <sedMethodCall xml:id="_67a9739a-775f-45e5-a786-f1d2e130c042" name="&lt;call example3.ArrayUtil.indexOf(_array,_filter)&gt;" pathCondition="true" lineNumber="-1" charStart="2642" charEnd="2649" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java" groupable="true">
            <sedStatement xml:id="_9ea04a02-8cf8-4d42-a2c1-ce43725f716f" name="int index = -1;" pathCondition="true" lineNumber="-1" charStart="2735" charEnd="2750" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java">
               <sedStatement xml:id="_790d9a4f-b9cb-4dc3-96df-b071977a9c6f" name="int i = 0;" pathCondition="true" lineNumber="-1" charStart="2753" charEnd="2763" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java">
                  <sedLoopInvariant xml:id="_9198867b-91d1-4d5b-bfe7-8660cf3332f7" name="invariant: i &gt;= 0 &amp; i &lt;= _array.length;
variant: javaSubInt(_array.length, i)
mod: false" pathCondition="true" lineNumber="-1" charStart="2895" charEnd="3016" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java" initiallyValid="true">
                     <sedBranchCondition xml:id="_27b5564e-639e-4a98-bdbd-6931042bb97b" name="Body Preserves Invariant: and(lt(index_1_0,Z(0(#))),or(gt(index_1_0,Z(neglit(1(#)))),and(geq(i_0,Z(0(#))),gt(length(array),i_0))))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(leq(index_1_0,Z(neglit(1(#)))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),gt(length(array),i_0))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java">
                        <sedBranchStatement xml:id="_98d81f62-5765-4071-99f8-c00b9b7c714c" name="if (_filter.accept(_array[i]))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(leq(index_1_0,Z(neglit(1(#)))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),gt(length(array),i_0))))" lineNumber="-1" charStart="2938" charEnd="2967" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java" groupable="false">
                           <sedMethodContract xml:id="_066be0a7-606d-42aa-80d2-bb7c959da44a" name="result_0 = var.accept(var_1) catch(exc_0)
pre: var.&lt;inv&gt;
post: var.&lt;inv&gt; &amp; exc_0 = null
mod: empty, creates no new objects
termination: diamond" pathCondition="imp(geq(length(array),Z(0(#))),and(and(leq(index_1_0,Z(neglit(1(#)))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),gt(length(array),i_0))))" lineNumber="-1" charStart="3178" charEnd="3184" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java" preconditionComplied="true" hasNotNullCheck="true" notNullCheckComplied="true">
                              <sedBranchCondition xml:id="_131aae71-e51b-41e3-9e6e-41d11d908b14" name="equals(result_0,TRUE)" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(equals(result_0,TRUE),leq(index_1_0,Z(neglit(1(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),gt(length(array),i_0))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java">
                                 <sedStatement xml:id="_ab791b09-f771-46b5-b49d-fa4e0f9fc2e8" name="index_1=i;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(equals(result_0,TRUE),leq(index_1_0,Z(neglit(1(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),gt(length(array),i_0))))" lineNumber="-1" charStart="2973" charEnd="2983" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java">
                                    <sedLoopBodyTermination xml:id="_f6c97e68-eb57-4ae7-9297-05dc0663a0e7" name="&lt;loop body end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(equals(result_0,TRUE),leq(index_1_0,Z(neglit(1(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),gt(length(array),i_0))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java" verified="false">
                                    </sedLoopBodyTermination>
                                 </sedStatement>
                              </sedBranchCondition>
                              <sedBranchCondition xml:id="_943baec3-a6a7-4f69-a29b-26b5ba722aa3" name="not(equals(result_0,TRUE))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(not(equals(result_0,TRUE)),leq(index_1_0,Z(neglit(1(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),gt(length(array),i_0))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java">
                                 <sedStatement xml:id="_2ee8644b-649a-4190-9318-4a03ac7922c7" name="i++;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(not(equals(result_0,TRUE)),leq(index_1_0,Z(neglit(1(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),gt(length(array),i_0))))" lineNumber="-1" charStart="3003" charEnd="3007" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java">
                                    <sedLoopBodyTermination xml:id="_19cf9bc1-408f-43ff-b11e-e4ae87cfda69" name="&lt;loop body end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(not(equals(result_0,TRUE)),leq(index_1_0,Z(neglit(1(#))))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(index_1_0,Z(0(#))),gt(length(array),i_0))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java" verified="true">
                                    </sedLoopBodyTermination>
                                 </sedStatement>
                              </sedBranchCondition>
                           </sedMethodContract>
                        </sedBranchStatement>
                     </sedBranchCondition>
                     <sedBranchCondition xml:id="_56b8632e-be42-493f-adc0-762da3a4d4b7" name="Use Case: and(or(lt(index_1_0,Z(0(#))),and(geq(i_0,Z(0(#))),geq(length(array),i_0))),or(gt(index_1_0,Z(neglit(1(#)))),and(geq(i_0,Z(0(#))),equals(length(array),i_0))))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#)))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(geq(index_1_0,Z(0(#))),equals(length(array),i_0))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java">
                        <sedStatement xml:id="_22686ad1-edc6-4b0b-a757-637086d4dc98" name="return i;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#)))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(geq(index_1_0,Z(0(#))),equals(length(array),i_0))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" lineNumber="-1" charStart="3019" charEnd="3028" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java">
                           <sedBranchCondition xml:id="_6fd6e9e8-1da1-4f16-a05e-8d9a4ee66246" name="gt(index_1_0,Z(neglit(1(#))))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(geq(index_1_0,Z(0(#))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(geq(index_1_0,Z(0(#))),equals(length(array),i_0))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java">
                              <sedMethodReturn xml:id="_4888250a-390c-49ea-97ad-1fae811d1033" name="&lt;return of example3.ArrayUtil.indexOf(_array,_filter)&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(geq(index_1_0,Z(0(#))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(geq(index_1_0,Z(0(#))),equals(length(array),i_0))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" lineNumber="-1" charStart="2642" charEnd="2649" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java" methodReturnConditionRef="_ce33a1e3-8201-4962-8104-4da73debe776">
                                 <sedTermination xml:id="_3927e706-5c11-476b-b141-fd647e208531" name="&lt;end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(geq(index_1_0,Z(0(#))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(geq(index_1_0,Z(0(#))),equals(length(array),i_0))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java" verified="true">
                                 </sedTermination>
                                 <sedGroupStartCondition xml:id="_ce33a1e3-8201-4962-8104-4da73debe776" name="imp(geq(length(array),Z(0(#))),and(and(and(and(geq(index_1_0,Z(0(#))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(geq(index_1_0,Z(0(#))),equals(length(array),i_0))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
                                    <sedChildReference nodeIdRef="_4888250a-390c-49ea-97ad-1fae811d1033"/>
                                 </sedGroupStartCondition>
                              </sedMethodReturn>
                           </sedBranchCondition>
                           <sedBranchCondition xml:id="_784107b6-ada7-43cd-a6fe-59f3f37396d2" name="lt(index_1_0,Z(0(#)))" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(leq(index_1_0,Z(neglit(1(#)))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(geq(index_1_0,Z(0(#))),equals(length(array),i_0))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java">
                              <sedMethodReturn xml:id="_dcec1df5-8c72-441e-9f1a-c1f5a7625908" name="&lt;return of example3.ArrayUtil.indexOf(_array,_filter)&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(leq(index_1_0,Z(neglit(1(#)))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(geq(index_1_0,Z(0(#))),equals(length(array),i_0))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" lineNumber="-1" charStart="2642" charEnd="2649" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java" methodReturnConditionRef="_bfda3edd-7836-49b2-805c-5595cc7e19a3">
                                 <sedTermination xml:id="_06d5d1fc-4cf6-424a-b8d7-afe8e8caeeee" name="&lt;end&gt;" pathCondition="imp(geq(length(array),Z(0(#))),and(and(and(and(leq(index_1_0,Z(neglit(1(#)))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(geq(index_1_0,Z(0(#))),equals(length(array),i_0))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample3\src\example3\ArrayUtil.java" verified="true">
                                 </sedTermination>
                                 <sedGroupStartCondition xml:id="_bfda3edd-7836-49b2-805c-5595cc7e19a3" name="imp(geq(length(array),Z(0(#))),and(and(and(and(leq(index_1_0,Z(neglit(1(#)))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(geq(index_1_0,Z(0(#))),equals(length(array),i_0))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
                                    <sedChildReference nodeIdRef="_dcec1df5-8c72-441e-9f1a-c1f5a7625908"/>
                                 </sedGroupStartCondition>
                              </sedMethodReturn>
                           </sedBranchCondition>
                        </sedStatement>
                     </sedBranchCondition>
                  </sedLoopInvariant>
               </sedStatement>
            </sedStatement>
            <sedMethodCallMethodReturnCondition xml:id="_ce33a1e3-8201-4962-8104-4da73debe776" name="imp(geq(length(array),Z(0(#))),and(and(and(and(geq(index_1_0,Z(0(#))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(geq(index_1_0,Z(0(#))),equals(length(array),i_0))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_4888250a-390c-49ea-97ad-1fae811d1033"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_bfda3edd-7836-49b2-805c-5595cc7e19a3" name="imp(geq(length(array),Z(0(#))),and(and(and(and(leq(index_1_0,Z(neglit(1(#)))),or(geq(i_0,Z(0(#))),geq(index_1_0,Z(0(#))))),or(geq(i_0,Z(0(#))),leq(index_1_0,Z(neglit(1(#)))))),or(geq(index_1_0,Z(0(#))),equals(length(array),i_0))),or(leq(index_1_0,Z(neglit(1(#)))),geq(length(array),i_0))))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_dcec1df5-8c72-441e-9f1a-c1f5a7625908"/>
            </sedMethodCallMethodReturnCondition>
            <sedGroupEndReference nodeIdRef="_ce33a1e3-8201-4962-8104-4da73debe776"/>
            <sedGroupEndReference nodeIdRef="_bfda3edd-7836-49b2-805c-5595cc7e19a3"/>
         </sedMethodCall>
         <sedTerminationEntry nodeIdRef="_f6c97e68-eb57-4ae7-9297-05dc0663a0e7"/>
         <sedTerminationEntry nodeIdRef="_19cf9bc1-408f-43ff-b11e-e4ae87cfda69"/>
         <sedTerminationEntry nodeIdRef="_3927e706-5c11-476b-b141-fd647e208531"/>
         <sedTerminationEntry nodeIdRef="_06d5d1fc-4cf6-424a-b8d7-afe8e8caeeee"/>
      </sedThread>
   </sedTarget>
</launch>
