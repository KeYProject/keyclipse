<?xml version="1.0" encoding="UTF-8"?>
<launch xmlns="http://key-project.org/sed/serialization">
   <sedTarget xml:id="_4b9e94f4-fed7-4518-9b0e-7802b965596a" name="rotateLeft(example4.AVLTree.Node)" modelIdentifier="org.key_project.sed.key.core">
      <sedThread xml:id="_269f2c3c-6154-4c43-9c3c-0d33bfbaff89" name="&lt;start&gt;" pathCondition="true">
         <sedMethodCall xml:id="_51c4c97e-4eac-4a5e-ad89-47b1214711ee" name="&lt;call self.rotateLeft(current)&gt;" pathCondition="true" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
            <sedStatement xml:id="_c476cc52-a2c0-4e25-b1da-f28af077d410" name="Node newParent = current.right;" pathCondition="true" lineNumber="-1" charStart="1325" charEnd="1356" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
               <sedBranchCondition xml:id="_ce6be0e6-82c2-4c75-9f50-b8cae0a3d19d" name="not(equals(current,null))" pathCondition="not(equals(current,null))">
                  <sedStatement xml:id="_79f65223-1e12-4036-8b1e-8146b6ac1cae" name="Node oldLeft = newParent.left;" pathCondition="not(equals(current,null))" lineNumber="-1" charStart="1359" charEnd="1389" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                     <sedBranchCondition xml:id="_69f47e10-7fe1-44fb-875a-65b0628b7ecd" name="not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))">
                        <sedStatement xml:id="_aba7fd47-b448-4955-804a-54000557257f" name="newParent.left=current;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1392" charEnd="1417" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                           <sedStatement xml:id="_ba3362be-33d4-43da-80db-4ec8a73bdf6e" name="newParent.height=0;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1420" charEnd="1441" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                              <sedStatement xml:id="_b243ce7f-218f-4e82-9315-bc6652ba4ef4" name="current.height=0;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1444" charEnd="1463" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                 <sedStatement xml:id="_9f87d9b5-0987-4387-99aa-fd4bc5b17efd" name="current.right=oldLeft;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1466" charEnd="1490" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                    <sedBranchStatement xml:id="_d855ef5e-c475-41bb-a023-5cd50680e866" name="if (oldLeft!=null)" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1493" charEnd="1514" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                       <sedBranchCondition xml:id="_5fadfe9b-b18f-479d-a599-763e4b98f098" name="not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))">
                                          <sedStatement xml:id="_fbbd04b2-0b28-4c98-b27b-51833b4e1bcd" name="oldLeft.parent=current.right;" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="1519" charEnd="1550" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                             <sedBranchStatement xml:id="_d3c2dfc9-ab17-4210-a467-3f89d2c6780f" name="if (current.parent==null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="1594" charEnd="1622" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                <sedBranchCondition xml:id="_6b94bf44-fd80-4e11-a11f-b511dd157711" name="equals(if-then-else(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current),example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent)),null)" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))">
                                                   <sedStatement xml:id="_b0f11cfe-1845-4236-8a34-2a87c6617f98" name="this.root=newParent;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1627" charEnd="1644" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_62ed7f98-6d15-44f2-b183-1f08452cc032" name="newParent.parent=null;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1648" charEnd="1672" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedStatement xml:id="_cc3064e8-bfb7-494a-ac8b-427afe2bb442" name="current.parent=newParent;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                            <sedMethodReturn xml:id="_6d0e3718-36f7-4c0e-baaf-cc3206f350b1" name="&lt;return of self.rotateLeft(current)&gt;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_eeb2d548-db81-431b-bb2b-927260d6d4c5">
                                                               <sedTermination xml:id="_f19f8efc-453f-43de-b560-0793f1df9070" name="&lt;end&gt;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                                                               </sedTermination>
                                                            </sedMethodReturn>
                                                         </sedStatement>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedBranchCondition>
                                                <sedBranchCondition xml:id="_ef45b382-7532-4f21-a2d9-c6db1d9a196e" name="not(equals(if-then-else(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current),example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent)),null))" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))">
                                                   <sedStatement xml:id="_61b3650a-18f5-404f-b2a9-7d2adad8cd22" name="current.parent.right=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1689" charEnd="1722" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_c2efeb19-3467-4cd8-a2ce-be65b263f829" name="newParent.parent=current.parent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1726" charEnd="1760" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedStatement xml:id="_c5fbdb35-1ba0-4ec6-8d09-c6c6065866e6" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                            <sedMethodReturn xml:id="_1be072c4-1470-4c91-84c1-cfb1359005f1" name="&lt;return of self.rotateLeft(current)&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_730c3800-784a-46b1-9dd6-7c6888b8168c">
                                                               <sedTermination xml:id="_412d4c8b-789b-4956-a4fc-c74df63b6836" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                                                               </sedTermination>
                                                            </sedMethodReturn>
                                                         </sedStatement>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedBranchCondition>
                                             </sedBranchStatement>
                                          </sedStatement>
                                       </sedBranchCondition>
                                       <sedBranchCondition xml:id="_c9c1bedc-0e5e-4fe1-b110-1f6b3e9103b3" name="equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))">
                                          <sedBranchStatement xml:id="_e6876f4b-fbc7-48db-aee0-7accc23290eb" name="if (current.parent==null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1594" charEnd="1622" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                             <sedBranchCondition xml:id="_17c90241-3410-4beb-82a8-d5fd56ee0b4b" name="equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))">
                                                <sedStatement xml:id="_6abd0856-b346-4b29-bb54-5fb7785f860b" name="this.root=newParent;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1627" charEnd="1644" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                   <sedStatement xml:id="_8a67bfd6-1a55-4fbf-8bc1-567ff859c316" name="newParent.parent=null;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1648" charEnd="1672" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_b022f97a-6422-4998-bf97-ceead657b4ce" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedMethodReturn xml:id="_14729373-850f-4531-aac9-100d6bedd7a8" name="&lt;return of self.rotateLeft(current)&gt;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_0e3b7cf0-4b48-4ec4-ad43-5094cee3dbc0">
                                                            <sedTermination xml:id="_2e453316-a646-48e1-9e46-9076564d5260" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                                                            </sedTermination>
                                                         </sedMethodReturn>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedStatement>
                                             </sedBranchCondition>
                                             <sedBranchCondition xml:id="_5521d371-f3cb-4b51-aeb4-35f038788dd9" name="not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))">
                                                <sedStatement xml:id="_1206cd1c-2412-4365-859f-70a9988ed59f" name="current.parent.right=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1689" charEnd="1722" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                   <sedStatement xml:id="_5bb9c96f-dbe9-4a60-8a30-df7fb2505d9a" name="newParent.parent=current.parent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1726" charEnd="1760" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_6241f5ae-8add-45e2-9da4-4b494d4ac3bd" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedMethodReturn xml:id="_ab9ce076-2866-4e90-bac4-c65e23ab5381" name="&lt;return of self.rotateLeft(current)&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_1b5be9ad-23aa-4110-896b-f0859767068f">
                                                            <sedTermination xml:id="_5c0f6cfd-6aa3-43b4-82fa-20fd40b8b157" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                                                            </sedTermination>
                                                         </sedMethodReturn>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedStatement>
                                             </sedBranchCondition>
                                          </sedBranchStatement>
                                       </sedBranchCondition>
                                    </sedBranchStatement>
                                 </sedStatement>
                              </sedStatement>
                           </sedStatement>
                        </sedStatement>
                     </sedBranchCondition>
                     <sedBranchCondition xml:id="_8af3ca37-225a-458c-900c-02ee002ea5f4" name="equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)" pathCondition="and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))">
                        <sedExceptionalTermination xml:id="_7ce01e53-5d5b-4c9e-a51a-7feee0fa99a1" name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                        </sedExceptionalTermination>
                     </sedBranchCondition>
                  </sedStatement>
               </sedBranchCondition>
               <sedBranchCondition xml:id="_63ebafcc-ec24-46c9-92c2-3b014b74d173" name="equals(current,null)" pathCondition="equals(current,null)">
                  <sedExceptionalTermination xml:id="_07d9fe0d-4e58-4168-8401-cd48404f837b" name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="equals(current,null)" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                  </sedExceptionalTermination>
               </sedBranchCondition>
            </sedStatement>
            <sedMethodCallMethodReturnCondition xml:id="_eeb2d548-db81-431b-bb2b-927260d6d4c5" name="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" pathCondition="true">
               <sedChildReference nodeIdRef="_6d0e3718-36f7-4c0e-baaf-cc3206f350b1"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_730c3800-784a-46b1-9dd6-7c6888b8168c" name="and(and(and(not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(current,null)))" pathCondition="true">
               <sedChildReference nodeIdRef="_1be072c4-1470-4c91-84c1-cfb1359005f1"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_0e3b7cf0-4b48-4ec4-ad43-5094cee3dbc0" name="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="true">
               <sedChildReference nodeIdRef="_14729373-850f-4531-aac9-100d6bedd7a8"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_1b5be9ad-23aa-4110-896b-f0859767068f" name="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="true">
               <sedChildReference nodeIdRef="_ab9ce076-2866-4e90-bac4-c65e23ab5381"/>
            </sedMethodCallMethodReturnCondition>
         </sedMethodCall>
         <sedTerminationEntry nodeIdRef="_f19f8efc-453f-43de-b560-0793f1df9070"/>
         <sedTerminationEntry nodeIdRef="_412d4c8b-789b-4956-a4fc-c74df63b6836"/>
         <sedTerminationEntry nodeIdRef="_2e453316-a646-48e1-9e46-9076564d5260"/>
         <sedTerminationEntry nodeIdRef="_5c0f6cfd-6aa3-43b4-82fa-20fd40b8b157"/>
         <sedTerminationEntry nodeIdRef="_7ce01e53-5d5b-4c9e-a51a-7feee0fa99a1"/>
         <sedTerminationEntry nodeIdRef="_07d9fe0d-4e58-4168-8401-cd48404f837b"/>
      </sedThread>
   </sedTarget>
</launch>
