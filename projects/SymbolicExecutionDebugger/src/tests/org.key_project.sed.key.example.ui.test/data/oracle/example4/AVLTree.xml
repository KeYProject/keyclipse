<?xml version="1.0" encoding="UTF-8"?>
<launch xmlns="http://key-project.org/sed/serialization">
   <sedTarget xml:id="_82ec8100-8539-4fa2-8922-7170d0164e4a" name="rotateLeft(example4.AVLTree.Node)" modelIdentifier="org.key_project.sed.key.core">
      <sedThread xml:id="_3b89b0bf-99a2-450c-95bb-9d0c2aa57cbd" name="&lt;start&gt;" pathCondition="true">
         <sedMethodCall xml:id="_1e9dcb94-1a42-47e3-9c07-795638d1f040" name="self.rotateLeft(current);" pathCondition="true" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
            <sedStatement xml:id="_714636d7-b791-4356-9915-c70d5691321b" name="Node newParent = current.right;" pathCondition="true" lineNumber="-1" charStart="1325" charEnd="1356" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
               <sedBranchCondition xml:id="_a22fde54-f340-4062-af51-27e7ac772c1c" name="not(equals(current,null))" pathCondition="not(equals(current,null))">
                  <sedStatement xml:id="_75b519b6-1e23-481a-9586-fbc0e9cde1a8" name="Node oldLeft = newParent.left;" pathCondition="not(equals(current,null))" lineNumber="-1" charStart="1359" charEnd="1389" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                     <sedBranchCondition xml:id="_72eb9d16-fa10-4d62-8443-0552aef3dab1" name="not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))">
                        <sedStatement xml:id="_56b66635-d1e4-4c5e-8c3e-95e88821d4a8" name="newParent.left=current;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1392" charEnd="1417" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                           <sedStatement xml:id="_4fcc383e-a1e2-4fc5-86f7-efeb522fbd6f" name="newParent.height=0;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1420" charEnd="1441" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                              <sedStatement xml:id="_9296bc10-148b-4726-a0ba-4ab0519201b5" name="current.height=0;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1444" charEnd="1463" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                 <sedStatement xml:id="_e17e41f9-ba99-41e8-a37a-05f50c16d7ff" name="current.right=oldLeft;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1466" charEnd="1490" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                    <sedBranchStatement xml:id="_1695a65b-cefc-4c3a-8cfd-8ec7dff76339" name="if (oldLeft!=null)" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1493" charEnd="1514" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                       <sedBranchCondition xml:id="_e385504e-3c3b-4c3c-b745-3e7b041ac384" name="not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))">
                                          <sedStatement xml:id="_9c69bd1e-c9fb-4f86-8a86-f6c599237216" name="oldLeft.parent=current.right;" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="1519" charEnd="1550" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                             <sedBranchStatement xml:id="_c6795d27-e01f-4e77-a153-c77d9aeaf4c6" name="if (current.parent==null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="1594" charEnd="1622" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                <sedBranchCondition xml:id="_ece09309-8981-434e-b261-07b5356e4847" name="equals(if-then-else(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current),example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent)),null)" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))">
                                                   <sedStatement xml:id="_56b9bb85-0805-4a50-b8a8-a7cd43534925" name="this.root=newParent;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1627" charEnd="1644" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_aefdcf51-97a4-4546-86dd-2ad6b2354808" name="newParent.parent=null;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1648" charEnd="1672" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedStatement xml:id="_a43a2103-6454-48ce-8f8f-dfa2b334d039" name="current.parent=newParent;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                            <sedMethodReturn xml:id="_f35abd57-5de1-43a7-9c7f-343ee8dd3cd7" name="&lt;return of self.rotateLeft(current);&gt;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_44d71aef-8a9c-4acc-a53b-1d0aa088bb56">
                                                               <sedTermination xml:id="_f4a09b87-5300-4451-bbf3-5ac9d30d6dd8" name="&lt;end&gt;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" verified="true">
                                                               </sedTermination>
                                                            </sedMethodReturn>
                                                         </sedStatement>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedBranchCondition>
                                                <sedBranchCondition xml:id="_cb8a1ffb-5330-4c95-b8ef-ed413b574748" name="not(equals(if-then-else(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current),example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent)),null))" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))">
                                                   <sedStatement xml:id="_6e97b1b3-ef6f-47a0-ab7a-7bad1cd5e956" name="current.parent.right=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1689" charEnd="1722" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_479576cd-1cec-4af3-a2de-314dc5a76535" name="newParent.parent=current.parent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1726" charEnd="1760" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedStatement xml:id="_ce0e6c9a-e1a9-470e-981f-718fb486d097" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                            <sedMethodReturn xml:id="_7494338d-f912-44da-9e07-683b99ac048b" name="&lt;return of self.rotateLeft(current);&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_46c1803a-38bc-4f49-8f70-5be9790a8748">
                                                               <sedTermination xml:id="_f2f75084-b492-4b9d-a028-ffbfa5893185" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" verified="true">
                                                               </sedTermination>
                                                            </sedMethodReturn>
                                                         </sedStatement>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedBranchCondition>
                                             </sedBranchStatement>
                                          </sedStatement>
                                       </sedBranchCondition>
                                       <sedBranchCondition xml:id="_24e6dcf8-e4e8-4ef5-a48c-4de24212cf8e" name="equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))">
                                          <sedBranchStatement xml:id="_5724e195-11be-4637-a7c5-937166106669" name="if (current.parent==null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1594" charEnd="1622" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                             <sedBranchCondition xml:id="_ee7b7e31-16cd-4135-96f4-a73e5ae8b3ca" name="equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))">
                                                <sedStatement xml:id="_132e6004-d0ce-4c81-820d-112aaa96894a" name="this.root=newParent;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1627" charEnd="1644" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                   <sedStatement xml:id="_d0ee4df0-2d7f-4812-932f-1aace8e03fa7" name="newParent.parent=null;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1648" charEnd="1672" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_d4d5c573-d1e1-4eb7-8d98-3f10fc5e8346" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedMethodReturn xml:id="_b51a629e-88b1-4002-945e-859fede588f7" name="&lt;return of self.rotateLeft(current);&gt;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_9b3f7302-cf2e-4423-a31d-5a1fae7c17ae">
                                                            <sedTermination xml:id="_438e02d9-d222-43f3-8c58-5daffe60663a" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" verified="true">
                                                            </sedTermination>
                                                         </sedMethodReturn>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedStatement>
                                             </sedBranchCondition>
                                             <sedBranchCondition xml:id="_a2307a77-1182-40de-a13c-1ab91d17638a" name="not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))">
                                                <sedStatement xml:id="_e1dccbef-3759-4603-889f-dda753c3f72f" name="current.parent.right=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1689" charEnd="1722" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                   <sedStatement xml:id="_f8deae07-dca7-411f-8620-d255dca3ad5a" name="newParent.parent=current.parent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1726" charEnd="1760" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_b2eba274-0433-4fd1-9fa5-f43db9fdbe57" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedMethodReturn xml:id="_0fa9580f-b4da-4070-8fb2-4f7ec31b81cf" name="&lt;return of self.rotateLeft(current);&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_7c603670-fca9-4569-97cb-34888f5bc125">
                                                            <sedTermination xml:id="_b1fb1f65-3cd6-4b7a-b72b-e9e2b8cb0b6a" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" verified="true">
                                                            </sedTermination>
                                                         </sedMethodReturn>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedStatement>
                                             </sedBranchCondition>
                                          </sedBranchStatement>
                                       </sedBranchCondition>
                                    </sedBranchStatement>
                                 </sedStatement>
                              </sedStatement>
                           </sedStatement>
                        </sedStatement>
                     </sedBranchCondition>
                     <sedBranchCondition xml:id="_e5c41757-6b43-4d71-a7ff-a3e0bb1574ce" name="equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)" pathCondition="and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))">
                        <sedExceptionalTermination xml:id="_624ce410-064c-4e1a-a378-f99c6f965ec9" name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" verified="true">
                        </sedExceptionalTermination>
                     </sedBranchCondition>
                  </sedStatement>
               </sedBranchCondition>
               <sedBranchCondition xml:id="_815b61b8-5bac-47cc-95bb-8d31ec5870a1" name="equals(current,null)" pathCondition="equals(current,null)">
                  <sedExceptionalTermination xml:id="_517a3936-097a-4261-9c9e-c66c8bc2903a" name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="equals(current,null)" verified="true">
                  </sedExceptionalTermination>
               </sedBranchCondition>
            </sedStatement>
            <sedMethodCallMethodReturnCondition xml:id="_7c603670-fca9-4569-97cb-34888f5bc125" name="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="true">
               <sedChildReference nodeIdRef="_0fa9580f-b4da-4070-8fb2-4f7ec31b81cf"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_9b3f7302-cf2e-4423-a31d-5a1fae7c17ae" name="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="true">
               <sedChildReference nodeIdRef="_b51a629e-88b1-4002-945e-859fede588f7"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_46c1803a-38bc-4f49-8f70-5be9790a8748" name="and(and(and(not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(current,null)))" pathCondition="true">
               <sedChildReference nodeIdRef="_7494338d-f912-44da-9e07-683b99ac048b"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_44d71aef-8a9c-4acc-a53b-1d0aa088bb56" name="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" pathCondition="true">
               <sedChildReference nodeIdRef="_f35abd57-5de1-43a7-9c7f-343ee8dd3cd7"/>
            </sedMethodCallMethodReturnCondition>
         </sedMethodCall>
      </sedThread>
   </sedTarget>
</launch>
