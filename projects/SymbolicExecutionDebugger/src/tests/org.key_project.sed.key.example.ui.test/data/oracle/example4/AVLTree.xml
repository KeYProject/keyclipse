<?xml version="1.0" encoding="UTF-8"?>
<launch xmlns="http://key-project.org/sed/serialization">
   <sedTarget xml:id="_9cbc1c9f-4af7-435c-8f01-e43317ab846b" name="rotateLeft(example4.AVLTree.Node)" modelIdentifier="org.key_project.sed.key.core">
      <sedThread xml:id="_69bf3fda-752c-411c-ac97-03ee09abae27" name="&lt;start&gt;" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
         <sedMethodCall xml:id="_28b7df97-cd30-443a-b01a-d1b86765f92e" name="&lt;call self.rotateLeft(current)&gt;" pathCondition="true" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" groupable="true">
            <sedStatement xml:id="_069453f0-1c0f-42f8-9243-842da430a7e6" name="Node newParent = current.right;" pathCondition="true" lineNumber="-1" charStart="1325" charEnd="1356" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
               <sedBranchCondition xml:id="_55f441a9-5c12-4264-b987-97d087ef3839" name="not(equals(current,null))" pathCondition="not(equals(current,null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                  <sedStatement xml:id="_ebb703fb-c85a-4dd1-b020-22bb67a24c40" name="Node oldLeft = newParent.left;" pathCondition="not(equals(current,null))" lineNumber="-1" charStart="1359" charEnd="1389" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                     <sedBranchCondition xml:id="_1906495f-81f6-4a10-931a-851065ddad8a" name="not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                        <sedStatement xml:id="_c7199e15-8603-493b-8934-57a6dc75a961" name="newParent.left=current;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1392" charEnd="1417" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                           <sedStatement xml:id="_7c87ff02-b472-4e95-a3f4-55731b4b6fc9" name="newParent.height=0;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1420" charEnd="1441" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                              <sedStatement xml:id="_96ce3b0d-631c-4c9f-8693-958c4c5537dc" name="current.height=0;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1444" charEnd="1463" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                 <sedStatement xml:id="_003ae5bc-82cf-410a-9e72-b59f0b34e34f" name="current.right=oldLeft;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1466" charEnd="1490" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                    <sedBranchStatement xml:id="_fbd2a83c-bf28-4f4b-b38c-bbcc6d26105c" name="if (oldLeft!=null)" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1493" charEnd="1514" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" groupable="true">
                                       <sedBranchCondition xml:id="_9ddce96c-61db-4b68-b0a3-50e275115556" name="not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                          <sedStatement xml:id="_818d3871-3f66-417f-81d8-010da7051dc3" name="oldLeft.parent=current.right;" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="1519" charEnd="1550" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                             <sedBranchStatement xml:id="_516e7eb9-2820-43be-acac-02ab9142f943" name="if (current.parent==null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="1594" charEnd="1622" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" groupable="true">
                                                <sedBranchCondition xml:id="_67b8a1dd-ba74-4ff1-b4f5-022301b23406" name="equals(if-then-else(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current),example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent)),null)" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                   <sedStatement xml:id="_a3ac586b-72d7-42e2-b12e-4fedc168d3ba" name="this.root=newParent;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1627" charEnd="1644" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_c6d8d010-fbf4-4024-9196-1c79aaa0cccd" name="newParent.parent=null;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1648" charEnd="1672" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedStatement xml:id="_46c22088-a44a-400a-8924-77f8f0084cf3" name="current.parent=newParent;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                            <sedMethodReturn xml:id="_fa206e6f-903b-4723-8ca5-ce90ca6e08ef" name="&lt;return of self.rotateLeft(current)&gt;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_c077b426-4331-4e82-a9f6-90f2fbbf5b51">
                                                               <sedTermination xml:id="_87df77f2-577e-49a3-9ec8-46b3d5c1c4f7" name="&lt;end&gt;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                                                               </sedTermination>
                                                               <sedGroupStartCondition xml:id="_c077b426-4331-4e82-a9f6-90f2fbbf5b51" name="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
                                                                  <sedChildReference nodeIdRef="_fa206e6f-903b-4723-8ca5-ce90ca6e08ef"/>
                                                               </sedGroupStartCondition>
                                                            </sedMethodReturn>
                                                         </sedStatement>
                                                         <sedGroupStartCondition xml:id="_2b9ddbda-18d8-4fbb-b623-b5f6a58a7d62" name="or(and(equals(current,null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)),and(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current))))" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="-1" charEnd="-1">
                                                            <sedChildReference nodeIdRef="_c6d8d010-fbf4-4024-9196-1c79aaa0cccd"/>
                                                         </sedGroupStartCondition>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedBranchCondition>
                                                <sedBranchCondition xml:id="_6abfc29d-8718-48b7-931c-3d4b029c7766" name="not(equals(if-then-else(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current),example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent)),null))" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                   <sedStatement xml:id="_9d5febe0-e96f-428d-9d7f-a1afc09fbe2d" name="current.parent.right=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1689" charEnd="1722" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_6044adb9-0e14-4cc6-9132-5cff7f9a6283" name="newParent.parent=current.parent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1726" charEnd="1760" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedStatement xml:id="_48f804d1-8ddb-4658-aab4-3f139a234f94" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                            <sedMethodReturn xml:id="_acd23b0c-4e32-453b-860b-9186b0544630" name="&lt;return of self.rotateLeft(current)&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_701036c7-5337-4a9c-adca-e03021a655a2">
                                                               <sedTermination xml:id="_e72724ba-8385-46e8-b118-1e416d25aeca" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                                                               </sedTermination>
                                                               <sedGroupStartCondition xml:id="_701036c7-5337-4a9c-adca-e03021a655a2" name="and(and(and(not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(current,null)))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
                                                                  <sedChildReference nodeIdRef="_acd23b0c-4e32-453b-860b-9186b0544630"/>
                                                               </sedGroupStartCondition>
                                                            </sedMethodReturn>
                                                         </sedStatement>
                                                         <sedGroupStartCondition xml:id="_07d6719f-3ace-4a3a-9399-27f62be8ea34" name="not(and(and(or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="-1" charEnd="-1">
                                                            <sedChildReference nodeIdRef="_6044adb9-0e14-4cc6-9132-5cff7f9a6283"/>
                                                         </sedGroupStartCondition>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedBranchCondition>
                                                <sedGroupEndReference nodeIdRef="_2b9ddbda-18d8-4fbb-b623-b5f6a58a7d62"/>
                                                <sedGroupEndReference nodeIdRef="_07d6719f-3ace-4a3a-9399-27f62be8ea34"/>
                                             </sedBranchStatement>
                                             <sedGroupStartCondition xml:id="_a7e08c8f-388f-4cbf-82ca-2bc806c4fd92" name="not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="-1" charEnd="-1">
                                                <sedChildReference nodeIdRef="_818d3871-3f66-417f-81d8-010da7051dc3"/>
                                             </sedGroupStartCondition>
                                          </sedStatement>
                                       </sedBranchCondition>
                                       <sedBranchCondition xml:id="_701a0718-91e9-477f-a8a1-1a9e35631bd5" name="equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                          <sedBranchStatement xml:id="_41b15cbc-eb67-41e0-92be-fcbc4abc1141" name="if (current.parent==null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1594" charEnd="1622" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" groupable="true">
                                             <sedBranchCondition xml:id="_df2ef50f-b072-40fc-af44-edb31aa70611" name="equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                <sedStatement xml:id="_c8a59d8e-8676-423d-858e-d7491ae2a3f4" name="this.root=newParent;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1627" charEnd="1644" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                   <sedStatement xml:id="_3fa29c59-b135-43c9-b82d-541646105474" name="newParent.parent=null;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1648" charEnd="1672" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_0992ff2a-3cb0-4bcd-8fc7-e15a04d84cc5" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedMethodReturn xml:id="_f0ce9fe8-2bbb-4fc1-9da9-b34c7970341f" name="&lt;return of self.rotateLeft(current)&gt;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_ab5f3b14-2851-4f2d-9abf-574306367ef1">
                                                            <sedTermination xml:id="_6c98e7c9-881d-434e-a702-6a7ae05725ab" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                                                            </sedTermination>
                                                            <sedGroupStartCondition xml:id="_ab5f3b14-2851-4f2d-9abf-574306367ef1" name="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
                                                               <sedChildReference nodeIdRef="_f0ce9fe8-2bbb-4fc1-9da9-b34c7970341f"/>
                                                            </sedGroupStartCondition>
                                                         </sedMethodReturn>
                                                      </sedStatement>
                                                      <sedGroupStartCondition xml:id="_47e8854d-5ae0-448e-83a9-2895d50c4744" name="equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1">
                                                         <sedChildReference nodeIdRef="_3fa29c59-b135-43c9-b82d-541646105474"/>
                                                      </sedGroupStartCondition>
                                                   </sedStatement>
                                                </sedStatement>
                                             </sedBranchCondition>
                                             <sedBranchCondition xml:id="_9e7b2148-b658-4a9d-aa43-3d117175ab8a" name="not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                <sedStatement xml:id="_4132ebd9-02b5-41d2-afc0-63119c2823f4" name="current.parent.right=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1689" charEnd="1722" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                   <sedStatement xml:id="_93b0d491-b30e-47b6-80d2-953e9e377b4a" name="newParent.parent=current.parent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1726" charEnd="1760" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_65a40735-b6f1-43dd-b26b-640815bbf121" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedMethodReturn xml:id="_8ca3d913-6aac-41eb-936d-f140628990e1" name="&lt;return of self.rotateLeft(current)&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_74d13fcc-790a-43d2-a8b6-b0d249ccdb2a">
                                                            <sedTermination xml:id="_5b5858d6-f986-4845-b95b-45626f23c0cd" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                                                            </sedTermination>
                                                            <sedGroupStartCondition xml:id="_74d13fcc-790a-43d2-a8b6-b0d249ccdb2a" name="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
                                                               <sedChildReference nodeIdRef="_8ca3d913-6aac-41eb-936d-f140628990e1"/>
                                                            </sedGroupStartCondition>
                                                         </sedMethodReturn>
                                                      </sedStatement>
                                                      <sedGroupStartCondition xml:id="_f01e6fec-8350-4056-a01a-80c5f5b647e2" name="not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1">
                                                         <sedChildReference nodeIdRef="_93b0d491-b30e-47b6-80d2-953e9e377b4a"/>
                                                      </sedGroupStartCondition>
                                                   </sedStatement>
                                                </sedStatement>
                                             </sedBranchCondition>
                                             <sedGroupEndReference nodeIdRef="_47e8854d-5ae0-448e-83a9-2895d50c4744"/>
                                             <sedGroupEndReference nodeIdRef="_f01e6fec-8350-4056-a01a-80c5f5b647e2"/>
                                          </sedBranchStatement>
                                          <sedGroupStartCondition xml:id="_5f1699c7-c705-42f6-834e-c72ad85bd507" name="true" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="-1" charEnd="-1">
                                             <sedChildReference nodeIdRef="_701a0718-91e9-477f-a8a1-1a9e35631bd5"/>
                                          </sedGroupStartCondition>
                                       </sedBranchCondition>
                                       <sedGroupEndReference nodeIdRef="_a7e08c8f-388f-4cbf-82ca-2bc806c4fd92"/>
                                       <sedGroupEndReference nodeIdRef="_5f1699c7-c705-42f6-834e-c72ad85bd507"/>
                                    </sedBranchStatement>
                                 </sedStatement>
                              </sedStatement>
                           </sedStatement>
                        </sedStatement>
                     </sedBranchCondition>
                     <sedBranchCondition xml:id="_77e598c5-5dac-4ad1-8122-631d8fab22fb" name="equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)" pathCondition="and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                        <sedExceptionalMethodReturn xml:id="_d1da2b26-5795-4531-8ad4-de8f06153bdf" name="&lt;exceptional return of &lt;call self.rotateLeft(current)&gt;&gt;" pathCondition="and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_928fc636-b376-45ee-8fc7-df772f877700">
                           <sedExceptionalTermination xml:id="_cfced61d-32c5-433c-8312-10e8371d4f78" name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                           </sedExceptionalTermination>
                        </sedExceptionalMethodReturn>
                     </sedBranchCondition>
                  </sedStatement>
               </sedBranchCondition>
               <sedBranchCondition xml:id="_df5adae4-99ec-4349-a32e-7e53f0dd2571" name="equals(current,null)" pathCondition="equals(current,null)" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                  <sedExceptionalMethodReturn xml:id="_66179f4a-fbf0-40f6-bfe7-f7e2d5f5c849" name="&lt;exceptional return of &lt;call self.rotateLeft(current)&gt;&gt;" pathCondition="equals(current,null)" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_4f2e5d88-21b2-408c-8e23-8b01a4584084">
                     <sedExceptionalTermination xml:id="_2c66889d-c9b4-4199-a5c0-01423e7a55b9" name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="equals(current,null)" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                     </sedExceptionalTermination>
                  </sedExceptionalMethodReturn>
               </sedBranchCondition>
            </sedStatement>
            <sedMethodCallMethodReturnCondition xml:id="_c077b426-4331-4e82-a9f6-90f2fbbf5b51" name="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_fa206e6f-903b-4723-8ca5-ce90ca6e08ef"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_701036c7-5337-4a9c-adca-e03021a655a2" name="and(and(and(not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(current,null)))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_acd23b0c-4e32-453b-860b-9186b0544630"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_ab5f3b14-2851-4f2d-9abf-574306367ef1" name="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_f0ce9fe8-2bbb-4fc1-9da9-b34c7970341f"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_74d13fcc-790a-43d2-a8b6-b0d249ccdb2a" name="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_8ca3d913-6aac-41eb-936d-f140628990e1"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_928fc636-b376-45ee-8fc7-df772f877700" name="and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_d1da2b26-5795-4531-8ad4-de8f06153bdf"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_4f2e5d88-21b2-408c-8e23-8b01a4584084" name="equals(current,null)" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_66179f4a-fbf0-40f6-bfe7-f7e2d5f5c849"/>
            </sedMethodCallMethodReturnCondition>
            <sedGroupEndReference nodeIdRef="_c077b426-4331-4e82-a9f6-90f2fbbf5b51"/>
            <sedGroupEndReference nodeIdRef="_701036c7-5337-4a9c-adca-e03021a655a2"/>
            <sedGroupEndReference nodeIdRef="_ab5f3b14-2851-4f2d-9abf-574306367ef1"/>
            <sedGroupEndReference nodeIdRef="_74d13fcc-790a-43d2-a8b6-b0d249ccdb2a"/>
            <sedGroupEndReference nodeIdRef="_928fc636-b376-45ee-8fc7-df772f877700"/>
            <sedGroupEndReference nodeIdRef="_4f2e5d88-21b2-408c-8e23-8b01a4584084"/>
         </sedMethodCall>
         <sedTerminationEntry nodeIdRef="_87df77f2-577e-49a3-9ec8-46b3d5c1c4f7"/>
         <sedTerminationEntry nodeIdRef="_e72724ba-8385-46e8-b118-1e416d25aeca"/>
         <sedTerminationEntry nodeIdRef="_6c98e7c9-881d-434e-a702-6a7ae05725ab"/>
         <sedTerminationEntry nodeIdRef="_5b5858d6-f986-4845-b95b-45626f23c0cd"/>
         <sedTerminationEntry nodeIdRef="_cfced61d-32c5-433c-8312-10e8371d4f78"/>
         <sedTerminationEntry nodeIdRef="_2c66889d-c9b4-4199-a5c0-01423e7a55b9"/>
      </sedThread>
   </sedTarget>
</launch>
