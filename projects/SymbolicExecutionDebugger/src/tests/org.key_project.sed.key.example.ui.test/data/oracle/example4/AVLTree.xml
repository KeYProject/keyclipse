<?xml version="1.0" encoding="UTF-8"?>
<launch xmlns="http://key-project.org/sed/serialization">
   <sedTarget xml:id="_f56b6217-0c8d-4aaa-bb64-42e1594c1ee3" name="rotateLeft(example4.AVLTree.Node)" modelIdentifier="org.key_project.sed.key.core">
      <sedThread xml:id="_ca088e85-3f7a-4f84-badd-c9a1d73940cf" name="&lt;start&gt;" pathCondition="true">
         <sedMethodCall xml:id="_545d8df4-af78-421d-9d4e-b6c02f516847" name="self.rotateLeft(current);" pathCondition="true" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
            <sedStatement xml:id="_e4e00b49-ddd9-434b-a9d1-d813b589dd4e" name="Node newParent = current.right;" pathCondition="true" lineNumber="-1" charStart="1325" charEnd="1356" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
               <sedBranchCondition xml:id="_2245f2a5-d7a3-490a-9102-98bbfe9131bf" name="not(equals(current,null))" pathCondition="not(equals(current,null))">
                  <sedStatement xml:id="_52d0b9bb-a8e7-41cc-b90d-911d78b6c61d" name="Node oldLeft = newParent.left;" pathCondition="not(equals(current,null))" lineNumber="-1" charStart="1359" charEnd="1389" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                     <sedBranchCondition xml:id="_19ddeeb2-80ac-4cbd-a135-b874fa04b2ba" name="not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))">
                        <sedStatement xml:id="_b5e90d0f-d57c-4c9c-814a-f94d6c521450" name="newParent.left=current;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1392" charEnd="1417" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                           <sedStatement xml:id="_34afb946-9632-469c-b226-0506c21ce22e" name="newParent.height=0;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1420" charEnd="1441" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                              <sedStatement xml:id="_384b3949-35cd-42c1-901e-b66eb72db04b" name="current.height=0;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1444" charEnd="1463" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                 <sedStatement xml:id="_5b4a5f43-3234-4031-8b10-acda28e7cf3d" name="current.right=oldLeft;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1466" charEnd="1490" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                    <sedBranchStatement xml:id="_55bed1bd-a43a-47e2-8582-4c3aa42f47ee" name="if (oldLeft!=null)" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1493" charEnd="1514" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                       <sedBranchCondition xml:id="_48bee4bb-4e32-4aff-a788-f6d239e53909" name="not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))">
                                          <sedStatement xml:id="_bc6660f7-0921-4e82-b6bd-65e2f0d74b5c" name="oldLeft.parent=current.right;" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="1519" charEnd="1550" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                             <sedBranchStatement xml:id="_f577e55d-bfa7-4dbb-9e45-93845013d47d" name="if (current.parent==null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="1594" charEnd="1622" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                <sedBranchCondition xml:id="_55b0cb90-3d7f-4367-be0d-ad9c3b55a771" name="equals(if-then-else(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current),example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent)),null)" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))">
                                                   <sedStatement xml:id="_112bc10b-1554-4882-b86b-f751ea9425f1" name="this.root=newParent;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1627" charEnd="1644" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_00febf79-33d9-4ff7-bb9c-a97fb53f45eb" name="newParent.parent=null;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1648" charEnd="1672" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedStatement xml:id="_041c3c58-7f4a-434c-9c88-5e714263471f" name="current.parent=newParent;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                            <sedMethodReturn xml:id="_acc74eec-9dd4-44c5-b9cf-4e3192b9d4a5" name="&lt;return of self.rotateLeft(current);&gt;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_1e8b16e1-1a38-4ca4-b2e0-e50619db8619">
                                                               <sedTermination xml:id="_006878a5-71b1-4622-9034-25db56d21df1" name="&lt;end&gt;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" verified="true">
                                                               </sedTermination>
                                                            </sedMethodReturn>
                                                         </sedStatement>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedBranchCondition>
                                                <sedBranchCondition xml:id="_0ffcfb1d-5d11-43f2-a701-7a0191d9fa94" name="not(equals(if-then-else(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current),example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent)),null))" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))">
                                                   <sedStatement xml:id="_0095bee0-cbdb-404d-ad3f-8aacd8c41921" name="current.parent.right=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1689" charEnd="1722" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_ffebb256-c5cf-4d84-8a97-f73d3c31d502" name="newParent.parent=current.parent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1726" charEnd="1760" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedStatement xml:id="_7c85bf5a-ac6c-43c0-a3ef-cf9967e83a9c" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                            <sedMethodReturn xml:id="_0cabf4d8-ed6b-437a-8bc3-717c276e776f" name="&lt;return of self.rotateLeft(current);&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_666bcceb-24b8-4199-8b4a-0b1aecb38d9e">
                                                               <sedTermination xml:id="_e70b40c6-5c2d-4867-aaa3-f5d927bbc2bb" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" verified="true">
                                                               </sedTermination>
                                                            </sedMethodReturn>
                                                         </sedStatement>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedBranchCondition>
                                             </sedBranchStatement>
                                          </sedStatement>
                                       </sedBranchCondition>
                                       <sedBranchCondition xml:id="_4e0f32f5-630d-4646-bfaf-0a68352d5bfc" name="equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))">
                                          <sedBranchStatement xml:id="_0aff61aa-2f78-456b-a284-98610ddb4c50" name="if (current.parent==null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1594" charEnd="1622" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                             <sedBranchCondition xml:id="_b8956eaf-e179-46d5-9085-d2615adaaa7d" name="equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))">
                                                <sedStatement xml:id="_1b781edc-5e59-4435-a912-279f49dd5728" name="this.root=newParent;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1627" charEnd="1644" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                   <sedStatement xml:id="_9b0287f2-3165-49aa-b7d3-6de232e49557" name="newParent.parent=null;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1648" charEnd="1672" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_3804d24a-106e-4fb0-8311-bf51dac130ab" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedMethodReturn xml:id="_ca4ccfc6-27aa-4954-b88c-412eb35b56e0" name="&lt;return of self.rotateLeft(current);&gt;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_f8635b40-941e-4981-8301-67a4a2c57a26">
                                                            <sedTermination xml:id="_4ffa5eba-2753-403a-ae45-c376d0da746d" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" verified="true">
                                                            </sedTermination>
                                                         </sedMethodReturn>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedStatement>
                                             </sedBranchCondition>
                                             <sedBranchCondition xml:id="_9209b9f9-7777-4363-94c8-dbd28196175c" name="not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))">
                                                <sedStatement xml:id="_4af4aed2-1277-42f7-b9c1-38b21fa609a9" name="current.parent.right=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1689" charEnd="1722" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                   <sedStatement xml:id="_c134bac2-4512-464b-b1cb-10b4074a3d4d" name="newParent.parent=current.parent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1726" charEnd="1760" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_df3253df-1ecf-4679-88a3-bcf238674016" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedMethodReturn xml:id="_63f0db78-b619-41ae-b5d1-f6f35d568a05" name="&lt;return of self.rotateLeft(current);&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_0fafd9f2-a55f-491e-9747-7fa1dc16710f">
                                                            <sedTermination xml:id="_4b9adfbc-c82e-4265-8e96-6be79ccdd359" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" verified="true">
                                                            </sedTermination>
                                                         </sedMethodReturn>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedStatement>
                                             </sedBranchCondition>
                                          </sedBranchStatement>
                                       </sedBranchCondition>
                                    </sedBranchStatement>
                                 </sedStatement>
                              </sedStatement>
                           </sedStatement>
                        </sedStatement>
                     </sedBranchCondition>
                     <sedBranchCondition xml:id="_5cbf931e-5dc9-410f-b098-a0fc093fe7de" name="equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)" pathCondition="and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))">
                        <sedExceptionalTermination xml:id="_afd5d9b8-37f9-4192-a0f3-1e0b6a1f879a" name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" verified="true">
                        </sedExceptionalTermination>
                     </sedBranchCondition>
                  </sedStatement>
               </sedBranchCondition>
               <sedBranchCondition xml:id="_4b1e23a4-11c6-433e-bb7e-b9cc97b834e1" name="equals(current,null)" pathCondition="equals(current,null)">
                  <sedExceptionalTermination xml:id="_5851c5c3-5bec-4def-a62a-05126cc49018" name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="equals(current,null)" verified="true">
                  </sedExceptionalTermination>
               </sedBranchCondition>
            </sedStatement>
            <sedMethodCallMethodReturnCondition xml:id="_1e8b16e1-1a38-4ca4-b2e0-e50619db8619" name="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" pathCondition="true">
               <sedChildReference nodeIdRef="_acc74eec-9dd4-44c5-b9cf-4e3192b9d4a5"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_666bcceb-24b8-4199-8b4a-0b1aecb38d9e" name="and(and(and(not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(current,null)))" pathCondition="true">
               <sedChildReference nodeIdRef="_0cabf4d8-ed6b-437a-8bc3-717c276e776f"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_f8635b40-941e-4981-8301-67a4a2c57a26" name="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="true">
               <sedChildReference nodeIdRef="_ca4ccfc6-27aa-4954-b88c-412eb35b56e0"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_0fafd9f2-a55f-491e-9747-7fa1dc16710f" name="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="true">
               <sedChildReference nodeIdRef="_63f0db78-b619-41ae-b5d1-f6f35d568a05"/>
            </sedMethodCallMethodReturnCondition>
         </sedMethodCall>
         <sedTerminationEntry nodeIdRef="_006878a5-71b1-4622-9034-25db56d21df1"/>
         <sedTerminationEntry nodeIdRef="_e70b40c6-5c2d-4867-aaa3-f5d927bbc2bb"/>
         <sedTerminationEntry nodeIdRef="_4ffa5eba-2753-403a-ae45-c376d0da746d"/>
         <sedTerminationEntry nodeIdRef="_4b9adfbc-c82e-4265-8e96-6be79ccdd359"/>
         <sedTerminationEntry nodeIdRef="_afd5d9b8-37f9-4192-a0f3-1e0b6a1f879a"/>
         <sedTerminationEntry nodeIdRef="_5851c5c3-5bec-4def-a62a-05126cc49018"/>
      </sedThread>
   </sedTarget>
</launch>
