<?xml version="1.0" encoding="UTF-8"?>
<launch xmlns="http://key-project.org/sed/serialization">
   <sedTarget xml:id="_cbf9a1bf-d863-4969-a210-946655f12855" name="rotateLeft(example4.AVLTree.Node)" modelIdentifier="org.key_project.sed.key.core">
      <sedThread xml:id="_980c814c-7f76-4df4-b912-9d27f8f68a3f" name="&lt;start&gt;" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
         <sedMethodCall xml:id="_2e6dfc64-524b-458b-b76b-127fb6507a9f" name="&lt;call self.rotateLeft(current)&gt;" pathCondition="true" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
            <sedStatement xml:id="_9e5ca7ab-f4b6-487b-a00b-6c7943ee736e" name="Node newParent = current.right;" pathCondition="true" lineNumber="-1" charStart="1325" charEnd="1356" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
               <sedBranchCondition xml:id="_a2d9a526-1a76-4d7e-8493-381570383134" name="not(equals(current,null))" pathCondition="not(equals(current,null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                  <sedStatement xml:id="_209c5107-b4db-4b66-9f4f-7f95311fdb9d" name="Node oldLeft = newParent.left;" pathCondition="not(equals(current,null))" lineNumber="-1" charStart="1359" charEnd="1389" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                     <sedBranchCondition xml:id="_7f1f5af4-6e75-4f0b-98e7-ccb18f7b414c" name="not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                        <sedStatement xml:id="_3d3169cf-a422-4e0c-bb5c-8e9f75c6eca7" name="newParent.left=current;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1392" charEnd="1417" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                           <sedStatement xml:id="_3f864bfc-4426-4226-8ac7-7642322edc58" name="newParent.height=0;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1420" charEnd="1441" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                              <sedStatement xml:id="_343f844b-df9d-4953-b005-bd586cf9b1e1" name="current.height=0;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1444" charEnd="1463" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                 <sedStatement xml:id="_d2ac2ece-cf2f-4c0f-b6ff-943fc30eff5d" name="current.right=oldLeft;" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1466" charEnd="1490" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                    <sedBranchStatement xml:id="_ea76405f-7c6e-46d5-b450-bca38b365bee" name="if (oldLeft!=null)" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="1493" charEnd="1514" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                       <sedBranchCondition xml:id="_55025257-7982-4c8c-8d7d-75b33bd73382" name="not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                          <sedStatement xml:id="_b28d1818-c760-4f98-8c09-917064665860" name="oldLeft.parent=current.right;" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="1519" charEnd="1550" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                             <sedBranchStatement xml:id="_ff6f12c9-1d48-4a69-8c49-bf672fcedf3c" name="if (current.parent==null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="1594" charEnd="1622" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                <sedBranchCondition xml:id="_dfad4835-4239-401a-905a-cf57950f3813" name="equals(if-then-else(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current),example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent)),null)" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                   <sedStatement xml:id="_816b4944-2841-4d96-9dbe-7e27eb57548f" name="this.root=newParent;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1627" charEnd="1644" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_a5ccaf30-96e7-493d-967a-cdf907e893f9" name="newParent.parent=null;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1648" charEnd="1672" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedStatement xml:id="_62d70645-c2e3-48bd-a1a9-02cc272e5e6b" name="current.parent=newParent;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                            <sedMethodReturn xml:id="_de7ead6b-3a54-421f-b20a-be09c9fa55a0" name="&lt;return of self.rotateLeft(current)&gt;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_c7cf03f0-c2ba-4de6-b651-a4d35115481c">
                                                               <sedTermination xml:id="_bacae921-1ad5-4d7c-8ad4-1b08f2db3c19" name="&lt;end&gt;" pathCondition="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                                                               </sedTermination>
                                                               <sedGroupStartCondition xml:id="_c7cf03f0-c2ba-4de6-b651-a4d35115481c" name="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
                                                                  <sedChildReference nodeIdRef="_de7ead6b-3a54-421f-b20a-be09c9fa55a0"/>
                                                               </sedGroupStartCondition>
                                                            </sedMethodReturn>
                                                         </sedStatement>
                                                         <sedGroupStartCondition xml:id="_1e877104-66a9-4e9d-b104-243ee6ca26f9" name="or(and(equals(current,null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)),and(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current))))" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="-1" charEnd="-1">
                                                            <sedChildReference nodeIdRef="_a5ccaf30-96e7-493d-967a-cdf907e893f9"/>
                                                         </sedGroupStartCondition>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedBranchCondition>
                                                <sedBranchCondition xml:id="_3207363b-4ec9-4926-8756-42f1bfcc59bc" name="not(equals(if-then-else(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current),example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent)),null))" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                   <sedStatement xml:id="_36adf40a-934c-4edd-aa4c-a27a7aeb36dd" name="current.parent.right=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1689" charEnd="1722" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_95e3b4c9-16f3-421f-9e7e-975fa94e6207" name="newParent.parent=current.parent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1726" charEnd="1760" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedStatement xml:id="_f3bee5c1-aa87-4111-852e-ecf801388606" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                            <sedMethodReturn xml:id="_3d9a47e6-beff-459c-8e7e-912268d39f3f" name="&lt;return of self.rotateLeft(current)&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_c61e2108-d937-4dbb-a83f-73ae47780730">
                                                               <sedTermination xml:id="_0acf5cfa-1510-45b2-acfa-540618447a0b" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                                                               </sedTermination>
                                                               <sedGroupStartCondition xml:id="_c61e2108-d937-4dbb-a83f-73ae47780730" name="and(and(and(not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(current,null)))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
                                                                  <sedChildReference nodeIdRef="_3d9a47e6-beff-459c-8e7e-912268d39f3f"/>
                                                               </sedGroupStartCondition>
                                                            </sedMethodReturn>
                                                         </sedStatement>
                                                         <sedGroupStartCondition xml:id="_87f96c12-8615-421c-b2a5-0d565643d60f" name="not(and(and(or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))))" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" lineNumber="-1" charStart="-1" charEnd="-1">
                                                            <sedChildReference nodeIdRef="_95e3b4c9-16f3-421f-9e7e-975fa94e6207"/>
                                                         </sedGroupStartCondition>
                                                      </sedStatement>
                                                   </sedStatement>
                                                </sedBranchCondition>
                                                <sedGroupEndReference nodeIdRef="_1e877104-66a9-4e9d-b104-243ee6ca26f9"/>
                                                <sedGroupEndReference nodeIdRef="_87f96c12-8615-421c-b2a5-0d565643d60f"/>
                                             </sedBranchStatement>
                                             <sedGroupStartCondition xml:id="_b8b4a6ab-9607-458b-ab07-5b48ae3f5e90" name="not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="-1" charEnd="-1">
                                                <sedChildReference nodeIdRef="_b28d1818-c760-4f98-8c09-917064665860"/>
                                             </sedGroupStartCondition>
                                          </sedStatement>
                                       </sedBranchCondition>
                                       <sedBranchCondition xml:id="_294f4f61-ea78-4503-9eb1-0bee942ded46" name="equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                          <sedBranchStatement xml:id="_8f39f70e-b8a0-426f-9f13-a7798c6b35be" name="if (current.parent==null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1594" charEnd="1622" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                             <sedBranchCondition xml:id="_97f8558b-d63d-43ff-b985-e16493c7d69c" name="equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                <sedStatement xml:id="_dabe9540-b2ee-42e4-95ad-db5e6aa4312a" name="this.root=newParent;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1627" charEnd="1644" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                   <sedStatement xml:id="_bb31f587-45e6-4b47-80c5-1ab6ca6f08af" name="newParent.parent=null;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1648" charEnd="1672" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_d6be848a-0bb7-4b53-a1a7-120d99b3040b" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedMethodReturn xml:id="_36c31dd3-fed5-4489-af7e-925d41cfa9e6" name="&lt;return of self.rotateLeft(current)&gt;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_7a7f4873-d441-49f3-ae9b-d0629ecb88f1">
                                                            <sedTermination xml:id="_ef38512d-0b15-4a49-834f-aa1f05f6bcf7" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                                                            </sedTermination>
                                                            <sedGroupStartCondition xml:id="_7a7f4873-d441-49f3-ae9b-d0629ecb88f1" name="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
                                                               <sedChildReference nodeIdRef="_36c31dd3-fed5-4489-af7e-925d41cfa9e6"/>
                                                            </sedGroupStartCondition>
                                                         </sedMethodReturn>
                                                      </sedStatement>
                                                      <sedGroupStartCondition xml:id="_62e3d063-751e-4cd6-af94-73e997840dd6" name="equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1">
                                                         <sedChildReference nodeIdRef="_bb31f587-45e6-4b47-80c5-1ab6ca6f08af"/>
                                                      </sedGroupStartCondition>
                                                   </sedStatement>
                                                </sedStatement>
                                             </sedBranchCondition>
                                             <sedBranchCondition xml:id="_f6f44ce1-5419-4078-9154-de5dde8402d0" name="not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                <sedStatement xml:id="_14c5970f-20f0-4a55-922d-9b0989e26dc4" name="current.parent.right=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1689" charEnd="1722" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                   <sedStatement xml:id="_1b0ea3d2-64ae-433e-8b2b-8d63ac439c8c" name="newParent.parent=current.parent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1726" charEnd="1760" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                      <sedStatement xml:id="_5478a3c9-9e45-447d-aa02-9a03d72536dd" name="current.parent=newParent;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1767" charEnd="1794" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                                                         <sedMethodReturn xml:id="_04fa82ec-4bda-4470-9fb5-e21c8df9ad31" name="&lt;return of self.rotateLeft(current)&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_377a5cfc-ad91-4b6c-92de-b728c98ad532">
                                                            <sedTermination xml:id="_68b98858-b2c3-4a6e-be13-b301d808736a" name="&lt;end&gt;" pathCondition="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                                                            </sedTermination>
                                                            <sedGroupStartCondition xml:id="_377a5cfc-ad91-4b6c-92de-b728c98ad532" name="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
                                                               <sedChildReference nodeIdRef="_04fa82ec-4bda-4470-9fb5-e21c8df9ad31"/>
                                                            </sedGroupStartCondition>
                                                         </sedMethodReturn>
                                                      </sedStatement>
                                                      <sedGroupStartCondition xml:id="_4fdec02b-426f-43b6-a626-f375dc7806a3" name="not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))" pathCondition="and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" lineNumber="-1" charStart="-1" charEnd="-1">
                                                         <sedChildReference nodeIdRef="_1b0ea3d2-64ae-433e-8b2b-8d63ac439c8c"/>
                                                      </sedGroupStartCondition>
                                                   </sedStatement>
                                                </sedStatement>
                                             </sedBranchCondition>
                                             <sedGroupEndReference nodeIdRef="_62e3d063-751e-4cd6-af94-73e997840dd6"/>
                                             <sedGroupEndReference nodeIdRef="_4fdec02b-426f-43b6-a626-f375dc7806a3"/>
                                          </sedBranchStatement>
                                          <sedGroupStartCondition xml:id="_95c13cff-706f-427d-a585-3c2233771329" name="true" pathCondition="and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)))" lineNumber="-1" charStart="-1" charEnd="-1">
                                             <sedChildReference nodeIdRef="_294f4f61-ea78-4503-9eb1-0bee942ded46"/>
                                          </sedGroupStartCondition>
                                       </sedBranchCondition>
                                       <sedGroupEndReference nodeIdRef="_b8b4a6ab-9607-458b-ab07-5b48ae3f5e90"/>
                                       <sedGroupEndReference nodeIdRef="_95c13cff-706f-427d-a585-3c2233771329"/>
                                    </sedBranchStatement>
                                 </sedStatement>
                              </sedStatement>
                           </sedStatement>
                        </sedStatement>
                     </sedBranchCondition>
                     <sedBranchCondition xml:id="_a6d959ba-2868-4b6d-a689-9da217f94fb0" name="equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null)" pathCondition="and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                        <sedExceptionalMethodReturn xml:id="_461b3e7e-958c-43d3-891c-0d46858a8c6d" name="&lt;exceptional return of &lt;call self.rotateLeft(current)&gt;&gt;" pathCondition="and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_1fced532-ddb4-4bd5-bbad-749a722ea905">
                           <sedExceptionalTermination xml:id="_ca67bf9f-021f-471e-ba06-4be279a499b2" name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                           </sedExceptionalTermination>
                        </sedExceptionalMethodReturn>
                     </sedBranchCondition>
                  </sedStatement>
               </sedBranchCondition>
               <sedBranchCondition xml:id="_d6e89d1b-c14e-4b99-91b5-5555b186676f" name="equals(current,null)" pathCondition="equals(current,null)" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java">
                  <sedExceptionalMethodReturn xml:id="_07500d24-e5ee-4581-b5e5-aead90233f2e" name="&lt;exceptional return of &lt;call self.rotateLeft(current)&gt;&gt;" pathCondition="equals(current,null)" lineNumber="-1" charStart="1296" charEnd="1306" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" methodReturnConditionRef="_f8821781-164d-4cc0-af7e-f5c13bf79962">
                     <sedExceptionalTermination xml:id="_7d024cc2-fae7-4117-ab74-19e122dced99" name="&lt;uncaught java.lang.NullPointerException&gt;" pathCondition="equals(current,null)" lineNumber="-1" charStart="-1" charEnd="-1" sourcePath="D:\Forschung\Development\SymbolicExecutionDebugger\junit-workspace\SWTBotSEDExampleNewWizardTest_testExample4\src\example4\AVLTree.java" verified="true">
                     </sedExceptionalTermination>
                  </sedExceptionalMethodReturn>
               </sedBranchCondition>
            </sedStatement>
            <sedMethodCallMethodReturnCondition xml:id="_c7cf03f0-c2ba-4de6-b651-a4d35115481c" name="and(and(and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_de7ead6b-3a54-421f-b20a-be09c9fa55a0"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_c61e2108-d937-4dbb-a83f-73ae47780730" name="and(and(and(not(and(and(or(equals(current,null),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),or(equals(current,null),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),current)))),or(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null)))),not(equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),not(equals(current,null)))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_3d9a47e6-beff-459c-8e7e-912268d39f3f"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_7a7f4873-d441-49f3-ae9b-d0629ecb88f1" name="and(and(and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_36c31dd3-fed5-4489-af7e-925d41cfa9e6"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_377a5cfc-ad91-4b6c-92de-b728c98ad532" name="and(and(and(not(equals(current,null)),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$parent),null))),not(equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))),equals(example4.AVLTree.Node::select(heap,example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),example4.AVLTree.Node::$left),null))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_04fa82ec-4bda-4470-9fb5-e21c8df9ad31"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_1fced532-ddb4-4bd5-bbad-749a722ea905" name="and(not(equals(current,null)),equals(example4.AVLTree.Node::select(heap,current,example4.AVLTree.Node::$right),null))" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_461b3e7e-958c-43d3-891c-0d46858a8c6d"/>
            </sedMethodCallMethodReturnCondition>
            <sedMethodCallMethodReturnCondition xml:id="_f8821781-164d-4cc0-af7e-f5c13bf79962" name="equals(current,null)" pathCondition="true" lineNumber="-1" charStart="-1" charEnd="-1">
               <sedChildReference nodeIdRef="_07500d24-e5ee-4581-b5e5-aead90233f2e"/>
            </sedMethodCallMethodReturnCondition>
            <sedGroupEndReference nodeIdRef="_c7cf03f0-c2ba-4de6-b651-a4d35115481c"/>
            <sedGroupEndReference nodeIdRef="_c61e2108-d937-4dbb-a83f-73ae47780730"/>
            <sedGroupEndReference nodeIdRef="_7a7f4873-d441-49f3-ae9b-d0629ecb88f1"/>
            <sedGroupEndReference nodeIdRef="_377a5cfc-ad91-4b6c-92de-b728c98ad532"/>
            <sedGroupEndReference nodeIdRef="_1fced532-ddb4-4bd5-bbad-749a722ea905"/>
            <sedGroupEndReference nodeIdRef="_f8821781-164d-4cc0-af7e-f5c13bf79962"/>
         </sedMethodCall>
         <sedTerminationEntry nodeIdRef="_bacae921-1ad5-4d7c-8ad4-1b08f2db3c19"/>
         <sedTerminationEntry nodeIdRef="_0acf5cfa-1510-45b2-acfa-540618447a0b"/>
         <sedTerminationEntry nodeIdRef="_ef38512d-0b15-4a49-834f-aa1f05f6bcf7"/>
         <sedTerminationEntry nodeIdRef="_68b98858-b2c3-4a6e-be13-b301d808736a"/>
         <sedTerminationEntry nodeIdRef="_ca67bf9f-021f-471e-ba06-4be279a499b2"/>
         <sedTerminationEntry nodeIdRef="_7d024cc2-fae7-4117-ab74-19e122dced99"/>
      </sedThread>
   </sedTarget>
</launch>
