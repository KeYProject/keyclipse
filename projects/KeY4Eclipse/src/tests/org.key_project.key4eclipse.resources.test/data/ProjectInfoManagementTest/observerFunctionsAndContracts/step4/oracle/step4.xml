<?xml version="1.0" encoding="windows-1252"?>
<project name="ProjectInfoManagementTest_testObserverFunctionsAndContracts">
   <package name="(default package)" path="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/src">
      <type name="ClassWithoutPackage" path="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/src/ClassWithoutPackage.java">
         <obsererFunction displayName="ofm">
            <contract name="ClassWithoutPackage[ClassWithoutPackage::$ofm()].JML accessible clause.0" proofFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/ClassWithoutPackage.java/ClassWithoutPackage[ClassWithoutPackage__$ofm()]_JML_accessible_clause_0.proof" metaFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/ClassWithoutPackage.java/ClassWithoutPackage[ClassWithoutPackage__$ofm()]_JML_accessible_clause_0.proofmeta"/>
         </obsererFunction>
         <obsererFunction displayName="ofn">
            <contract name="ClassWithoutPackage[ClassWithoutPackage::$ofn()].JML accessible clause.0" proofFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/ClassWithoutPackage.java/ClassWithoutPackage[ClassWithoutPackage__$ofn()]_JML_accessible_clause_0.proof" metaFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/ClassWithoutPackage.java/ClassWithoutPackage[ClassWithoutPackage__$ofn()]_JML_accessible_clause_0.proofmeta"/>
            <contract name="ClassWithoutPackage[ClassWithoutPackage::$ofn()].JML accessible clause.1" proofFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/ClassWithoutPackage.java/ClassWithoutPackage[ClassWithoutPackage__$ofn()]_JML_accessible_clause_1.proof" metaFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/ClassWithoutPackage.java/ClassWithoutPackage[ClassWithoutPackage__$ofn()]_JML_accessible_clause_1.proofmeta"/>
         </obsererFunction>
      </type>
   </package>
   <package name="hello" path="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/src/hello">
      <type name="ClassInHello" path="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/src/hello/ClassInHello.java">
         <obsererFunction displayName="ofm">
            <contract name="hello.ClassInHello[hello.ClassInHello::$ofm()].JML accessible clause.0" proofFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/hello/ClassInHello.java/hello_ClassInHello[hello_ClassInHello__$ofm()]_JML_accessible_clause_0.proof" metaFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/hello/ClassInHello.java/hello_ClassInHello[hello_ClassInHello__$ofm()]_JML_accessible_clause_0.proofmeta"/>
         </obsererFunction>
         <obsererFunction displayName="ofn">
            <contract name="hello.ClassInHello[hello.ClassInHello::$ofn()].JML accessible clause.0" proofFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/hello/ClassInHello.java/hello_ClassInHello[hello_ClassInHello__$ofn()]_JML_accessible_clause_0.proof" metaFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/hello/ClassInHello.java/hello_ClassInHello[hello_ClassInHello__$ofn()]_JML_accessible_clause_0.proofmeta"/>
            <contract name="hello.ClassInHello[hello.ClassInHello::$ofn()].JML accessible clause.1" proofFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/hello/ClassInHello.java/hello_ClassInHello[hello_ClassInHello__$ofn()]_JML_accessible_clause_1.proof" metaFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/hello/ClassInHello.java/hello_ClassInHello[hello_ClassInHello__$ofn()]_JML_accessible_clause_1.proofmeta"/>
         </obsererFunction>
      </type>
   </package>
   <package name="hello.world" path="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/src/hello/world">
      <type name="ClassInHelloWorld" path="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/src/hello/world/ClassInHelloWorld.java">
         <obsererFunction displayName="ofm">
            <contract name="hello.world.ClassInHelloWorld[hello.world.ClassInHelloWorld::$ofm()].JML accessible clause.0" proofFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/hello/world/ClassInHelloWorld.java/hello_world_ClassInHelloWorld[hello_world_ClassInHelloWorld__$ofm()]_JML_accessible_clause_0.proof" metaFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/hello/world/ClassInHelloWorld.java/hello_world_ClassInHelloWorld[hello_world_ClassInHelloWorld__$ofm()]_JML_accessible_clause_0.proofmeta"/>
         </obsererFunction>
         <obsererFunction displayName="ofn">
            <contract name="hello.world.ClassInHelloWorld[hello.world.ClassInHelloWorld::$ofn()].JML accessible clause.0" proofFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/hello/world/ClassInHelloWorld.java/hello_world_ClassInHelloWorld[hello_world_ClassInHelloWorld__$ofn()]_JML_accessible_clause_0.proof" metaFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/hello/world/ClassInHelloWorld.java/hello_world_ClassInHelloWorld[hello_world_ClassInHelloWorld__$ofn()]_JML_accessible_clause_0.proofmeta"/>
            <contract name="hello.world.ClassInHelloWorld[hello.world.ClassInHelloWorld::$ofn()].JML accessible clause.1" proofFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/hello/world/ClassInHelloWorld.java/hello_world_ClassInHelloWorld[hello_world_ClassInHelloWorld__$ofn()]_JML_accessible_clause_1.proof" metaFilePath="/ProjectInfoManagementTest_testObserverFunctionsAndContracts/proofs/hello/world/ClassInHelloWorld.java/hello_world_ClassInHelloWorld[hello_world_ClassInHelloWorld__$ofn()]_JML_accessible_clause_1.proofmeta"/>
         </obsererFunction>
      </type>
   </package>
</project>
