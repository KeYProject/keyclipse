\rules(intRules:javaSemantics) {

//--------------------------------------------------------------------------
// Lemmas for easy elimination of moduloInt
//--------------------------------------------------------------------------

   //proved
  moduloIntFixpoint {
    \schemaVar \term int t;
    
    \assumes( inInt(t) ==> )
    \find( moduloInt( t ) ) \sameUpdateLevel
    \replacewith ( t )
    
    \heuristics ( simplify )
  };
 
   //proved
  moduloLongFixpoint {
    \schemaVar \term int t;
    
    \assumes( inLong(t) ==> )
    \find( moduloLong( t ) ) \sameUpdateLevel
    \replacewith ( t )
    
    \heuristics ( simplify )
  };

   //proved
  moduloShortFixpoint {
    \schemaVar \term int t;
    
    \assumes( inShort(t) ==> )
    \find( moduloShort( t ) ) \sameUpdateLevel
    \replacewith ( t )
    
    \heuristics ( simplify )
  };

   //proved
  moduloByteFixpoint {
    \schemaVar \term int t;
    
    \assumes( inByte(t) ==> )
    \find( moduloByte( t ) ) \sameUpdateLevel
    \replacewith ( t )
    
    \heuristics ( simplify )
  };
 
   //proved
  moduloCharFixpoint {
    \schemaVar \term int t;
    
    \assumes( inChar(t) ==> )
    \find( moduloChar( t ) ) \sameUpdateLevel
    \replacewith ( t )
    
    \heuristics ( simplify )
  };

}
