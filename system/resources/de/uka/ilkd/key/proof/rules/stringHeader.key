\sorts {
  CharList;
}

\functions {
  CharList strEmpty;
  CharList cat (CharList,CharList);
  CharList cons (int, CharList);
  int charAt (int, CharList);
  int strLength (CharList);
  int indexOf (int, int, CharList);
  CharList substring (int, int, CharList);
  CharList concat (CharList,CharList);
  int indexOfStr (CharList,int,CharList);
  int lastIndexOf (int,int,CharList);
  int lastIndexOfStr (CharList,int,CharList);
  CharList replace (int,int,CharList);
  CharList translateInt (int);
  CharList removeZeros (CharList);
  int hashCode (CharList);

  
  \unique Field content; //was: \nonRigid[Location] CharList content(java.lang.String);
  \unique Field pool;    //was: \nonRigid[Location] java.lang.String pool(CharList);
}

\predicates {
  startsWith (CharList,CharList);
  endsWith (CharList,CharList);
  contains (CharList,CharList);
}


//Changes in KeYHeap: 
//-All occurrences of "jchar" have been replaced by "int", which generally replaces the sort "jchar" in KeYHeap.
//-"\nonRigid[Location]" functions have become constants of type "Field"
//-"empty" has been renamed to "strEmpty" to resolve a name clash with locSets.key
//-"length" has been renamed to "strLength" to resolve a name clash with heap.key

//pool and content seem to not be used in any rules??