
Regression tests for proved rules
=================================

Jan 2014 Mattias Ulbrich

The taclet base for KeY grows constantly and it is difficult to
oversee that all these rules are sound. It is possible to prove
(certain) taclets sound within KeY but these proofs are only valid for
the KeY version they have been conducted in.

We have implemented a small script which reruns checked in taclet
proofs along with the regression tests and thereby ensures that these
taclets are sound in every (master) version of KeY.

How it works
------------

The script scans all .proof-files under "examples/taclets" and runs
them. If any of them fails, a failed test case points to that problem.

Additionally it checks that for every taclet which is labelled as
proved, there exists a loadable proof file. If a labelled taclet has no
proof, a failed test case is raised, too.

If a proved taclet has not been labelled, only a warning is emitted to
the command line.

To label a rule you need to add the line "// proved" directly above
the rule definition. There must not be empty lines between the label
and the rule name.

Spurious labels are also reported by the script.

The script is located at "bin/proveRules.pl". Use "-help" to get more
infos. It is invoked by Mr. Marvin Jenkins when the regression tests
on the master branch are performed. Consider adding it to your side
project in Jenkins.


Adding a taclet proof
---------------------

If you have proved a taclet sound, you can store (and check in) the
according proof file into the directory "examples/taclets" and add an
annotation to the key file.


1. Store the proof file under the name 

     examples/taclets/<keyFile>/Taclet_<tacletName>.proof

   where keyFile stands for the file in which the rule has been
   defined without extension (for instance "seqRules" if defined in
   "seqRules.key").


2. Add the line

     // proved

   DIRECTLY above the  rule definition like in

     // proved
     lenOfSingleton { ....

Now, regression tests will ensure that the rule "lenOfSingleton" has a
valid proof. If the proof file is corrupted or removed, a failed
regression test will be raised.